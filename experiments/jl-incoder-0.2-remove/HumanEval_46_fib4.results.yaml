language: jl
name: HumanEval_46_fib4
results:
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.  Test your function by computing the\
    \ first 10 elements of the sequence.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6ymi5jtu.jl:12\nin expression starting at\
    \ /tmp/tmp6ymi5jtu.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.  Please write your function so that it works with\
    \ any value of n.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_o2k7pbb.jl:12\nin expression starting at\
    \ /tmp/tmp_o2k7pbb.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        5\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        0\n    else if n == 8 \n    \
    \    8\n    else if n == 9 \n        0\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        0\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        0\n    else if n == 14 \n        0\n    else if n == 15 \n       \
    \ 0\n    else if n == 16 \n        0\n    else if n == 17 \n        0\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        0\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        0\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        0\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        0\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        0\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 0\n    else if n == 30 \n        0\n    else if n == 31 \n        0\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        0\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        0\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        0\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        0\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        0\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 0\n    else if n == 44 \n        0\n    else if n == 45 \n        0\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        0\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        0\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        0\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        0\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpss47qemz.jl:12\nin expression starting at\
    \ /tmp/tmpss47qemz.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\nfib4(4)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fib4(4)\n</cell>\n<text>\nExercise 2\nWrite a function to compute\
    \ the n-th element of the Fibonacci sequence using recursion.\nusing Test\n\n\
    @testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5qb4o_um.jl:12\nin expression starting at\
    \ /tmp/tmp5qb4o_um.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(4)\n\
    </cell>\n<text>\nProblem 7\nWrite a function that returns the factorial of a given\
    \ number. Do not use recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvy1rbc0s.jl:12\nin expression starting at\
    \ /tmp/tmpvy1rbc0s.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<text>\nProblem 7\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw1v093js.jl:15\nin expression starting at\
    \ /tmp/tmpw1v093js.jl:15\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<text>\n\
    Problem 7\nWrite a function that returns the factorial of a number.  Factorials\
    \ are defined as follows:\n    factorial(0) -> 1\n    factorial(1) -> 1\n    factorial(2)\
    \ -> 2\n    factorial(3) -> 6\n    factorial(4) -> 24\n    factorial(5) -> 120\n\
    \    factorial(n) -> factorial(n-1) * factorial(n-2)\n    Please write a function\
    \ to efficiently compute the n-th element of the factorial number sequence.  Do\
    \ not use recursion.\n    For example, factorial(5) == 120\n    factorial(10)\
    \ == 3628800\n    factorial(20) == 749001600\n    factorial(30) == 50790400\n\
    \    factorial(40) == 40320\n    factorial(50) == 362880\n    factorial(60) ==\
    \ 3628800\n    factorial(70) == 7372880\n    factorial(80) == 7372880\n    factorial(90)\
    \ == 109457600\n    factorial(100) == 3628800\n    factorial(110) == 3628800\n\
    \    factorial(120) == 72057600\n    factorial(130) == 7372880\n    factorial(140)\
    \ == 7372880\n    factorial(150) == 140737488\n    factorial(160) == 140737488\n\
    \    factorial(170) == 281474976710656\n    factorial(180) == 281474976710656\n\
    \    factorial(190) == 4398046511104\n    factorial(200) == 4398046511104\n  \
    \  factorial(210) == 879609302220800\n    factorial(220) == 879609302220800\n\
    \    factorial(230) == 1759218604441680\n    factorial(240) == 1759218604441680\n\
    \    factorial(250) == 342080143981408\n    factorial(260) == 342080143981408\n\
    \    factorial(270) == 63245984009694840\n    factorial(280) == 63245984009694840\n\
    \    factorial(290) == 120892581961462917470617\n    factorial(300) == 120892581961462917470617\n\
    \    factorial(310) == 2251799813685247802734688\n    factorial(320) == 225\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbut2jp70.jl:11\nin expression starting at /tmp/tmpbut2jp70.jl:11\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxqv__7xl.jl:12\nin expression starting at\
    \ /tmp/tmpxqv__7xl.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeff7tn__.jl:12\nin expression starting at\
    \ /tmp/tmpeff7tn__.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(1000)\n</cell>\n<code language=julia-1.5>\n@time fib4(10000)\n</cell>\n\
    <text>\nExercise: Write a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_k1rgi2l.jl:12\nin expression starting at\
    \ /tmp/tmp_k1rgi2l.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxqv__7xl.jl:12\nin expression starting at\
    \ /tmp/tmpxqv__7xl.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fib4(4)\n</cell>\n<code language=julia-1.0>\n@code_warntype fib4(5)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fib4(6)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fib4(7)\n</cell>\n<code language=julia-1.0>\n@code_warntype fib4(8)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fib4(9)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fib4(10)\n</cell>\n<code language=julia-1.0>\n@code_warntype fib4(11)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fib4(12)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fib4(13)\n</cell>\n<code language=julia-1.0>\n@code_warntype fib4(14)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fib4(15)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fib4(16)\n</cell>\n<code language=julia-1.0>\n@code_warntype fib4(17)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fib4(18)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fib4(19)\n</cell>\n<code language=julia-1.0>\n@code_warntype fib4(20)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fib4(21)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fib4(22)\n</cell>\n<code language=julia-1.0>\n@code_warntype fib4(23)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fib4(24)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fib4(25)\n</cell>\n<code language=julia-1.0>\n@code_warntype fib4(26)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fib4(27)\n</cell>\n<code language=julia-1.0>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwusqm9gs.jl:12\nin expression starting at\
    \ /tmp/tmpwusqm9gs.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fib4(4)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsv9ed30l.jl:12\nin expression starting at\
    \ /tmp/tmpsv9ed30l.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpditam14i.jl:12\nin expression starting at\
    \ /tmp/tmpditam14i.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        5\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        0\n    else if n == 8 \n    \
    \    8\n    else if n == 9 \n        0\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        0\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        0\n    else if n == 14 \n        0\n    else if n == 15 \n       \
    \ 0\n    else if n == 16 \n        0\n    else if n == 17 \n        0\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        0\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        0\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        0\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        0\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        0\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 0\n    else if n == 30 \n        0\n    else if n == 31 \n        0\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        0\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        0\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        0\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        0\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        0\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 0\n    else if n == 44 \n        0\n    else if n == 45 \n        0\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        0\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        0\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        0\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        0\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpss47qemz.jl:12\nin expression starting at\
    \ /tmp/tmpss47qemz.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n\
    </cell>\n<text>\nProblem 7\nWrite a function that returns the factorial of a given\
    \ number. \nFor example, factorial(3) == 3 * 2 * 1 = 6. \nDo not use recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpom24cs_2.jl:12\nin expression starting at\
    \ /tmp/tmpom24cs_2.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmper_zcgqd.jl:12\nin expression starting at\
    \ /tmp/tmper_zcgqd.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr405nua0.jl:12\nin expression starting at\
    \ /tmp/tmpr405nua0.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 then 0 else fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzfdeznzs.jl:10\nin expression starting at /tmp/tmpzfdeznzs.jl:10\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.3>\nfib4(4)\n\
    </cell>\n<text>\nExercise: Write a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyh0yhud4.jl:12\nin expression starting at\
    \ /tmp/tmpyh0yhud4.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcn3a8bdn.jl:12\nin expression starting at\
    \ /tmp/tmpcn3a8bdn.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph8sllpfo.jl:15\nin expression starting at\
    \ /tmp/tmph8sllpfo.jl:15\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n\
    </cell>\n<text>\nExercise: Write a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprsdrupib.jl:12\nin expression starting at\
    \ /tmp/tmprsdrupib.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(4)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the nth element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgw7zul69.jl:12\nin expression starting at\
    \ /tmp/tmpgw7zul69.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe1losqvb.jl:12\nin expression starting at\
    \ /tmp/tmpe1losqvb.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n\
    </cell>\n<text>\nExercise: Write a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprsdrupib.jl:12\nin expression starting at\
    \ /tmp/tmprsdrupib.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a number.  Do not use recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp83da1k48.jl:12\nin expression starting at\
    \ /tmp/tmp83da1k48.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nProblem 5\nWrite a function to compute the sum of the squares\
    \ of the first $n$ numbers.  (Recall that $\\sum{i=0}^n i^2$ = $\\sum{i=0}^n i$\
    \ times $i^2$.)\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn1qhs599.jl:12\nin expression starting at\
    \ /tmp/tmpn1qhs599.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\nfib4(4)\n</cell>\n\
    <text>\nExercise: Write a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzfvnvmhz.jl:11\nin expression starting at /tmp/tmpzfvnvmhz.jl:11\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that computes the n-th Fibonacci number using the following\
    \ recursive formula:\n$$\nFn = F{n-1} + F_{n-2}\n$$\nwhere $F_0 = 0$ and $F_1\
    \ = 1$.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpygtvtg3n.jl:11\nin expression starting at /tmp/tmpygtvtg3n.jl:11\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return n\n\
    \    else \n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n\
    </cell>\n<code language=julia-1.4>\nfib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\
    \  Do not use loops.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqb7a8ljs.jl:15\nin expression starting at\
    \ /tmp/tmpqb7a8ljs.jl:15\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\nfib4(0)\n</cell>\n<code language=julia-1.5>\nfib4(1)\n\
    </cell>\n<code language=julia-1.5>\nfib4(2)\n</cell>\n<code language=julia-1.5>\n\
    fib4(3)\n</cell>\n<code language=julia-1.5>\nfib4(4)\n</cell>\n<code language=julia-1.5>\n\
    fib4(5)\n</cell>\n<code language=julia-1.5>\nfib4(6)\n</cell>\n<code language=julia-1.5>\n\
    fib4(7)\n</cell>\n<code language=julia-1.5>\nfib4(8)\n</cell>\n<code language=julia-1.5>\n\
    fib4(9)\n</cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<code language=julia-1.5>\n\
    fib4(11)\n</cell>\n<code language=julia-1.5>\nfib4(12)\n</cell>\n<code language=julia-1.5>\n\
    fib4(13)\n</cell>\n<code language=julia-1.5>\nfib4(14)\n</cell>\n<code language=julia-1.5>\n\
    fib4(15)\n</cell>\n<code language=julia-1.5>\nfib4(16)\n</cell>\n<code language=julia-1.5>\n\
    fib4(17)\n</cell>\n<code language=julia-1.5>\nfib4(18)\n</cell>\n<code language=julia-1.5>\n\
    fib4(19)\n</cell>\n<code language=julia-1.5>\nfib4(20)\n</cell>\n<code language=julia-1.5>\n\
    fib4(21)\n</cell>\n<code language=julia-1.5>\nfib4(22)\n</cell>\n<code language=julia-1.5>\n\
    fib4(23)\n</cell>\n<code language=julia-1.5>\nfib4(24)\n</cell>\n<code language=julia-1.5>\n\
    fib4(25)\n</cell>\n<code language=julia-1.5>\nfib4(26)\n</cell>\n<code language=julia-1.5>\n\
    fib4(27)\n</cell>\n<code language=julia-1.5>\nfib4(28)\n</cell>\n<code language=julia-1.5>\n\
    fib4(29)\n</cell>\n<code language=julia-1.5>\nfib4(30)\n</cell>\n<code language=julia-1.5>\n\
    fib\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaut1sj3o.jl:12\nin expression starting at\
    \ /tmp/tmpaut1sj3o.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        5\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        0\n    else if n == 8 \n    \
    \    8\n    else if n == 9 \n        0\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        0\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        0\n    else if n == 14 \n        0\n    else if n == 15 \n       \
    \ 0\n    else if n == 16 \n        0\n    else if n == 17 \n        0\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        0\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        0\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        0\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        0\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        0\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 0\n    else if n == 30 \n        0\n    else if n == 31 \n        0\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        0\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        0\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        0\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        0\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        0\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 0\n    else if n == 44 \n        0\n    else if n == 45 \n        0\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        0\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        0\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        0\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        0\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpss47qemz.jl:12\nin expression starting at\
    \ /tmp/tmpss47qemz.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return n\n\
    \    else \n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzlubgksl.jl:15\nin expression starting at\
    \ /tmp/tmpzlubgksl.jl:15\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return n\n\
    \    else \n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n\
    </cell>\n<code language=julia-1.3>\n@time fib4(10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0mseb3cr.jl:15\nin expression starting at\
    \ /tmp/tmp0mseb3cr.jl:15\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        2\n    else if n == 3\n        0\n   \
    \ else if n == 4\n        2\n    else\n        fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function to compute the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp26ahvf8_.jl:12\nin expression starting at\
    \ /tmp/tmp26ahvf8_.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(4)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptsjkjaik.jl:12\nin expression starting at\
    \ /tmp/tmptsjkjaik.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.3>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy38yxvha.jl:12\nin expression starting at\
    \ /tmp/tmpy38yxvha.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpacas9zxh.jl:11\nin expression starting at /tmp/tmpacas9zxh.jl:11\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fib4(4)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function to compute the n-th element of the Fibonacci sequence using recursion.\
    \  Please write your function so that it returns the correct value when called\
    \ with n = 0.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp56jioka7.jl:12\nin expression starting at\
    \ /tmp/tmp56jioka7.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcn3a8bdn.jl:12\nin expression starting at\
    \ /tmp/tmpcn3a8bdn.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fib4(10)\n</cell>\n<text>\nProblem 7\nWrite a function to compute the sum of\
    \ the squares of the first n positive integers. \nFor example, sum(square(1:10))\
    \ should return $1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 + 100$. \nIf n is negative\
    \ return $0$.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_cklq1oq.jl:12\nin expression starting at\
    \ /tmp/tmp_cklq1oq.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise:\
    \ Write a function to compute the n-th element of the Fibonacci number sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpetn9oljp.jl:11\nin expression starting at /tmp/tmpetn9oljp.jl:11\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        5\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        0\n    else if n == 8 \n    \
    \    8\n    else if n == 9 \n        0\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        0\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        13\n    else if n == 14 \n        0\n    else if n == 15 \n      \
    \  0\n    else if n == 16 \n        0\n    else if n == 17 \n        0\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        0\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        0\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        0\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        0\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        0\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 0\n    else if n == 30 \n        0\n    else if n == 31 \n        0\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        0\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        0\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        0\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        0\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        0\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 0\n    else if n == 44 \n        0\n    else if n == 45 \n        0\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        0\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        0\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        0\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        0\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw0chsckp.jl:12\nin expression starting at\
    \ /tmp/tmpw0chsckp.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4pncdxrz.jl:11\nin expression starting at /tmp/tmp4pncdxrz.jl:11\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0oy8zts7.jl:12\nin expression starting at\
    \ /tmp/tmp0oy8zts7.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 then 0 else fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppacfflmg.jl:10\nin expression starting at /tmp/tmppacfflmg.jl:10\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphbz7a430.jl:12\nin expression starting at\
    \ /tmp/tmphbz7a430.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n\
    <text>\nExercise\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1qzder1i.jl:12\nin expression starting at\
    \ /tmp/tmp1qzder1i.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(4)\n</cell>\n<text>\nProblem 7\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3cyh7smf.jl:15\nin expression starting at\
    \ /tmp/tmp3cyh7smf.jl:15\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        5\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        0\n    else if n == 8 \n    \
    \    8\n    else if n == 9 \n        0\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        0\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        0\n    else if n == 14 \n        0\n    else if n == 15 \n       \
    \ 0\n    else if n == 16 \n        0\n    else if n == 17 \n        0\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        0\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        0\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        0\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        0\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        0\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 0\n    else if n == 30 \n        0\n    else if n == 31 \n        0\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        0\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        0\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        0\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        0\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        0\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 0\n    else if n == 44 \n        0\n    else if n == 45 \n        0\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        0\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        0\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        0\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        0\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpss47qemz.jl:12\nin expression starting at\
    \ /tmp/tmpss47qemz.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ab_isfq.jl:15\nin expression starting at\
    \ /tmp/tmp_ab_isfq.jl:15\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.3>\n\
    fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the sum of\
    \ the first n positive integers, where n is a positive integer.  Do not use recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzhdfwalo.jl:15\nin expression starting at\
    \ /tmp/tmpzhdfwalo.jl:15\n"
  stdout: ''
  timestamp: 1659748160
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzhbfx0u5.jl:12\nin expression starting at\
    \ /tmp/tmpzhbfx0u5.jl:12\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n\
    </cell>\n<text>\nExercise\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8o9q6zyd.jl:12\nin expression starting at\
    \ /tmp/tmp8o9q6zyd.jl:12\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.4>\n\
    fib4(10)\n</cell>\n<text>\nExercise\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpibc85s6x.jl:15\nin expression starting at\
    \ /tmp/tmpibc85s6x.jl:15\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        2\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        2\n    else if n == 8 \n    \
    \    0\n    else if n == 9 \n        2\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        2\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        2\n    else if n == 14 \n        0\n    else if n == 15 \n       \
    \ 2\n    else if n == 16 \n        0\n    else if n == 17 \n        2\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        2\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        2\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        2\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        2\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        2\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 2\n    else if n == 30 \n        0\n    else if n == 31 \n        2\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        2\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        2\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        2\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        2\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        2\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 2\n    else if n == 44 \n        0\n    else if n == 45 \n        2\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        2\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        2\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        2\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        2\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeyp48wql.jl:12\nin expression starting at\
    \ /tmp/tmpeyp48wql.jl:12\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci number sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0nc93uzr.jl:11\nin expression starting at /tmp/tmp0nc93uzr.jl:11\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 then 0 else fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n@time fib4(10)\n\
    </cell>\n<text>\nExercise: Write a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1zr4z8u6.jl:10\nin expression starting at /tmp/tmp1zr4z8u6.jl:10\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(4)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpteiz6c7k.jl:11\nin expression starting at /tmp/tmpteiz6c7k.jl:11\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2fjnyqoi.jl:15\nin expression starting at\
    \ /tmp/tmp2fjnyqoi.jl:15\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.0>\nfib4(4)\n</cell>\n<text>\nExercise\nWrite a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppk3_k9n2.jl:12\nin expression starting at\
    \ /tmp/tmppk3_k9n2.jl:12\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the sum of the first n positive integers, where n is given\
    \ as an input argument.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) ==\
    \ 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpus_ucq2z.jl:11\nin expression starting at /tmp/tmpus_ucq2z.jl:11\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the sum of the squares\
    \ of the first n positive integers.  Do not use recursion.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp814ww6ib.jl:11\nin expression starting at /tmp/tmp814ww6ib.jl:11\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.  Do not use loops.\nusing Test\n\n\
    @testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5dq55dgz.jl:11\nin expression starting at /tmp/tmp5dq55dgz.jl:11\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(10)\n</cell>\n<text>\nProblem 5\nWrite a function to compute the factorial\
    \ of a given number. Do not use recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpva3sbb59.jl:15\nin expression starting at\
    \ /tmp/tmpva3sbb59.jl:15\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 then 0 else fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.4>\n\
    fib4(4)\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    fib4(n::Int64)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj94yt479.jl:10\nin expression starting at /tmp/tmpj94yt479.jl:10\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeff7tn__.jl:12\nin expression starting at\
    \ /tmp/tmpeff7tn__.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph8sllpfo.jl:15\nin expression starting at\
    \ /tmp/tmph8sllpfo.jl:15\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n\
    <code language=julia-1.5>\nfib4(4)\n</cell>\n<text>\nExercise: Write a function\
    \ to compute the n-th element of the Fibonacci number sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpohhzwiel.jl:11\nin expression starting at /tmp/tmpohhzwiel.jl:11\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\nfib4(4)\n</cell>\n\
    <text>\nProblem 7\nWrite a function to compute the sum of the squares of the first\
    \ n positive integers. \nFor example, sum(1..10) should return 110.\nusing Test\n\
    \n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprkkce3n3.jl:11\nin expression starting at /tmp/tmprkkce3n3.jl:11\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fib4(10)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function to compute the sum of the first n positive integers using\
    \ the Fibonacci sequence.  Do not use recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_mnhczvg.jl:12\nin expression starting at\
    \ /tmp/tmp_mnhczvg.jl:12\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfv0t_cpo.jl:11\nin expression starting at /tmp/tmpfv0t_cpo.jl:11\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    else\n\
    \        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(10)\n</cell>\n<text>\nProblem 7\nWrite a function that computes the factorial\
    \ of a given number. \nFor example, factorial(5) == 120.  Factorials of negative\
    \ numbers are not allowed. \nThe function should work for any positive integer\
    \ $n$. \nThe function should work for any $n \\ge 0$. \nThe function should work\
    \ for any $n \\le 0$. \nThe function should work for any $n \\ge 0$. \nThe function\
    \ should work for any $n \\le 0$. \nThe function should work for any $n \\ge 0$.\
    \ \nThe function should work for any $n \\ge 0$. \nThe function should work for\
    \ any $n \\ge 0$. \nThe function should work for any $n \\ge 0$. \nThe function\
    \ should work for any $n \\ge 0$. \nThe function should work for any $n \\ge 0$.\
    \ \nThe function should work for any $n \\ge 0$. \nThe function should work for\
    \ any $n \\ge 0$. \nThe function should work for any $n \\ge 0$. \nThe function\
    \ should work for any $n \\ge 0$. \nThe function should work for any $n \\ge 0$.\
    \ \nThe function should work for any $n \\ge 0$. \nThe function should work for\
    \ any $n \\ge 0$. \nThe function should work for any $n \\ge 0$. \nThe function\
    \ should work for any $n \\ge 0$. \nThe function should work for any $n \\ge 0$.\
    \ \nThe function should work for any $n \\ge 0$. \nThe function should work for\
    \ any $n \\ge 0$. \nThe function should work for any $n \\ge 0$. \nThe function\
    \ should work for any $n \\ge 0$. \nThe function should work for any $n \\ge 0$.\
    \ \nThe function should work for any $n \\ge 0$. \nThe function should work for\
    \ any $n \\ge 0$. \nThe function should work for any $n \\ge 0$. \nThe function\
    \ should work for any $n \\ge 0$. \nThe function should work for any $n \\ge 0$.\
    \ \nThe \nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmbhuudb.jl:21\nin expression starting at\
    \ /tmp/tmpcmbhuudb.jl:21\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(4)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxfao8thy.jl:15\nin expression starting at\
    \ /tmp/tmpxfao8thy.jl:15\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the factorial of a number.  Do not use recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi9pzzl3b.jl:12\nin expression starting at\
    \ /tmp/tmpi9pzzl3b.jl:12\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeeiviida.jl:12\nin expression starting at\
    \ /tmp/tmpeeiviida.jl:12\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <text>\nProblem 7\nWrite a function to compute the sum of all the elements in\
    \ the Fibonacci sequence up to and including n.  Do not use recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8mchdrzz.jl:11\nin expression starting at /tmp/tmp8mchdrzz.jl:11\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        2\n    else if n == 3\n        0\n   \
    \ else if n == 4\n        0\n    else if n == 5\n        0\n    else if n == 6\n\
    \        0\n    else if n == 7\n        0\n    else if n == 8\n        0\n   \
    \ else if n == 9\n        0\n    else if n == 10\n        0\n    else if n ==\
    \ 11\n        0\n    else if n == 12\n        0\n    else if n == 13\n       \
    \ 0\n    else if n == 14\n        0\n    else if n == 15\n        0\n    else\
    \ if n == 16\n        0\n    else if n == 17\n        0\n    else if n == 18\n\
    \        0\n    else if n == 19\n        0\n    else if n == 20\n        0\n \
    \   else if n == 21\n        0\n    else if n == 22\n        0\n    else if n\
    \ == 23\n        0\n    else if n == 24\n        0\n    else if n == 25\n    \
    \    0\n    else if n == 26\n        0\n    else if n == 27\n        0\n    else\
    \ if n == 28\n        0\n    else if n == 29\n        0\n    else if n == 30\n\
    \        0\n    else if n == 31\n        0\n    else if n == 32\n        0\n \
    \   else if n == 33\n        0\n    else if n == 34\n        0\n    else if n\
    \ == 35\n        0\n    else if n == 36\n        0\n    else if n == 37\n    \
    \    0\n    else if n == 38\n        0\n    else if n == 39\n        0\n    else\
    \ if n == 40\n        0\n    else if n == 41\n        0\n    else if n == 42\n\
    \        0\n    else if n == 43\n        0\n    else if n == 44\n        0\n \
    \   else if n == 45\n        0\n    else if n == 46\n        0\n    else if n\
    \ == 47\n        0\n    else if n == 48\n        0\n    else if n == 49\n    \
    \    0\n    else if n == 50\n        0\n    else if n == 51\n        0\n    else\
    \ if n == 52\n        0\n    else if n == 53\n        0\n    else if n == 54\n\
    \        0\n    else if n == 55\n        0\n    else if n == 56\n        0\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpib96031a.jl:12\nin expression starting at\
    \ /tmp/tmpib96031a.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3x4s8b5b.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3x4s8b5b.jl:1\n\
    in expression starting at /tmp/tmp3x4s8b5b.jl:1\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph9c5_0kg.jl:12\nin expression starting at\
    \ /tmp/tmph9c5_0kg.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1fz8u0xz.jl:11\nin expression starting at /tmp/tmp1fz8u0xz.jl:11\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    else\n\
    \        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpulrk3ntv.jl:21\nin expression starting at\
    \ /tmp/tmpulrk3ntv.jl:21\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ fib4(0) == 0\n@assert fib4(1) == 0\n@assert fib4(2) == 2\n@assert fib4(3) ==\
    \ 0\n@assert fib4(4) == 0\n@assert fib4(5) == 3\n@assert fib4(6) == 3\n@assert\
    \ fib4(7) == 5\n@assert fib4(8) == 5\n@assert fib4(9) == 7\n@assert fib4(10) ==\
    \ 7\n@assert fib4(11) == 11\n@assert fib4(12) == 11\n@assert fib4(13) == 13\n\
    @assert fib4(14) == 13\n@assert fib4(15) == 15\n@assert fib4(16) == 15\n@assert\
    \ fib4(17) == 17\n@assert fib4(18) == 17\n@assert fib4(19) == 19\n@assert fib4(20)\
    \ == 19\n@assert fib4(21) == 21\n@assert fib4(22) == 21\n@assert fib4(23) == 23\n\
    @assert fib4(24) == 23\n@assert fib4(25) == 25\n@assert fib4(26) == 25\n@assert\
    \ fib4(27) == 27\n@assert fib4(28) == 27\n@assert fib4(29) == 29\n@assert fib4(30)\
    \ == 29\n@assert fib4(31) == 31\n@assert fib4(32) == 31\n@assert fib4(33) == 33\n\
    @assert fib4(34) == 33\n@assert fib4(35) == 35\n@assert fib4(36) == 35\n@assert\
    \ fib4(37) == 37\n@assert fib4(38) == 37\n@assert fib4(39) == 39\n@assert fib4(40)\
    \ == 39\n@assert fib4(41) == 41\n@assert fib4(42) == 41\n@assert fib4(43) == 43\n\
    @assert fib4(44) == 43\n@assert fib4(45) == 45\n@assert fib4(46) == 45\n@assert\
    \ fib4(47) == 47\n@assert fib4(48) == 47\n@assert fib4(49) == 49\n@assert fib4(50)\
    \ == 49\n@assert fib4(51) == 51\n@assert fib4(52) == 51\n@assert fib4(53) == 53\n\
    @assert fib4(54) == 53\n@\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4kaa2_e7.jl:12\nin expression starting at\
    \ /tmp/tmp4kaa2_e7.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpacas9zxh.jl:11\nin expression starting at /tmp/tmpacas9zxh.jl:11\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl9jx9_cy.jl:11\nin expression starting at /tmp/tmpl9jx9_cy.jl:11\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\nfib4(4)\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0kbcp0dm.jl:11\nin expression starting at /tmp/tmp0kbcp0dm.jl:11\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the n-th Fibonacci number using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo38aus0x.jl:11\nin expression starting at /tmp/tmpo38aus0x.jl:11\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpazbq1m2m.jl:12\nin expression starting at\
    \ /tmp/tmpazbq1m2m.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    else\n\
    \        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.4>\n\
    fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_nv3o1ua.jl:21\nin expression starting at\
    \ /tmp/tmp_nv3o1ua.jl:21\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\nfib4(4)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp59o_3w0t.jl:12\nin expression starting at\
    \ /tmp/tmp59o_3w0t.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\nProblem 7\nusing Test\n\n\
    @testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0onb3nm1.jl:12\nin expression starting at\
    \ /tmp/tmp0onb3nm1.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        5\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        0\n    else if n == 8 \n    \
    \    8\n    else if n == 9 \n        0\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        0\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        0\n    else if n == 14 \n        0\n    else if n == 15 \n       \
    \ 0\n    else if n == 16 \n        0\n    else if n == 17 \n        0\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        0\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        0\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        0\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        0\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        0\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 0\n    else if n == 30 \n        0\n    else if n == 31 \n        0\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        0\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        0\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        0\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        0\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        0\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 0\n    else if n == 44 \n        0\n    else if n == 45 \n        0\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        0\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        0\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        0\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        0\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpss47qemz.jl:12\nin expression starting at\
    \ /tmp/tmpss47qemz.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fib4(10)\n</cell>\n<text>\nProblem 7\nThe Fibonacci sequence is defined by the\
    \ recurrence relation:\n$$Fn = F{n-1} + F_{n-2},$$\nwhere $F_0 = 0$ and $F_1 =\
    \ 1$.\nBy iterating $F_i$ from $0$ to $n$, \nwe get the following sequence:\n\
    $$F_n = F_{n-1} + F_{n-2} + F_{n-3} + F_{n-4},$$\nwhere $F_0 = F_1 = 1$.\nHence\
    \ the sequence converges to the $n$-th Fibonacci number, $F_n$.\nusing Test\n\n\
    @testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6ecpzfku.jl:12\nin expression starting at\
    \ /tmp/tmp6ecpzfku.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\
    \  Use a while loop to compute the n-th element of the sequence.\nusing Test\n\
    \n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfl6ak2oo.jl:11\nin expression starting at /tmp/tmpfl6ak2oo.jl:11\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<text>\nProblem 5\nWrite a function\
    \ that computes the factorial of a given number. \nFor example, factorial(5) ==\
    \ 120. \nDo not use recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsglguss5.jl:12\nin expression starting at\
    \ /tmp/tmpsglguss5.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the n-th element of the Fibonacci number sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz1olh2fj.jl:11\nin expression starting at /tmp/tmpz1olh2fj.jl:11\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fib4(4)\n</cell>\n<text>\nExercise:\
    \ Write a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyntzinrk.jl:11\nin expression starting at /tmp/tmpyntzinrk.jl:11\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfhqexr5r.jl:11\nin expression starting at /tmp/tmpfhqexr5r.jl:11\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpex6dc_qe.jl:12\nin expression starting at\
    \ /tmp/tmpex6dc_qe.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(4)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7h5_hasw.jl:15\nin expression starting at\
    \ /tmp/tmp7h5_hasw.jl:15\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph3ksgprr.jl:12\nin expression starting at\
    \ /tmp/tmph3ksgprr.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmgktbaiq.jl:12\nin expression starting at\
    \ /tmp/tmpmgktbaiq.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxqv__7xl.jl:12\nin expression starting at\
    \ /tmp/tmpxqv__7xl.jl:12\n"
  stdout: ''
  timestamp: 1659748155
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1\n        return n\n \
    \   else\n        return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\
    end\n</cell>\n<code language=julia-1.3>\nfib4(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5kud0fne.jl:15\nin expression starting at\
    \ /tmp/tmp5kud0fne.jl:15\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fib4(4)\n</cell>\n<code language=julia-1.0>\n@time fib4(100000)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fib4(100000)\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(100000)\n</cell>\n<code language=julia-1.0>\n@time fib4(100000)\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(100000)\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(100000)\n</cell>\n<code language=julia-1.0>\n@time fib4(100000)\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(100000)\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(100000)\n</cell>\n<code language=julia-1.0>\n@time fib4(100000)\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(100000)\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(100000)\n</cell>\n<code language=julia-1.0>\n@time fib4(100000)\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(100000)\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(100000)\n</cell>\n<code language=julia-1.0>\n@time fib4(100000)\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(100000)\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(100000)\n</cell>\n<code language=julia-1.0>\n@time fib4(100000)\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(100000)\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(100000)\n</cell>\n<code language=julia-1.0>\n@time fib4(100000)\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(100000)\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(100000)\n</cell>\n<code language=julia-1.0>\n@time fib4(100000)\n</cell>\n\
    <code language=\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3_4ysen0.jl:12\nin expression starting at\
    \ /tmp/tmp3_4ysen0.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    elseif\
    \ n == 4\n        0\n    else\n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    end\n</cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that computes the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1l4ufprr.jl:23\nin expression starting at\
    \ /tmp/tmp1l4ufprr.jl:23\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpazbq1m2m.jl:12\nin expression starting at\
    \ /tmp/tmpazbq1m2m.jl:12\n"
  stdout: ''
  timestamp: 1659748163
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    else\n\
    \        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<text>\n\
    Problem 7\nWrite a function that returns the factorial of a given number. Do not\
    \ use recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp330t7n7x.jl:21\nin expression starting at\
    \ /tmp/tmp330t7n7x.jl:21\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return 0 \n\
    \    else \n        return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n -\
    \ 4) \nend\n</cell>\n<text>\nProblem 7\nWrite a function that computes the factorial\
    \ of a given number. \nFor example, factorial(4) == 24. \nDo not use recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplq8i2k0d.jl:15\nin expression starting at\
    \ /tmp/tmplq8i2k0d.jl:15\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjat14evn.jl:11\nin expression starting at /tmp/tmpjat14evn.jl:11\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        2\n    else if n == 3\n        0\n   \
    \ else if n == 4\n        4\n    else\n        fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\nend\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph2bmjias.jl:12\nin expression starting at\
    \ /tmp/tmph2bmjias.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        2\n    else if n == 3\n        0\n   \
    \ else if n == 4\n        0\n    else\n        fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(4)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function to compute the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzij0m4y3.jl:12\nin expression starting at\
    \ /tmp/tmpzij0m4y3.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th Fibonacci\
    \ number using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn8n0lpje.jl:12\nin expression starting at\
    \ /tmp/tmpn8n0lpje.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\nfib4(4)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the nth Fibonacci number using the following recursive\
    \ formula:\n$$ Fn = F{n-1} + F_{n-2} + F_{n-3} + F_{n-4} $$\nwhere $F_0 = 0$,\
    \ $F_1 = 1$, $F_2 = 1$, $F_3 = 2$, and $F_4 = 3$.  Do not use recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1mkl9q6a.jl:11\nin expression starting at /tmp/tmp1mkl9q6a.jl:11\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(10)\n</cell>\n<text>\nExercise\nWrite a\
    \ function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmqdb1t9v.jl:12\nin expression starting at\
    \ /tmp/tmpmqdb1t9v.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\
    \  Please use @time for timing.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuv81zqnv.jl:11\nin expression starting at /tmp/tmpuv81zqnv.jl:11\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpphsakmuh.jl:11\nin expression starting at /tmp/tmpphsakmuh.jl:11\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return n\n\
    \    else \n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf82nx7xv.jl:15\nin expression starting at\
    \ /tmp/tmpf82nx7xv.jl:15\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return 0 \n\
    \    else \n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4) \nend\n\
    </cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf5zsz79h.jl:15\nin expression starting at\
    \ /tmp/tmpf5zsz79h.jl:15\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return n\n\
    \    else \n        return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n -\
    \ 4)\nend\n</cell>\n<code language=julia-1.0>\n@time fib4(10)\n</cell>\n<text>\n\
    Exercise: Write a function to compute the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa3zfx85w.jl:15\nin expression starting at\
    \ /tmp/tmpa3zfx85w.jl:15\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(4)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.  Do not use loops.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqywxs4ml.jl:12\nin expression starting at\
    \ /tmp/tmpqywxs4ml.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3s5z0kvd.jl:12\nin expression starting at\
    \ /tmp/tmp3s5z0kvd.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        2\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        2\n    else if n == 8 \n    \
    \    0\n    else if n == 9 \n        2\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        2\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        2\n    else if n == 14 \n        0\n    else if n == 15 \n       \
    \ 2\n    else if n == 16 \n        0\n    else if n == 17 \n        2\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        2\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        2\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        2\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        2\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        2\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 2\n    else if n == 30 \n        0\n    else if n == 31 \n        2\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        2\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        2\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        2\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        2\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        2\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 2\n    else if n == 44 \n        0\n    else if n == 45 \n        2\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        2\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        2\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        2\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        2\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeyp48wql.jl:12\nin expression starting at\
    \ /tmp/tmpeyp48wql.jl:12\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(0)\n\
    </cell>\n<code language=julia-1.0>\nfib4(1)\n</cell>\n<code language=julia-1.0>\n\
    fib4(2)\n</cell>\n<code language=julia-1.0>\nfib4(3)\n</cell>\n<code language=julia-1.0>\n\
    fib4(4)\n</cell>\n<code language=julia-1.0>\nfib4(5)\n</cell>\n<code language=julia-1.0>\n\
    fib4(6)\n</cell>\n<code language=julia-1.0>\nfib4(7)\n</cell>\n<code language=julia-1.0>\n\
    fib4(8)\n</cell>\n<code language=julia-1.0>\nfib4(9)\n</cell>\n<code language=julia-1.0>\n\
    fib4(10)\n</cell>\n<code language=julia-1.0>\nfib4(11)\n</cell>\n<code language=julia-1.0>\n\
    fib4(12)\n</cell>\n<code language=julia-1.0>\nfib4(13)\n</cell>\n<code language=julia-1.0>\n\
    fib4(14)\n</cell>\n<code language=julia-1.0>\nfib4(15)\n</cell>\n<code language=julia-1.0>\n\
    fib4(16)\n</cell>\n<code language=julia-1.0>\nfib4(17)\n</cell>\n<code language=julia-1.0>\n\
    fib4(18)\n</cell>\n<code language=julia-1.0>\nfib4(19)\n</cell>\n<code language=julia-1.0>\n\
    fib4(20)\n</cell>\n<code language=julia-1.0>\nfib4(21)\n</cell>\n<code language=julia-1.0>\n\
    fib4(22)\n</cell>\n<code language=julia-1.0>\nfib4(23)\n</cell>\n<code language=julia-1.0>\n\
    fib4(24)\n</cell>\n<code language=julia-1.0>\nfib4(25)\n</cell>\n<code language=julia-1.0>\n\
    fib4(26)\n</cell>\n<code language=julia-1.0>\nfib4(27)\n</cell>\n<code language=julia-1.0>\n\
    fib4(28)\n</cell>\n<code language=julia-1.0>\nfib4(29)\n</cell>\n<code language=julia-1.0>\n\
    fib4(30)\n</cell>\n<code language=juli\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyc30ne6i.jl:12\nin expression starting at\
    \ /tmp/tmpyc30ne6i.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdekln1t_.jl:12\nin expression starting at\
    \ /tmp/tmpdekln1t_.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3s5z0kvd.jl:12\nin expression starting at\
    \ /tmp/tmp3s5z0kvd.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    else\n\
    \        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.3>\n\
    fib4(10)\n</cell>\n<code language=julia-1.3>\n\"\"\"The Fibonacci number sequence\
    \ is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n\
    \    fib(n) -> fib(n-1) + fib(n-2).\n    Please write a function to efficiently\
    \ compute the n-th element of the fib number sequence.  Do not use recursion.\n\
    \                \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) ==\
    \ 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk6thz3n5.jl:21\nin expression starting at\
    \ /tmp/tmpk6thz3n5.jl:21\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise:\
    \ Write a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbzj5q3vj.jl:12\nin expression starting at\
    \ /tmp/tmpbzj5q3vj.jl:12\n"
  stdout: ''
  timestamp: 1659748166
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.3>\nfib4(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqyl4zspx.jl:12\nin expression starting at\
    \ /tmp/tmpqyl4zspx.jl:12\n"
  stdout: ''
  timestamp: 1659748168
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise\nWrite a function to compute the n-th\
    \ element of the Fibbonacci sequence using recursion.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpht1sb8xc.jl:15\nin expression starting at\
    \ /tmp/tmpht1sb8xc.jl:15\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1\n        return n\n \
    \   else if n == 2\n        return 3\n    else if n == 3\n        return 5\n \
    \   else if n == 4\n        return 7\n    else if n == 5\n        return 9\n \
    \   else if n == 6\n        return 11\n    else if n == 7\n        return 13\n\
    \    else if n == 8\n        return 15\n    else if n == 9\n        return 17\n\
    \    else if n == 10\n        return 19\n    else if n == 11\n        return 21\n\
    \    else if n == 12\n        return 23\n    else if n == 13\n        return 25\n\
    \    else if n == 14\n        return 27\n    else if n == 15\n        return 29\n\
    \    else if n == 16\n        return 31\n    else if n == 17\n        return 33\n\
    \    else if n == 18\n        return 35\n    else if n == 19\n        return 37\n\
    \    else if n == 20\n        return 39\n    else if n == 21\n        return 41\n\
    \    else if n == 22\n        return 43\n    else if n == 23\n        return 45\n\
    \    else if n == 24\n        return 47\n    else if n == 25\n        return 49\n\
    \    else if n == 26\n        return 51\n    else if n == 27\n        return 53\n\
    \    else if n == 28\n        return 55\n    else if n == 29\n        return 57\n\
    \    else if n == 30\n        return 59\n    else if n == 31\n        return 61\n\
    \    else if n == 32\n        return 63\n    else if n == 33\n        return 65\n\
    \    else if n == 34\n        return 67\n    else if n == 35\n        return 69\n\
    \    else if n == 36\n        return 71\n    else if n == 37\n        return 73\n\
    \    else if n == 38\n        return 75\n    else if n == 39\n        return 77\n\
    \    else if n == 40\n        return 79\n    else if n == 41\n        return 81\n\
    \    else if n == 42\n        return 83\n    else if n == 43\n        return 85\n\
    \    else if n == 44\n        return 87\n    else if n == 45\n        return 89\n\
    \    else if n == 46\n        return 91\n    else if n == 47\n        return 93\n\
    \    else if n == 48\n        return 95\n    else if n == 49\n        return 97\n\
    \    else if n == 50\n        return 99\n    else if n == 51\n        return 101\n\
    \    else if n == 52\n        return 103\n    else if n == 53\n        return\
    \ 105\n    else if n == 54\n        return 107\n    else if n == 55\n        return\
    \ 109\n    else if n == 56\n        return 111\n    else if n == 57\n\nusing Test\n\
    \n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptj86vx1n.jl:12\nin expression starting at\
    \ /tmp/tmptj86vx1n.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    fib4(4)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm3btf5ke.jl:11\nin expression starting at /tmp/tmpm3btf5ke.jl:11\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.3>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeqsd1vap.jl:12\nin expression starting at\
    \ /tmp/tmpeqsd1vap.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function to compute the factorial of a number.  Do\
    \ not use recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp41kvmqgr.jl:12\nin expression starting at\
    \ /tmp/tmp41kvmqgr.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgjuhy1mp.jl:12\nin expression starting at\
    \ /tmp/tmpgjuhy1mp.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4) \nend\n</cell>\n<code language=julia-1.5>\nfib4(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fib4(5)\n</cell>\n<code language=julia-1.5>\n@code_warntype \n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf_p8a2f7.jl:12\nin expression starting at\
    \ /tmp/tmpf_p8a2f7.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(10^6)\n</cell>\n<text>\nExercise: Write a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo5sn046_.jl:15\nin expression starting at\
    \ /tmp/tmpo5sn046_.jl:15\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\nfib4(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6mvo0xig.jl:12\nin expression starting at\
    \ /tmp/tmp6mvo0xig.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpusvbdezu.jl:12\nin expression starting at\
    \ /tmp/tmpusvbdezu.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(10)\n</cell>\n<text>\nExercise\nWrite a function that computes the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5yp22mr_.jl:15\nin expression starting at\
    \ /tmp/tmp5yp22mr_.jl:15\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return n\n\
    \    else \n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq5s9nlst.jl:15\nin expression starting at\
    \ /tmp/tmpq5s9nlst.jl:15\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fib4(10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyx5eo2i7.jl:11\nin expression starting at /tmp/tmpyx5eo2i7.jl:11\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphbz7a430.jl:12\nin expression starting at\
    \ /tmp/tmphbz7a430.jl:12\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(4)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfhnm0vz9.jl:12\nin expression starting at\
    \ /tmp/tmpfhnm0vz9.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(0)\n</cell>\n<code language=julia-1.0>\nfib4(1)\n</cell>\n<code language=julia-1.0>\n\
    fib4(2)\n</cell>\n<code language=julia-1.0>\nfib4(3)\n</cell>\n<code language=julia-1.0>\n\
    fib4(4)\n</cell>\n<code language=julia-1.0>\nfib4(5)\n</cell>\n<code language=julia-1.0>\n\
    fib4(6)\n</cell>\n<code language=julia-1.0>\nfib4(7)\n</cell>\n<code language=julia-1.0>\n\
    fib4(8)\n</cell>\n<code language=julia-1.0>\nfib4(9)\n</cell>\n<code language=julia-1.0>\n\
    fib4(10)\n</cell>\n<code language=julia-1.0>\nfib4(11)\n</cell>\n<code language=julia-1.0>\n\
    fib4(12)\n</cell>\n<code language=julia-1.0>\nfib4(13)\n</cell>\n<code language=julia-1.0>\n\
    fib4(14)\n</cell>\n<code language=julia-1.0>\nfib4(15)\n</cell>\n<code language=julia-1.0>\n\
    fib4(16)\n</cell>\n<code language=julia-1.0>\nfib4(17)\n</cell>\n<code language=julia-1.0>\n\
    fib4(18)\n</cell>\n<code language=julia-1.0>\nfib4(19)\n</cell>\n<code language=julia-1.0>\n\
    fib4(20)\n</cell>\n<code language=julia-1.0>\nfib4(21)\n</cell>\n<code language=julia-1.0>\n\
    fib4(22)\n</cell>\n<code language=julia-1.0>\nfib4(23)\n</cell>\n<code language=julia-1.0>\n\
    fib4(24)\n</cell>\n<code language=julia-1.0>\nfib4(25)\n</cell>\n<code language=julia-1.0>\n\
    fib4(26)\n</cell>\n<code language=julia-1.0>\nfib4(27)\n</cell>\n<code language=julia-1.0>\n\
    fib4(28)\n</cell>\n<code language=julia-1.0>\nfib4(29)\n</cell>\n<code language=julia-1.0>\n\
    fib4(30)\n</cell>\n<code language=julia-1.0>\nfib4(31)\n</cell>\n<code language=julia-1.0>\n\
    fib4(32)\n</cell>\n<code language=julia-1.0>\n\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuhiw__x5.jl:15\nin expression starting at\
    \ /tmp/tmpuhiw__x5.jl:15\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fib4(10000);\n</cell>\n<text>\nExercise\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpil3n1sjd.jl:12\nin expression starting at\
    \ /tmp/tmpil3n1sjd.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2mxujv0a.jl:11\nin expression starting at /tmp/tmp2mxujv0a.jl:11\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<text>\nProblem 8\nWrite\
    \ a function to compute the sum of the numbers from 1 to n.  Do not use recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp91ji85r2.jl:15\nin expression starting at\
    \ /tmp/tmp91ji85r2.jl:15\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwz3u26gu.jl:11\nin expression starting at /tmp/tmpwz3u26gu.jl:11\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    fib4(10)\n</cell>\n<text>\nExercise: Write a function that computes the n-th element\
    \ of the Fibbonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl_tg8hfm.jl:15\nin expression starting at\
    \ /tmp/tmpl_tg8hfm.jl:15\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    else\n\
    \        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe68ubec7.jl:21\nin expression starting at\
    \ /tmp/tmpe68ubec7.jl:21\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6vlehmzk.jl:11\nin expression starting at /tmp/tmp6vlehmzk.jl:11\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    elseif\
    \ n == 4\n        0\n    else\n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    end\n</cell>\n<code language=julia-1.3>\nfib4(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that computes the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4kda2_ne.jl:23\nin expression starting at\
    \ /tmp/tmp4kda2_ne.jl:23\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 then 0 else fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n@time fib4(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpme8ous53.jl:10\nin expression starting at /tmp/tmpme8ous53.jl:10\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph7dises6.jl:12\nin expression starting at\
    \ /tmp/tmph7dises6.jl:12\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(4)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfhnm0vz9.jl:12\nin expression starting at\
    \ /tmp/tmpfhnm0vz9.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpltlosf5t.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpltlosf5t.jl:1\n\
    in expression starting at /tmp/tmpltlosf5t.jl:1\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7thq08s3.jl:11\nin expression starting at /tmp/tmp7thq08s3.jl:11\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp24gw98ga.jl:15\nin expression starting at\
    \ /tmp/tmp24gw98ga.jl:15\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        2\n    else if n == 3\n        0\n   \
    \ else if n == 4\n        4\n    else\n        fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcn9ohuuw.jl:12\nin expression starting at\
    \ /tmp/tmpcn9ohuuw.jl:12\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ to compute the factorial of a number.  Do not use recursion.\nusing Test\n\n\
    @testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2m6vta58.jl:12\nin expression starting at\
    \ /tmp/tmp2m6vta58.jl:12\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ Fibonacci number using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9vukc1zm.jl:12\nin expression starting at\
    \ /tmp/tmp9vukc1zm.jl:12\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    fib4(4)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjmgjrpa3.jl:11\nin expression starting at /tmp/tmpjmgjrpa3.jl:11\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_8u22pj4.jl:12\nin expression starting at\
    \ /tmp/tmp_8u22pj4.jl:12\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsypsosdz.jl:11\nin expression starting at /tmp/tmpsypsosdz.jl:11\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 then 0 else fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<text>\nProblem 7\nWrite a Julia\
    \ function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpan5lvc29.jl:10\nin expression starting at /tmp/tmpan5lvc29.jl:10\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    else\n\
    \        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    fib4(0)\n</cell>\n<code language=julia-1.5>\nfib4(1)\n</cell>\n<code language=julia-1.5>\n\
    fib4(2)\n</cell>\n<code language=julia-1.5>\nfib4(3)\n</cell>\n<code language=julia-1.5>\n\
    fib4(4)\n</cell>\n<code language=julia-1.5>\nfib4(5)\n</cell>\n<code language=julia-1.5>\n\
    fib4(6)\n</cell>\n<code language=julia-1.5>\nfib4(7)\n</cell>\n<code language=julia-1.5>\n\
    fib4(8)\n</cell>\n<code language=julia-1.5>\nfib4(9)\n</cell>\n<code language=julia-1.5>\n\
    fib4(10)\n</cell>\n<code language=julia-1.5>\nfib4(11)\n</cell>\n<code language=julia-1.5>\n\
    fib4(12)\n</cell>\n<code language=julia-1.5>\nfib4(13)\n</cell>\n<code language=julia-1.5>\n\
    fib4(14)\n</cell>\n<code language=julia-1.5>\nfib4(15)\n</cell>\n<code language=julia-1.5>\n\
    fib4(16)\n</cell>\n<code language=julia-1.5>\nfib4(17)\n</cell>\n<code language=julia-1.5>\n\
    fib4(18)\n</cell>\n<code language=julia-1.5>\nfib4(19)\n</cell>\n<code language=julia-1.5>\n\
    fib4(20)\n</cell>\n<code language=julia-1.5>\nfib4(21)\n</cell>\n<code language=julia-1.5>\n\
    fib4(22)\n</cell>\n<code language=julia-1.5>\nfib4(23)\n</cell>\n<code language=julia-1.5>\n\
    fib4(24)\n</cell>\n<code language=julia-1.5>\nfib4(25)\n</cell>\n<code language=julia-1.5>\n\
    fib4(26)\n</cell>\n<code language=julia-1.5>\nfib4(27)\n</cell>\n<code language=julia-1.5>\n\
    fib4(28)\n</cell>\n<code language=julia-1.5>\nfib4(29)\n</cell>\n<code language=julia-1.5>\n\
    fib4(30)\n</cell>\n<code language=julia-1.5>\nfib4(31)\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7paobiv3.jl:21\nin expression starting at\
    \ /tmp/tmp7paobiv3.jl:21\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph7dises6.jl:12\nin expression starting at\
    \ /tmp/tmph7dises6.jl:12\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the n-th Fibonacci number using a while loop.\nusing Test\n\n\
    @testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0oihm7py.jl:12\nin expression starting at\
    \ /tmp/tmp0oihm7py.jl:12\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <text>\nProblem 7\nWrite a function that takes in a list of numbers and returns\
    \ the sum of the numbers in the list multiplied by 2.  Do not use recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptzvcpokg.jl:11\nin expression starting at /tmp/tmptzvcpokg.jl:11\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise: Write a recursive function fib5 that\
    \ computes the n-th element of the Fibonacci number sequence.  Do not use recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2h9y1t7b.jl:15\nin expression starting at\
    \ /tmp/tmp2h9y1t7b.jl:15\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise: Write a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1st77bar.jl:11\nin expression starting at /tmp/tmp1st77bar.jl:11\n"
  stdout: ''
  timestamp: 1659748171
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the n-th Fibonacci number using the recursive definition.  Test\
    \ it by computing the first few numbers.  Then test it by computing the first\
    \ few numbers for n = 50.  How does the performance compare to the iterative definition?\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp44qe463l.jl:12\nin expression starting at\
    \ /tmp/tmp44qe463l.jl:12\n"
  stdout: ''
  timestamp: 1659748172
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        2\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        2\n    else if n == 8 \n    \
    \    0\n    else if n == 9 \n        2\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        2\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        2\n    else if n == 14 \n        0\n    else if n == 15 \n       \
    \ 2\n    else if n == 16 \n        0\n    else if n == 17 \n        2\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        2\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        2\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        2\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        2\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        2\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 2\n    else if n == 30 \n        0\n    else if n == 31 \n        2\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        2\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        2\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        2\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        2\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        2\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 2\n    else if n == 44 \n        0\n    else if n == 45 \n        2\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        2\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        2\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        2\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        2\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeyp48wql.jl:12\nin expression starting at\
    \ /tmp/tmpeyp48wql.jl:12\n"
  stdout: ''
  timestamp: 1659748161
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw_4bb8kr.jl:15\nin expression starting at\
    \ /tmp/tmpw_4bb8kr.jl:15\n"
  stdout: ''
  timestamp: 1659748172
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1\n        return n\n \
    \   else\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm33dvypp.jl:15\nin expression starting at\
    \ /tmp/tmpm33dvypp.jl:15\n"
  stdout: ''
  timestamp: 1659748172
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 then 0 else fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the nth element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz15u0qjk.jl:10\nin expression starting at /tmp/tmpz15u0qjk.jl:10\n"
  stdout: ''
  timestamp: 1659748172
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert fib4(4) == 5\n@assert fib4(5) == 8\n@assert\
    \ fib4(6) == 13\n@assert fib4(7) == 21\n@assert fib4(8) == 34\n@assert fib4(9)\
    \ == 55\n@assert fib4(10) == 89\n@assert fib4(11) == 144\n@assert fib4(12) ==\
    \ 233\n@assert fib4(13) == 377\n@assert fib4(14) == 610\n@assert fib4(15) == 987\n\
    @assert fib4(16) == 1597\n@assert fib4(17) == 2584\n@assert fib4(18) == 4181\n\
    @assert fib4(19) == 6765\n@assert fib4(20) == 10946\n@assert fib4(21) == 17711\n\
    @assert fib4(22) == 28657\n@assert fib4(23) == 46368\n@assert fib4(24) == 75025\n\
    @assert fib4(25) == 121393\n@assert fib4(26) == 196418\n@assert fib4(27) == 317811\n\
    @assert fib4(28) == 514229\n@assert fib4(29) == 832040\n@assert fib4(30) == 1346269\n\
    @assert fib4(31) == 2178309\n@assert fib4(32) == 3524578\n@assert fib4(33) ==\
    \ 5702887\n@assert fib4(34) == 9227465\n@assert fib4(35) == 14930352\n@assert\
    \ fib4(36) == 24157817\n@assert fib4(37) == 39088169\n@assert fib4(38) == 63245986\n\
    @assert fib4(39) == 102334155\n@assert fib4(40) == 165580141\n@assert fib4(41)\
    \ == 267914296\n@assert fib4(42) == 433494437\n@assert fib4(43) == 701408733\n\
    @assert fib4(44) == 1134903170\n@assert fib4(45) == 1836311903\n@assert fib4(46)\
    \ == 2971215073\n@assert fib4(47) == 4807526976\n@assert fib4(48) == 7778742049\n\
    @assert fib\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ckbzp79.jl:12\nin expression starting at\
    \ /tmp/tmp1ckbzp79.jl:12\n"
  stdout: ''
  timestamp: 1659748172
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fib4(10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpacas9zxh.jl:11\nin expression starting at /tmp/tmpacas9zxh.jl:11\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return n\n\
    \    else \n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n\
    </cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise: Write\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2_okteky.jl:15\nin expression starting at\
    \ /tmp/tmp2_okteky.jl:15\n"
  stdout: ''
  timestamp: 1659748173
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.4>\n@time fib4(10)\n</cell>\n<text>\nExercise\nWrite a\
    \ function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk9j2pmvo.jl:11\nin expression starting at /tmp/tmpk9j2pmvo.jl:11\n"
  stdout: ''
  timestamp: 1659748173
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<code language=julia-1.3>\n@time fib4(10)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function to compute the sum of the first n Fibonacci numbers.  (The\
    \ Fibonacci numbers are 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...)  Do\
    \ not use recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkwn6fo2r.jl:12\nin expression starting at\
    \ /tmp/tmpkwn6fo2r.jl:12\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else \n        fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpusvbdezu.jl:12\nin expression starting at\
    \ /tmp/tmpusvbdezu.jl:12\n"
  stdout: ''
  timestamp: 1659748169
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4pncdxrz.jl:11\nin expression starting at /tmp/tmp4pncdxrz.jl:11\n"
  stdout: ''
  timestamp: 1659748158
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\n\
    fib4(4)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd9_yuja7.jl:11\nin expression starting at /tmp/tmpd9_yuja7.jl:11\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        return n\n\
    \    else \n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fib4(10)\n</cell>\n<text>\nExercise\n\
    Write a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3wezjmcu.jl:15\nin expression starting at\
    \ /tmp/tmp3wezjmcu.jl:15\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(10)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxab9d2f9.jl:15\nin expression starting at\
    \ /tmp/tmpxab9d2f9.jl:15\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fib4(10)\n</cell>\n<code language=julia-1.5>\n\
    @time fib4(100)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the\
    \ n-th element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphx0drx4m.jl:11\nin expression starting at /tmp/tmphx0drx4m.jl:11\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4) \nend\n</cell>\n<code language=julia-1.0>\n\
    fib4(0)\n</cell>\n<code language=julia-1.0>\nfib4(1)\n</cell>\n<code language=julia-1.0>\n\
    fib4(2)\n</cell>\n<code language=julia-1.0>\nfib4(3)\n</cell>\n<code language=julia-1.0>\n\
    fib4(4)\n</cell>\n<code language=julia-1.0>\nfib4(5)\n</cell>\n<code language=julia-1.0>\n\
    fib4(6)\n</cell>\n<code language=julia-1.0>\nfib4(7)\n</cell>\n<code language=julia-1.0>\n\
    fib4(8)\n</cell>\n<code language=julia-1.0>\nfib4(9)\n</cell>\n<code language=julia-1.0>\n\
    fib4(10)\n</cell>\n<code language=julia-1.0>\nfib4(11)\n</cell>\n<code language=julia-1.0>\n\
    fib4(12)\n</cell>\n<code language=julia-1.0>\nfib4(13)\n</cell>\n<code language=julia-1.0>\n\
    fib4(14)\n</cell>\n<code language=julia-1.0>\nfib4(15)\n</cell>\n<code language=julia-1.0>\n\
    fib4(16)\n</cell>\n<code language=julia-1.0>\nfib4(17)\n</cell>\n<code language=julia-1.0>\n\
    fib4(18)\n</cell>\n<code language=julia-1.0>\nfib4(19)\n</cell>\n<code language=julia-1.0>\n\
    fib4(20)\n</cell>\n<code language=julia-1.0>\nfib4(21)\n</cell>\n<code language=julia-1.0>\n\
    fib4(22)\n</cell>\n<code language=julia-1.0>\nfib4(23)\n</cell>\n<code language=julia-1.0>\n\
    fib4(24)\n</cell>\n<code language=julia-1.0>\nfib4(25)\n</cell>\n<code language=julia-1.0>\n\
    fib4(26)\n</cell>\n<code language=julia-1.0>\nfib4(27)\n</cell>\n<code language=julia-1.0>\n\
    fib4(28)\n</cell>\n<code language=julia-1.0>\nfib4(29)\n</cell>\n<code language=julia-1.0>\n\
    fib4(30)\n</cell>\n<code language=julia-1.0>\nfib4(31)\n</cell>\n<code language=julia-1.0>\n\
    fib4(32)\n</cell>\n<code language=julia-1.0\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6bilzmr.jl:11\nin expression starting at /tmp/tmpm6bilzmr.jl:11\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        2\n    elseif n == 3\n        0\n    elseif\
    \ n == 4\n        0\n    else\n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    end\n</cell>\n<code language=julia-1.5>\nfib4(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that computes the n-th Fibonacci number using recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd6_pwsbb.jl:23\nin expression starting at\
    \ /tmp/tmpd6_pwsbb.jl:23\n"
  stdout: ''
  timestamp: 1659748173
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <text>\nProblem 7\nWrite a function that computes the factorial of a number. \
    \ Do not use recursion.\nusing Test\n\n@testset begin\n\ncandidate = fib4;\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10) ==\
    \ 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjgjpy278.jl:12\nin expression starting at\
    \ /tmp/tmpjgjpy278.jl:12\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1\n        return n\n \
    \   else if n == 2\n        return 3\n    else if n == 3\n        return 5\n \
    \   else if n == 4\n        return 7\n    else\n        return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<code language=julia-1.5>\nfib4(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t@test(candidate(10)\
    \ == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeb_hva1s.jl:12\nin expression starting at\
    \ /tmp/tmpeb_hva1s.jl:12\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.5>\n\
    fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphuk4f5nd.jl:15\nin expression starting at\
    \ /tmp/tmphuk4f5nd.jl:15\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        2\n    else if n == 3 \n        0\n\
    \    else if n == 4 \n        0\n    else if n == 5 \n        5\n    else if n\
    \ == 6 \n        0\n    else if n == 7 \n        0\n    else if n == 8 \n    \
    \    8\n    else if n == 9 \n        0\n    else if n == 10 \n        0\n    else\
    \ if n == 11 \n        0\n    else if n == 12 \n        0\n    else if n == 13\
    \ \n        13\n    else if n == 14 \n        0\n    else if n == 15 \n      \
    \  0\n    else if n == 16 \n        16\n    else if n == 17 \n        0\n    else\
    \ if n == 18 \n        0\n    else if n == 19 \n        0\n    else if n == 20\
    \ \n        0\n    else if n == 21 \n        0\n    else if n == 22 \n       \
    \ 0\n    else if n == 23 \n        0\n    else if n == 24 \n        0\n    else\
    \ if n == 25 \n        0\n    else if n == 26 \n        0\n    else if n == 27\
    \ \n        0\n    else if n == 28 \n        0\n    else if n == 29 \n       \
    \ 0\n    else if n == 30 \n        0\n    else if n == 31 \n        0\n    else\
    \ if n == 32 \n        0\n    else if n == 33 \n        0\n    else if n == 34\
    \ \n        0\n    else if n == 35 \n        0\n    else if n == 36 \n       \
    \ 0\n    else if n == 37 \n        0\n    else if n == 38 \n        0\n    else\
    \ if n == 39 \n        0\n    else if n == 40 \n        0\n    else if n == 41\
    \ \n        0\n    else if n == 42 \n        0\n    else if n == 43 \n       \
    \ 0\n    else if n == 44 \n        0\n    else if n == 45 \n        0\n    else\
    \ if n == 46 \n        0\n    else if n == 47 \n        0\n    else if n == 48\
    \ \n        0\n    else if n == 49 \n        0\n    else if n == 50 \n       \
    \ 0\n    else if n == 51 \n        0\n    else if n == 52 \n        0\n    else\
    \ if n == 53 \n        0\n    else if n == 54 \n        0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc8j_teth.jl:12\nin expression starting at\
    \ /tmp/tmpc8j_teth.jl:12\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.0>\nfib4(4)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fib4(4)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\
    \t@test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7os93mly.jl:11\nin expression starting at /tmp/tmp7os93mly.jl:11\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.0>\nfib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg7czws8i.jl:11\nin expression starting at /tmp/tmpg7czws8i.jl:11\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 || n == 1 \n        then 0\n  \
    \  else \n        fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n\
    <code language=julia-1.5>\nfib4(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\t\
    @test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7kaqwzh1.jl:11\nin expression starting at /tmp/tmp7kaqwzh1.jl:11\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0 then 0 else fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\nend\n</cell>\n<code language=julia-1.3>\n\
    fib4(10)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fib4;\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 28)\n\t\
    @test(candidate(10) == 104)\n\t@test(candidate(12) == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzlgbp2jf.jl:10\nin expression starting at /tmp/tmpzlgbp2jf.jl:10\n"
  stdout: ''
  timestamp: 1659748174
- exit_code: 1
  program: "\"\"\"The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n  \
    \  fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4).\n    Please write a function to efficiently compute the n-th element\
    \ of the fib4 number sequence.  Do not use recursion.\n                \"\"\"\n\
    function fib4(n::Int64)::Int64 \n    if n == 0\n        0\n    else\n        fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fib4;\n\t@test(candidate(5) == 4)\n\
    \t@test(candidate(8) == 28)\n\t@test(candidate(10) == 104)\n\t@test(candidate(12)\
    \ == 386)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqi6u3q3i.jl:15\nin expression starting at\
    \ /tmp/tmpqi6u3q3i.jl:15\n"
  stdout: ''
  timestamp: 1659748174

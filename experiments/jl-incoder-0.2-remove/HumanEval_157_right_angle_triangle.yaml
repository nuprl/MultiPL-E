name: HumanEval_157_right_angle_triangle
language: jl
prompt: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
  \ if the three\n    sides form a right-angled triangle, False otherwise.\n    A\
  \ right-angled triangle is a triangle in which one angle is right angle or \n  \
  \  90 degree.\n    Example:\n            \"\"\"\nfunction right_angle_triangle(a::Int64,\
  \ b::Int64, c::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
  \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
  \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
  \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
  \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
  \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) ==\
  \ false)\nend\n"
completions: ["    if a == 0 || b == 0 || c == 0 \n        then return false \n  \
    \  else \n        if b > a && b > c \n            then return true \n        else\
    \ if c > a && c > b \n            then return true \n        else if b == c \n\
    \            then return true \n        else if b > c \n            then return\
    \ false \n        else if c > b \n            then return false \n        else\
    \ if b > a && c > a \n            then return true \n        else if c > a \n\
    \            then return false \n        else if b > a \n            then return\
    \ false \n        else if c > a \n            then return false \n        else\
    \ return false \nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer\
    \ the question. OP wants to know if three sides form a right angled triangle,\
    \ not if they are right angled.\n<|/ c |>\n<| c |>\nThe question asks if three\
    \ sides form a right angled triangle, not if they are right angled.\n<|/ c |>\n\
    <| c |>\nThe question asks if three sides form a right angled triangle, not if\
    \ they are right angled.\n<|/ c |>\n<| c |>\nThe question asks if three sides\
    \ form a right angled triangle, not if they are right angled.\n<|/ c |>\n<| c\
    \ |>\nThe question asks if three sides form a right angled triangle, not if they\
    \ are right angled.\n<|/ c |>\n<| a tags=julia,trigonometry |>\n<code>", "   \
    \ if a > b and a > c \n    then \n        if b > c \n        then \n         \
    \   return true\n        else \n            return false\n    else \n        if\
    \ b > c \n        then \n            return false\n        else \n           \
    \ return true\nend\n\"\"\"\n\"\"\"\n    Problem 4\n\"\"\"\n\"\"\"\n    Given the\
    \ lengths of the sides of a triangle. Return True if the triangle \n    is a right\
    \ angled triangle, False otherwise.\n    A right angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n      \
    \      \"\"\"", "    if a > b and a > c \n    then \n        if b > c \n     \
    \   then \n            true\n        else \n            false\n    else \n   \
    \     if c > b \n        then \n            true\n        else \n            false\n\
    \    end\nend\n\"\"\"\n\"\"\"\n    Write a function that takes in a list of numbers\
    \ and returns the sum of all the\n    numbers in the list. \n    Example:\n  \
    \          \"\"\"", "    if a > b and a > c then \n        if b > c then \n  \
    \          return true\n        else \n            return false\n    else \n \
    \       if b > c then \n            return false\n        else \n            return\
    \ true\nend\n\"\"\"\n\"\"\"\n    Problem 2\n\"\"\"\n\"\"\"\n    Given a binary\
    \ tree and a node in that tree, return the path to the node. \n    For example,\
    \ given the following tree:\n        1\n      / \\\n     2   3\n    / \\\n   4\
    \   5\nReturn [1, 2, 4].\n\"\"\"\n\"\"\"\n    Problem 3\n\"\"\"\n\"\"\"\n    Given\
    \ a binary tree and a node in that tree, return the path to the node. \n    For\
    \ example, given the following tree:\n        1\n      / \\\n     2   3\n    /\
    \ \\\n   4   5\nReturn [1, 3, 5].\n\"\"\"\n\"\"\"\n    Problem 4\n\"\"\"\n\"\"\
    \"\n    Given a binary tree and a node in that tree, return the path to the node.\
    \ \n    For example, given the following tree:\n        1\n      / \\\n     2\
    \   3\n    / \\\n   4   5\nReturn [1, 3, 5].\n\"\"\"\n\"\"\"\n    Problem 5\n\"\
    \"\"\n\"\"\"\n    Given a binary tree and a node in that tree, return the path\
    \ to the node. \n    For example, given the following tree:\n        1\n     \
    \ / \\\n     2   3\n    / \\\n   4   5\nReturn [1, 3, 5].\n\"\"\"\n\"\"\"\n  \
    \  Problem 6\n\"\"\"\n\"\"\"\n    Given a binary tree and a node in that tree,\
    \ return the path to the node. \n    For example, given the following tree:\n\
    \        1\n      / \\\n     2   3\n    / \\\n   4   5\nReturn [1, 3, 5].\n\"\"\
    \"\n\"\"\"\n    Problem 7\n\"\"\"\n\"\"\"\n    Given a binary tree and a node\
    \ in that tree, return the path to the node. \n    For example, given the following\
    \ tree:\n        1\n      / \\\n     2   3\n    / \\\n   4   5\nReturn [1, 3,\
    \ 5].\n\"\"\"\n\"\"\"\n    Problem 8\n\"\"\"\n\"\"\"\n    Given a binary tree\
    \ and a node in that tree, return the path to the node. \n    For example, given\
    \ the following tree:\n        1\n      / \\\n     2   3\n    / \\\n   4   5\n\
    Return [1, 3, 5].\n\"\"\"\n\"\"\"\n    Problem 9\n\"\"\"\n\"\"\"\n    Given a\
    \ binary tree and a node in that tree, return the path to the node. \n    For\
    \ example, given the following tree:\n        1\n      / \\\n     2   3\n    /\
    \ \\\n   4   5\nReturn [1, 3, 5].\n\"\"\"\n\"\"\"\n    Problem ", "    if a==0\
    \ || b==0 || c==0 \n        then return false \n    else \n        if a>b \n \
    \           then return right_angle_triangle(b,c,a) \n        else \n        \
    \    if b>c \n                then return right_angle_triangle(a,c,b) \n     \
    \       else \n                if c>a \n                    then return right_angle_triangle(a,b,c)\
    \ \n                else \n                    return true \n        end\n   \
    \ end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a == 0 || b ==\
    \ 0 || c == 0 \n        true\n    else \n        if b > a && b > c \n        \
    \    right_angle_triangle(b, a, c)\n        else if c > a && c > b \n        \
    \    right_angle_triangle(b, c, a)\n        else \n            if a > b && a >\
    \ c \n                right_angle_triangle(a, c, b)\n            else \n     \
    \           if b > c && b > a \n                    right_angle_triangle(a, c,\
    \ b)\n                else \n                    if c > a && c > b \n        \
    \                right_angle_triangle(a, c, b)\n                    else \n  \
    \                      false\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Checks if three sides of a triangle are\
    \ right angled triangle\n    \n    Arguments\n    ---------\n    a::Int64\n  \
    \      Length of side 1\n    b::Int64\n        Length of side 2\n    c::Int64\n\
    \        Length of side 3\n    \n    Returns\n    -------\n    right_angle_triangle::Bool\n\
    \        True if three sides of a triangle are right angled triangle\n       \
    \ False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    \n    Checks if three sides of a triangle are right angled\
    \ triangle\n    \n    Arguments\n    ---------\n    a::Int64\n        Length of\
    \ side 1\n    b::Int64\n        Length of side 2\n    c::Int64\n        Length\
    \ of side 3\n    \n    Returns\n    -------\n    right_angle_triangle::Bool\n\
    \        True if three sides of a triangle are right angled triangle\n       \
    \ False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    \n    Checks if three sides of a triangle are right angled\
    \ triangle\n    \n    Arguments\n    ---------\n    a::Int64\n        Length of\
    \ side 1\n    b::Int64\n        Length of side 2\n    c::Int64\n        Length\
    \ of side 3\n    \n    Returns\n    -------\n    right_angle_triangle::Bool\n\
    \        True if three sides of a triangle are right angled triangle\n       \
    \ False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    \n    Checks if three sides of a triangle are right angled\
    \ triangle\n    \n    Arguments\n    ---------\n    a::Int64\n        Length of\
    \ side 1\n    b::Int64\n        Length", "    if a > b and a > c \n    then \n\
    \        true\n    elseif b > c \n    then \n        true\n    elseif c > a \n\
    \    then \n        true\n    else\n        false\n    end\nend\n\"\"\"\n\"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if a > b\
    \ and a > c \n    then \n        if b > c \n        then \n            true\n\
    \        else \n            false\n    else \n        if b > c \n        then\
    \ \n            false\n        else \n            true\n        end\n    end\n\
    end\n\"\"\"\n</cell>\n<cell>\n@test right_angle_triangle(3, 4, 5) == true\n@test\
    \ right_angle_triangle(3, 4, 6) == false\n@test right_angle_triangle(3, 4, 7)\
    \ == false\n@test right_angle_triangle(3, 4, 8) == true\n@test right_angle_triangle(3,\
    \ 4, 9) == false\n@test right_angle_triangle(3, 4, 10) == true\n@test right_angle_triangle(3,\
    \ 4, 11) == false\n@test right_angle_triangle(3, 4, 12) == true\n@test right_angle_triangle(3,\
    \ 4, 13) == false\n@test right_angle_triangle(3, 4, 14) == true\n@test right_angle_triangle(3,\
    \ 4, 15) == false\n@test right_angle_triangle(3, 4, 16) == true\n@test right_angle_triangle(3,\
    \ 4, 17) == false\n@test right_angle_triangle(3, 4, 18) == true\n@test right_angle_triangle(3,\
    \ 4, 19) == false\n@test right_angle_triangle(3, 4, 20) == true\n@test right_angle_triangle(3,\
    \ 4, 21) == false\n@test right_angle_triangle(3, 4, 22) == true\n@test right_angle_triangle(3,\
    \ 4, 23) == false\n@test right_angle_triangle(3, 4, 24) == true\n@test right_angle_triangle(3,\
    \ 4, 25) == false\n@test right_angle_triangle(3, 4, 26) == true\n@test right_angle_triangle(3,\
    \ 4, 27) == false\n@test right_angle_triangle(3, 4, 28) == true\n@test right_angle_triangle(3,\
    \ 4, 29) == false\n@test right_angle_triangle(3, 4, 30) == true\n@test right_angle_triangle(3,\
    \ 4, 31) == false\n@test right_angle_triangle(3, 4, 32) == true\n@test right_angle_triangle(3,\
    \ 4, 33) == false\n@test right_angle_triangle(3, 4, 34) == true\n@test right_angle_triangle(3,\
    \ 4, 35) == false\n@test right_angle_triangle(3, 4, 36) == true\n@test right_angle_triangle(3,\
    \ 4, 37) == false\n@test right_angle_triangle(3, 4, 38) == true\n@test right_angle_triangle(3,\
    \ 4, 39) == false\n@test right_angle_triangle(3, 4, 40) == true\n@test right_angle_triangle(3,\
    \ 4, 41) == false\n@test right_angle_triangle(3, 4, 42) == true\n@test right_angle_triangle(3,\
    \ 4, 43) == false\n@test right_angle_triangle(3, 4, 44) == true\n@test right_angle_triangle(3,\
    \ 4, 45) == ", "    if a==0 || b==0 || c==0 \n        return false \n    else\
    \ \n        if a>b and b>c \n            return true \n        else \n       \
    \     if a>c \n                return false \n            else \n            \
    \    if b>c \n                    return true \n                else \n      \
    \              return false \n    \"\"\"\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    if a==b or a==c or b==c then return true\n    else\
    \ if a>b and a>c then return true\n    else if b>a and b>c then return true\n\
    \    else return false\n    \nend\n\"\"\"\n\"\"\"\n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    if a > b and a > c \n    then \n        if b\
    \ > c \n        then \n            return true\n        else \n            return\
    \ false\n    else \n        if b > c \n        then \n            return false\n\
    \        else \n            return true\n    end \nend \n\"\"\"\n</cell>\n<cell>\n\
    \"\"\"\nWrite a function that checks if a triangle is equilateral or not.\nA triangle\
    \ is equilateral if all three sides are equal\nExample: \n    \n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3,\
    \ 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n    triangle(3, 4, 5)\n\
    \    triangle(3, 4, 5)\n    triangle(", "    if a==0 || b==0 || c==0 \n      \
    \  return true\n    else \n        return ((b^c) mod (a^b)) < 0 \nend\n\"\"\"\n\
    \"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool \n      \
    \  if a==0 || b==0 || c==0 \n            return true\n        else \n        \
    \    return ((b^c) mod (a^b)) < 0 \n        end\n    end\n\"\"\"\n\"\"\"\n   \
    \ right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool \n        if a==0 ||\
    \ b==0 || c==0 \n            return true\n        else \n            return ((b^c)\
    \ mod (a^b)) < 0 \n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n        if a==0 || b==0 || c==0 \n            return\
    \ true\n        else \n            return ((b^c) mod (a^b)) < 0 \n        end\n\
    \    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n        if a==0 || b==0 || c==0 \n            return true\n        else \n\
    \            return ((b^c) mod (a^b)) < 0 \n        end\n    end\n\"\"\"\n\"\"\
    \"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool \n        if\
    \ a==0 || b==0 || c==0 \n            return true\n        else \n            return\
    \ ((b^c) mod (a^b)) < 0 \n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n        if a==0 || b==0 || c==0 \n            return\
    \ true\n        else \n            return ((b^c) mod (a^b)) < 0 \n        end\n\
    \    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n        if a==0 || b==0 || c==0 \n            return true\n        else \n\
    \            return ((b^c) mod (a^b)) < 0 \n        end\n    end\n\"\"\"\n\"\"\
    \"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool \n        if\
    \ a==0 || b==0 || c==0 \n            return true\n        else \n            return\
    \ ((b^c) mod (a^b)) < 0 \n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_",
  "    if a==0 || b==0 || c==0 \n        then return false \n    else \n        if\
    \ b > c \n            then return right_angle_triangle(a-1, b, c) \n        else\
    \ \n            if a > c \n                then return right_angle_triangle(a-1,\
    \ c, b) \n            else \n                if b > a \n                    then\
    \ return right_angle_triangle(a-1, b, c) \n                else \n           \
    \         if a > b \n                        then return right_angle_triangle(a-1,\
    \ b, c) \n                    else \n                        return true \n\"\"\
    \"\n\"\"\"\n    Write a function that takes a number as input and returns the\
    \ number \n    raised to the power of n. \n    Example:\n            \"\"\"",
  "    if a==0 || b==0 || c==0 \n        return false\n    if a==b || b==c || c==a\
    \ \n        return true\n    if a==c || c==b || b==a \n        return true\n \
    \   if a==b || b==a || a==c \n        return true\n    return false\n    \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    if a==0 || b==0 || c==0 \n        return false \n   \
    \ else \n        return ((b > 0 and c > 0 and a > 0 and b > c) or (b > 0 and c\
    \ > 0 and a > 0 and c > b) or (b > 0 and c > 0 and a > 0 and b > c))\n    end\n\
    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right-angled triangle\n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        Length of the first side\n    b::Int64\n\
    \        Length of the second side\n    c::Int64\n        Length of the third\
    \ side\n    \n    Returns\n    -------\n    Bool\n        True if three sides\
    \ form a right-angled triangle, False otherwise\n    \"\"\"", "    \n    if a==0\
    \ || b==0 || c==0 \n        true\n    elseif a==b || b==c || c==a \n        true\n\
    \    elseif a==c || c==b || b==a \n        true\n    else\n        false\n   \
    \ end\nend\n\"\"\"\n</cell>\n<cell>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n            \"\"\
    \"", "    if a==0 || b==0 || c==0 \n        then return false \n    else if a==b\
    \ || b==c || c==a \n        then return true \n    else if a==c || c==b || b==a\
    \ \n        then return true \n    else \n        right_angle_triangle(a-1, b,\
    \ c) \n        or right_angle_triangle(a, b, c-1) \n        or right_angle_triangle(a,\
    \ b, c-1)\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    Check if three sides of a triangle are right angled.\n\
    \    \n    Arguments:\n        a {Int64} -- Length of side a\n        b {Int64}\
    \ -- Length of side b\n        c {Int64} -- Length of side c\n    \n    Returns:\n\
    \        Bool -- True if three sides of a triangle are right angled, False otherwise.\n\
    \    \n    Example:\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 5)\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_", "    if a == 0 || b == 0 || c == 0 \n        then return\
    \ false \n    else if b > a && c > a \n        then return true \n    else if\
    \ b > a && c < a \n        then return false \n    else if b < a && c > a \n \
    \       then return false \n    else if b < a && c < a \n        then return true\
    \ \n    else \n        right_angle_triangle(b, c-1, a-1) \n        right_angle_triangle(b-1,\
    \ c, a-1) \n        right_angle_triangle(b-1, c-1, a) \n        right_angle_triangle(b,\
    \ c-1, a) \n        right_angle_triangle(b-1, c, a) \n        right_angle_triangle(b-1,\
    \ c-1, a-1) \n        right_angle_triangle(b, c-1, a-1) \n        right_angle_triangle(b-1,\
    \ c, a-1) \n        right_angle_triangle(b-1, c-1, a) \n        right_angle_triangle(b,\
    \ c-1, a) \n        right_angle_triangle(b-1, c, a) \n        right_angle_triangle(b-1,\
    \ c-1, a-1) \n        right_angle_triangle(b, c-1, a-1) \n        right_angle_triangle(b-1,\
    \ c, a-1) \n        right_angle_triangle(b-1, c-1, a) \n        right_angle_triangle(b,\
    \ c-1, a) \n        right_angle_triangle(b-1, c, a) \n        right_angle_triangle(b-1,\
    \ c-1, a-1) \n        right_angle_triangle(b, c-1, a-1) \n        right_angle_triangle(b-1,\
    \ c, a-1) \n        right_angle_triangle(b-1, c-1, a) \n        right_angle_triangle(b,\
    \ c-1, a) \n        right_angle_triangle(b-1, c, a) \n        right_angle_triangle(b-1,\
    \ c-1, a-1) \n        right_angle_triangle(b, c-1, a-1) \n        right_angle_triangle(b-1,\
    \ c, a-1) \n        right_angle_triangle(b-1, c-1, a) \n        right_angle_triangle(b,\
    \ c-1, a) \n        right_angle_triangle(b-1, c, a) \n        right_angle_triangle(b-1,\
    \ c-1, a-1) \n        right_angle_triangle(b, c-1, a-1) \n        right_angle_triangle(b-1,\
    \ c, a-1) \n        right_angle_triangle(b-1, c-1, a) \n        right_angle_triangle(b,\
    \ c-1, a) \n        right_angle_triangle(b-1, c, a) \n        right_angle_triangle(b-1,\
    \ c-1, a-1) \n        right_angle_triangle(b, c-1, a-1) \n        right_angle_triangle(b-1,\
    \ c, a-1) \n        right_angle_triangle(b-1, c-1, a) \n        right_angle_triangle(b,\
    \ c-1, a) \n        right_angle_triangle(b-1, c, a) \n        right_angle_triangle(b-1,\
    \ c-1, ", "    if a==0 || b==0 || c==0 \n        true\n    else \n        if a>b\
    \ and a>c \n            true\n        else \n            if b>a and b>c \n   \
    \             true\n            else \n                if c>a and c>b \n     \
    \               true\n                else \n                    false\n    end\n\
    end\n\"\"\"\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a triangle\
    \ is equilateral or not.\nA triangle is equilateral if all three sides are equal,\
    \ that is if all sides are equal, \nthe triangle is equilateral. \nA triangle\
    \ is not equilateral if any two of the three sides are equal, that is if \ntwo\
    \ of the three sides are equal, the triangle is not equilateral. \nA triangle\
    \ is not equilateral if all three sides are different, that is if all three \n\
    sides are different, the triangle is not equilateral.\nExample: \nInput: \na =\
    \ 3, b = 2, c = 3\nOutput: \nfalse\nInput: \na = 2, b = 2, c = 3\nOutput: \ntrue\n\
    Input: \na = 2, b = 2, c = 2\nOutput: \nfalse\nInput: \na = 3, b = 2, c = 2\n\
    Output: \ntrue\nInput: \na = 3, b = 2, c = 3\nOutput: \nfalse\nInput: \na = 4,\
    \ b = 2, c = 2\nOutput: \nfalse\nInput: \na = 4, b = 2, c = 3\nOutput: \ntrue\n\
    Input: \na = 4, b = 2, c = 4\nOutput: \nfalse\nInput: \na = 4, b = 2, c = 5\n\
    Output: \nfalse\nInput: \na = 4, b = 2, c = 6\nOutput: \nfalse\nInput: \na = 4,\
    \ b = 2, c = 7\nOutput: \nfalse\nInput: \na = 4, b = 2, c = 8\nOutput: \nfalse\n\
    Input: \na = 4, b = 2, c = 9\nOutput: \nfalse\nInput: \na = 4, b = 2, c = 10\n\
    Output: \nfalse\nInput: \na = 4, b = 2, c = 11\nOutput: \nfalse\nInput: \na =\
    \ 4, b = 2, c = 12\nOutput: \nfalse\nInput: \na = 4, b = 2, c = 13\nOutput: \n\
    false\nInput: \na = 4, b = 2, c = 14\nOutput: \nfalse\nInput: \na = 4, b = 2,\
    \ c = 15\nOutput: \nfalse\nInput: \na = 4, b = 2, c = 16\nOutput: \nfalse\nInput:\
    \ \na = 4, b = 2, c = 17\nOutput: \nfalse\n", "    \n    if a==0 || b==0 || c==0\
    \ \n        then return false\n    else \n        if a>b and a>c \n          \
    \  then return true\n        else if b>a and b>c \n            then return true\n\
    \        else if c>a and c>b \n            then return true\n        else return\
    \ false\n    end\nend\n\"\"\"\n\"\"\"\n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\
    \"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    ", "    if a==0\
    \ || b==0 || c==0 \n        then return false \n    else if a==b || b==c || c==a\
    \ \n        then return true \n    else if a==c || c==b || b==a \n        then\
    \ return true \n    else \n        right_angle_triangle(a-1,b,c) \n        or\
    \ right_angle_triangle(a,c-1,b) \n        or right_angle_triangle(a,b,c-1) \n\
    \    end\nend\nright_angle_triangle(3,4,5)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function that returns the area of a triangle given its lengths in centimeters.\n\
    The formula for the area of a triangle is:\n$A = \\sqrt{s^2 + t^2}$\nwhere $s$\
    \ is the length of the hypotenuse and $t$ is the length of the adjacent side.\n\
    The formula for the area of a right angle triangle is:\n$A = \\sqrt{s^2 + t^2}$\n\
    where $s$ is the length of the hypotenuse and $t$ is the length of the adjacent\
    \ side.\nThe formula for the area of a right angle triangle is:\n$A = \\sqrt{s^2\
    \ + t^2}$\nwhere $s$ is the length of the hypotenuse and $t$ is the length of\
    \ the adjacent side.\nThe formula for the area of a right angle triangle is:\n\
    $A = \\sqrt{s^2 + t^2}$\nwhere $s$ is the length of the hypotenuse and $t$ is\
    \ the length of the adjacent side.\nThe formula for the area of a right angle\
    \ triangle is:\n$A = \\sqrt{s^2 + t^2}$\nwhere $s$ is the length of the hypotenuse\
    \ and $t$ is the length of the adjacent side.\nThe formula for the area of a right\
    \ angle triangle is:\n$A = \\sqrt{s^2 + t^2}$\nwhere $s$ is the length of the\
    \ hypotenuse and $t$ is the length of the adjacent side.\nThe formula for the\
    \ area of a right angle triangle is:\n$A = \\sqrt{s^2 + t^2}$\nwhere $s$ is the\
    \ length of the hypotenuse and $t$ is the length of the adjacent side.\nThe formula\
    \ for the area of a right angle triangle is:\n$A = \\sqrt{s^2 + t^2}$\nwhere $s$\
    \ is the length of the hypotenuse and $t$ is the length of the adjacent side.\n\
    The formula for the area of a right angle triangle is:\n$A = \\sqrt{s^2 + t^2}$\n\
    where $s$ is the length of the hypotenuse and $t$", "    if a == 0 || b == 0 ||\
    \ c == 0 \n    then return false \n    else if b > a && b > c \n    then return\
    \ true \n    else if c > a && c > b \n    then return true \n    else if b ==\
    \ c \n    then return true \n    else if b > c \n    then return false \n    else\
    \ if c > b \n    then return false \n    else if b > a && c > a \n    then return\
    \ true \n    else if b > a && c > b \n    then return true \n    else if c > a\
    \ && b > a \n    then return true \n    else return false \nend \n\"\"\"\n\"\"\
    \"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    if a > b and a > c \n    then return true\
    \ \n    else if b > c \n    then return false \n    else if c > a \n    then return\
    \ false \n    else return true \nend \n\"\"\"\n\"\"\"\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if a==0 || b==0 || c==0 \n  \
    \      then return false\n    else if a==b || b==c || c==a\n        then return\
    \ true\n    else if a==c || c==b || b==a\n        then return true\n    else if\
    \ b==c || c==a || a==b\n        then return true\n    else if a==b+c || b==c-a\
    \ || c==a+b\n        then return true\n    else if a==b+c || b==c-a || c==a+b\n\
    \        then return true\n    else if a==c-b || b==c-a || c==a-b\n        then\
    \ return true\n    else if a==c-b || b==c-a || c==a-b\n        then return true\n\
    \    else if a==b+c || b==c-a || c==a+b\n        then return true\n    else if\
    \ a==b+c || b==c-a || c==a+b\n        then return true\n    else if a==c-b ||\
    \ b==c-a || c==a-b\n        then return true\n    else if a==c-b || b==c-a ||\
    \ c==a-b\n        then return true\n    else if a==b+c || b==c-a || c==a+b\n \
    \       then return true\n    else if a==b+c || b==c-a || c==a+b\n        then\
    \ return true\n    else if a==c-b || b==c-a || c==a-b\n        then return true\n\
    \    else if a==c-b || b==c-a || c==a-b\n        then return true\n    else if\
    \ a==b+c || b==c-a || c==a+b\n        then return true\n    else if a==b+c ||\
    \ b==c-a || c==a+b\n        then return true\n    else if a==c-b || b==c-a ||\
    \ c==a-b\n        then return true\n    else if a==c-b || b==c-a || c==a-b\n \
    \       then return true\n    else if a==b+c || b==c-a || c==a+b\n        then\
    \ return true\n    else if a==b+c || b==c-a || c==a+b\n        then return true\n\
    \    else if a==c-b || b==c-a ", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c and b > a \n        then return true\n    else if c\
    \ > a and c > b \n        then return true\n    else return false\nend\n\"\"\"\
    \n\"\"\"\n    Triangle with sides a, b, c\n\"\"\"", "    if a > b and a > c \n\
    \        then return true\n    else if b > a and b > c \n        then return true\n\
    \    else if c > a and c > b \n        then return true\n    else return false\n\
    \    end\n    \"\"\"\n    \n    \"\"\"\n    Write a function that determines whether\
    \ a triangle is equilateral or not.\n    Equilateral triangles are triangles whose\
    \ sides are equal in length.\n    Example:\n            \"\"\"", "    \n    if\
    \ a==0 || b==0 || c==0 \n        true\n    elseif a==b || b==c || c==a \n    \
    \    true\n    elseif a==c || b==c || c==a \n        true\n    elseif a==b ||\
    \ b==a || a==c \n        true\n    else\n        false\n    end\nend\n\"\"\"\n\
    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if a==0 ||\
    \ b==0 || c==0 \n        then return false \n    else \n        if a>b && b>c\
    \ \n            then return true \n        else \n            if a>c && c>b \n\
    \                then return true \n            else \n                if a>b\
    \ && b>c \n                    then return true \n                else \n    \
    \                if a>c && c>b \n                        then return true \n \
    \                   else \n                        if a>b && b>c \n          \
    \                  then return true \n                        else \n        \
    \                    if a>c && c>b \n                                then return\
    \ true \n                            else \n                                return\
    \ false \n\"\"\"\n\"\"\"\n    Write a function that takes in three sides of a\
    \ triangle and determines \n    whether they form a right-angled triangle. \n\
    \    Example:\n            \"\"\"", "    if a==b or a==c or b==c then return false\
    \ \n    else return true \nend \n\"\"\"\n    \"\"\"\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    ", "    if a > b and a > c \n    then return true\n\
    \    else if b > c and b > a \n    then return true\n    else if c > a and c >\
    \ b \n    then return true\n    else return false\n    end\n    \"\"\"\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    if a==0 || b==0 || c==0\
    \ \n        then return true\n    else \n        if abs(a-b) > abs(a-c) \n   \
    \         then return false\n        else if abs(a-c) > abs(b-c) \n          \
    \  then return true\n        else return false\nend\n\"\"\"\n\"\"\"\n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    if b == 0 || c == 0 || a == 0 || b == c || a\
    \ == c \n        then return true\n    else if b == c \n        then return false\n\
    \    else if b == a \n        then return right_angle_triangle(b - 1, c, a) \n\
    \    else \n        right_angle_triangle(b - 1, c, a) || right_angle_triangle(b\
    \ - 1, a, c)\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    \n    Check if three sides form a right-angled triangle\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side a\n\
    \    b::Int64\n        Length of side b\n    c::Int64\n        Length of side\
    \ c\n    \n    Returns\n    -------\n    Bool\n        True if three sides form\
    \ a right-angled triangle, False otherwise\n    \n    Example\n    -------\n \
    \   right_angle_triangle(3, 4, 5)\n    \n    true\n    \n    right_angle_triangle(3,\
    \ 4, 6)\n    \n    false\n    \n    right_angle_triangle(3, 4, 7)\n    \n    false\n\
    \    \n    right_angle_triangle(3, 4, 8)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 9)\n    \n    false\n    \n    right_angle_triangle(3, 4, 10)\n    \n   \
    \ false\n    \n    right_angle_triangle(3, 4, 11)\n    \n    false\n    \n   \
    \ right_angle_triangle(3, 4, 12)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 13)\n    \n    false\n    \n    right_angle_triangle(3, 4, 14)\n    \n  \
    \  false\n    \n    right_angle_triangle(3, 4, 15)\n    \n    false\n    \n  \
    \  right_angle_triangle(3, 4, 16)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 17)\n    \n    false\n    \n    right_angle_triangle(3, 4, 18)\n    \n  \
    \  false\n    \n    right_angle_triangle(3, 4, 19)\n    \n    false\n    \n  \
    \  right_angle_triangle(3, 4, 20)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 21)\n    \n    false\n    \n    right_angle_triangle(3, 4, 22)\n    \n  \
    \  false\n    \n    right_angle_triangle(3, 4, 23)\n    \n    false\n    \n  \
    \  right_angle_triangle(3, 4, 24)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 25)\n    \n    false\n    \n    right_angle_triangle(3, 4, 26)\n    ", " \
    \   if a==0 || b==0 || c==0 \n        then return false\n    else if a>0 && b>0\
    \ && c>0 \n        then return true\n    else if a>0 && b>0 && c<0 \n        then\
    \ return false\n    else if a<0 && b>0 && c<0 \n        then return false\n  \
    \  else if a<0 && b>0 && c>0 \n        then return true\n    else if a<0 && b<0\
    \ && c<0 \n        then return true\n    else if a<0 && b<0 && c>0 \n        then\
    \ return false\n    else if a<0 && b<0 && c<0 \n        then return false\n  \
    \  else if a<0 && b<0 && c>0 \n        then return true\n    else return false\n\
    \    end\nend\n\"\"\"\n</cell>\n<cell>\n@test right_angle_triangle(1,1,1) == true\n\
    @test right_angle_triangle(1,1,2) == false\n@test right_angle_triangle(1,2,1)\
    \ == false\n@test right_angle_triangle(1,2,2) == true\n@test right_angle_triangle(1,3,1)\
    \ == true\n@test right_angle_triangle(1,3,2) == false\n@test right_angle_triangle(2,1,1)\
    \ == false\n@test right_angle_triangle(2,1,2) == true\n@test right_angle_triangle(2,2,1)\
    \ == true\n@test right_angle_triangle(2,2,2) == true\n@test right_angle_triangle(2,3,1)\
    \ == true\n@test right_angle_triangle(2,3,2) == true\n@test right_angle_triangle(3,1,1)\
    \ == true\n@test right_angle_triangle(3,1,2) == true\n@test right_angle_triangle(3,2,1)\
    \ == true\n@test right_angle_triangle(3,2,2) == true\n@test right_angle_triangle(3,3,1)\
    \ == true\n@test right_angle_triangle(3,3,2) == true\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that checks if a triangle is equilateral or not.\nA triangle\
    \ is equilateral if all three sides are equal, i.e. the length of the sides is\
    \ equal\nExample: \n    Triangle (1,2,3) is equilateral\n    Triangle (1,2,4)\
    \ is equilateral\n    Triangle (4,5,6) is equilateral\n    Triangle (4,5,7) is\
    \ equilateral\n    Triangle (5,6,7) is equilateral\n    Triangle (5,6,8) is equilateral\n\
    \    Triangle (6,7,8) is equilateral\n    Triangle (6,7,9) is equ", "    if a\
    \ > b and a > c then return true\n    if b > c and b > a then return true\n  \
    \  if c > a and c > b then return true\n    return false\nend\n\"\"\"\n    \"\"\
    \"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    if a == 0 || b == 0 || c == 0 \n        true\n    else\n  \
    \      if abs(b * b - 4 * a * c) >= 0 \n            true\n        else\n     \
    \       if b * b - 4 * a * c < 0 \n                false\n            else\n \
    \               if b * b + 4 * a * c < 0 \n                    false\n       \
    \         else\n                    if b * b - 4 * a * c > 0 \n              \
    \          true\n                    else\n                        false\n   \
    \     end\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    \n    Check whether the triangle is right-angled or not.\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side 1\n\
    \    b::Int64\n        Length of side 2\n    c::Int64\n        Length of side\
    \ 3\n    \n    Returns\n    -------\n    Bool\n        True if the triangle is\
    \ right-angled, False otherwise.\n    \n    Example\n    -------\n    right_angle_triangle(3,\
    \ 4, 5)\n    \n    true\n    \n    right_angle_triangle(3, 4, -5)\n    \n    false\n\
    \    \n    right_angle_triangle(3, 4, 0)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 1)\n    \n    false\n    \n    right_angle_triangle(3, 4, 2)\n    \n    false\n\
    \    \n    right_angle_triangle(3, 4, 3)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 4)\n    \n    false\n    \n    right_angle_triangle(3, 4, 5)\n    \n    false\n\
    \    \n    right_angle_triangle(3, 4, 6)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 7)\n    \n    false\n    \n    right_angle_triangle(3, 4, 8)\n    \n    false\n\
    \    \n    right_angle_triangle(3, 4, 9)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 10)\n    \n    false\n    \n    right_angle_triangle(3, 4, 11)\n    \n  \
    \  false\n    \n    right_angle_triangle(3, 4, 12)\n    \n    false\n    \n  \
    \  right_angle_triangle(3, 4, 13)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 14)\n    \n    false\n    \n    right_angle_triangle(3, 4, 15)\n    \n  \
    \  false\n    \n    right_angle_triangle(3, 4, 16)\n    \n    false\n    \n  \
    \  right_angle_triangle(3, 4, 17)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 18)\n    \n    false\n    \n    ", "    if a == 0 || b == 0 || c == 0 \n\
    \        then return false\n    else if b > a && b > c \n        then return true\n\
    \    else if c > a && c > b \n        then return true\n    else if b > c && a\
    \ > c \n        then return true\n    else if c > b && a > b \n        then return\
    \ true\n    else return false\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Check if three sides form a right-angled triangle\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side a\n\
    \    b::Int64\n        Length of side b\n    c::Int64\n        Length of side\
    \ c\n    \n    Returns\n    -------\n    Bool\n        True if a right-angled\
    \ triangle, False otherwise\n    \"\"\"\n    if a == 0 || b == 0 || c == 0 \n\
    \        then return false\n    else if b > a && b > c \n        then return true\n\
    \    else if c > a && c > b \n        then return true\n    else if b > c && a\
    \ > c \n        then return true\n    else if c > b && a > b \n        then return\
    \ true\n    else return false\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Check if three sides form a right-angled triangle\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side a\n\
    \    b::Int64\n        Length of side b\n    c::Int64\n        Length of side\
    \ c\n    \n    Returns\n    -------\n    Bool\n        True if a right-angled\
    \ triangle, False otherwise\n    \"\"\"\n    if a == 0 || b == 0 || c == 0 \n\
    \        then return false\n    else if b > a && b > c \n        then return true\n\
    \    else if c > a && c > b \n        then return true\n    else if b > c && a\
    \ > c \n        then return true\n    else if c > b && a > b \n        then return\
    \ true\n    else return false\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Check if three sides form a right-angled triangle\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side a\n\
    \    b::Int64", "    if a == 0 || b == 0 || c == 0 \n        true \n    else \n\
    \        if b > c \n            right_angle_triangle(a - 1, b, c) \n        else\
    \ \n            right_angle_triangle(a, b - 1, c) \n    end\nend\n\"\"\"\n\"\"\
    \"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n    Checks\
    \ if the three sides of a triangle form a right-angled triangle. \n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        The length of the first side.\n    b::Int64\n\
    \        The length of the second side.\n    c::Int64\n        The length of the\
    \ third side.\n    \n    Returns\n    -------\n    right_angle_triangle::Bool\n\
    \        True if the three sides form a right-angled triangle, False otherwise.\n\
    \    \n    Example\n    -------\n    right_angle_triangle(3, 4, 5)\n    \n   \
    \ true\n    \n    \"\"\"\n    if a == 0 or b == 0 or c == 0:\n        return True\n\
    \    elif b > c:\n        return right_angle_triangle(a - 1, b, c)\n    else:\n\
    \        return right_angle_triangle(a, b - 1, c)\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(3, 4, 5)\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n    Checks\
    \ if the three sides of a triangle form a right-angled triangle. \n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        The length of the first side.\n    b::Int64\n\
    \        The length of the second side.\n    c::Int64\n        The length of the\
    \ third side.\n    \n    Returns\n    -------\n    right_angle_triangle::Bool\n\
    \        True if the three sides form a right-angled triangle, False otherwise.\n\
    \    \n    Example\n    -------\n    right_angle_triangle(3, 4, 5)\n    \n   \
    \ true\n    \n    \"\"\"\n    if a == 0 or b == 0 or c == 0:\n        return True\n\
    \    elif b > c:\n        return right_angle_triangle(a - 1, b, c)\n    else:\n\
    \        return right_angle_triangle(a, b - 1, c)\nend\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(3, 4, 5)\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n    Checks\
    \ if the three sides of a triangle form a right-angled triangle. \n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        The length of the first side.\n    b::Int64\n\
    \        The length of the second side.\n", "    if a > b and a > c \n    then\
    \ return true\n    else if b > c \n    then return false\n    else if c > a \n\
    \    then return false\n    else return true\n    end\n    \"\"\"\n    \n    \"\
    \"\"\n    Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n            \"\"\"", "    \n    if a==0 || b==0 || c==0 \n    \
    \    then return false\n    else \n        if a>b && b>c \n            then return\
    \ true\n        else if a>b && c>b \n            then return false\n        else\
    \ if a>c && b>c \n            then return false\n        else if a>c && c>b \n\
    \            then return true\n        else if b>c && c>a \n            then return\
    \ false\n        else if b>c && a>c \n            then return true\n        else\
    \ if c>a && a>b \n            then return false\n        else if c>a && b>a \n\
    \            then return true\n        else return false\nend\n\"\"\"\n\"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    if b == c || a == c || b == a \n        true\n    else\n        false\n\
    \    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check whether the three sides of a triangle form a right-angled triangle.\
    \ \n    \n    Arguments\n    ---------\n    a::Int64\n        Length of the first\
    \ side.\n    b::Int64\n        Length of the second side.\n    c::Int64\n    \
    \    Length of the third side.\n    \n    Returns\n    -------\n    Bool\n   \
    \     True if the three sides form a right-angled triangle, False otherwise.\n\
    \    \n    Example\n    -------\n    right_angle_triangle(3,4,5)\n    \"\"\"\n\
    \    if b == c || a == c || b == a \n        true\n    else\n        false\n \
    \   end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check whether the three sides of a triangle form a right-angled triangle.\
    \ \n    \n    Arguments\n    ---------\n    a::Int64\n        Length of the first\
    \ side.\n    b::Int64\n        Length of the second side.\n    c::Int64\n    \
    \    Length of the third side.\n    \n    Returns\n    -------\n    Bool\n   \
    \     True if the three sides form a right-angled triangle, False otherwise.\n\
    \    \n    Example\n    -------\n    right_angle_triangle(3,4,5)\n    \"\"\"\n\
    \    if b == c || a == c || b == a \n        true\n    else\n        false\n \
    \   end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check whether the three sides of a triangle form a right-angled triangle.\
    \ \n    \n    Arguments\n    ---------\n    a::Int64\n        Length of the first\
    \ side.\n    b::Int64\n        Length of the second side.\n    c::Int64\n    \
    \    Length of the third side.\n    \n    Returns\n    -------\n    Bool\n   \
    \     True if the three sides form a right-angled triangle, False otherwise.\n\
    \    \n    Example\n    -------\n    right_angle_triangle(3,4,5)\n    \"\"\"\n\
    \    if b == c || a == c || b == a \n        true\n    else\n        false\n \
    \   end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check whether the three sides of a triangle form a right-angle", " \
    \   if a > b and a > c then return true\n    if b > c and b > a then return true\n\
    \    if c > a and c > b then return true\n    return false\nend\n    \"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    if a==0 || b==0 || c==0 \n        then return false \n    else\
    \ \n        if b > c \n            then return right_angle_triangle(a-1, b, c)\
    \ \n        else \n            if c > a \n                then return right_angle_triangle(a,\
    \ b-1, c) \n            else \n                if b == c \n                  \
    \  then return true \n                else \n                    if a > c \n \
    \                       then return right_angle_triangle(a, b, c-1) \n       \
    \             else \n                        if a > b \n                     \
    \       then return right_angle_triangle(a, b, c) \n                        else\
    \ \n                            if a > c \n                                then\
    \ return right_angle_triangle(a, b, c-1) \n                            else \n\
    \                                return false \n    end \nend \n\"\"\"\n\"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    if a==0 || b==0 || c==0\
    \ \n        true\n    else \n        if a>b and a>c \n            true\n     \
    \   else \n            if b>a and b>c \n                true\n            else\
    \ \n                if c>a and c>b \n                    true\n              \
    \  else \n                    false\n    end\nend\n\"\"\"\n</cell>\n<cell>\n@test\
    \ right_angle_triangle(3,4,5) == true\n@test right_angle_triangle(4,3,5) == true\n\
    @test right_angle_triangle(5,4,3) == true\n@test right_angle_triangle(5,6,4) ==\
    \ true\n@test right_angle_triangle(6,5,4) == true\n@test right_angle_triangle(6,7,4)\
    \ == true\n@test right_angle_triangle(7,6,4) == true\n@test right_angle_triangle(7,8,4)\
    \ == true\n@test right_angle_triangle(8,7,4) == true\n@test right_angle_triangle(8,9,4)\
    \ == true\n@test right_angle_triangle(9,8,4) == true\n@test right_angle_triangle(9,10,4)\
    \ == true\n@test right_angle_triangle(10,9,4) == true\n@test right_angle_triangle(10,11,4)\
    \ == true\n@test right_angle_triangle(11,10,4) == true\n@test right_angle_triangle(11,12,4)\
    \ == true\n@test right_angle_triangle(12,11,4) == true\n@test right_angle_triangle(12,13,4)\
    \ == true\n@test right_angle_triangle(13,12,4) == true\n@test right_angle_triangle(13,14,4)\
    \ == true\n@test right_angle_triangle(14,13,4) == true\n@test right_angle_triangle(14,15,4)\
    \ == true\n@test right_angle_triangle(15,14,4) == true\n@test right_angle_triangle(15,16,4)\
    \ == true\n@test right_angle_triangle(16,15,4) == true\n@test right_angle_triangle(16,17,4)\
    \ == true\n@test right_angle_triangle(17,16,4) == true\n@test right_angle_triangle(17,18,4)\
    \ == true\n@test right_angle_triangle(18,17,4) == true\n@test right_angle_triangle(18,19,4)\
    \ == true\n@test right_angle_triangle(19,18,4) == true\n@test right_angle_triangle(19,20,4)\
    \ == true\n@test right_angle_triangle(20,19,4) == true\n@test right_angle_triangle(20,21,4)\
    \ == true\n@test right_angle_triangle(21,20,4) == true\n@test right_angle_triangle(21,22,4)\
    \ == true\n@test right_angle_triangle(22,21,4", "    if a == 0 || b == 0 || c\
    \ == 0 \n        true\n    elseif b == 0 || c == 0 \n        false\n    elseif\
    \ b == a || c == a \n        true\n    elseif b == c || c == c \n        true\n\
    \    elseif b == a || c == a \n        false\n    elseif b == c || c == c \n \
    \       false\n    else\n        true\n    end\nend\n\"\"\"\n</cell>\n<cell>\n\
    @test right_angle_triangle(3, 4, 5) == true\n@test right_angle_triangle(3, 4,\
    \ 6) == false\n@test right_angle_triangle(3, 4, 7) == false\n@test right_angle_triangle(3,\
    \ 4, 8) == false\n@test right_angle_triangle(3, 4, 9) == false\n@test right_angle_triangle(3,\
    \ 4, 10) == false\n@test right_angle_triangle(3, 4, 11) == false\n@test right_angle_triangle(3,\
    \ 4, 12) == false\n@test right_angle_triangle(3, 4, 13) == false\n@test right_angle_triangle(3,\
    \ 4, 14) == false\n@test right_angle_triangle(3, 4, 15) == false\n@test right_angle_triangle(3,\
    \ 4, 16) == false\n@test right_angle_triangle(3, 4, 17) == false\n@test right_angle_triangle(3,\
    \ 4, 18) == false\n@test right_angle_triangle(3, 4, 19) == false\n@test right_angle_triangle(3,\
    \ 4, 20) == false\n@test right_angle_triangle(3, 4, 21) == false\n@test right_angle_triangle(3,\
    \ 4, 22) == false\n@test right_angle_triangle(3, 4, 23) == false\n@test right_angle_triangle(3,\
    \ 4, 24) == false\n@test right_angle_triangle(3, 4, 25) == false\n@test right_angle_triangle(3,\
    \ 4, 26) == false\n@test right_angle_triangle(3, 4, 27) == false\n@test right_angle_triangle(3,\
    \ 4, 28) == false\n@test right_angle_triangle(3, 4, 29) == false\n@test right_angle_triangle(3,\
    \ 4, 30) == false\n@test right_angle_triangle(3, 4, 31) == false\n@test right_angle_triangle(3,\
    \ 4, 32) == false\n@test right_angle_triangle(3, 4, 33) == false\n@test right_angle_triangle(3,\
    \ 4, 34) == false\n@test right_angle_triangle(3, 4, 35) == false\n@test right_angle_triangle(3,\
    \ 4, 36) == false\n@test right_angle_triangle(3, 4, 37) == false\n@test right_angle_triangle(3,\
    \ 4, 38) == false\n@test right_angle_triangle(3, 4, 39) == false\n@test right_angle_triangle(3,\
    \ 4, 40) == false\n@test right_angle_triangle(3, 4, 41) == false\n@test right_angle_triangle(3,\
    \ 4, 42) == false\n@test right_angle_", "    if a==0 || b==0 || c==0 \n      \
    \  then return false \n    else \n        if abs(a-b)==abs(b-c) \n           \
    \ then return true \n        else \n            if abs(a-b)>abs(b-c) \n      \
    \          then return right_angle_triangle(a-b,b,c) \n            else \n   \
    \             then return right_angle_triangle(a,b-c,c) \n        end\n    end\n\
    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check if three sides of a triangle form a right-angled triangle. \n\
    \    \n    Arguments:\n        a {Int64} -- Length of side A\n        b {Int64}\
    \ -- Length of side B\n        c {Int64} -- Length of side C\n    \n    Returns:\n\
    \        Bool -- True if a right-angled triangle, False otherwise\n    \"\"\"\n\
    \    if a==0 || b==0 || c==0 \n        then return false \n    else \n       \
    \ if abs(a-b)==abs(b-c) \n            then return true \n        else \n     \
    \       if abs(a-b)>abs(b-c) \n                then return right_angle_triangle(a-b,b,c)\
    \ \n            else \n                then return right_angle_triangle(a,b-c,c)\
    \ \n        end\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if three sides of a triangle form\
    \ a right-angled triangle. \n    \n    Arguments:\n        a {Int64} -- Length\
    \ of side A\n        b {Int64} -- Length of side B\n        c {Int64} -- Length\
    \ of side C\n    \n    Returns:\n        Bool -- True if a right-angled triangle,\
    \ False otherwise\n    \"\"\"\n    if a==0 || b==0 || c==0 \n        then return\
    \ false \n    else \n        if abs(a-b)==abs(b-c) \n            then return true\
    \ \n        else \n            if abs(a-b)>abs(b-c) \n                then return\
    \ right_angle_triangle(a-b,b,c) \n            else \n                then return\
    \ right_angle_triangle(a,b-c,c) \n        end\n    end\nend\n\"\"\"\n\"\"\"\n\
    \    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n    Check\
    \ if three sides of a triangle form a right-angled triangle. \n    \n    Arguments:\n\
    \        a {Int64} -- Length of side A\n        b {Int64} -- Length of side B\n\
    \        c {Int64} -- ", "    if a==0 || b==0 || c==0 \n        then return false\
    \ \n    else if a==b || b==c || c==a \n        then return true \n    else if\
    \ a==c || c==b || b==a \n        then return true \n    else if a==b || b==a ||\
    \ a==c \n        then return true \n    else \n        right_angle_triangle(a-1,\
    \ b, c) \n        or right_angle_triangle(a, b, c-1) \n        or right_angle_triangle(a,\
    \ b, c-1)\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    \n    Check if three sides form a right-angled triangle.\
    \ \n    \n    Arguments:\n        a {Int64} -- Length of the first side of the\
    \ triangle\n        b {Int64} -- Length of the second side of the triangle\n \
    \       c {Int64} -- Length of the third side of the triangle\n    \n    Returns:\n\
    \        Bool -- True if a right-angled triangle is formed, False otherwise\n\
    \    \n    Raises:\n        TypeError -- If any of the arguments are of incorrect\
    \ type\n        ValueError -- If any of the arguments are of incorrect value\n\
    \"\"\"\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n            \"\"\"", "    if a==0 || b==0 ||\
    \ c==0 \n        then return false \n    else \n        if a>b and a>c \n    \
    \        then return true \n        else if b>a and b>c \n            then return\
    \ true \n        else if c>a and c>b \n            then return true \n       \
    \ else return false \nend \n\"\"\"\n\"\"\"\n    \n    \n    \n\"\"\"\n    \n \
    \   \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n\
    \    ", "    if a==0 || b==0 || c==0 \n        return false\n    else if a>b+c\
    \ || b>a+c || c>b+a \n        return false\n    else \n        return true\nend\n\
    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    if a==0 || b==0 || c==0 \n        true \n    else \n        if\
    \ a>b && b>c \n            true \n        else \n            if a>c && c>b \n\
    \                true \n            else \n                if a>b && c>a \n  \
    \                  true \n                else \n                    if a>c &&\
    \ b>a \n                        true \n                    else \n           \
    \             false \n</code>\n<|/ a tags=julia |>\n<| c |>\nThis does not answer\
    \ the question. OP wants to know if three sides form a right angled triangle,\
    \ not if they are all equal (which is not an angled triangle).\n<|/ c |>\n<| c\
    \ |>\nI see what you mean. I've edited my answer to reflect this.\n<|/ c |>\n\
    <| c |>\nI see what you mean. I've edited my answer to reflect this.\n<|/ c |>\n\
    <| c |>\nI see what you mean. I've edited my answer to reflect this.\n<|/ c |>\n\
    <| c |>\nI see what you mean. I've edited my answer to reflect this.\n<|/ c |>\n\
    <| a dscore=2 |>\nI wrote a package for this: Angles.jl\n<code>\nusing Angles",
  "    if a < b and a < c \n        then return true\n    else if b < c \n       \
    \ then return false\n    else if c < a \n        then return false\n    else \n\
    \        then return true\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Check if three sides form a right-angled triangle,\
    \ return true or false\n    \n    Arguments:\n        a {Int64} -- length of side\
    \ a\n        b {Int64} -- length of side b\n        c {Int64} -- length of side\
    \ c\n    \n    Returns:\n        Bool -- True if a right-angled triangle, False\
    \ otherwise\n    \"\"\"\n    if a < b and a < c \n        then return true\n \
    \   else if b < c \n        then return false\n    else if c < a \n        then\
    \ return false\n    else \n        then return true\n    end\nend\n\"\"\"\n\"\"\
    \"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check if\
    \ three sides form a right-angled triangle, return true or false\n    \n    Arguments:\n\
    \        a {Int64} -- length of side a\n        b {Int64} -- length of side b\n\
    \        c {Int64} -- length of side c\n    \n    Returns:\n        Bool -- True\
    \ if a right-angled triangle, False otherwise\n    \"\"\"\n    if a < b and a\
    \ < c \n        then return true\n    else if b < c \n        then return false\n\
    \    else if c < a \n        then return false\n    else \n        then return\
    \ true\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    Check if three sides form a right-angled triangle, return\
    \ true or false\n    \n    Arguments:\n        a {Int64} -- length of side a\n\
    \        b {Int64} -- length of side b\n        c {Int64} -- length of side c\n\
    \    \n    Returns:\n        Bool -- True if a right-angled triangle, False otherwise\n\
    \    \"\"\"\n    if a < b and a < c \n        then return true\n    else if b\
    \ < c \n        then return false\n    else if c < a \n        then return false\n\
    \    else \n        then return true\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64):", "    \n    if b == 0 || c == 0 || a == 0 || b == c ||\
    \ a == c \n    then return true\n    else return false\n    end\n    \"\"\"\n\
    def right_angle_triangle(a: int, b: int, c: int):\n    if b == 0 or c == 0 or\
    \ a == 0 or b == c or a == c:\n        return True\n    else:\n        return\
    \ False", "    if a==0 || b==0 || c==0 \n        then return false\n    else if\
    \ a==b || b==c || c==a \n        then return true\n    else if a==c || b==c ||\
    \ c==b \n        then return false\n    else if a==b || b==a || a==c \n      \
    \  then return true\n    else return false\nend\n    \"\"\"\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    if a==0 || b==0 || c==0 \n        then return false \n\
    \    else if a>b+c \n        then return false \n    else if b>a+c \n        then\
    \ return false \n    else if c>b+a \n        then return false \n    else return\
    \ true \nend \n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if a > b and a > c \n    then\
    \ \n        if b > c \n        then \n            return true\n        else \n\
    \            return false\n    else \n        if b > c \n        then \n     \
    \       return false\n        else \n            return true\n    \"\"\"\n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a\
    \ > b and a > c \n        then return true\n    else if b > c and b > a \n   \
    \     then return true\n    else if c > a and c > b \n        then return true\n\
    \    else return false\nend\n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    if a > b and a > c \n    then return true\n    else if\
    \ b > c \n    then return false\n    else if c > a \n    then return false\n \
    \   else return true\n    end\n    \"\"\"\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    ", "    if a > b and a > c then \n        return\
    \ true\n    else if a < b and a < c then \n        return false\n    else if b\
    \ < c and b < a then \n        return false\n    else if c < a and c < b then\
    \ \n        return false\n    else \n        return true\nend\n\"\"\"\n\"\"\"\n\
    Given the lengths of the three sides of a triangle. Return True if the three\n\
    sides form a right-angled triangle, False otherwise.\nA right-angled triangle\
    \ is a triangle in which one angle is right angle or \n90 degree.\nExample: \n\
    \            \"\"\"", "    if a==0 || b==0 || c==0 \n        then return false\
    \ \n    else \n        if a>b && b>c \n            then return true \n       \
    \ else \n            if a>c && c>b \n                then return true \n     \
    \       else \n                if a>b && b>c \n                    then return\
    \ false \n                else \n                    if a>c && c>b \n        \
    \                then return false \n                    else \n             \
    \           return false \n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Check if three sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n            right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n            Check if three sides form a right-angled\
    \ triangle, False otherwise.\n            A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n            90 degree.\n            Example:\n\
    \                    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \                    Check if three sides form a right-angled triangle, False\
    \ otherwise.\n                    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n                    90 degree.\n             \
    \       Example:\n                            right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n                            Check if three sides form a right-angled\
    \ triangle, False otherwise.\n                            A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n                      \
    \      90 degree.\n                            Example:\n                    \
    \                right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n  \
    \                                  Check if three sides form a right-angled triangle,\
    \ False otherwise.\n                                    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n                      \
    \              90 degree.\n                                    Example:\n    \
    \                                        right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n                                            Check if three\
    \ sides form a right-angled triangle, False otherwise.\n                     \
    \                       A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n                                            90 degree.\n\
    \                                            Example:\n                      \
    \                              right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \                                                    Check if three sides form\
    \ a right-angled triangle, False otherwise.\n                                \
    \                    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n                                                    90 ",
  "    if a > b and a > c \n    then \n        if b > c \n        then \n        \
    \    return true \n        else \n            return false \n    else \n     \
    \   if b > c \n        then \n            return false \n        else \n     \
    \       return true \n    else \n        if c > a \n        then \n          \
    \  return false \n        else \n            return true \n    else \n       \
    \ if c > b \n        then \n            return true \n        else \n        \
    \    return false \n    else \n        return false \nend\n\"\"\"\n\"\"\"\n  \
    \  right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check if three\
    \ sides form a right-angled triangle\n    \n    Arguments\n    ---------\n   \
    \ a::Int64\n        Length of side a\n    b::Int64\n        Length of side b\n\
    \    c::Int64\n        Length of side c\n    \n    Returns\n    -------\n    Bool\n\
    \        True if a right-angled triangle, False otherwise\n\"\"\"\n\"\"\"\n  \
    \  right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check if three\
    \ sides form a right-angled triangle\n    \n    Arguments\n    ---------\n   \
    \ a::Int64\n        Length of side a\n    b::Int64\n        Length of side b\n\
    \    c::Int64\n        Length of side c\n    \n    Returns\n    -------\n    Bool\n\
    \        True if a right-angled triangle, False otherwise\n\"\"\"\n\"\"\"\n  \
    \  right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check if three\
    \ sides form a right-angled triangle\n    \n    Arguments\n    ---------\n   \
    \ a::Int64\n        Length of side a\n    b::Int64\n        Length of side b\n\
    \    c::Int64\n        Length of side c\n    \n    Returns\n    -------\n    Bool\n\
    \        True if a right-angled triangle, False otherwise\n\"\"\"\n\"\"\"\n  \
    \  right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check if three\
    \ sides form a right-angled triangle\n    \n    Arguments\n    ---------\n   \
    \ a::Int64\n        Length of side a\n    b::Int64\n        Length of side b\n\
    \    c::Int64\n        Length of side c\n    \n    Returns\n    -------\n    Bool\n\
    \        True if a right-angled triangle, False otherwise\n\"\"\"\n\"\"\"\n  \
    \  right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check if three\
    \ sides form a ", "    if a == 0 || b == 0 || c == 0 \n        return false\n\
    \    else if b == c \n        return true\n    else if b == a \n        return\
    \ true\n    else if c == a \n        return true\n    else \n        return false\n\
    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right-angled triangle. \n    \n    Arguments:\n\
    \        a: Length of side a\n        b: Length of side b\n        c: Length of\
    \ side c\n    Returns:\n        Bool: True if three sides form a right-angled\
    \ triangle, False otherwise.\n    \n    Example:\n        right_angle_triangle(3,\
    \ 4, 5)\n        right_angle_triangle(3, 4, 6)\n        right_angle_triangle(3,\
    \ 4, 7)\n        right_angle_triangle(3, 4, 8)\n        right_angle_triangle(3,\
    \ 4, 9)\n        right_angle_triangle(3, 4, 10)\n        right_angle_triangle(3,\
    \ 4, 11)\n        right_angle_triangle(3, 4, 12)\n        right_angle_triangle(3,\
    \ 4, 13)\n        right_angle_triangle(3, 4, 14)\n        right_angle_triangle(3,\
    \ 4, 15)\n        right_angle_triangle(3, 4, 16)\n        right_angle_triangle(3,\
    \ 4, 17)\n        right_angle_triangle(3, 4, 18)\n        right_angle_triangle(3,\
    \ 4, 19)\n        right_angle_triangle(3, 4, 20)\n        right_angle_triangle(3,\
    \ 4, 21)\n        right_angle_triangle(3, 4, 22)\n        right_angle_triangle(3,\
    \ 4, 23)\n        right_angle_triangle(3, 4, 24)\n        right_angle_triangle(3,\
    \ 4, 25)\n        right_angle_triangle(3, 4, 26)\n        right_angle_triangle(3,\
    \ 4, 27)\n        right_angle_triangle(3, 4, 28)\n        right_angle_triangle(3,\
    \ 4, 29)\n        right_angle_triangle(3, 4, 30)\n        right_angle_triangle(3,\
    \ 4, 31)\n        right_angle_triangle(3, 4, 32)\n        right_angle_triangle(3,\
    \ 4, 33)\n        right_angle_triangle(3, 4, 34)\n        right_angle_triangle(3,\
    \ 4, 35)\n        right_angle_triangle(3, 4, 36)\n        right_angle_triangle(3,\
    \ 4, 37)\n        right_angle_triangle(3, 4, 38)\n        right_angle_triangle(3,\
    \ 4, 39)\n        right_angle_triangle(3, 4, 40)\n        right_angle_triangle(3,\
    \ 4, 41)\n        right_angle_triangle(3, 4, 42)\n        right_angle_triangle(3,\
    \ 4, 43)\n        right_angle_triangle(3, 4, 44)\n        right_angle_triangle(3,\
    \ 4, 45)\n        right_angle_triangle(3, 4, 46)\n        right_angle_triangle(3,\
    \ 4, 47)\n        right_angle_triangle(3, 4, 48)\n        right_angle_", "   \
    \ if a == 0 || b == 0 || c == 0 \n        true \n    else \n        if b > c \n\
    \            right_angle_triangle(a - 1, b, c) \n        else \n            right_angle_triangle(a,\
    \ b - 1, c) \n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check whether the triangle is right angled\
    \ or not.\n    \n    Arguments:\n        a {Int64} -- Length of side a\n     \
    \   b {Int64} -- Length of side b\n        c {Int64} -- Length of side c\n   \
    \ \n    Returns:\n        Bool -- True if the triangle is right angled, False\
    \ otherwise.\n    \"\"\"\n    if a == 0 || b == 0 || c == 0 \n        true \n\
    \    else \n        if b > c \n            right_angle_triangle(a - 1, b, c) \n\
    \        else \n            right_angle_triangle(a, b - 1, c) \n    end\nend\n\
    \"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check whether the triangle is right angled or not.\n    \n    Arguments:\n\
    \        a {Int64} -- Length of side a\n        b {Int64} -- Length of side b\n\
    \        c {Int64} -- Length of side c\n    \n    Returns:\n        Bool -- True\
    \ if the triangle is right angled, False otherwise.\n    \"\"\"\n    if a == 0\
    \ || b == 0 || c == 0 \n        true \n    else \n        if b > c \n        \
    \    right_angle_triangle(a - 1, b, c) \n        else \n            right_angle_triangle(a,\
    \ b - 1, c) \n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check whether the triangle is right angled\
    \ or not.\n    \n    Arguments:\n        a {Int64} -- Length of side a\n     \
    \   b {Int64} -- Length of side b\n        c {Int64} -- Length of side c\n   \
    \ \n    Returns:\n        Bool -- True if the triangle is right angled, False\
    \ otherwise.\n    \"\"\"\n    if a == 0 || b == 0 || c == 0 \n        true \n\
    \    else \n        if b > c \n            right_angle_triangle(a - 1, b, c) \n\
    \        else \n            right_angle_triangle(a, b - 1, c) \n    end\nend\n\
    \"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check whether the triangle is right angled or not.\n    \n    ", " \
    \   \n    if a==0 || b==0 || c==0 \n        then return false\n    else \n   \
    \     if abs(a-b)==abs(a-c) \n            then return true\n        else \n  \
    \          if abs(a-c)==abs(b-c) \n                then return true\n        \
    \    else \n                if abs(a-b)==abs(c-b) \n                    then return\
    \ true\n                else \n                    if abs(a-c)==abs(c-b) \n  \
    \                      then return true\n                    else \n         \
    \               if abs(a-b)==abs(c-a) \n                            then return\
    \ true\n                        else \n                            if abs(a-c)==abs(b-a)\
    \ \n                                then return true\n                       \
    \     else \n                                return false\n    end\nend\n\"\"\"\
    \n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n\
    \    Check whether the triangle is right angled or not\n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        Length of first side\n    b::Int64\n   \
    \     Length of second side\n    c::Int64\n        Length of third side\n    \n\
    \    Returns\n    -------\n    Bool\n        True if triangle is right angled,\
    \ False otherwise\n\"\"\"\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n            \"\"\"", "   \
    \ if a==0 || b==0 || c==0 \n        then return false \n    else \n        if\
    \ a>b and a>c \n            then return true \n        else if b>a and b>c \n\
    \            then return true \n        else if c>a and c>b \n            then\
    \ return true \n        else return false \nend\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27859523)\n\
    <|/ c |>\n<| c |>\nI believe this does provide an answer to the question. He is\
    \ asking how to determine if three sides of a triangle are all right angles. I\
    \ believe this does exactly that.\n<|/ c |>\n<| c |>\nThe question was \"How to\
    \ determine if three sides of a triangle are all right angles?\" Your answer does\
    \ not provide that information.\n<|/ c |>\n<| c |>\nI believe this does provide\
    \ that information. He is asking how to determine if three sides of a triangle\
    \ are all right angles. I believe this does exactly that.\n<|/ c |>\n<| c |>\n\
    I believe this does exactly that. He is asking how to determine if three sides\
    \ of a triangle are all right angles. I believe this does exactly that.\n<|/ c\
    \ |>\n<| a tags=julia,trigonometry |>\n<code>", "    \n    if a > b and a > c\
    \ \n        then return true\n    else if b > c and b > a\n        then return\
    \ true\n    else if c > a and c > b\n        then return true\n    else return\
    \ false\n    end\nend\n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    \n    if a < b and a < c \n    then return true\n    else if b < c \n    then\
    \ return false\n    else if c < a \n    then return false\n    else return true\n\
    \    end\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    if a==0 || b==0 || c==0 \n        return false \n    else \n\
    \        if a>b and a>c \n            return true \n        else \n          \
    \  if b>a and b>c \n                return true \n            else \n        \
    \        if c>a and c>b \n                    return true \n                else\
    \ \n                    return false \n    \"\"\"\n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    if a == 0 || b == 0 || c == 0 \n        then return false\n   \
    \ else \n        if b > a && c > a \n            then return true\n        else\
    \ if b > a && c < a \n            then return false\n        else if b < a &&\
    \ c > a \n            then return false\n        else if b < a && c < a \n   \
    \         then return true\n        else return false\nend\n\"\"\"\n\"\"\"\n \
    \   Problem 3\n\"\"\"\n\"\"\"\n    Given the lengths of the sides of a triangle.\
    \ Return True if the triangle \n    is a right angled triangle, False otherwise.\n\
    \    A right angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n            \"\"\"", "    if a==0 || b==0 ||\
    \ c==0 \n        then return false\n    else if a==b || b==c || c==a\n       \
    \ then return true\n    else if a==c || c==b || b==a\n        then return true\n\
    \    else if b==c || c==a || a==b\n        then return true\n    else if a==b+c\
    \ || b==c-a || c==a+b\n        then return true\n    else if a==b-c || b==c+a\
    \ || c==b+a\n        then return true\n    else if a==b+c || b==c-a || c==a+b\n\
    \        then return true\n    else if a==b-c || b==c+a || c==b+a\n        then\
    \ return true\n    else if a==b+c || b==c-a || c==a+b\n        then return true\n\
    \    else if a==b-c || b==c+a || c==b+a\n        then return true\n    else if\
    \ a==b+c || b==c-a || c==a+b\n        then return true\n    else if a==b-c ||\
    \ b==c+a || c==b+a\n        then return true\n    else if a==b+c || b==c-a ||\
    \ c==a+b\n        then return true\n    else if a==b-c || b==c+a || c==b+a\n \
    \       then return true\n    else if a==b+c || b==c-a || c==a+b\n        then\
    \ return true\n    else if a==b-c || b==c+a || c==b+a\n        then return true\n\
    \    else if a==b+c || b==c-a || c==a+b\n        then return true\n    else if\
    \ a==b-c || b==c+a || c==b+a\n        then return true\n    else if a==b+c ||\
    \ b==c-a || c==a+b\n        then return true\n    else if a==b-c || b==c+a ||\
    \ c==b+a\n        then return true\n    else if a==b+c || b==c-a || c==a+b\n \
    \       then return true\n    else if a==b-c || b==c+a || c==b+a\n", "    if a==0\
    \ || b==0 || c==0 \n        return false\n    else if a==b || b==c || c==a \n\
    \        return true\n    else \n        return right_angle_triangle(a-1, b, c)\
    \ or right_angle_triangle(a, b-1, c) or right_angle_triangle(a, b, c-1)\nend\n\
    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    if a==0 || b==0 || c==0 \n      \
    \  then return true\n    else \n        if a>b and b>c \n            then return\
    \ true\n        else if a>c \n            then return false\n        else if b>c\
    \ \n            then return false\n        else return false\nend\n\"\"\"\n\"\"\
    \"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\
    \"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\
    \"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n   \
    \ \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n\
    \    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n  \
    \  \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n\
    \    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\
    \n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\
    \"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\
    \"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\
    \"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n   \
    \ \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n\
    \    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n  \
    \  \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n\
    \    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\
    \n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\
    \"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\
    \"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\
    \"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n   \
    \ \n\"\"\"\n    \n    \n\"\"\"", "    if a > b and a > c \n    then \n       \
    \ if b > c \n        then \n            return true\n        else \n         \
    \   return false\n    else \n        if b > c \n        then \n            return\
    \ false\n        else \n            return true\nend\n\"\"\"\n\"\"\"\n    Write\
    \ a function that checks if a triangle is equilateral or not.\n    Equilateral\
    \ triangle is a triangle in which all three sides are equal\n    Example:\n  \
    \          \"\"\"", "    if a == 0 || b == 0 || c == 0 \n        true \n    else\
    \ \n        if b > a && b > c \n            right_angle_triangle(b, c, a) \n \
    \       else \n            if c > a && c > b \n                right_angle_triangle(a,\
    \ b, c)\n            else \n                if b > c \n                    right_angle_triangle(a,\
    \ c, b)\n                else \n                    right_angle_triangle(a, b,\
    \ c)\n</code>\n<|/ a |>\n<| a tags=recursion,haskell,algorithm |>\n<code>\nisRightAngled\
    \ :: Int -> Int -> Int -> Bool\nisRightAngled a b c = (b - a) * (c - b) == (c\
    \ - a) * (b - c)\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if `a`,\
    \ `b`, and `c` are equal.  It also doesn't work if `a`, `b`, and `c` are negative.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if `a`, `b`, and `c` are equal. It also doesn't\
    \ work if `a`, `b`, and `c` are negative.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ if `a`, `b`, and `c` are equal. It also doesn't work if `a`, `b`, and `c` are\
    \ negative.\n<|/ c |>\n<| c |>\nIt doesn't work if `a`, `b`, and `c` are equal.\
    \ It also doesn't work if `a`, `b`, and `c` are negative.\n<|/ c |>\n<| c |>\n\
    It doesn't work if `a`, `b`, and `c` are equal. It also doesn't work if `a`, `b`,\
    \ and `c` are negative.\n<|/ c |>\n<| a |>\n<code>\nisRightAngled a b c = (b -\
    \ a) * (c - b) == (c - a) * (b - c)\n</code>\n<|/ a dscore=2 tags=recursion,haskell,algorithm\
    \ |>\n<| a tags=recursion,haskell,algorithm |>\n<code>\nisRightAngled a b c =\
    \ ((b - a) * (c - b) == (c - a) * (b - c))\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    Please don't post only code as an answer, but also provide an explanation of what\
    \ your code does and how it solves the problem of the question. Answers with an\
    \ explanation are usually more helpful and of better quality, and are more likely\
    \ to attract upvotes.\n<|/ c |>\n<| c |>\nThis doesn't work if `a`, `b`, and `c`\
    \ are equal. It also doesn't work if `a`, `b`, and `c` are ", "    if a > b and\
    \ a > c \n    then return true\n    else if b > c \n    then return false\n  \
    \  else if c > a \n    then return false\n    else return true\n    end\n    \"\
    \"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if a==0 || b==0\
    \ || c==0 \n        true\n    else \n        if abs(a-b) == abs(b-c) \n      \
    \      true\n        else \n            if abs(a-b) == abs(c-b) \n           \
    \     true\n            else \n                if abs(a-b) == abs(c-a) \n    \
    \                true\n                else \n                    false\n    \
    \    end\n    end\nend\n\"\"\"\n</cell>\n<cell>\n@test right_angle_triangle(3,4,5)\
    \ == true\n@test right_angle_triangle(4,3,5) == true\n@test right_angle_triangle(5,4,3)\
    \ == true\n@test right_angle_triangle(5,4,4) == false\n@test right_angle_triangle(5,4,5)\
    \ == false\n@test right_angle_triangle(5,5,4) == false\n@test right_angle_triangle(5,5,5)\
    \ == true\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a triangle\
    \ is equilateral or not.\nA triangle is equilateral if all three sides are equal,\
    \ i.e. the area of the triangle is equal to $\\frac{3}{2}$.\nExample: \n$\n\\\
    begin{array}{|c|c|}\n\\hline\n\\text{Input} & \\text{Output} \\\\ \\hline\n\\\
    text{A} & \\text{True} \\\\ \\hline\n\\text{B} & \\text{False} \\\\ \\hline\n\\\
    text{C} & \\text{False} \\\\ \\hline\n\\text{D} & \\text{True} \\\\ \\hline\n\\\
    end{array}\n$", "    \n    \n    if a==b and b==c \n        then return true\n\
    \    else if a==c \n        then return false\n    else if b==c \n        then\
    \ return false\n    else \n        then return true\n    \nend\n\"\"\"\n</cell>\n\
    <cell>\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n            \"\"\"", "    if a==0 || b==0 ||\
    \ c==0 \n        then return false\n    else if a==b\n        then return c==b\n\
    \    else if b==c\n        then return a==b\n    else if a==c\n        then return\
    \ b==c\n    else if a==b or b==c or c==a\n        then return true\n    else\n\
    \        error(\"Triangle is not right angled\")\n    end\nend\n\"\"\"\n\"\"\"\
    \n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n    Checks\
    \ if a triangle is right angled.\n    \n    Arguments\n    ---------\n    a::Int64\n\
    \        Length of side A\n    b::Int64\n        Length of side B\n    c::Int64\n\
    \        Length of side C\n    \n    Returns\n    -------\n    Bool\n        True\
    \ if triangle is right angled, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Checks if a triangle is right angled.\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side A\n\
    \    b::Int64\n        Length of side B\n    c::Int64\n        Length of side\
    \ C\n    \n    Returns\n    -------\n    Bool\n        True if triangle is right\
    \ angled, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Checks if a triangle is right angled.\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side A\n\
    \    b::Int64\n        Length of side B\n    c::Int64\n        Length of side\
    \ C\n    \n    Returns\n    -------\n    Bool\n        True if triangle is right\
    \ angled, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Checks if a triangle is right angled.\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side A\n\
    \    b::Int64\n        Length of side B\n    c::Int64\n        Length of side\
    \ C\n    \n    Returns\n    -------\n    Bool\n        True if triangle is right\
    \ angled, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Checks if a triangle ", "    if a == 0\
    \ || b == 0 || c == 0 \n        then return False\n    else if b > c \n      \
    \  then return right_angle_triangle(a, c - b, c)\n    else if c > a \n       \
    \ then return right_angle_triangle(a, c - b, c)\n    else if b > a \n        then\
    \ return right_angle_triangle(a, c - b, c)\n    else \n        then return True\n\
    \    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check if three sides form a right-angled triangle\n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        Length of side a\n    b::Int64\n       \
    \ Length of side b\n    c::Int64\n        Length of side c\n    \n    Returns\n\
    \    -------\n    Bool\n        True if three sides form a right-angled triangle,\
    \ False otherwise\n    \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c \n        then return false\n    else if c > a \n  \
    \      then return false\n    else return true\n    end\n    \"\"\"\n    \n  \
    \  \"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n    sides form a right-angled triangle, False otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n            \"\"\"", "    if a == 0 || b == 0 ||\
    \ c == 0 \n        then return False\n    else if b > a && b > c \n        then\
    \ return True\n    else if c > a && c > b \n        then return True\n    else\
    \ if b == c \n        then return True\n    else if b > c \n        then return\
    \ False\n    else if c > b \n        then return False\n    else if b > a && c\
    \ > a \n        then return False\n    else if c > a && b > a \n        then return\
    \ False\n    else if b > a && c > a \n        then return False\n    else if c\
    \ > a && b > a \n        then return False\n    else if b > a && c > a \n    \
    \    then return False\n    else if c > a && b > a \n        then return False\n\
    \    else if b > a && c > a \n        then return False\n    else if c > a &&\
    \ b > a \n        then return False\n    else if b > a && c > a \n        then\
    \ return False\n    else if c > a && b > a \n        then return False\n    else\
    \ if b > a && c > a \n        then return False\n    else if c > a && b > a \n\
    \        then return False\n    else if b > a && c > a \n        then return False\n\
    \    else if c > a && b > a \n        then return False\n    else if b > a &&\
    \ c > a \n        then return False\n    else if c > a && b > a \n        then\
    \ return False\n    else if b > a && c > a \n        then return False\n    else\
    \ if c > a && b > a \n        then return False\n    else if b > a && c > a \n\
    \        then return False\n    else if c > a && b > a \n        then return False\n\
    \    else if b > a && c > a \n        then return False\n    else if c > a &&\
    \ b > a \n        then return False\n    else if b > a && c > a \n        then\
    \ return False\n    else if c > a && b > a \n        then return False\n    else\
    \ if b > a && c > a \n        then return False\n    else if c > a && b > a \n\
    \        then return False\n    else if b > a && c > a \n        then return ",
  "    if a == 0 || b == 0 || c == 0 \n        true\n    else\n        if b > a &&\
    \ b > c \n            right_angle_triangle(b,c,a)\n        elseif c > a && c >\
    \ b \n            right_angle_triangle(a,b,c)\n        else\n            false\n\
    \    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right-angled triangle. \n    \n    Arguments:\n\
    \        a {Int64} -- length of side a\n        b {Int64} -- length of side b\n\
    \        c {Int64} -- length of side c\n    \n    Returns:\n        Bool -- True\
    \ if a right-angled triangle, False otherwise\n    \"\"\"\n    if a == 0 || b\
    \ == 0 || c == 0 \n        true\n    else\n        if b > a && b > c \n      \
    \      right_angle_triangle(b,c,a)\n        elseif c > a && c > b \n         \
    \   right_angle_triangle(a,b,c)\n        else\n            false\n        end\n\
    \    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right-angled triangle. \n    \n    Arguments:\n\
    \        a {Int64} -- length of side a\n        b {Int64} -- length of side b\n\
    \        c {Int64} -- length of side c\n    \n    Returns:\n        Bool -- True\
    \ if a right-angled triangle, False otherwise\n    \"\"\"\n    if a == 0 || b\
    \ == 0 || c == 0 \n        true\n    else\n        if b > a && b > c \n      \
    \      right_angle_triangle(b,c,a)\n        elseif c > a && c > b \n         \
    \   right_angle_triangle(a,b,c)\n        else\n            false\n        end\n\
    \    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right-angled triangle. \n    \n    Arguments:\n\
    \        a {Int64} -- length of side a\n        b {Int64} -- length of side b\n\
    \        c {Int64} -- length of side c\n    \n    Returns:\n        Bool -- True\
    \ if a right-angled triangle, False otherwise\n    \"\"\"\n    if a == 0 || b\
    \ == 0 || c == 0 \n        true\n    else\n        if b > a && b > c \n      \
    \      right_angle_triangle(b,c,a)\n        elseif c > a && c > b \n         \
    \   right_angle_triangle(a,b,c)\n        else\n", "    if a==0 || b==0 || c==0\
    \ \n        then return false\n    else if a==b || b==c || c==a \n        then\
    \ return true\n    else if a==c || b==c || c==a \n        then return false\n\
    \    else \n        right_angle_triangle(a-1, b, c) || right_angle_triangle(a,\
    \ b-1, c) || right_angle_triangle(a, b, c-1)\nend\n    \"\"\"\n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    if a == 0 || b == 0 || c == 0 \n        true \n   \
    \ else \n        if b > a && b > c \n            right_angle_triangle(b,a,c) \n\
    \        else \n            if c > a && c > b \n                right_angle_triangle(b,a,c)\
    \ \n            else \n                if b == c \n                    true \n\
    \                else \n                    if a > c \n                      \
    \  right_angle_triangle(b,a,c) \n                    else \n                 \
    \       right_angle_triangle(b,c,a) \nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Checks if three sides of a triangle form a right\
    \ angled triangle\n    \n    Arguments\n    ---------\n    a::Int64\n        Length\
    \ of side a\n    b::Int64\n        Length of side b\n    c::Int64\n        Length\
    \ of side c\n    \n    Returns\n    -------\n    Bool\n        True if triangle\
    \ is right angled, False otherwise\n\"\"\"\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n            \"\"\
    \"", "    if a == 0 || b == 0 || c == 0 \n        true\n    elseif b > a && b\
    \ > c \n        true\n    elseif c > a && c > b \n        true\n    elseif b ==\
    \ c \n        true\n    elseif b > c \n        false\n    elseif c > b \n    \
    \    false\n    elseif b > a && c > a \n        false\n    elseif b > a && c >\
    \ c \n        false\n    elseif b > c && c > a \n        false\n    elseif b >\
    \ c && c > c \n        false\n    else\n        true\n    end\nend\n\"\"\"\n</cell>\n\
    <cell>\n@test right_angle_triangle(5,5,5) == true\n@test right_angle_triangle(5,5,6)\
    \ == false\n@test right_angle_triangle(5,6,5) == false\n@test right_angle_triangle(5,6,6)\
    \ == true\n@test right_angle_triangle(6,5,5) == false\n@test right_angle_triangle(6,5,6)\
    \ == false\n@test right_angle_triangle(6,6,5) == false\n@test right_angle_triangle(6,6,6)\
    \ == true\n</cell>\n<text>\nExercise 5\nWrite a function that checks if a triangle\
    \ is equilateral or not.\nA triangle is equilateral if all three sides are equal,\
    \ i.e. the area of the triangle is equal to $\\frac{3}{2}$.\nExample: \n$\n\\\
    begin{array}{|c|c|}\n\\hline\n\\text{Triangle} & \\text{Equilateral} \\\n\\hline\n\
    \\text{Area} & \\text{Area}\n\\hline\n\\text{Side 1} & \\text{Side 2} & \\text{Side\
    \ 3}\n\\hline\n\\text{Side 1} & \\text{Side 2} & \\text{Side 3}\n\\hline\n\\text{Side\
    \ 1} & \\text{Side 2} & \\text{Side 3}\n\\hline\n\\text{Side 1} & \\text{Side\
    \ 2} & \\text{Side 3}\n\\hline\n\\end{array}\n$", "    if a > b and a > c then\
    \ return true\n    else if b > c then return true\n    else return false\n   \
    \ end\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if b == c \n\
    \        then return true\n    else if b > c \n        then return false\n   \
    \ else if b < c \n        then return false\n    else if b == c \n        then\
    \ return true\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return ", "    if a==b==c\n        true\n  \
    \  elseif a==b\n        false\n    elseif a==c\n        false\n    elseif b==c\n\
    \        false\n    elseif a==0\n        false\n    elseif b==0\n        false\n\
    \    elseif c==0\n        false\n    elseif a==1\n        false\n    elseif b==1\n\
    \        false\n    elseif c==1\n        true\n    elseif a==-1\n        false\n\
    \    elseif b==-1\n        false\n    elseif c==-1\n        true\n    elseif a==-2\n\
    \        false\n    elseif b==-2\n        false\n    elseif c==-2\n        true\n\
    \    else\n        false\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Check if three sides form a right-angled triangle.\
    \ \n    \n    Arguments:\n        a {Int64} -- Length of side a\n        b {Int64}\
    \ -- Length of side b\n        c {Int64} -- Length of side c\n    \n    Returns:\n\
    \        Bool -- True if three sides form a right-angled triangle, False otherwise.\n\
    \    \n    Example:\n        right_angle_triangle(5,5,5)\n        true\n     \
    \   right_angle_triangle(5,5,4)\n        false\n        right_angle_triangle(5,4,5)\n\
    \        false\n        right_angle_triangle(5,4,4)\n        false\n        right_angle_triangle(4,5,5)\n\
    \        false\n        right_angle_triangle(4,5,4)\n        false\n        right_angle_triangle(4,4,5)\n\
    \        false\n        right_angle_triangle(4,4,4)\n        true\n\"\"\"\n\"\"\
    \"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check if\
    \ three sides form a right-angled triangle. \n    \n    Arguments:\n        a\
    \ {Int64} -- Length of side a\n        b {Int64} -- Length of side b\n       \
    \ c {Int64} -- Length of side c\n    \n    Returns:\n        Bool -- True if three\
    \ sides form a right-angled triangle, False otherwise.\n    \n    Example:\n \
    \       right_angle_triangle(5,5,5)\n        true\n        right_angle_triangle(5,5,4)\n\
    \        false\n        right_angle_triangle(5,4,5)\n        false\n        right_angle_triangle(5,4,4)\n\
    \        false\n        right_angle_triangle(4,5,5)", "    if a > b and a > c\
    \ \n    then return true\n    else if b > c \n    then return false\n    else\
    \ if c > a \n    then return false\n    else return true\n    end\n    \"\"\"\n\
    \    \n    \"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n            \"\"\"", "    if a > b and a > c\
    \ \n        then return true\n    else if b > c \n        then return false\n\
    \    else if c > a \n        then return false\n    else return true\n    end\n\
    \    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    if a == 0 || b == 0 || c == 0 \n        then return false \n    else\
    \ \n        if b > c \n            then return right_angle_triangle(a - 1, b,\
    \ c) \n        else \n            if a > c \n                then return right_angle_triangle(a,\
    \ b - 1, c) \n            else \n                if b > a \n                 \
    \   then return right_angle_triangle(a, b, c-1) \n                else \n    \
    \                return true \n        end\n    end\nend\n\"\"\"\n\"\"\"\n   \
    \ right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check if three\
    \ sides form a right-angled triangle\n    \n    Arguments\n    ---------\n   \
    \ a::Int64\n        Length of side a\n    b::Int64\n        Length of side b\n\
    \    c::Int64\n        Length of side c\n    \n    Returns\n    -------\n    Bool\n\
    \        True if three sides form a right-angled triangle, False otherwise\n\"\
    \"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n \
    \   Check if three sides form a right-angled triangle\n    \n    Arguments\n \
    \   ---------\n    a::Int64\n        Length of side a\n    b::Int64\n        Length\
    \ of side b\n    c::Int64\n        Length of side c\n    \n    Returns\n    -------\n\
    \    Bool\n        True if three sides form a right-angled triangle, False otherwise\n\
    \"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right-angled triangle\n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        Length of side a\n    b::Int64\n       \
    \ Length of side b\n    c::Int64\n        Length of side c\n    \n    Returns\n\
    \    -------\n    Bool\n        True if three sides form a right-angled triangle,\
    \ False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    Check if three sides form a right-angled triangle\n   \
    \ \n    Arguments\n    ---------\n    a::Int64\n        Length of side a\n   \
    \ b::Int64\n        Length of side b\n    c::Int64\n        Length of side c\n\
    \    \n    Returns\n    -------\n    Bool\n        True if three sides form a\
    \ right-angled triangle, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Check if three ", "    if a==b or a==c or b==c\
    \ then return true\n    else return false\nend\n\"\"\"\n    \"\"\"\n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    if a > b and a > c \n \
    \   then return true \n    else if b > c \n    then return false \n    else if\
    \ c > a \n    then return false \n    else return true \nend\n\"\"\"\n\"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a==0\
    \ || b==0 || c==0 \n        return false \n    else \n        return ((b+c) ==\
    \ (abs(a-b)*abs(a-c))) \nend\n    \"\"\"\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if a==0 ||\
    \ b==0 || c==0 \n        true \n    else \n        if a>b && b>c \n          \
    \  true \n        else \n            if a>c && c>b \n                true \n \
    \           else \n                if a>b && c>a \n                    true \n\
    \                else \n                    if a>c && b>a \n                 \
    \       true \n                    else \n                        false \n   \
    \ end \nend \n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if\
    \ a == 0 || b == 0 || c == 0 \n        true\n    elseif b == 0 || c == 0 \n  \
    \      false\n    elseif b == a || c == a \n        true\n    elseif b == c ||\
    \ c == c \n        true\n    elseif b == a || c == a \n        false\n    elseif\
    \ b == c || c == c \n        false\n    else\n        true\n    end\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis is not an answer, but a comment on another answer.\
    \ Comments are for asking for clarification, not for providing answers. If you\
    \ have a question about a specific answer, then post it as a comment to the answer.\
    \ Also, please don't post answers containing only a link to another answer. Instead,\
    \ post a comment to the answer that contains the link to the other answer.\n<|/\
    \ c |>\n<| c |>\nI agree with you, however I didn't have enough reputation to\
    \ comment on the other answer. However I did post a comment on the other answer\
    \ that contained a link to the other answer. Hopefully this helps future readers.\n\
    <|/ c |>\n<| a tags=julia,trigonometry |>\nThe answer by is correct, but I thought\
    \ I'd add some explanation as to why it works.\nThe triangle is defined by three\
    \ points: A, B, and C. These points form a triangle. Let's say that A and B are\
    \ at coordinates (0,0) and (1,0). Similarly, C is at coordinates (0,1) and (1,1).\
    \ These points form a triangle with vertices (0,0), (0,1), (1,0) and (1,1).\n\
    The triangle is right-angled if and only if AB and BC are the same point. Since\
    \ AB and BC are the same point, the triangle is right-angled if and only if AB\
    \ and CA are the same point. Since AB and CA are the same point, the triangle\
    \ is right-angled if and only if AC and BC are the same point. Since AC and BC\
    \ are the same point, the triangle is right-angled if and only if AC and CA are\
    \ the same point. Since AC and CA are the same point, the triangle is right-angled.\n\
    The triangle is right-angled if and only if AB and CA are the same point. Since\
    \ AB and CA are the same point, the triangle is right-angled if and only if AC\
    \ and BC are the same point. Since AC and BC are the same point, the triangle\
    \ is right-angled if and only if AC and CA are the same point. Since AC and CA\
    \ are the same point", "    if a==0 || b==0 || c==0 \n        true \n    else\
    \ \n        if a>b && b>c \n            true \n        else \n            if a>c\
    \ && c>b \n                true \n            else \n                if a>b &&\
    \ b>c \n                    true \n                else \n                   \
    \ false\n</code>\n<|/ a tags=julia,trigonometry |>\n<| a dscore=0 |>\n<code>",
  "    if a==0 || b==0 || c==0 \n        true \n    else \n        if a>b && b>c \n\
    \            right_angle_triangle(a-b, c+b, c-a) \n        else \n           \
    \ if a>c && c>b \n                right_angle_triangle(a-c, b+c, c+a) \n     \
    \       else \n                if b>c && c>a \n                    right_angle_triangle(a-c,\
    \ b-c, c+a) \n                else \n                    false \n        end\n\
    \    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n        if a==0 || b==0 || c==0 \n            true \n        else \n     \
    \       if a>b && b>c \n                right_angle_triangle(a-b, c+b, c-a) \n\
    \            else \n                if a>c && c>b \n                    right_angle_triangle(a-c,\
    \ b+c, c+a) \n                else \n                    if b>c && c>a \n    \
    \                    right_angle_triangle(a-c, b-c, c+a) \n                  \
    \  else \n                        false \n                end\n            end\n\
    \        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool \n        if a==0 || b==0 || c==0 \n            true \n    \
    \    else \n            if a>b && b>c \n                right_angle_triangle(a-b,\
    \ c+b, c-a) \n            else \n                if a>c && c>b \n            \
    \        right_angle_triangle(a-c, b+c, c+a) \n                else \n       \
    \             if b>c && c>a \n                        right_angle_triangle(a-c,\
    \ b-c, c+a) \n                    else \n                        false \n    \
    \            end\n            end\n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n        if a==0 || b==0 || c==0 \n            true\
    \ \n        else \n            if a>b && b>c \n                right_angle_triangle(a-b,\
    \ c+b, c-a) \n            else \n                if a>c && c>b \n            \
    \        right_angle_triangle(a-c, b+c, c+a) \n                else \n       \
    \             if b>c && c>a \n                        right_angle_triangle(a-c,\
    \ b-c, c+a) \n                    else \n                        false \n    \
    \            end\n            end\n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n        if a==0 || ", "    if a==0 || b==0 || c==0\
    \ \n        return false\n    else \n        return ((b > 0) && (c > 0)) || ((b\
    \ > 0) && (c < 0)) || ((b < 0) && (c > 0)) || ((b < 0) && (c < 0)) \nend\n\"\"\
    \"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n   \
    \ Check if three sides form a right-angled triangle\n    \n    Arguments\n   \
    \ ---------\n    a::Int64\n        Length of side a\n    b::Int64\n        Length\
    \ of side b\n    c::Int64\n        Length of side c\n    \n    Returns\n    -------\n\
    \    Bool\n        True if three sides form a right-angled triangle, False otherwise\n\
    \    \n    Example\n    -------\n    right_angle_triangle(5,4,3)\n    true\n \
    \   right_angle_triangle(5,4,4)\n    false\n    right_angle_triangle(5,4,5)\n\
    \    false\n    right_angle_triangle(5,5,5)\n    true\n    right_angle_triangle(5,5,4)\n\
    \    false\n    right_angle_triangle(5,5,3)\n    false\n    right_angle_triangle(5,5,2)\n\
    \    false\n    right_angle_triangle(5,5,1)\n    false\n    right_angle_triangle(5,4,0)\n\
    \    false\n    right_angle_triangle(5,4,-1)\n    false\n    right_angle_triangle(5,4,-2)\n\
    \    false\n    right_angle_triangle(5,4,-3)\n    false\n    right_angle_triangle(5,4,-4)\n\
    \    false\n    right_angle_triangle(5,4,-5)\n    false\n    right_angle_triangle(5,4,-6)\n\
    \    false\n    right_angle_triangle(5,4,-7)\n    false\n    right_angle_triangle(5,4,-8)\n\
    \    false\n    right_angle_triangle(5,4,-9)\n    false\n    right_angle_triangle(5,4,-10)\n\
    \    false\n    right_angle_triangle(5,4,-11)\n    false\n    right_angle_triangle(5,4,-12)\n\
    \    false\n    right_angle_triangle(5,4,-13)\n    false\n    right_angle_triangle(5,4,-14)\n\
    \    false\n    right_angle_triangle(5,4,-15)\n    false\n    right_angle_triangle(5,4,-16)\n\
    \    false\n    right_angle_triangle(5,4,-17)\n    false\n    right_angle_triangle(5,4,-18)\n\
    \    false\n    right_angle_triangle(5,4,-19)\n    ", "    if a==0 || b==0 ||\
    \ c==0 \n        return false\n    else \n        return ((b - a) * (c - b)) /\
    \ (2 * a * c) == -1\nend\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a==0 ||\
    \ b==0 || c==0 \n        then return false \n    else \n        if a>b and a>c\
    \ \n            then return true \n        else if b>a and b>c \n            then\
    \ return true \n        else if c>a and c>b \n            then return true \n\
    \        else return false \nend\n    \"\"\"\n    \n    \"\"\"\n    Write a function\
    \ that checks if a triangle is equilateral or not.\n    Equilateral triangle is\
    \ a triangle in which all three sides are equal\n    Example:\n            \"\"\
    \"", "    if a == 0 || b == 0 || c == 0 \n        then return false \n    else\
    \ \n        if b > a && b > c \n            then return true \n        else if\
    \ c > a && c > b \n            then return true \n        else \n            if\
    \ a > b && a > c \n                then return true \n            else \n    \
    \            if b > c && b > a \n                    then return true \n     \
    \           else \n                    if c > a && c > b \n                  \
    \      then return true \n                    else \n                        false\
    \ \n    end \nend \n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    if a==b or a==c or b==c then return true\n    else return false\nend\n\"\"\"\
    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if a==0 || b==0 || c==0 \n        true\n    elseif a==b\n        true\n   \
    \ elseif b==c\n        true\n    elseif a==c || b==c || c==c\n        true\n \
    \   else\n        false\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Check if three sides form a right angled triangle\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side a\n\
    \    b::Int64\n        Length of side b\n    c::Int64\n        Length of side\
    \ c\n    \n    Returns\n    -------\n    Bool\n        True if three sides form\
    \ a right angled triangle, False otherwise\n    \"\"\"\n    if a==0 || b==0 ||\
    \ c==0 \n        true\n    elseif a==b\n        true\n    elseif b==c\n      \
    \  true\n    elseif a==c || b==c || c==c\n        true\n    else\n        false\n\
    \    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right angled triangle\n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        Length of side a\n    b::Int64\n       \
    \ Length of side b\n    c::Int64\n        Length of side c\n    \n    Returns\n\
    \    -------\n    Bool\n        True if three sides form a right angled triangle,\
    \ False otherwise\n    \"\"\"\n    if a==0 || b==0 || c==0 \n        true\n  \
    \  elseif a==b\n        true\n    elseif b==c\n        true\n    elseif a==c ||\
    \ b==c || c==c\n        true\n    else\n        false\n    end\nend\n\"\"\"\n\"\
    \"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check\
    \ if three sides form a right angled triangle\n    \n    Arguments\n    ---------\n\
    \    a::Int64\n        Length of side a\n    b::Int64\n        Length of side\
    \ b\n    c::Int64\n        Length of side c\n    \n    Returns\n    -------\n\
    \    Bool\n        True if three sides form a right angled triangle, False otherwise\n\
    \    \"\"\"\n    if a==0 || b==0 || c==0 \n        true\n    elseif a==b\n   \
    \     true\n    elseif b==c\n", "    if a==0 || b==0 || c==0 \n        true \n\
    \    else \n        if a>b and a>c \n            true \n        else \n      \
    \      if b>a and b>c \n                true \n            else \n           \
    \     if c>a and c>b \n                    true \n                else \n    \
    \                false \n    end \nend \n\"\"\"\n</cell>\n<cell>\n\"\"\"\n   \
    \ Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n            \"\"\"", "    if a==0 || b==0 || c==0 \n        true\
    \ \n    else \n        if b > c \n            right_angle_triangle(a-1, c, b)\
    \ \n        else \n            right_angle_triangle(a, b-1, c) \n    end\nend\n\
    \"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool \n\
    \        if a==0 || b==0 || c==0 \n            true \n        else \n        \
    \    if b > c \n                right_angle_triangle(a-1, c, b) \n           \
    \ else \n                right_angle_triangle(a, b-1, c) \n            end\n \
    \       end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool \n        if a==0 || b==0 || c==0 \n            true \n    \
    \    else \n            if b > c \n                right_angle_triangle(a-1, c,\
    \ b) \n            else \n                right_angle_triangle(a, b-1, c) \n \
    \           end\n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n        if a==0 || b==0 || c==0 \n            true\
    \ \n        else \n            if b > c \n                right_angle_triangle(a-1,\
    \ c, b) \n            else \n                right_angle_triangle(a, b-1, c) \n\
    \            end\n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n        if a==0 || b==0 || c==0 \n            true\
    \ \n        else \n            if b > c \n                right_angle_triangle(a-1,\
    \ c, b) \n            else \n                right_angle_triangle(a, b-1, c) \n\
    \            end\n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n        if a==0 || b==0 || c==0 \n            true\
    \ \n        else \n            if b > c \n                right_angle_triangle(a-1,\
    \ c, b) \n            else \n                right_angle_triangle(a, b-1, c) \n\
    \            end\n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n        if a==0 || b==0 || c==0 \n            true\
    \ \n        else \n            if b > c \n                right_angle_triangle(a-1,\
    \ c, b) \n            else \n                right_angle_triangle(a, b-1, c) \n\
    \            end\n        end\n    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64):", "    if a > b and a > c \n        then return true\n\
    \    else if b > c and b > a \n        then return true\n    else if c > a and\
    \ c > b \n        then return true\n    else return false\nend\n\"\"\"\n\"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a > b and a >\
    \ c \n    then return true\n    else if b > c \n    then return false\n    else\
    \ if c > a \n    then return false\n    else return true\n    end\n    \"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if a > b and a > c \n        then return true\n    else if b > c \n       \
    \ then return false\n    else if c > a \n        then return false\n    else return\
    \ true\nend\n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    if a > b and a > c \n    then \n        if b > c \n \
    \       then \n            true\n        else \n            false\n    else \n\
    \        if c > a \n        then \n            true\n        else \n         \
    \   false\nend\n    \"\"\"\n    \n    \"\"\"\n    Write a function that checks\
    \ if a triangle is equilateral or is\n    scalene.\n    Equilateral triangles\
    \ are triangles whose sides are equal in length.\n    Scalene triangles are triangles\
    \ whose sides are of different lengths.\n    Example:\n            \"\"\"", " \
    \   if a == 0 || b == 0 || c == 0 \n        then return false\n    else if b ==\
    \ c \n        then return true\n    else if b == a \n        then return true\n\
    \    else if c == a \n        then return true\n    else \n        return false\n\
    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right-angled triangle. \n    \n    Arguments:\n\
    \        a {Int64} -- The length of the first side\n        b {Int64} -- The length\
    \ of the second side\n        c {Int64} -- The length of the third side\n    \n\
    \    Returns:\n        Bool -- True if the three sides form a right-angled triangle,\
    \ False otherwise.\n    \"\"\"\n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return false\n    else if b == c \n        then return true\n    else if b ==\
    \ a \n        then return true\n    else if c == a \n        then return true\n\
    \    else \n        return false\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Check if three sides form a right-angled triangle.\
    \ \n    \n    Arguments:\n        a {Int64} -- The length of the first side\n\
    \        b {Int64} -- The length of the second side\n        c {Int64} -- The\
    \ length of the third side\n    \n    Returns:\n        Bool -- True if the three\
    \ sides form a right-angled triangle, False otherwise.\n    \"\"\"\n    if a ==\
    \ 0 || b == 0 || c == 0 \n        then return false\n    else if b == c \n   \
    \     then return true\n    else if b == a \n        then return true\n    else\
    \ if c == a \n        then return true\n    else \n        return false\nend\n\
    \"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right-angled triangle. \n    \n    Arguments:\n\
    \        a {Int64} -- The length of the first side\n        b {Int64} -- The length\
    \ of the second side\n        c {Int64} -- The length of the third side\n    \n\
    \    Returns:\n        Bool -- True if the three sides form a right-angled triangle,\
    \ False otherwise.\n    \"\"\"\n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return false\n    else if b == c \n        then return true\n    else if b ==\
    \ a \n        then return true\n    else if ", "    if a==0 || b==0 || c==0 \n\
    \        then return false \n    else \n        if a>b and a>c \n            then\
    \ return true \n        else if b>a and b>c \n            then return true \n\
    \        else if c>a and c>b \n            then return true \n        else \n\
    \            return false \nend \n\"\"\"\n\"\"\"\n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if a == 0 || b\
    \ == 0 || c == 0 \n        then return false \n    else \n        if b > a &&\
    \ c > a \n            then return true \n        else \n            if a > c \n\
    \                then return true \n            else \n                if b >\
    \ c \n                    then return true \n                else \n         \
    \           if a == c \n                        then return true \n          \
    \          else \n                        if a > b \n                        \
    \    then return true \n                        else \n                      \
    \      if b > c \n                                then return true \n        \
    \                    else \n                                return false \n\"\"\
    \"\n\"\"\"\n    Write a function that takes in a list of integers and returns\
    \ the sum of all \n    of the numbers in the list. \n    Example:\n          \
    \  \"\"\"", "    if a == 0 || b == 0 || c == 0 \n        true \n    else \n  \
    \      if b > a && b > c \n            true \n        else \n            if c\
    \ > a && c > b \n                true \n            else \n                if\
    \ b == c \n                    true \n                else \n                \
    \    if a == b \n                        true \n                    else \n  \
    \                      if a == c \n                            true \n       \
    \                 else \n                            if b == c \n            \
    \                    true \n                            else \n              \
    \                  return false \n    end \nend \n\"\"\"\n\"\"\"\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a\
    \ < b and a < c \n        then return true\n    else if b < c \n        then return\
    \ false\n    else if c < a \n        then return false\n    else return true\n\
    end\n\"\"\"\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    if a==0 || b==0 || c==0 \n        then return false\n    else\
    \ if a==b || b==c || c==a \n        then return true\n    else if a==c || c==b\
    \ || b==a \n        then return true\n    else if a==b+c || b==c+a || c==a+b \n\
    \        then return true\n    else if a==b+c || b==c-a || c==a-b \n        then\
    \ return true\n    else if a==c-b || c==b-a || b==a-c \n        then return true\n\
    \    else return false\n    end\n    \"\"\"\n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    if a == 0 || b == 0 || c == 0 \n        return true\n    else \n\
    \        return (b * b - 4 * a * c) >= 0\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check whether the triangle is right-angled.\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side A\n\
    \    b::Int64\n        Length of side B\n    c::Int64\n        Length of side\
    \ C\n    \n    Returns\n    -------\n    Bool\n        True if the triangle is\
    \ right-angled, False otherwise.\n    \"\"\"\n    \n    if a == 0 || b == 0 ||\
    \ c == 0 \n        return true\n    else \n        return (b * b - 4 * a * c)\
    \ >= 0\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    \n    Check whether the triangle is right-angled.\n   \
    \ \n    Arguments\n    ---------\n    a::Int64\n        Length of side A\n   \
    \ b::Int64\n        Length of side B\n    c::Int64\n        Length of side C\n\
    \    \n    Returns\n    -------\n    Bool\n        True if the triangle is right-angled,\
    \ False otherwise.\n    \"\"\"\n    \n    if a == 0 || b == 0 || c == 0 \n   \
    \     return true\n    else \n        return (b * b - 4 * a * c) >= 0\n    end\n\
    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check whether the triangle is right-angled.\n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        Length of side A\n    b::Int64\n       \
    \ Length of side B\n    c::Int64\n        Length of side C\n    \n    Returns\n\
    \    -------\n    Bool\n        True if the triangle is right-angled, False otherwise.\n\
    \    \"\"\"\n    \n    if a == 0 || b == 0 || c == 0 \n        return true\n \
    \   else \n        return (b * b - 4 * a * c) >= 0\n    end\nend\n\"\"\"\n\"\"\
    \"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n    Check\
    \ whether the triangle is right-angled.\n    \n    Arguments\n    ---------\n\
    \    a::Int64\n        Length of side A\n    b::Int64\n        Length of side\
    \ B\n    c::Int64\n        Length of side C\n    \n    Returns\n    -------\n\
    \    Bool\n        True if the tri", "    if a==0 || b==0 || c==0 \n        true\n\
    \    else \n        if b > c \n            right_angle_triangle(b, c-a, a)\n \
    \       else \n            right_angle_triangle(c-a, b-a, a)\nend\n\"\"\"\n\"\"\
    \"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n    Check\
    \ whether the triangle is right angled or not\n    \n    Arguments\n    ---------\n\
    \    a::Int64\n        Length of the first side\n    b::Int64\n        Length\
    \ of the second side\n    c::Int64\n        Length of the third side\n    \n \
    \   Returns\n    -------\n    Bool\n        True if triangle is right angled,\
    \ False otherwise\n\"\"\"\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n            \"\"\"", "   \
    \ if a==0 || b==0 || c==0 \n        then return false \n    else \n        if\
    \ b > c \n            then return right_angle_triangle(a-1, b, c) \n        else\
    \ \n            if a > c \n                then return right_angle_triangle(a,\
    \ b-1, c) \n            else \n                if b > a \n                   \
    \ then return right_angle_triangle(a, b, c-1)\n                else \n       \
    \             return true\n    \"\"\"\n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    if a > b and a > c \n        then return true\n   \
    \ else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else \n        then return true\n    end\nend\n\"\"\"\n\"\"\
    \"\n    Triangle with sides a, b and c\n\"\"\"", "    if a==0 || b==0 || c==0\
    \ \n        then return false \n    else \n        if a>b && b>c \n          \
    \  then return true \n        else if a>c && c>b \n            then return true\
    \ \n        else if a>b && c>a \n            then return true \n        else if\
    \ a>c && b>a \n            then return true \n        else return false \nend\
    \ \n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if a==0 || b==0\
    \ || c==0 \n        return false\n    if a==b || b==c || c==a \n        return\
    \ true\n    if a==c || c==b || b==a \n        return true\n    if a==b || b==a\
    \ || a==c \n        return true\n    return false\nend\n            \"\"\"\n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    if a > b and a > c \n    then return true\n    else if b > c \n \
    \   then return false\n    else if c > a \n    then return false\n    else return\
    \ true\n    end\n    \"\"\"\n    \n    \"\"\"\n    Write a function that checks\
    \ if a triangle is equilateral or is\n    scalene.\n    Example:\n           \
    \ \"\"\"", "    if a > b and a > c \n    then return true\n    else if b > c \n\
    \    then return false\n    else if c > a \n    then return false\n    else return\
    \ true\n    end\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    if a==b or a==c or b==c \n        true\n    else\n\
    \        false\n    end\nend\n    \"\"\"\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    if a > b and a > c \n    then return true\n    else if\
    \ b > c \n    then return false\n    else if c > a \n    then return false\n \
    \   else return true\n    end\n    \"\"\"\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    ", "    if a == 0 || b == 0 || c == 0 \n  \
    \      then return false \n    else \n        if b > a && b > c \n           \
    \ then return true \n        else \n            if a > c \n                then\
    \ return true \n            else \n                if b > c \n               \
    \     then return true \n                else \n                    return false\
    \ \n    end \nend \n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if a==0 || b==0 || c==0 \n  \
    \      return true\n    if a==b\n        return true\n    if a==c\n        return\
    \ true\n    if b==c\n        return true\n    if a==b+c\n        return true\n\
    \    if a==b-c\n        return true\n    if a==b+c\n        return true\n    return\
    \ false\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    if a == 0 || b == 0 || c == 0 \n    then return false\
    \ \n    else \n        if b > a && c > b \n        then return true \n       \
    \ else if b > a && c < b \n        then return false \n        else if b < a &&\
    \ c > b \n        then return false \n        else if b < a && c < b \n      \
    \  then return true \n        else return false \n    end\nend\n\"\"\"\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a triangle is equilateral\
    \ or not.\nA triangle is equilateral if all three sides are equal\nExample: \n\
    \    triangle(1,2,3) -> true\n    triangle(1,2,4) -> false\n    triangle(1,1,3)\
    \ -> false\n    triangle(1,1,4) -> true\n    triangle(1,2,1) -> false\n    triangle(1,1,1)\
    \ -> true\n    triangle(1,1,2) -> false\n    triangle(1,2,2) -> false\n    triangle(1,2,3)\
    \ -> false\n    triangle(1,2,4) -> false\n    triangle(1,1,2) -> false\n    triangle(1,1,3)\
    \ -> false\n    triangle(1,1,4) -> false\n    triangle(1,1,1) -> false\n    triangle(1,1,2)\
    \ -> false\n    triangle(1,1,3) -> false\n    triangle(1,1,4) -> false\n    triangle(1,1,1)\
    \ -> false\n    triangle(1,1,2) -> false\n    triangle(1,1,3) -> false\n    triangle(1,1,4)\
    \ -> false\n    triangle(1,1,1) -> false\n    triangle(1,1,2) -> false\n    triangle(1,1,3)\
    \ -> false\n    triangle(1,1,4) -> false\n    triangle(1,1,1) -> false\n    triangle(1,1,2)\
    \ -> false\n    triangle(1,1,3) -> false\n    triangle(1,1,4) -> false\n    triangle(1,1,1)\
    \ -> false\n    triangle(1,1,2) -> false\n    triangle(1,1,3) -> false\n    triangle(1,1,4)\
    \ -> false\n    triangle(1,1,1) -> false\n    triangle(1,1,2) -> false\n    triangle(1,1,3)\
    \ -> false\n    triangle(1,1,4) -> false\n    triangle(1,1,1) -> false\n    triangle(1,1,2)\
    \ -> false\n    triangle(1,1,3) -> false\n    triangle(1,1,4) -> false\n    triangle(1,1,1)\
    \ -> false\n    triangle(1,1,2) -> false\n    triangle(1,1,3) -> false\n    triangle(1,1,4)\
    \ -> false\n    triangle(1,1,1) -> false\n    triangle(1,1,2) -> false\n    triangle(1,1,3)\
    \ -> false", "    if a == 0 || b == 0 || c == 0 \n        then return false\n\
    \    else if b > a && c > a \n        then return true\n    else if b > a && c\
    \ < a \n        then return false\n    else if b < a && c > a \n        then return\
    \ false\n    else if b < a && c < a \n        then return true\n    else \n  \
    \      right_angle_triangle(a-1, b, c) || right_angle_triangle(a, b-1, c) || right_angle_triangle(a,\
    \ b, c-1)\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a > b and\
    \ a > c \n    then return true\n    else if b > c \n    then return false\n  \
    \  else if c > a \n    then return false\n    else return true\n    end\n    \"\
    \"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    if a==0 || b==0 || c==0 \n        then return false\n    else if a==b || b==c\
    \ || c==a \n        then return true\n    else if a==c || b==c || c==a \n    \
    \    then return true\n    else if a==b+c || b==c+a || c==a+b \n        then return\
    \ true\n    else return false\nend\n\"\"\"\n\"\"\"\n    Write a function that\
    \ takes in three points and determines if they form a \n    right-angled triangle.\
    \ \n    Example:\n            \"\"\"", "    if a > b and a > c \n    then return\
    \ true \n    else if b > c \n    then return false \n    else if c > a \n    then\
    \ return false \n    else return true \n    end\n    \"\"\"\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a==0 || b==0 ||\
    \ c==0 \n        return false\n    if a==b || b==c || c==a \n        return true\n\
    \    if a==c || c==b || b==a \n        return true\n    if a==a || b==b || c==c\
    \ \n        return true\n    return false\nend\n\"\"\"\n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a\
    \ < b and a < c \n        then return true\n    else if b < c \n        then return\
    \ false\n    else if c < a \n        then return false\n    else return true\n\
    end\n\"\"\"\n\"\"\"\n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n\
    \    \n\"\"\"\n    \n    \n    \n\"\"\"\n    ", "    if a==0 || b==0 || c==0 \n\
    \        then return false \n    else \n        if abs(a-b) == abs(b-c) \n   \
    \         then return true \n        else \n            if abs(a-b) == abs(c-b)\
    \ \n                then return true \n            else \n                if abs(a-b)\
    \ == abs(c-a) \n                    then return true \n                else \n\
    \                    if abs(a-b) == abs(c-b) \n                        then return\
    \ true \n                    else \n                        false \n        end\n\
    \    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Check if three sides form a right-angled triangle, return true if they do,\
    \ \n    else return false.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n        \"\"\"",
  "    if a == 0 || b == 0 || c == 0 \n        then return false \n    else \n   \
    \     if abs(b * b - 4 * a * c) >= 0 \n            then return true \n       \
    \ else \n            if b * b - 4 * a * c < 0 \n                then return false\
    \ \n            else \n                if b * b + 4 * a * c < 0 \n           \
    \         then return false \n                else \n                    if b\
    \ * b - 4 * a * c > 0 \n                        then return true \n          \
    \          else \n                        right_angle_triangle(a - 1, b, c) \n\
    \                        right_angle_triangle(a, b - 1, c) \n                \
    \        right_angle_triangle(a, b, c-1) \n                        right_angle_triangle(a\
    \ - 1, b - 1, c) \n                        right_angle_triangle(a - 1, b, c-1)\
    \ \n                        right_angle_triangle(a, b - 1, c - 1) \n         \
    \               right_angle_triangle(a - 1, b - 1, c - 1) \n                 \
    \       right_angle_triangle(a, b - 1, c - 1) \n                        right_angle_triangle(a\
    \ - 1, b - 1, c - 1) \n                        right_angle_triangle(a, b - 1,\
    \ c - 1) \n                        right_angle_triangle(a - 1, b - 1, c - 1) \n\
    \                        right_angle_triangle(a, b - 1, c - 1) \n            \
    \            right_angle_triangle(a - 1, b - 1, c - 1) \n                    \
    \    right_angle_triangle(a, b - 1, c - 1) \n                        right_angle_triangle(a\
    \ - 1, b - 1, c - 1) \n                        right_angle_triangle(a, b - 1,\
    \ c - 1) \n                        right_angle_triangle(a - 1, b - 1, c - 1) \n\
    \                        right_angle_triangle(a, b - 1, c - 1) \n            \
    \            right_angle_triangle(a - 1, b - 1, c - 1) \n                    \
    \    right_angle_triangle(a, b - 1, c - 1) \n                        right_angle_triangle(a\
    \ - 1, b - 1, c - 1) \n                        right_angle_triangle(a, b - 1,\
    \ c - 1) \n                        right_angle_triangle(a - 1, b - 1, c - 1) \n\
    \                        right_angle_triangle(a, b - 1, c - 1) \n            \
    \            right_angle_triangle(a - 1, b - 1, c - 1) \n                    \
    \    right_angle_triangle(a, b - 1, c - 1) \n                        right_angle_triangle(a\
    \ - 1, b - 1, c - 1) \n                        right_angle_triangle(a, b - 1,\
    \ c - 1) \n                        right_angle_triangle(a - 1, b - 1, c - 1) \n\
    \                        right_angle_triangle(a, b - 1, c - 1) \n            \
    \            right_angle_triangle(a - 1, b - 1, c - 1) \n                    \
    \    right_angle_triangle(a, b - 1, c - 1) \n                        right_angle_triangle(a\
    \ - 1, b - 1, c - 1) \n                        right_angle_triangle(a, b - 1,\
    \ c - 1) \n                        right_angle_triangle(a - 1, b - 1, c - 1) \n\
    \                        right_angle_triangle(a, b - 1, c - 1) \n            \
    \            right_angle_triangle(a - 1, b - 1, c - 1) \n                    \
    \    right_", "    if a > b and a > c \n    then \n        if b > c \n       \
    \ then \n            true\n        else \n            false\n    else \n     \
    \   if b > c \n        then \n            false\n        else \n            true\n\
    \    end\nend\n\"\"\"\n</cell>\n<cell>\n@test right_angle_triangle(3,4,5) == true\n\
    @test right_angle_triangle(4,5,6) == false\n@test right_angle_triangle(5,6,7)\
    \ == false\n@test right_angle_triangle(6,7,8) == true\n@test right_angle_triangle(7,8,9)\
    \ == false\n@test right_angle_triangle(8,9,10) == true\n@test right_angle_triangle(9,10,11)\
    \ == false\n@test right_angle_triangle(10,11,12) == true\n@test right_angle_triangle(11,12,13)\
    \ == false\n@test right_angle_triangle(12,13,14) == true\n@test right_angle_triangle(13,14,15)\
    \ == false\n@test right_angle_triangle(14,15,16) == true\n@test right_angle_triangle(15,16,17)\
    \ == false\n@test right_angle_triangle(16,17,18) == true\n@test right_angle_triangle(17,18,19)\
    \ == false\n@test right_angle_triangle(18,19,20) == true\n@test right_angle_triangle(19,20,21)\
    \ == false\n@test right_angle_triangle(20,21,22) == true\n@test right_angle_triangle(21,22,23)\
    \ == false\n@test right_angle_triangle(22,23,24) == true\n@test right_angle_triangle(23,24,25)\
    \ == false\n@test right_angle_triangle(24,25,26) == true\n@test right_angle_triangle(25,26,27)\
    \ == false\n@test right_angle_triangle(26,27,28) == true\n@test right_angle_triangle(27,28,29)\
    \ == false\n@test right_angle_triangle(28,29,30) == true\n@test right_angle_triangle(29,30,31)\
    \ == false\n@test right_angle_triangle(30,31,32) == true\n@test right_angle_triangle(31,32,33)\
    \ == false\n@test right_angle_triangle(32,33,34) == true\n@test right_angle_triangle(33,34,35)\
    \ == false\n@test right_angle_triangle(34,35,36) == true\n@test right_angle_triangle(35,36,37)\
    \ == false\n@test right_angle_triangle(36,37,38) == true\n@test right_angle_triangle(37,38,39)\
    \ == false\n@test right_angle_triangle(38,39,40) == true\n@test right_angle_triangle(39,40,41)\
    \ == false\n@test right_angle_", "    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\n    \"\"\"\n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    \n    if a==0 || b==0 ||\
    \ c==0 \n        then return false \n    else \n        if a>b and b>c \n    \
    \        then return true \n        else if a>c \n            then return false\
    \ \n        else if b>c \n            then return false \n        else return\
    \ true \nend \n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    if b == c || a == c ||\
    \ a == b \n        true\n    else\n        false\n    end\nend\n\"\"\"\n\"\"\"\
    \n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n    Check\
    \ if three sides form a right-angled triangle. \n    \n    Arguments\n    ---------\n\
    \    a::Int64\n        Length of side A\n    b::Int64\n        Length of side\
    \ B\n    c::Int64\n        Length of side C\n    \n    Returns\n    -------\n\
    \    Bool\n        True if a right-angled triangle, False otherwise\n    \n  \
    \  Example\n    -------\n    right_angle_triangle(5,4,3)\n    true\n    right_angle_triangle(5,5,3)\n\
    \    false\n    \"\"\"\n    \n    if b == c || a == c || a == b \n        true\n\
    \    else\n        false\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if three sides form a right-angled\
    \ triangle. \n    \n    Arguments\n    ---------\n    a::Int64\n        Length\
    \ of side A\n    b::Int64\n        Length of side B\n    c::Int64\n        Length\
    \ of side C\n    \n    Returns\n    -------\n    Bool\n        True if a right-angled\
    \ triangle, False otherwise\n    \n    Example\n    -------\n    right_angle_triangle(5,4,3)\n\
    \    true\n    right_angle_triangle(5,5,3)\n    false\n    \"\"\"\n    \n    if\
    \ b == c || a == c || a == b \n        true\n    else\n        false\n    end\n\
    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    \n    Check if three sides form a right-angled triangle. \n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        Length of side A\n    b::Int64\n       \
    \ Length of side B\n    c::Int64\n        Length of side C\n    \n    Returns\n\
    \    -------\n    Bool\n        True if a right-angled triangle, False otherwise\n\
    \    \n    Example\n    -------\n    right_angle_triangle(5,4,3)\n    true\n \
    \   right_angle_triangle(5,5,3)\n    false\n    \"\"\"\n    \n    if b == c ||\
    \ a == c || a == b \n        true\n    else\n        false\n    end\nend\n\"\"\
    \"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::", "    if a > b and\
    \ a > c \n        then return true\n    else if b > c \n        then return false\n\
    \    else if c > a \n        then return false\n    else return true\nend\n\"\"\
    \"\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    \n    \n    if a > b and a > c \n    then return true\n    else if b > c and\
    \ b > a \n    then return true\n    else if c > a and c > b \n    then return\
    \ true\n    else return false\n    \n    end\n    \"\"\"\n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    if a == 0 || b == 0 || c == 0 \n        then return false\
    \ \n    else \n        if b > a && b > c \n            then return true \n   \
    \     else if c > a && c > b \n            then return true \n        else if\
    \ b == c \n            then return true \n        else \n            if a > c\
    \ \n                then return true \n            else \n                if a\
    \ > b \n                    then return true \n                else \n       \
    \             if b > c \n                        then return true \n         \
    \           else \n                        return false \n\"\"\"\n\"\"\"\n   \
    \ Problem 2\n    Write a function that determines whether a triangle is equilateral\
    \ or is\n    scalene.\n    Example:\n            \"\"\"", "    if a==0 || b==0\
    \ || c==0 \n        then return false\n    else if a>b and a>c \n        then\
    \ return true\n    else if b>a and b>c \n        then return true\n    else if\
    \ c>a and c>b \n        then return true\n    else return false\nend\n\"\"\"\n\
    \"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n   \
    \ \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n\
    \    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n  \
    \  \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n\
    \    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\
    \n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\
    \"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\
    \"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\
    \"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n   \
    \ \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n\
    \    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n  \
    \  \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n\
    \    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\
    \n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\
    \"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\
    \"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\
    \"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n   \
    \ \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n\
    \    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n    \n    \n\"\"\"\n  \
    \  \n    ", "    if a==b and b==c then return true else return false\n    if a==c\
    \ then return true else return false\n    if b==c then return true else return\
    \ false\n    if a==b or b==c or c==a then return true else return false\nend\n\
    \    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    if a==0 || b==0 || c==0 \n\
    \        then return false\n    else if a==b || b==c || c==a\n        then return\
    \ true\n    else if a==c || c==b || b==a\n        then return true\n    else if\
    \ a==b+c || b==c+a || c==a+b\n        then return true\n    else if a==b+c ||\
    \ b==c-a || c==a-b\n        then return true\n    else if a==c-b || c==b-a ||\
    \ b==a-c\n        then return true\n    else return false\n    end\n    \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if a == 0 || b == 0 || c == 0\
    \ \n        then return false \n    else if b > a && b > c \n        then return\
    \ true \n    else if c > a && c > b \n        then return true \n    else if b\
    \ == c \n        then return true \n    else if b > c \n        then return false\
    \ \n    else if c > b \n        then return false \n    else if b > a && c > a\
    \ \n        then return true \n    else if c > a \n        then return true \n\
    \    else return false \nend \n\"\"\"\n</cell>\n<cell>\n\"\"\"\nGiven the lengths\
    \ of the three sides of a triangle. Return True if the three\nsides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n            \"\"\
    \"", "    if a > b and a > c \n    then return true\n    else if b > c \n    then\
    \ return false\n    else if c > a \n    then return false\n    else return true\n\
    \    end\n    \"\"\"\ndef right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    if a > b and a > c \n    then return true\n    else if b > c \n    then\
    \ return false\n    else if c > a \n    then return false\n    else return true\n\
    \    end\n    \"\"\"\ndef right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    if a > b and a > c \n    then return true\n    else if b > c \n    then\
    \ return false\n    else if c > a \n    then return false\n    else return true\n\
    \    end\n    \"\"\"\ndef right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    if a > b and a > c \n    then return true\n    else if b > c \n    then\
    \ return false\n    else if c > a \n    then return false\n    else return true\n\
    \    end\n    \"\"\"\ndef right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    if a > b and a > c \n    then return true\n    else if b > c \n    then\
    \ return false\n    else if c > a \n    then return false\n    else return true\n\
    \    end\n    \"\"\"\ndef right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    if a > b and a > c \n    then return true\n    else if b > c \n    then\
    \ return false\n    else if c > a \n    then return false\n    else return true\n\
    \    end\n    \"\"\"\ndef right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    if a > b and a > c \n    then return true\n    else if b > c \n    then\
    \ return false\n    else if c > a \n    then return false\n    else return true\n\
    \    end\n    \"\"\"\ndef right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    if a > b and a > c \n    then return true\n    else if b > c \n    then\
    \ return false\n    else if c > a \n    then return ", "    if a > b and a > c\
    \ \n    then return true\n    else if b > c \n    then return false\n    else\
    \ if c > a \n    then return false\n    else return true\n    end\n    \"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if a==b or a==c or b==c then return true\n    else return false\nend\n\"\"\"\
    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  if a==0 || b==0 || c==0 \n        then return false \n    else \n        if\
    \ b > c \n            then return right_angle_triangle(a-1, b, c) \n        else\
    \ \n            if c > a \n                then return right_angle_triangle(a,\
    \ b, c-1) \n            else \n                if b > a \n                   \
    \ then return right_angle_triangle(a, b-1, c) \n                else \n      \
    \              return true \n        end\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check whether the triangle is right angled\
    \ or not\n    \n    Arguments\n    ---------\n    a::Int64\n        Length of\
    \ side a\n    b::Int64\n        Length of side b\n    c::Int64\n        Length\
    \ of side c\n    \n    Returns\n    -------\n    Bool\n        True if triangle\
    \ is right angled, False otherwise\n    \n    Example\n    -------\n    right_angle_triangle(3,\
    \ 4, 5)\n    true\n    right_angle_triangle(3, 4, 6)\n    false\n    right_angle_triangle(3,\
    \ 4, 7)\n    false\n    right_angle_triangle(3, 4, 8)\n    false\n    right_angle_triangle(3,\
    \ 4, 9)\n    false\n    right_angle_triangle(3, 4, 10)\n    false\n    right_angle_triangle(3,\
    \ 4, 11)\n    false\n    right_angle_triangle(3, 4, 12)\n    false\n    right_angle_triangle(3,\
    \ 4, 13)\n    false\n    right_angle_triangle(3, 4, 14)\n    false\n    right_angle_triangle(3,\
    \ 4, 15)\n    false\n    right_angle_triangle(3, 4, 16)\n    false\n    right_angle_triangle(3,\
    \ 4, 17)\n    false\n    right_angle_triangle(3, 4, 18)\n    false\n    right_angle_triangle(3,\
    \ 4, 19)\n    false\n    right_angle_triangle(3, 4, 20)\n    false\n    right_angle_triangle(3,\
    \ 4, 21)\n    false\n    right_angle_triangle(3, 4, 22)\n    false\n    right_angle_triangle(3,\
    \ 4, 23)\n    false\n    right_angle_triangle(3, 4, 24)\n    false\n    right_angle_triangle(3,\
    \ 4, 25)\n    false\n    right_angle_triangle(3, 4, 26)\n    false\n    right_angle_triangle(3,\
    \ 4, 27)\n    false\n    right_angle_triangle(3, 4, 28)\n    false\n    right_angle_triangle(3,\
    \ 4, 29)\n    false\n    right_angle_triangle(3, 4, 30)\n    false\n    right_angle_triangle(3,\
    \ 4, 31)\n    false\n    right_angle_triangle(3, 4, 32)\n    false\n    right_angle_triangle(3,\
    \ 4, 33)\n    false", "    if a > b and a > c \n        then return true\n   \
    \ else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else return true\nend\n\"\"\"\n\"\"\"\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    if a > b and a > c then\
    \ \n        if b > c then \n            true\n        else \n            false\n\
    \    else \n        if b > c then \n            false\n        else \n       \
    \     true\n        end\n    end\nend\n\"\"\"\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(3,4,5)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,3)\n\
    </cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,6)\n</cell>\n<code\
    \ language=julia-1.5>\nright_angle_triangle(4,5,7)\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(4,5,8)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,9)\n\
    </cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,10)\n</cell>\n<code\
    \ language=julia-1.5>\nright_angle_triangle(4,5,11)\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(4,5,12)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,13)\n\
    </cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,14)\n</cell>\n<code\
    \ language=julia-1.5>\nright_angle_triangle(4,5,15)\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(4,5,16)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,17)\n\
    </cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,18)\n</cell>\n<code\
    \ language=julia-1.5>\nright_angle_triangle(4,5,19)\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(4,5,20)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,21)\n\
    </cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,22)\n</cell>\n<code\
    \ language=julia-1.5>\nright_angle_triangle(4,5,23)\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(4,5,24)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,25)\n\
    </cell>\n<code language=julia-1.5>\nright_angle_triangle(4,5,26)\n</cell>\n<code\
    \ language=julia-1.5>\nright_angle_triangle(4,5,27)\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(4,5,28)\n</cell>\n<code language=julia-1.5>", "    if b ==\
    \ c \n        then return true\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b == c \n        then\
    \ return true\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return ", "    if a == 0 || b == 0 || c == 0\
    \ \n        true\n    else\n        if b > c \n            right_angle_triangle(c\
    \ - b, a, c)\n        else\n            if a > c \n                right_angle_triangle(c\
    \ - b, a, c)\n            else\n                if b > a \n                  \
    \  right_angle_triangle(c - b, a, c)\n                else\n                 \
    \   false\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    Checks if three sides of a triangle form a right-angled\
    \ triangle. \n    \n    Arguments:\n        a {Int64} -- Length of side a\n  \
    \      b {Int64} -- Length of side b\n        c {Int64} -- Length of side c\n\
    \    \n    Returns:\n        Bool -- True if a right-angled triangle, False otherwise\n\
    \    \"\"\"\n    if a == 0 || b == 0 || c == 0 \n        true\n    else\n    \
    \    if b > c \n            right_angle_triangle(c - b, a, c)\n        else\n\
    \            if a > c \n                right_angle_triangle(c - b, a, c)\n  \
    \          else\n                if b > a \n                    right_angle_triangle(c\
    \ - b, a, c)\n                else\n                    false\n    end\nend\n\"\
    \"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n \
    \   Checks if three sides of a triangle form a right-angled triangle. \n    \n\
    \    Arguments:\n        a {Int64} -- Length of side a\n        b {Int64} -- Length\
    \ of side b\n        c {Int64} -- Length of side c\n    \n    Returns:\n     \
    \   Bool -- True if a right-angled triangle, False otherwise\n    \"\"\"\n   \
    \ if a == 0 || b == 0 || c == 0 \n        true\n    else\n        if b > c \n\
    \            right_angle_triangle(c - b, a, c)\n        else\n            if a\
    \ > c \n                right_angle_triangle(c - b, a, c)\n            else\n\
    \                if b > a \n                    right_angle_triangle(c - b, a,\
    \ c)\n                else\n                    false\n    end\nend\n\"\"\"\n\"\
    \"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Checks\
    \ if three sides of a triangle form a right-angled triangle. \n    \n    Arguments:\n\
    \        a {Int64} -- Length of side a\n        b {Int64} -- Length of side b\n\
    \        c {Int64} -- Length of side c\n    \n    Returns:\n        Bool -- True\
    \ if a right-angled triangle, False ", "    if a == 0 || b == 0 || c == 0 \n \
    \       then return false \n    else if b > c \n        then return right_angle_triangle(b,\
    \ c, a) \n    else if c > a \n        then return right_angle_triangle(a, c, b)\
    \ \n    else if b == c \n        then return true \n    else if b > a \n     \
    \   then return right_angle_triangle(a, c, b) \n    else return right_angle_triangle(a,\
    \ c, b) \nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    \n    Check if three sides form a right-angled triangle. \n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n            \"\"\"", "    if a==0 || b==0 || c==0 \n        return\
    \ false\n    else if a==b || b==c || c==a \n        return true\n    else \n \
    \       return right_angle_triangle(a-1, b, c) || right_angle_triangle(a, b-1,\
    \ c) || right_angle_triangle(a, b, c-1)\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if three sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n            right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if three sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n            right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if three sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n            right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if three sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n            right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if three sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n            right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if three sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled tri", "    if a == 0 || b ==\
    \ 0 || c == 0 \n        then return false \n    else \n        if b > a && b >\
    \ c \n            then return true \n        else if c > a && c > b \n       \
    \     then return true \n        else if b == c \n            then return true\
    \ \n        else if b > c \n            then return false \n        else if c\
    \ > b \n            then return false \n        else if b > a && c > a \n    \
    \        then return true \n        else if c > a && b > a \n            then\
    \ return true \n        else if b > a && c > b \n            then return true\
    \ \n        else if c > a && b > c \n            then return true \n        else\
    \ return false \nend\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if a == 0 || b == 0 || c == 0\
    \ \n        true \n    else \n        if a > b and a > c \n            true \n\
    \        else \n            if b > c \n                true \n            else\
    \ \n                if a == c \n                    true \n                else\
    \ \n                    if b > a \n                        true \n           \
    \         else \n                        false \n    end \nend \n\"\"\"\n</cell>\n\
    <cell>\n@test right_angle_triangle(3, 4, 5) == true\n@test right_angle_triangle(3,\
    \ 4, 6) == false\n@test right_angle_triangle(3, 4, 7) == false\n@test right_angle_triangle(3,\
    \ 4, 8) == false\n@test right_angle_triangle(3, 4, 9) == false\n@test right_angle_triangle(3,\
    \ 4, 10) == false\n@test right_angle_triangle(3, 4, 11) == false\n@test right_angle_triangle(3,\
    \ 4, 12) == false\n@test right_angle_triangle(3, 4, 13) == false\n@test right_angle_triangle(3,\
    \ 4, 14) == false\n@test right_angle_triangle(3, 4, 15) == false\n@test right_angle_triangle(3,\
    \ 4, 16) == false\n@test right_angle_triangle(3, 4, 17) == false\n@test right_angle_triangle(3,\
    \ 4, 18) == false\n@test right_angle_triangle(3, 4, 19) == false\n@test right_angle_triangle(3,\
    \ 4, 20) == false\n@test right_angle_triangle(3, 4, 21) == false\n@test right_angle_triangle(3,\
    \ 4, 22) == false\n@test right_angle_triangle(3, 4, 23) == false\n@test right_angle_triangle(3,\
    \ 4, 24) == false\n@test right_angle_triangle(3, 4, 25) == false\n@test right_angle_triangle(3,\
    \ 4, 26) == false\n@test right_angle_triangle(3, 4, 27) == false\n@test right_angle_triangle(3,\
    \ 4, 28) == false\n@test right_angle_triangle(3, 4, 29) == false\n@test right_angle_triangle(3,\
    \ 4, 30) == false\n@test right_angle_triangle(3, 4, 31) == false\n@test right_angle_triangle(3,\
    \ 4, 32) == false\n@test right_angle_triangle(3, 4, 33) == false\n@test right_angle_triangle(3,\
    \ 4, 34) == false\n@test right_angle_triangle(3, 4, 35) == false\n@test right_angle_triangle(3,\
    \ 4, 36) == false\n@test right_angle_triangle(3, 4, 37) == false\n@test right_angle_triangle(3,\
    \ 4, 38) == false\n@test right_angle_triangle(3, 4, 39) == false\n@test right_angle_triangle(3,\
    \ 4, 40) == false\n@test right_angle_triangle(3, 4, 41) == false\n@test right_angle_triangle(3,\
    \ 4, 42) == false\n@test right_angle_triangle(3, 4, 43) == false\n@test right_angle_triangle(",
  "    if a==b or a==c or b==c then return true else return false \nend \n\"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a\
    \ > b and a > c \n    then return true\n    else if b > c \n    then return false\n\
    \    else if c > a \n    then return false\n    else return true\n    end\n  \
    \  \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    if a==0 || b==0 || c==0 \n        return true\n    if a>b+c || b>a+c\
    \ || c>b+a \n        return false\n    else \n        return true\nend\n\"\"\"\
    \n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check\
    \ if three sides form a right angled triangle. \n    \n    Arguments:\n      \
    \  a {Int64} -- Length of side a\n        b {Int64} -- Length of side b\n    \
    \    c {Int64} -- Length of side c\n    \n    Returns:\n        Bool -- True if\
    \ a right angled triangle, False otherwise\n\"\"\"\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n      \
    \      \"\"\"", "    if a==0 || b==0 || c==0 \n        then return false\n   \
    \ else if a==b or b==c or c==a \n        then return true\n    else if a==c or\
    \ b==c or c==a \n        then return false\n    else if a==b or b==a or a==c \n\
    \        then return true\n    else if a==c or b==a or a==c \n        then return\
    \ false\n    else \n        right_angle_triangle(a-1, b, c) || right_angle_triangle(a,\
    \ b-1, c) || right_angle_triangle(a, c, b-1)\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    \n    Check if three sides form a right-angled\
    \ triangle. \n    A right-angled triangle is a triangle in which one angle is\
    \ right angle or \n    90 degree.\n    Example:\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_angle_triangle(3,\
    \ 4, 5)\n            right_angle_triangle(3, 4, 5)\n            right_", "   \
    \ if a==0 || b==0 || c==0 \n        then return false \n    else if a==b || b==c\
    \ || c==a \n        then return true \n    else if a==c || c==b || b==a \n   \
    \     then return true \n    else if a==b || b==a || a==c \n        then return\
    \ true \n    else \n        right_angle_triangle(a-1, b, c) \n        or right_angle_triangle(a,\
    \ b, c-1) \n        or right_angle_triangle(a, b, c-1)\n    end\nend\n\"\"\"\n\
    \"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool \n    \n\
    \    Check whether the triangle is right angled or not.\n    \n    Arguments\n\
    \    ---------\n    a::Int64\n        Length of first side.\n    b::Int64\n  \
    \      Length of second side.\n    c::Int64\n        Length of third side.\n \
    \   \n    Returns\n    -------\n    Bool\n        True if triangle is right angled,\
    \ False otherwise.\n    \n    Example\n    -------\n    right_angle_triangle(3,\
    \ 4, 5)\n    \n    true\n    \n    right_angle_triangle(3, 4, 6)\n    \n    false\n\
    \    \n    right_angle_triangle(3, 4, 7)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 8)\n    \n    false\n    \n    right_angle_triangle(3, 4, 9)\n    \n    false\n\
    \    \n    right_angle_triangle(3, 4, 10)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 11)\n    \n    false\n    \n    right_angle_triangle(3, 4, 12)\n    \n  \
    \  false\n    \n    right_angle_triangle(3, 4, 13)\n    \n    false\n    \n  \
    \  right_angle_triangle(3, 4, 14)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 15)\n    \n    false\n    \n    right_angle_triangle(3, 4, 16)\n    \n  \
    \  false\n    \n    right_angle_triangle(3, 4, 17)\n    \n    false\n    \n  \
    \  right_angle_triangle(3, 4, 18)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 19)\n    \n    false\n    \n    right_angle_triangle(3, 4, 20)\n    \n  \
    \  false\n    \n    right_angle_triangle(3, 4, 21)\n    \n    false\n    \n  \
    \  right_angle_triangle(3, 4, 22)\n    \n    false\n    \n    right_angle_triangle(3,\
    \ 4, 23)\n    \n    false\n    \n    right_angle_triangle(3, 4, 24)\n", "    \n\
    \    if a > b and a > c \n        then return true\n    else if b > c \n     \
    \   then return false\n    else if c > a \n        then return false\n    else\
    \ return true\n    \nend\n\"\"\"\n</cell>\n<cell>\n\"\"\"\nGiven the lengths of\
    \ the three sides of a triangle. Return True if the three\nsides form a right-angled\
    \ triangle, False otherwise.\nA right-angled triangle is a triangle in which one\
    \ angle is right angle or \n90 degree.\nExample: \n            \"\"\"", "    if\
    \ a > b and a > c \n    then return true\n    else if b > c \n    then return\
    \ false\n    else if c > a \n    then return false\n    else return true\n   \
    \ end\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    if a==0 || b==0 || c==0 \n        return false\n    else \n\
    \        return ((b > 0 and c > 0 and b > c) or (b > 0 and c < 0 and b < c) or\
    \ (b < 0 and c > 0 and b < c))\nend\n\"\"\"\n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    if a==0 || b==0 || c==0 \n        then return false\n\
    \    else if a==b\n        then return c==b\n    else if b==c\n        then return\
    \ a==c\n    else if a==c\n        then return b==c\n    else return false\nend\n\
    \"\"\"\n\"\"\"\n    Definition of is_triangle function \n\"\"\"", "    if a==0\
    \ || b==0 || c==0 \n        then return false \n    else if a>b+c \n        then\
    \ return false \n    else if b>a+c \n        then return false \n    else if c>b+a\
    \ \n        then return false \n    else return true \nend \n\"\"\"\n\"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    \n    \n    if a==0 || b==0 || c==0 \n        true\n    elseif\
    \ a==b\n        false\n    elseif a==c\n        false\n    elseif b==c\n     \
    \   true\n    elseif a==b+c\n        true\n    elseif b==a+c\n        true\n \
    \   elseif c==a+b\n        true\n    else\n        false\n    end\nend\n\"\"\"\
    \n</cell>\n<cell>\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\
    \ \n    \n    \n    if a==0 || b==0 || c==0 \n        true\n    elseif a==b\n\
    \        false\n    elseif a==c\n        false\n    elseif b==c\n        true\n\
    \    elseif a==b+c\n        true\n    elseif b==a+c\n        true\n    elseif\
    \ c==a+b\n        true\n    else\n        false\n    end\nend\n\"\"\"\n</cell>\n\
    <cell>\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool \n\
    \    \n    \n    if a==0 || b==0 || c==0 \n        true\n    elseif a==b\n   \
    \     false\n    elseif a==c\n        false\n    elseif b==c\n        true\n \
    \   elseif a==b+c\n        true\n    elseif b==a+c\n        true\n    elseif c==a+b\n\
    \        true\n    else\n        false\n    end\nend\n\"\"\"\n</cell>\n<cell>\n\
    \"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool \n    \n\
    \    \n    if a==0 || b==0 || c==0 \n        true\n    elseif a==b\n        false\n\
    \    elseif a==c\n        false\n    elseif b==c\n        true\n    elseif a==b+c\n\
    \        true\n    elseif b==a+c\n        true\n    elseif c==a+b\n        true\n\
    \    else\n        false\n    end\nend\n\"\"\"\n</cell>\n<cell>\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    \n    \n    if a==0 || b==0 || c==0 \n     \
    \   true\n    elseif a==b\n        false\n    elseif a==c\n        false\n   \
    \ elseif b==", "    if a==0 || b==0 || c==0 \n        then return false \n   \
    \ else \n        if b > c \n            then return right_angle_triangle(a-1,\
    \ b, c) \n        else \n            if c > a \n                then return right_angle_triangle(a,\
    \ b-1, c) \n            else \n                if b == c \n                  \
    \  then return true \n                else \n                    if a > c \n \
    \                       then return right_angle_triangle(a, b, c-1) \n       \
    \             else \n                        if a > b \n                     \
    \       then return right_angle_triangle(a, b, c) \n                        else\
    \ \n                            if a > c \n                                then\
    \ return right_angle_triangle(a, b, c-1) \n                            else \n\
    \                                return false \n        end\nend\n\"\"\"\n\"\"\
    \"\n    Definition of is_right_angled_triangle\n    \n    Arguments:\n       \
    \ triangle {Int64} -- Lengths of the three sides of a triangle\n    \n    Returns:\n\
    \        Bool -- True if the three sides form a right-angled triangle, False otherwise\n\
    \"\"\"", "    if b > a && b > c \n    then return true \n    else if c > a &&\
    \ c > b \n    then return true \n    else if b == c \n    then return false \n\
    \    else return right_angle_triangle(a, b, c+1) \nend\n    \"\"\"\n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    if a==0 || b==0 || c==0 \n      \
    \  then return false \n    else \n        if a>b \n            then return right_angle_triangle(b,c,a)\
    \ \n        else if b>c \n            then return right_angle_triangle(a,c,b)\
    \ \n        else if c>a \n            then return right_angle_triangle(a,b,c)\
    \ \n        else \n            return true \nend \n\"\"\"\n\"\"\"\n    Write a\
    \ function that determines whether a triangle is equilateral or not.\n    Equilateral\
    \ triangles are triangles whose three sides are equal in length.\n    Example:\n\
    \            \"\"\"", "    if a==b or a==c or b==c then return true else return\
    \ false\nend\n\"\"\"\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    if a > b and a > c \n    then return true\n    else if\
    \ b > c \n    then return false\n    else if c > a \n    then return false\n \
    \   else return true\n    end\n    \"\"\"\ndef right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\n    \"\"\"\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n            \"\"\"", "    if a > b and a > c \n        then return\
    \ true\n    else if b > c and b > a \n        then return true\n    else if c\
    \ > a and c > b \n        then return true\n    else return false\nend\n    \"\
    \"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a == 0 ||\
    \ b == 0 || c == 0 \n        then return false \n    else if b > a && b > c \n\
    \        then return true \n    else if c > a && c > b \n        then return true\
    \ \n    else if b == c \n        then return true \n    else if b > c \n     \
    \   then return false \n    else if c > b \n        then return false \n    else\
    \ if b == c \n        then return true \n    else if b > c \n        then return\
    \ false \n    else if c > b \n        then return false \n    else \n        right_angle_triangle(a-1,\
    \ b, c) \n        right_angle_triangle(a, b-1, c) \n        right_angle_triangle(a,\
    \ b, c-1)\nend\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    if a > b and a > c \n        then return true\n   \
    \ else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else return true\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    if a == 0 || b == 0 || c == 0 \n        then return false\
    \ \n    else \n        if b > a && b > c \n            then return true \n   \
    \     else if c > a && c > b \n            then return true \n        else if\
    \ b == c \n            then return true \n        else \n            if a > c\
    \ \n                then return true \n            else \n                if a\
    \ > b \n                    then return true \n                else \n       \
    \             if a > c \n                        then return true \n         \
    \           else \n                        return false \n\"\"\"", "    if a >\
    \ b and a > c \n    then return true\n    else if b > c \n    then return false\n\
    \    else if c > a \n    then return false\n    else return true\n    end\n  \
    \  \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    if a==0 || b==0 || c==0 \n        then return false\n    else \n\
    \        if b > c \n            then return false\n        else \n           \
    \ if a > c \n                then return false\n            else \n          \
    \      if b > a \n                    then return false\n                else\
    \ \n                    if c > a \n                        then return false\n\
    \                    else \n                        return true\n        end\n\
    \    end\nend\n\"\"\"\n</cell>\n<cell>\n@test right_angle_triangle(3,4,5) == true\n\
    @test right_angle_triangle(4,3,5) == false\n@test right_angle_triangle(5,4,3)\
    \ == false\n@test right_angle_triangle(5,4,4) == true\n@test right_angle_triangle(5,5,4)\
    \ == true\n@test right_angle_triangle(5,5,5) == false\n@test right_angle_triangle(6,5,4)\
    \ == false\n@test right_angle_triangle(6,5,5) == false\n@test right_angle_triangle(6,6,5)\
    \ == false\n@test right_angle_triangle(6,6,6) == true\n@test right_angle_triangle(7,6,5)\
    \ == false\n@test right_angle_triangle(7,6,6) == false\n@test right_angle_triangle(7,7,6)\
    \ == true\n@test right_angle_triangle(7,7,7) == true\n@test right_angle_triangle(8,7,6)\
    \ == false\n@test right_angle_triangle(8,7,7) == false\n@test right_angle_triangle(8,8,7)\
    \ == true\n@test right_angle_triangle(8,8,8) == true\n@test right_angle_triangle(9,8,7)\
    \ == false\n@test right_angle_triangle(9,8,8) == false\n@test right_angle_triangle(9,9,8)\
    \ == true\n@test right_angle_triangle(9,9,9) == true\n@test right_angle_triangle(10,9,8)\
    \ == false\n@test right_angle_triangle(10,9,9) == false\n@test right_angle_triangle(10,10,9)\
    \ == true\n@test right_angle_triangle(10,10,10) == true\n@test right_angle_triangle(11,10,9)\
    \ == false\n@test right_angle_triangle(11,10,10) == false\n@test right_angle_triangle(11,11,10)\
    \ == true\n@test right_angle_triangle(11,11,11) == true\n@test right_angle_triangle(12,11,10)\
    \ == false\n@test right_angle_triangle(12,11,11) == false\n@test right_angle_triangle(12,12,11)\
    \ == true\n@test right_angle_triangle(12,12,12) == true\n@test right_angle_triangle(13,12,12)\
    \ == false\n@test right_angle_triangle(", "    if a==0 || b==0 || c==0 \n    \
    \    then return false\n    else if a==b || b==c || c==a \n        then return\
    \ true\n    else if a==c || b==c || c==b \n        then return true\n    else\
    \ if a==b || b==a || a==c \n        then return true\n    else return false\n\
    end\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis is not correct. `right_angle_triangle(1,1,1)`\
    \ returns `true`, but `right_angle_triangle(1,2,3)` returns `false`.\n<|/ c |>\n\
    <| c |>\nI didn't notice that at first, but I fixed it now. Thanks.\n<|/ c |>\n\
    <| a tags=julia,trigonometry |>\nThe function right_angle_triangle(a,b,c) can\
    \ be implemented as follows:\n<code>", "    if a > b and a > c \n    then return\
    \ true\n    else if b > c \n    then return false\n    else if c > a \n    then\
    \ return false\n    else return true\n    end\n    \"\"\"\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    if a==0 || b==0 ||\
    \ c==0 \n        then return false\n    else if a==b\n        then return c==b\n\
    \    else if a==c\n        then return b==c\n    else if b==c\n        then return\
    \ a==c\n    else if a==b+c\n        then return true\n    else if b==a+c\n   \
    \     then return true\n    else if c==a+b\n        then return true\n    else\n\
    \        error(\"Triangle is not right angled\")\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Checks if a triangle is right angled or not.\n\
    \    Arguments:\n        a: Length of side 1\n        b: Length of side 2\n  \
    \      c: Length of side 3\n    Returns:\n        Bool: True if triangle is right\
    \ angled, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Checks if a triangle is right angled or not.\n\
    \    Arguments:\n        a: Length of side 1\n        b: Length of side 2\n  \
    \      c: Length of side 3\n    Returns:\n        Bool: True if triangle is right\
    \ angled, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Checks if a triangle is right angled or not.\n\
    \    Arguments:\n        a: Length of side 1\n        b: Length of side 2\n  \
    \      c: Length of side 3\n    Returns:\n        Bool: True if triangle is right\
    \ angled, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Checks if a triangle is right angled or not.\n\
    \    Arguments:\n        a: Length of side 1\n        b: Length of side 2\n  \
    \      c: Length of side 3\n    Returns:\n        Bool: True if triangle is right\
    \ angled, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Checks if a triangle is right angled or not.\n\
    \    Arguments:\n        a: Length of side 1\n        b: Length of side 2\n  \
    \      c: Length of side 3\n    Returns:\n        Bool: True if triangle is right\
    \ angled, False otherwise\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    Checks if a triangle is right ", "    if a==0\
    \ || b==0 || c==0 \n        then return false\n    else if a>b+c || b>a+c || c>b+a\
    \ \n        then return false\n    else if a==b+c || a==c+b || a==b+a || a==c+a\
    \ \n        then return true\n    else \n        right_angle_triangle(a-1,b,c)\
    \ || right_angle_triangle(a,b-1,c) || right_angle_triangle(a,b,c-1)\n    end\n\
    end\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n\
    \    Checks if three sides of a triangle form a right-angled triangle\n    \n\
    \    Arguments:\n        a {Int64} -- Length of side a\n        b {Int64} -- Length\
    \ of side b\n        c {Int64} -- Length of side c\n    \n    Returns:\n     \
    \   Bool -- True if triangle is right-angled, False otherwise\n\"\"\"\n\"\"\"\n\
    \    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n            \"\"\"", "    if a==0 || b==0 || c==0 \n        then\
    \ return false \n    else \n        if b > c \n            then return right_angle_triangle(a-1,\
    \ b, c) \n        else \n            if a > c \n                then return right_angle_triangle(a-1,\
    \ c, b) \n            else \n                if b > a \n                    then\
    \ return right_angle_triangle(a-1, b, c) \n                else \n           \
    \         if a > b \n                        then return right_angle_triangle(a-1,\
    \ b, c) \n                    else \n                        return true \n\"\"\
    \"\n\"\"\"\n    Write a function that takes in three sides of a triangle and determines\
    \ \n    whether or not it is a right-angled triangle. \n    \n    Example:\n \
    \           \"\"\"", "    if a==0 || b==0 || c==0 \n        then return false\n\
    \    else if a>b && b>c && c>a \n        then return true\n    else if a>b &&\
    \ b>c && c<a \n        then return false\n    else if a<b && b>c && c<a \n   \
    \     then return false\n    else if a<b && b>c && c>a \n        then return true\n\
    \    else \n        right_angle_triangle(a-1,b,c) || right_angle_triangle(a,b-1,c)\
    \ || right_angle_triangle(a,b,c-1)\n    end\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=julia,recursion,function |>\n<code>", "    if a==0 || b==0 || c==0 \n\
    \        return false\n    if a==b || b==c || c==a \n        return true\n   \
    \ if a==c || c==b || b==a \n        return true\n    if a==b || b==a || a==c \n\
    \        return true\n    if a==0 || b==0 || c==0 \n        return false\n   \
    \ if a==c || c==b || b==a \n        return true\n    if a==b || b==a || a==c \n\
    \        return true\n    if a==c || c==b || b==a \n        return true\n    if\
    \ a==b || b==a || a==c \n        return true\n    if a==c || c==b || b==a \n \
    \       return true\n    if a==b || b==a || a==c \n        return true\n    if\
    \ a==c || c==b || b==a \n        return true\n    if a==b || b==a || a==c \n \
    \       return true\n    if a==c || c==b || b==a \n        return true\n    if\
    \ a==b || b==a || a==c \n        return true\n    if a==c || c==b || b==a \n \
    \       return true\n    if a==b || b==a || a==c \n        return true\n    if\
    \ a==c || c==b || b==a \n        return true\n    if a==b || b==a || a==c \n \
    \       return true\n    if a==c || c==b || b==a \n        return true\n    if\
    \ a==b || b==a || a==c \n        return true\n    if a==c || c==b || b==a \n \
    \       return true\n    if a==b || b==a || a==c \n        return true\n    if\
    \ a==c || c==b || b==a \n        return true\n    if a==b || b==a || a==c \n \
    \       return true\n    if a==c || c==b || b==a \n        return true\n    if\
    \ a==b || b==a || a==c \n        return true\n    if a==c || c==b || b==a \n \
    \       return true\n    if a==b || b==a || a==c \n        return true\n    if\
    \ a==c || c==b || b==a \n        return true\n    if a==b || b==a || a==c \n \
    \       return true\n    if a==c || c==b || b==a \n        return true\n    if\
    \ a==b ", "    if a==0 || b==0 || c==0 \n        then return false \n    else\
    \ \n        if b > c \n            then return right_angle_triangle(a-1, b, c)\
    \ \n        else \n            if a > c \n                then return right_angle_triangle(a,\
    \ b-1, c) \n            else \n                if b > a \n                   \
    \ then return right_angle_triangle(a, b, c-1)\n                else \n       \
    \             return true\n    \"\"\"\n    \ndef right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ false \n    else \n        if b > c \n            then return right_angle_triangle(a-1,\
    \ b, c) \n        else \n            if a > c \n                then return right_angle_triangle(a,\
    \ b-1, c) \n            else \n                if b > a \n                   \
    \ then return right_angle_triangle(a, b, c-1)\n                else \n       \
    \             return true\n    \n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n            \"\"\"", "   \
    \ if a==0 || b==0 || c==0 \n        then return true\n    else if a>0 && b>0 &&\
    \ c>0 \n        then return false\n    else if a>0 && b>0 && c<0 \n        then\
    \ return true\n    else if a<0 && b>0 && c>0 \n        then return true\n    else\
    \ if a<0 && b>0 && c<0 \n        then return false\n    else if a>0 && b<0 &&\
    \ c>0 \n        then return true\n    else if a<0 && b<0 && c>0 \n        then\
    \ return false\n    else if a>0 && b<0 && c<0 \n        then return true\n   \
    \ else if a<0 && b<0 && c<0 \n        then return false\n    else if a>0 && b==0\
    \ && c>0 \n        then return true\n    else if a>0 && b==0 && c<0 \n       \
    \ then return false\n    else if a<0 && b==0 && c>0 \n        then return true\n\
    \    else if a<0 && b==0 && c<0 \n        then return false\n    else if a>0 &&\
    \ b==0 && c==0 \n        then return true\n    else if a<0 && b==0 && c==0 \n\
    \        then return false\n    else if a>0 && b<0 && c==0 \n        then return\
    \ true\n    else if a<0 && b<0 && c==0 \n        then return false\n    else if\
    \ a>0 && b<0 && c<0 \n        then return true\n    else if a<0 && b<0 && c<0\
    \ \n        then return false\n    else if a==0 && b==0 && c==0 \n        then\
    \ return true\n    else if a==0 && b==0 && c<0 \n        then return false\n \
    \   else if a==0 && b==0 && c>0 \n        then return true\n    else if a==0 &&\
    \ b<0 && c==0 \n        then return false\n    else if a==0 && b<0 && c<0 \n \
    \       then return true\n    else if a==0 && b<0 && c>0 \n        then return\
    \ true\n    else if a==0 && b==0 && c<0 \n        then return true\n    else if\
    \ a==0 && b==0 && c>0 \n        then return false\n    else if a==0 && b<0 &&\
    \ c<0 \n        then return true\n    else if a==0 && b<0 && c>0 \n        ",
  "    if a==0 || b==0 || c==0 \n        true \n    else \n        if a>b and a>c\
    \ \n            true \n        else \n            if b>c and b>a \n          \
    \      true \n            else \n                if c>a and c>b \n           \
    \         true \n                else \n                    false \n</code>\n\
    <|/ a tags=julia |>\n<| a dscore=0 |>\n<code>", "    if a==0 || b==0 || c==0 \n\
    \        true \n    else \n        if abs(a-b) == abs(b-c) \n            true\
    \ \n        else \n            if abs(a-c) == abs(c-b) \n                true\
    \ \n            else \n                if abs(a-b) == abs(c-b) \n            \
    \        true \n                else \n                    false \n        end\n\
    \    end\nend\n\"\"\"\n</cell>\n<cell>\n@code_warntype ", "    if a==b or a==c\
    \ or b==c then return true\n    else return false\nend\n\"\"\"\n    \"\"\"\n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    ", "    \n    \n    if a==0\
    \ || b==0 || c==0 \n        true\n    elseif a==b || b==c || c==a \n        true\n\
    \    elseif a==c || b==c || c==a \n        true\n    elseif a==b || b==a || a==c\
    \ \n        true\n    elseif a==c || b==a || a==c \n        true\n    elseif a==b\
    \ || b==a || a==c \n        true\n    elseif a==c || b==a || a==c \n        true\n\
    \    elseif a==b || b==c || c==a \n        true\n    elseif a==c || b==c || c==a\
    \ \n        true\n    elseif a==b || b==c || c==a \n        true\n    elseif a==c\
    \ || b==c || c==a \n        true\n    elseif a==b || b==c || c==a \n        true\n\
    \    elseif a==c || b==c || c==a \n        true\n    elseif a==b || b==c || c==a\
    \ \n        true\n    elseif a==c || b==c || c==a \n        true\n    elseif a==b\
    \ || b==c || c==a \n        true\n    elseif a==c || b==c || c==a \n        true\n\
    \    elseif a==b || b==c || c==a \n        true\n    elseif a==c || b==c || c==a\
    \ \n        true\n    elseif a==b || b==c || c==a \n        true\n    elseif a==c\
    \ || b==c || c==a \n        true\n    elseif a==b || b==c || c==a \n        true\n\
    \    elseif a==c || b==c || c==a \n        true\n    elseif a==b || b==c || c==a\
    \ \n        true\n    elseif a==c || b==c || c==a \n        true\n    elseif a==b\
    \ || b==c || c==a \n        true\n    elseif a==c || b==c || c==a \n        true\n\
    \    elseif a==b || b==c || c==a \n        true\n    elseif a==c || b==c || c==a\
    \ \n        true\n    elseif a==b || b==c || c==a \n        true\n    else", " \
    \   if a==0 || b==0 || c==0 \n        return false \n    else \n        if a>b\
    \ && b>c \n            return true \n        else \n            if a>c && c>b\
    \ \n                return true \n            else \n                if a>b &&\
    \ c>a \n                    return true \n                else \n            \
    \        if a>c && b>a \n                        return true \n              \
    \      else \n                        return false \n\"\"\"\n\"\"\"\n    Write\
    \ a function that determines whether a triangle is equilateral or not.\n    Example:\n\
    \            \"\"\"", "    if a==0 || b==0 || c==0 \n        then return true\n\
    \    else if a>b+c \n        then return false\n    else if b>a+c \n        then\
    \ return false\n    else if c>a+b \n        then return false\n    else return\
    \ true\nend\n\"\"\"\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    if b == 0 || c == 0 || a ==\
    \ 0 || b == c || c == a || b == a || c == b \n    then return true\n    else return\
    \ false\n    end\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if a == 0 || b\
    \ == 0 || c == 0 \n        true\n    elseif b == 0 || c == 0 \n        false\n\
    \    elseif b == a || c == a \n        true\n    elseif b == c || c == c \n  \
    \      true\n    elseif b == a || c == b \n        false\n    elseif b == c ||\
    \ c == a \n        false\n    else\n        false\n    end\nend\n\"\"\"\n\"\"\"\
    \n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    Check if three\
    \ sides form a right-angled triangle\n    \n    Arguments\n    ---------\n   \
    \ a::Int64\n        Length of side a\n    b::Int64\n        Length of side b\n\
    \    c::Int64\n        Length of side c\n    \n    Returns\n    -------\n    Bool\n\
    \        True if three sides form a right-angled triangle, False otherwise\n \
    \   \"\"\"", "    \n    if b == 0 || c == 0 || a == 0 || b == c || a == c \n \
    \       then return true\n    else \n        return false\n    end\nend\n\"\"\"\
    \n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n\
    \    Checks if the triangle is right-angled.\n    \n    Arguments\n    ---------\n\
    \    a::Int64\n        Length of side A\n    b::Int64\n        Length of side\
    \ B\n    c::Int64\n        Length of side C\n    \n    Returns\n    -------\n\
    \    Bool\n        True if the triangle is right-angled, False otherwise.\n  \
    \  \"\"\"\n    if b == 0 || c == 0 || a == 0 || b == c || a == c \n        then\
    \ return true\n    else \n        return false\n    end\nend\n\"\"\"\n\"\"\"\n\
    \    right_angle_triangle(a::Int64, b::Int64, c::Int64)::Bool\n    \n    Checks\
    \ if the triangle is right-angled.\n    \n    Arguments\n    ---------\n    a::Int64\n\
    \        Length of side A\n    b::Int64\n        Length of side B\n    c::Int64\n\
    \        Length of side C\n    \n    Returns\n    -------\n    Bool\n        True\
    \ if the triangle is right-angled, False otherwise.\n    \"\"\"\n    if b == 0\
    \ || c == 0 || a == 0 || b == c || a == c \n        then return true\n    else\
    \ \n        return false\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Checks if the triangle is right-angled.\n\
    \    \n    Arguments\n    ---------\n    a::Int64\n        Length of side A\n\
    \    b::Int64\n        Length of side B\n    c::Int64\n        Length of side\
    \ C\n    \n    Returns\n    -------\n    Bool\n        True if the triangle is\
    \ right-angled, False otherwise.\n    \"\"\"\n    if b == 0 || c == 0 || a ==\
    \ 0 || b == c || a == c \n        then return true\n    else \n        return\
    \ false\n    end\nend\n\"\"\"\n\"\"\"\n    right_angle_triangle(a::Int64, b::Int64,\
    \ c::Int64)::Bool\n    \n    Checks if the triangle is right-angled.\n    \n \
    \   Arguments\n    ---------\n    a::Int64\n        Length of side A\n    b::Int64\n\
    \        Length of side B\n    c::Int64\n        Length of side C\n    \n    Returns\n\
    \    -------\n    Bool\n        True if the triangle is right-angle", "    if\
    \ a == 0 || b == 0 || c == 0 \n        true \n    else \n        if a > b and\
    \ a > c \n            true \n        else \n            if b > c \n          \
    \      true \n            else \n                if a == c \n                \
    \    true \n                else \n                    if b == c \n          \
    \              true \n                    else \n                        if a\
    \ == b \n                            true \n                        else \n  \
    \                          false \n    end \nend \n\"\"\"\n</cell>\n<cell>\n@test\
    \ right_angle_triangle(3, 4, 5) == true\n@test right_angle_triangle(3, 4, 6) ==\
    \ false\n@test right_angle_triangle(3, 4, 7) == false\n@test right_angle_triangle(3,\
    \ 4, 8) == false\n@test right_angle_triangle(3, 4, 9) == false\n@test right_angle_triangle(3,\
    \ 4, 10) == false\n@test right_angle_triangle(3, 4, 11) == false\n@test right_angle_triangle(3,\
    \ 4, 12) == false\n@test right_angle_triangle(3, 4, 13) == false\n@test right_angle_triangle(3,\
    \ 4, 14) == false\n@test right_angle_triangle(3, 4, 15) == false\n@test right_angle_triangle(3,\
    \ 4, 16) == false\n@test right_angle_triangle(3, 4, 17) == false\n@test right_angle_triangle(3,\
    \ 4, 18) == false\n@test right_angle_triangle(3, 4, 19) == false\n@test right_angle_triangle(3,\
    \ 4, 20) == false\n@test right_angle_triangle(3, 4, 21) == false\n@test right_angle_triangle(3,\
    \ 4, 22) == false\n@test right_angle_triangle(3, 4, 23) == false\n@test right_angle_triangle(3,\
    \ 4, 24) == false\n@test right_angle_triangle(3, 4, 25) == false\n@test right_angle_triangle(3,\
    \ 4, 26) == false\n@test right_angle_triangle(3, 4, 27) == false\n@test right_angle_triangle(3,\
    \ 4, 28) == false\n@test right_angle_triangle(3, 4, 29) == false\n@test right_angle_triangle(3,\
    \ 4, 30) == false\n@test right_angle_triangle(3, 4, 31) == false\n@test right_angle_triangle(3,\
    \ 4, 32) == false\n@test right_angle_triangle(3, 4, 33) == false\n@test right_angle_triangle(3,\
    \ 4, 34) == false\n@test right_angle_triangle(3, 4, 35) == false\n@test right_angle_triangle(3,\
    \ 4, 36) == false\n@test right_angle_triangle(3, 4, 37) == false\n@test right_angle_triangle(3,\
    \ 4, 38) == false\n@test right_angle_triangle(3, 4, 39) == false\n@test right_angle_triangle(3,\
    \ 4, 40) == false\n@test right_angle_triangle(3, 4, 41) == false\n@test right_angle_triangle(3,\
    \ 4, 42) == false\n@test right_angle_triangle(3, 4, "]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

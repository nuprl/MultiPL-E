name: HumanEval_76_is_simple_power
language: jl
prompt: "\"\"\"Your task is to write a function that returns true if a number x is\
  \ a simple\n    power of n and false in other cases.\n    x is a simple power of\
  \ n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
  \ is_simple_power(x::Int64, n::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
  \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
  \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
  \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
  \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
  end\n"
completions: ["    if x == 1\n        true\n    else\n        if n%x == 0\n      \
    \      false\n        else\n            if n%x == 1\n                is_simple_power(x//x,\
    \ n//x)\n            else\n                is_simple_power(x//x, n//x) || is_simple_power(x//x,\
    \ n//x)\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_simple_power(2, 2) == true\n@assert is_simple_power(2, 3) == false\n@assert\
    \ is_simple_power(2, 4) == true\n@assert is_simple_power(2, 5) == false\n@assert\
    \ is_simple_power(2, 6) == true\n@assert is_simple_power(2, 7) == false\n@assert\
    \ is_simple_power(2, 8) == true\n@assert is_simple_power(2, 9) == false\n@assert\
    \ is_simple_power(2, 10) == true\n@assert is_simple_power(2, 11) == false\n@assert\
    \ is_simple_power(2, 12) == true\n@assert is_simple_power(2, 13) == false\n@assert\
    \ is_simple_power(2, 14) == true\n@assert is_simple_power(2, 15) == false\n@assert\
    \ is_simple_power(2, 16) == true\n@assert is_simple_power(2, 17) == false\n@assert\
    \ is_simple_power(2, 18) == true\n@assert is_simple_power(2, 19) == false\n@assert\
    \ is_simple_power(2, 20) == true\n@assert is_simple_power(2, 21) == false\n@assert\
    \ is_simple_power(2, 22) == true\n@assert is_simple_power(2, 23) == false\n@assert\
    \ is_simple_power(2, 24) == true\n@assert is_simple_power(2, 25) == false\n@assert\
    \ is_simple_power(2, 26) == true\n@assert is_simple_power(2, 27) == false\n@assert\
    \ is_simple_power(2, 28) == true\n@assert is_simple_power(2, 29) == false\n@assert\
    \ is_simple_power(2, 30) == true\n@assert is_simple_power(2, 31) == false\n@assert\
    \ is_simple_power(2, 32) == true\n@assert is_simple_power(2, 33) == false\n@assert\
    \ is_simple_power(2, 34) == true\n@assert is_simple_power(2, 35) == false\n@assert\
    \ is_simple_power(2, 36) == true\n@assert is_simple_power(2, 37) == false\n@assert\
    \ is_simple_power(2, 38) == true\n@assert is_simple_power(2, 39) == false\n@assert\
    \ is_simple_power(2, 40) == true\n@assert is_simple_power(2, 41) == false\n@assert\
    \ is_simple_power(2, 42) == true\n@assert is_simple_power(2, 43) == false\n@assert\
    \ is_simple_power(2, 44) == true\n@assert is_simple_power(", "    if x == 1 \n\
    \        return true\n    if x == 0 \n        return false\n    if n == 0 \n \
    \       return false\n    if n == 1 \n        return true\n    if n % 2 == 0 \n\
    \        return is_simple_power(x % n, n-1)\n    return is_simple_power(x % n,\
    \ n-1) || is_simple_power(x, n-1)\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 4)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 8)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 9)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 13)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 16)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 20)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 21)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 24)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 25)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 28)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 29)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_", "    if n == 0 \n        return true\n    else if n == 1 \n     \
    \   return true\n    else \n        return is_simple_power(x, n-1) and is_simple_power(x,\
    \ n//2)\nend", "    if x == 1\n        return true\n    if x == 0\n        return\
    \ false\n    if n == 0\n        return false\n    if n == 1\n        return true\n\
    \    if n % 2 == 0\n        return is_simple_power(x, n / 2)\n    return is_simple_power(x,\
    \ n / 2) && is_simple_power(x, n / 2)\nend", "    if n == 1 \n        true\n \
    \   else\n        if x == n\n            true\n        else\n            if x\
    \ % n == 0\n                is_simple_power(x, n-1)\n            else\n      \
    \          false\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_simple_power(2, 3) == true\n@assert is_simple_power(2, 4) == false\n\
    @assert is_simple_power(2, 5) == false\n@assert is_simple_power(2, 6) == true\n\
    @assert is_simple_power(2, 7) == false\n@assert is_simple_power(2, 8) == true\n\
    @assert is_simple_power(2, 9) == false\n@assert is_simple_power(2, 10) == true\n\
    @assert is_simple_power(2, 11) == false\n@assert is_simple_power(2, 12) == true\n\
    @assert is_simple_power(2, 13) == false\n@assert is_simple_power(2, 14) == true\n\
    @assert is_simple_power(2, 15) == false\n@assert is_simple_power(2, 16) == true\n\
    @assert is_simple_power(2, 17) == false\n@assert is_simple_power(2, 18) == true\n\
    @assert is_simple_power(2, 19) == false\n@assert is_simple_power(2, 20) == true\n\
    @assert is_simple_power(2, 21) == false\n@assert is_simple_power(2, 22) == true\n\
    @assert is_simple_power(2, 23) == false\n@assert is_simple_power(2, 24) == true\n\
    @assert is_simple_power(2, 25) == false\n@assert is_simple_power(2, 26) == true\n\
    @assert is_simple_power(2, 27) == false\n@assert is_simple_power(2, 28) == true\n\
    @assert is_simple_power(2, 29) == false\n@assert is_simple_power(2, 30) == true\n\
    @assert is_simple_power(2, 31) == false\n@assert is_simple_power(2, 32) == true\n\
    @assert is_simple_power(2, 33) == false\n@assert is_simple_power(2, 34) == true\n\
    @assert is_simple_power(2, 35) == false\n@assert is_simple_power(2, 36) == true\n\
    @assert is_simple_power(2, 37) == false\n@assert is_simple_power(2, 38) == true\n\
    @assert is_simple_power(2, 39) == false\n@assert is_simple_power(2, 40) == true\n\
    @assert is_simple_power(2, 41) == false\n@assert is_simple_power(2, 42) == true\n\
    @assert is_simple_power(2, 43) == false\n@assert is_simple_power(2, 44) == true\n\
    @assert is_simple_power(2, 45) == false\n@assert is_simple_power(2, 46) == true\n\
    @assert is_simple_power(2, 47) == false\n@assert is_simple_power(2, 48) == ",
  "    if x == 1\n        return true\n    else if x == n\n        return true\n \
    \   else\n        return false\nend", "    if x == 0 \n        return true\n \
    \   if x == 1 \n        return true\n    if x == n \n        return true\n   \
    \ if n % x == 0 \n        return false\n    if n % x == 1 \n        return true\n\
    \    if n % x == n \n        return true\n    if n % x == n-1 \n        return\
    \ true\n    if n % x == n-2 \n        return true\n    if n % x == n-3 \n    \
    \    return true\n    if n % x == n-4 \n        return true\n    if n % x == n-5\
    \ \n        return true\n    if n % x == n-6 \n        return true\n    if n %\
    \ x == n-7 \n        return true\n    if n % x == n-8 \n        return true\n\
    \    if n % x == n-9 \n        return true\n    if n % x == n-10 \n        return\
    \ true\n    if n % x == n-11 \n        return true\n    if n % x == n-12 \n  \
    \      return true\n    if n % x == n-13 \n        return true\n    if n % x ==\
    \ n-14 \n        return true\n    if n % x == n-15 \n        return true\n   \
    \ if n % x == n-16 \n        return true\n    if n % x == n-17 \n        return\
    \ true\n    if n % x == n-18 \n        return true\n    if n % x == n-19 \n  \
    \      return true\n    if n % x == n-20 \n        return true\n    if n % x ==\
    \ n-21 \n        return true\n    if n % x == n-22 \n        return true\n   \
    \ if n % x == n-23 \n        return true\n    if n % x == n-24 \n        return\
    \ true\n    if n % x == n-25 \n        return true\n    if n % x == n-26 \n  \
    \      return true\n    if n % x == n-27 \n        return true\n    if n % x ==\
    \ n-28 \n        return true\n    if n % x == n-29 \n        return true\n   \
    \ if n % x == n-30 \n        return true\n    if n % x == n-31 \n        return\
    \ true\n    if n % x == n-32 \n        return true\n    if n % x == n-33 \n  \
    \      return true\n    if n % x == n-34 \n        return true\n    if n % x ==\
    \ n-35 \n        return true\n    if n % x == n-36 \n        return true\n   \
    \ if n % x == n-37 \n        return true\n    if n % x == n-38 \n        return\
    \ true\n    if n % x == n-39 \n        return true\n    if n % x == n-40 \n  \
    \      return true\n    if n % x == n-41 \n        return true\n    if n % x ==\
    \ n-42 \n        return true\n    if n % x == n-43 \n        return true\n   \
    \ if n % x == n-44 \n        return true\n    if n % x == n-45 \n        return\
    \ true\n    if n % x == n-46 \n        return true\n    if n % x == n-47 \n  \
    \      return true\n    if n % x == n-48 \n        return true\n    if n % x ==\
    \ n-49 \n        return true\n    if n % x == n-50 \n        return true\n   \
    \ if n % x == ", "    if n == 1 \n        then true\n    else\n        if x ==\
    \ n\n            then true\n        else\n            if x % n == 0\n        \
    \        then true\n            else\n                false\n        end\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2, 3)\
    \ == true\n@assert is_simple_power(2, 4) == false\n@assert is_simple_power(2,\
    \ 5) == false\n@assert is_simple_power(2, 6) == true\n@assert is_simple_power(2,\
    \ 7) == false\n@assert is_simple_power(2, 8) == true\n@assert is_simple_power(2,\
    \ 9) == false\n@assert is_simple_power(2, 10) == true\n@assert is_simple_power(2,\
    \ 11) == false\n@assert is_simple_power(2, 12) == true\n@assert is_simple_power(2,\
    \ 13) == false\n@assert is_simple_power(2, 14) == true\n@assert is_simple_power(2,\
    \ 15) == false\n@assert is_simple_power(2, 16) == true\n@assert is_simple_power(2,\
    \ 17) == false\n@assert is_simple_power(2, 18) == true\n@assert is_simple_power(2,\
    \ 19) == false\n@assert is_simple_power(2, 20) == true\n@assert is_simple_power(2,\
    \ 21) == false\n@assert is_simple_power(2, 22) == true\n@assert is_simple_power(2,\
    \ 23) == false\n@assert is_simple_power(2, 24) == true\n@assert is_simple_power(2,\
    \ 25) == false\n@assert is_simple_power(2, 26) == true\n@assert is_simple_power(2,\
    \ 27) == false\n@assert is_simple_power(2, 28) == true\n@assert is_simple_power(2,\
    \ 29) == false\n@assert is_simple_power(2, 30) == true\n@assert is_simple_power(2,\
    \ 31) == false\n@assert is_simple_power(2, 32) == true\n@assert is_simple_power(2,\
    \ 33) == false\n@assert is_simple_power(2, 34) == true\n@assert is_simple_power(2,\
    \ 35) == false\n@assert is_simple_power(2, 36) == true\n@assert is_simple_power(2,\
    \ 37) == false\n@assert is_simple_power(2, 38) == true\n@assert is_simple_power(2,\
    \ 39) == false\n@assert is_simple_power(2, 40) == true\n@assert is_simple_power(2,\
    \ 41) == false\n@assert is_simple_power(2, 42) == true\n@assert is_simple_power(2,\
    \ 43) == false\n@assert is_simple_power(2, 44) == true\n@assert is_simple_power(2,\
    \ 45) == false\n@assert is_simple_power(2, 46) == true\n@assert is_simple_power(2,\
    \ 47) == false\n@assert is_simple_power(2, 48) == true\n", "    if n == 0 \n \
    \       return true\n    if n == 1 \n        return true\n    if n % 2 == 0 \n\
    \        return false\n    if n % 3 == 0 \n        return false\n    if n % 5\
    \ == 0 \n        return false\n    if n % 7 == 0 \n        return false\n    if\
    \ n % 11 == 0 \n        return false\n    if n % 13 == 0 \n        return false\n\
    \    if n % 17 == 0 \n        return false\n    if n % 19 == 0 \n        return\
    \ false\n    if n % 23 == 0 \n        return false\n    if n % 29 == 0 \n    \
    \    return false\n    if n % 31 == 0 \n        return false\n    if n % 37 ==\
    \ 0 \n        return false\n    if n % 41 == 0 \n        return false\n    if\
    \ n % 47 == 0 \n        return false\n    if n % 53 == 0 \n        return false\n\
    \    if n % 59 == 0 \n        return false\n    if n % 61 == 0 \n        return\
    \ false\n    if n % 67 == 0 \n        return false\n    if n % 71 == 0 \n    \
    \    return false\n    if n % 73 == 0 \n        return false\n    if n % 79 ==\
    \ 0 \n        return false\n    if n % 83 == 0 \n        return false\n    if\
    \ n % 89 == 0 \n        return false\n    if n % 97 == 0 \n        return false\n\
    \    if n % 101 == 0 \n        return false\n    if n % 103 == 0 \n        return\
    \ false\n    if n % 107 == 0 \n        return false\n    if n % 111 == 0 \n  \
    \      return false\n    if n % 117 == 0 \n        return false\n    if n % 121\
    \ == 0 \n        return false\n    if n % 123 == 0 \n        return false\n  \
    \  if n % 129 == 0 \n        return false\n    if n % 131 == 0 \n        return\
    \ false\n    if n % 137 == 0 \n        return false\n    if n % 141 == 0 \n  \
    \      return false\n    if n % 147 == 0 \n        return false\n    if n % 151\
    \ == 0 \n        return false\n    if n % 157 == 0 \n        return false\n  \
    \  if n % 161 == 0 \n        return false\n    if n % 167 == 0 \n        return\
    \ false\n    if n % 173 == 0 \n        return false\n    if n % 179 == 0 \n  \
    \      return false\n    if n % 183 == 0 \n        return false\n    if n % 189\
    \ == 0 \n        return false\n    if n % 193 == 0 \n        return false\n  \
    \  if n % 197 == 0 \n        return false\n    if n % 201 == 0 \n        return\
    \ false\n    if n % 207 == 0 \n        return false\n    if n % 211 == 0 \n  \
    \      return false\n    if n % 215 == 0 \n        return false\n    if n % 219\
    \ == 0 \n        return false\n    if n % 223 == 0 \n        return false\n  \
    \  if n % 229 == 0 \n        return false\n    if n % 233 == 0 \n        return\
    \ false\n    if n % 239 == 0 \n        return false\n    if n % 243 == 0 ", " \
    \   if x == 0 then return true\n    if x == 1 then return true\n    if n == 0\
    \ then return false\n    if n == 1 then return true\n    if n % 2 == 0 then return\
    \ false\n    if n % 3 == 0 then return false\n    if n % 5 == 0 then return false\n\
    \    if n % 7 == 0 then return false\n    if n % 11 == 0 then return false\n \
    \   if n % 13 == 0 then return false\n    if n % 17 == 0 then return false\n \
    \   if n % 19 == 0 then return false\n    if n % 23 == 0 then return false\n \
    \   if n % 29 == 0 then return false\n    if n % 31 == 0 then return false\n \
    \   if n % 37 == 0 then return false\n    if n % 41 == 0 then return false\n \
    \   if n % 43 == 0 then return false\n    if n % 47 == 0 then return false\n \
    \   if n % 53 == 0 then return false\n    if n % 59 == 0 then return false\n \
    \   if n % 61 == 0 then return false\n    if n % 67 == 0 then return false\n \
    \   if n % 71 == 0 then return false\n    if n % 73 == 0 then return false\n \
    \   if n % 79 == 0 then return false\n    if n % 83 == 0 then return false\n \
    \   if n % 89 == 0 then return false\n    if n % 97 == 0 then return false\n \
    \   if n % 101 == 0 then return false\n    if n % 103 == 0 then return false\n\
    \    if n % 107 == 0 then return false\n    if n % 111 == 0 then return false\n\
    \    if n % 113 == 0 then return false\n    if n % 117 == 0 then return false\n\
    \    if n % 121 == 0 then return false\n    if n % 123 == 0 then return false\n\
    \    if n % 127 == 0 then return false\n    if n % 131 == 0 then return false\n\
    \    if n % 133 == 0 then return false\n    if n % 137 == 0 then return false\n\
    \    if n % 141 == 0 then return false\n    if n % 143 == 0 then return false\n\
    \    if n % 147 == 0 then return false\n    if n % 151 == 0 then return false\n\
    \    if n % 153 == 0 then return false\n    if n % 157 == 0 then return false\n\
    \    if n % 161 == 0 then return false\n    if n % 163 == 0 then return false\n\
    \    if n % 167 == 0 then return false\n    if n % 171 == 0 then return false\n\
    \    if n % 173 == 0 then return false\n    if n % 177 == 0 then return false\n\
    \    if n % 181 == 0 then return false\n    if n % 183 == 0 then return false\n\
    \    if n % 187 == 0 then return false\n    if n % 191 == 0 then return false\n\
    \    if n % 193 == 0 then return false\n", "    if x == 0 then return true\n \
    \   if x == 1 then return true\n    if n == 0 then return false\n    if n == 1\
    \ then return false\n    if n % 2 == 0 then return false\n    if n % 3 == 0 then\
    \ return false\n    if n % 5 == 0 then return false\n    if n % 7 == 0 then return\
    \ false\n    if n % 11 == 0 then return false\n    if n % 13 == 0 then return\
    \ false\n    if n % 17 == 0 then return false\n    if n % 19 == 0 then return\
    \ false\n    if n % 23 == 0 then return false\n    if n % 29 == 0 then return\
    \ false\n    if n % 31 == 0 then return false\n    if n % 37 == 0 then return\
    \ false\n    if n % 41 == 0 then return false\n    if n % 43 == 0 then return\
    \ false\n    if n % 47 == 0 then return false\n    if n % 53 == 0 then return\
    \ false\n    if n % 59 == 0 then return false\n    if n % 61 == 0 then return\
    \ false\n    if n % 67 == 0 then return false\n    if n % 71 == 0 then return\
    \ false\n    if n % 73 == 0 then return false\n    if n % 79 == 0 then return\
    \ false\n    if n % 83 == 0 then return false\n    if n % 89 == 0 then return\
    \ false\n    if n % 97 == 0 then return false\n    if n % 101 == 0 then return\
    \ false\n    if n % 103 == 0 then return false\n    if n % 107 == 0 then return\
    \ false\n    if n % 111 == 0 then return false\n    if n % 113 == 0 then return\
    \ false\n    if n % 117 == 0 then return false\n    if n % 121 == 0 then return\
    \ false\n    if n % 123 == 0 then return false\n    if n % 127 == 0 then return\
    \ false\n    if n % 131 == 0 then return false\n    if n % 133 == 0 then return\
    \ false\n    if n % 137 == 0 then return false\n    if n % 141 == 0 then return\
    \ false\n    if n % 143 == 0 then return false\n    if n % 147 == 0 then return\
    \ false\n    if n % 151 == 0 then return false\n    if n % 153 == 0 then return\
    \ false\n    if n % 157 == 0 then return false\n    if n % 161 == 0 then return\
    \ false\n    if n % 163 == 0 then return false\n    if n % 167 == 0 then return\
    \ false\n    if n % 171 == 0 then return false\n    if n % 173 == 0 then return\
    \ false\n    if n % 177 == 0 then return false\n    if n % 181 == 0 then return\
    \ false\n    if n % 183 == 0 then return false\n    if n % 187 == 0 then return\
    \ false\n    if n % 191 == 0 then return false\n    if n % 193 == 0 then return\
    \ false\n", "    if n == 0 \n        return true\n    if n == 1 \n        return\
    \ true\n    if x == 0 \n        return false\n    if x == 1 \n        return true\n\
    \    if x == n \n        return true\n    if n % 2 == 0 \n        return false\n\
    \    if n % 3 == 0 \n        return false\n    if n % 5 == 0 \n        return\
    \ false\n    if n % 7 == 0 \n        return false\n    if n % 11 == 0 \n     \
    \   return false\n    if n % 13 == 0 \n        return false\n    if n % 17 ==\
    \ 0 \n        return false\n    if n % 19 == 0 \n        return false\n    if\
    \ n % 23 == 0 \n        return false\n    if n % 29 == 0 \n        return false\n\
    \    if n % 31 == 0 \n        return false\n    if n % 37 == 0 \n        return\
    \ false\n    if n % 41 == 0 \n        return false\n    if n % 43 == 0 \n    \
    \    return false\n    if n % 47 == 0 \n        return false\n    if n % 53 ==\
    \ 0 \n        return false\n    if n % 59 == 0 \n        return false\n    if\
    \ n % 61 == 0 \n        return false\n    if n % 67 == 0 \n        return false\n\
    \    if n % 71 == 0 \n        return false\n    if n % 73 == 0 \n        return\
    \ false\n    if n % 79 == 0 \n        return false\n    if n % 83 == 0 \n    \
    \    return false\n    if n % 89 == 0 \n        return false\n    if n % 97 ==\
    \ 0 \n        return false\n    if n % 101 == 0 \n        return false\n    if\
    \ n % 103 == 0 \n        return false\n    if n % 107 == 0 \n        return false\n\
    \    if n % 111 == 0 \n        return false\n    if n % 117 == 0 \n        return\
    \ false\n    if n % 121 == 0 \n        return false\n    if n % 123 == 0 \n  \
    \      return false\n    if n % 127 == 0 \n        return false\n    if n % 131\
    \ == 0 \n        return false\n    if n % 137 == 0 \n        return false\n  \
    \  if n % 141 == 0 \n        return false\n    if n % 147 == 0 \n        return\
    \ false\n    if n % 151 == 0 \n        return false\n    if n % 157 == 0 \n  \
    \      return false\n    if n % 161 == 0 \n        return false\n    if n % 167\
    \ == 0 \n        return false\n    if n % 173 == 0 \n        return false\n  \
    \  if n % 179 == 0 \n        return false\n    if n % 183 == 0 \n        return\
    \ false\n    if n % 189 == 0 \n        return false\n    if n % 193 == 0 \n  \
    \      return false\n    if n % 197 == 0 \n        return false\n    if n % 201\
    \ == 0 \n        return false\n    if n % 207 == 0 \n        return false\n  \
    \  if n % 211 == 0 \n        return false\n    if n % 215 == 0 \n        return\
    \ false\n    if n % 219 == 0 \n        return false\n    if n % 223 == 0 \n  \
    \      return false\n    if n % ", "    if x == 1\n        return true\n    else\
    \ if x == n\n        return true\n    else\n        return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns true if a number x is a power\
    \ of n and false in other cases.\nx is a power of n if n**int=x\nFor example:\n\
    \                            \"\"\"", "    if x == 0 then return true\n    if\
    \ x == 1 then return true\n    if n == 0 then return false\n    if n == 1 then\
    \ return true\n    if n % 2 == 0 then return false\n    if n % 3 == 0 then return\
    \ false\n    if n % 5 == 0 then return false\n    if n % 7 == 0 then return false\n\
    \    if n % 11 == 0 then return false\n    if n % 13 == 0 then return false\n\
    \    if n % 17 == 0 then return false\n    if n % 19 == 0 then return false\n\
    \    if n % 23 == 0 then return false\n    if n % 29 == 0 then return false\n\
    \    if n % 31 == 0 then return false\n    if n % 37 == 0 then return false\n\
    \    if n % 41 == 0 then return false\n    if n % 43 == 0 then return false\n\
    \    if n % 47 == 0 then return false\n    if n % 53 == 0 then return false\n\
    \    if n % 59 == 0 then return false\n    if n % 61 == 0 then return false\n\
    \    if n % 67 == 0 then return false\n    if n % 71 == 0 then return false\n\
    \    if n % 73 == 0 then return false\n    if n % 79 == 0 then return false\n\
    \    if n % 83 == 0 then return false\n    if n % 89 == 0 then return false\n\
    \    if n % 97 == 0 then return false\n    if n % 101 == 0 then return false\n\
    \    if n % 103 == 0 then return false\n    if n % 107 == 0 then return false\n\
    \    if n % 111 == 0 then return false\n    if n % 117 == 0 then return false\n\
    \    if n % 121 == 0 then return false\n    if n % 123 == 0 then return false\n\
    \    if n % 127 == 0 then return false\n    if n % 131 == 0 then return false\n\
    \    if n % 137 == 0 then return false\n    if n % 141 == 0 then return false\n\
    \    if n % 147 == 0 then return false\n    if n % 151 == 0 then return false\n\
    \    if n % 157 == 0 then return false\n    if n % 161 == 0 then return false\n\
    \    if n % 167 == 0 then return false\n    if n % 171 == 0 then return false\n\
    \    if n % 177 == 0 then return false\n    if n % 181 == 0 then return false\n\
    \    if n % 187 == 0 then return false\n    if n % 191 == 0 then return false\n\
    \    if n % 197 == 0 then return false\n    if n % 201 == 0 then return false\n\
    \    if n % 207 == 0 then return false\n    if n % 211 == 0 then return false\n\
    \    if n % 217 == 0 then return false\n    if n % 221 == 0 then return false\n\
    \    if n % 227 == 0 then return false\n    if n % 231 == 0 then return false\n",
  "    if x == 0 then return true\n    else if x == 1 then return true\n    else if\
    \ x == n then return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,4)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,7)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,8)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,10)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,13)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,16)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,19)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,20)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,22)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,25)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,28)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,29)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,30)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,31)\n\
    </cell>\n<code language=julia-1.5>", "    if x == 0 \n        return true\n  \
    \  if n == 0 \n        return false\n    if n == 1 \n        return true\n   \
    \ if n % 2 == 0 \n        return false\n    if x % n == 0 \n        return true\n\
    \    return is_simple_power(x div n, n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 30)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 31)\n</cell>\n<code language=julia-",
  "    if n == 0 \n        return true\n    else if n == 1 \n        return x == 1\n\
    \    else \n        return is_simple_power(x % n, n-1) == true\nend\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(2, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(4,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(5, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(6, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(7, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(8,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(9, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(10, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(11, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(12,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(13, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(14, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(15, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(16,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(17, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(18, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(19, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(20,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(21, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(22, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(23, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(24,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(25, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(26, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(27, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(28,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(29, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(30, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(31, 3)", "    if x == 0 \n        return true\n    else if x ==\
    \ 1 \n        return true\n    else if x == n \n        return true\n    else\
    \ \n        return false\nend\n</cell>\n<code language=julia-1.0>\n@assert is_simple_power(2,\
    \ 3) == true\n@assert is_simple_power(2, 4) == false\n@assert is_simple_power(2,\
    \ 5) == false\n@assert is_simple_power(2, 6) == true\n@assert is_simple_power(2,\
    \ 7) == false\n@assert is_simple_power(2, 8) == true\n@assert is_simple_power(2,\
    \ 9) == false\n@assert is_simple_power(2, 10) == true\n@assert is_simple_power(2,\
    \ 11) == false\n@assert is_simple_power(2, 12) == true\n@assert is_simple_power(2,\
    \ 13) == false\n@assert is_simple_power(2, 14) == true\n@assert is_simple_power(2,\
    \ 15) == false\n@assert is_simple_power(2, 16) == true\n@assert is_simple_power(2,\
    \ 17) == false\n@assert is_simple_power(2, 18) == true\n@assert is_simple_power(2,\
    \ 19) == false\n@assert is_simple_power(2, 20) == true\n@assert is_simple_power(2,\
    \ 21) == false\n@assert is_simple_power(2, 22) == true\n@assert is_simple_power(2,\
    \ 23) == false\n@assert is_simple_power(2, 24) == true\n@assert is_simple_power(2,\
    \ 25) == false\n@assert is_simple_power(2, 26) == true\n@assert is_simple_power(2,\
    \ 27) == false\n@assert is_simple_power(2, 28) == true\n@assert is_simple_power(2,\
    \ 29) == false\n@assert is_simple_power(2, 30) == true\n@assert is_simple_power(2,\
    \ 31) == false\n@assert is_simple_power(2, 32) == true\n@assert is_simple_power(2,\
    \ 33) == false\n@assert is_simple_power(2, 34) == true\n@assert is_simple_power(2,\
    \ 35) == false\n@assert is_simple_power(2, 36) == true\n@assert is_simple_power(2,\
    \ 37) == false\n@assert is_simple_power(2, 38) == true\n@assert is_simple_power(2,\
    \ 39) == false\n@assert is_simple_power(2, 40) == true\n@assert is_simple_power(2,\
    \ 41) == false\n@assert is_simple_power(2, 42) == true\n@assert is_simple_power(2,\
    \ 43) == false\n@assert is_simple_power(2, 44) == true\n@assert is_simple_power(2,\
    \ 45) == false\n@assert is_simple_power(2, 46) == true\n@assert is_simple_power(2,\
    \ 47) == false\n@assert is_simple_power(2, 48) == true\n@assert is_simple_power(2,\
    \ 49) == false", "    if n == 1 \n        then true\n    else\n        if n %\
    \ 2 == 0 \n            then is_simple_power(x, n / 2)\n        else\n        \
    \    if n % 3 == 0 \n                then is_simple_power(x, n / 3)\n        \
    \    else\n                if n % 5 == 0 \n                    then is_simple_power(x,\
    \ n / 5)\n                else\n                    if n % 7 == 0 \n         \
    \               then is_simple_power(x, n / 7)\n                    else\n   \
    \                     if n % 11 == 0 \n                            then is_simple_power(x,\
    \ n / 11)\n                        else\n                            if n % 13\
    \ == 0 \n                                then is_simple_power(x, n / 13)\n   \
    \                         else\n                                if n % 17 == 0\
    \ \n                                    then is_simple_power(x, n / 17)\n    \
    \                            else\n                                    if n %\
    \ 19 == 0 \n                                        then is_simple_power(x, n\
    \ / 19)\n                                    else\n                          \
    \              if n % 23 == 0 \n                                            then\
    \ is_simple_power(x, n / 23)\n                                        else\n \
    \                                           if n % 29 == 0 \n                \
    \                                then is_simple_power(x, n / 29)\n           \
    \                                 else\n                                     \
    \           if n % 37 == 0 \n                                                \
    \    then is_simple_power(x, n / 37)\n                                       \
    \         else\n                                                    if n % 53\
    \ == 0 \n                                                        then is_simple_power(x,\
    \ n / 53)\n                                                    else\n        \
    \                                                if n % 59 == 0 \n           \
    \                                                 then is_simple_power(x, n /\
    \ 59)\n                                                        else\n        \
    \                                                    if n % 67 == 0 \n       \
    \                                                         then is_simple_power(x,\
    \ n / 67)\n                                                            else\n\
    \                                                                if n % 71 ==\
    \ 0 \n                                                                    then\
    \ is_simple_power(x, n / 71)\n                                               \
    \                 else\n                                                     \
    \               if n % 73 == 0 \n                                            \
    \                            then is_simple_power(x, n / 73)\n               \
    \                                                     else\n                 \
    \                                       if n % 79 == 0 \n                    \
    \                                        then is_simple_power(x, n / 79)\n   \
    \                                                     else\n                 \
    \                                           if n % 83 == 0 \n                \
    \                                                then is_simple_power(x, n / 83)\n\
    \                                                            else\n          \
    \                                                      if n % 89 == 0 \n     \
    \                                                               then is_simple_power(x,\
    \ n / 89)\n                                                                else\n\
    \                                                                    if n % 97\
    \ == 0 \n                                                                    \
    \    then is_simple_power(x, n / 97)\n                                       \
    \                             else\n                                         \
    \               if n % 101 == 0 \n                                           \
    \                 then is_simple_power(x, n / 101)\n                         \
    \                               else\n                                       \
    \                     if n % 107 == 0 \n                                     \
    \                           then is_simple_power(x, n / 107)\n               \
    \                                             else\n                         \
    \                                       if n % 113 == 0 \n                   \
    \                                                 then is_simple_power(x, n /\
    \ 113)\n                                                                else\n\
    \                                                                    if n % 119\
    \ == 0 \n                                                                    \
    \    then is_simple_power(x, n / 119)\n                                      \
    \                              else\n                                        \
    \                if n % 127", "    if x == 1 \n        return true\n    else if\
    \ x == 0 \n        return false\n    else \n        return is_simple_power(x//n,\
    \ n) && is_simple_power(x%n, n)\nend", "    if x == 0 then return true\n    if\
    \ x == 1 then return true\n    if x == n then return true\n    if n % x == 0 then\
    \ return false\n    else return is_simple_power(x div n, n)\nend", "    if n ==\
    \ 0 then return true\n    if n == 1 then return true\n    if n % 2 == 0 then return\
    \ false\n    if n % 3 == 0 then return false\n    if n % 5 == 0 then return false\n\
    \    if n % 7 == 0 then return false\n    if n % 11 == 0 then return false\n \
    \   if n % 13 == 0 then return false\n    if n % 17 == 0 then return false\n \
    \   if n % 19 == 0 then return false\n    if n % 23 == 0 then return false\n \
    \   if n % 29 == 0 then return false\n    if n % 31 == 0 then return false\n \
    \   if n % 37 == 0 then return false\n    if n % 41 == 0 then return false\n \
    \   if n % 43 == 0 then return false\n    if n % 47 == 0 then return false\n \
    \   if n % 53 == 0 then return false\n    if n % 59 == 0 then return false\n \
    \   if n % 61 == 0 then return false\n    if n % 67 == 0 then return false\n \
    \   if n % 71 == 0 then return false\n    if n % 73 == 0 then return false\n \
    \   if n % 79 == 0 then return false\n    if n % 83 == 0 then return false\n \
    \   if n % 89 == 0 then return false\n    if n % 97 == 0 then return false\n \
    \   if n % 101 == 0 then return false\n    if n % 103 == 0 then return false\n\
    \    if n % 107 == 0 then return false\n    if n % 111 == 0 then return false\n\
    \    if n % 117 == 0 then return false\n    if n % 121 == 0 then return false\n\
    \    if n % 123 == 0 then return false\n    if n % 127 == 0 then return false\n\
    \    if n % 131 == 0 then return false\n    if n % 137 == 0 then return false\n\
    \    if n % 141 == 0 then return false\n    if n % 147 == 0 then return false\n\
    \    if n % 151 == 0 then return false\n    if n % 157 == 0 then return false\n\
    \    if n % 161 == 0 then return false\n    if n % 167 == 0 then return false\n\
    \    if n % 171 == 0 then return false\n    if n % 177 == 0 then return false\n\
    \    if n % 181 == 0 then return false\n    if n % 187 == 0 then return false\n\
    \    if n % 191 == 0 then return false\n    if n % 197 == 0 then return false\n\
    \    if n % 201 == 0 then return false\n    if n % 207 == 0 then return false\n\
    \    if n % 211 == 0 then return false\n    if n % 217 == 0 then return false\n\
    \    if n % 221 == 0 then return false\n    if n % 227 == 0 then return false\n\
    \    if n % 231 == 0 then return false\n    if n % 237 == 0 then return false\n\
    \    if n % 241 == 0 ", "    if n == 1 \n        return true\n    else if n %\
    \ 2 == 0 \n        return is_simple_power(x, n / 2)\n    else \n        return\
    \ false\nend\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 3)\n</cell>\n\
    <code language=julia-1.4>\nis_simple_power(2, 4)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 5)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 6)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 7)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 8)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 9)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 10)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 11)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 12)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 13)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 14)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 15)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 16)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 17)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 18)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 19)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 20)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 21)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 22)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 23)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 24)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 25)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 26)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 27)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 28)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 29)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 30)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 31)\n</cell>\n<code\
    \ language=julia-1.4>\n", "    if n == 1 \n        then return true\n    else\
    \ \n        if x % n == 0 \n            then return true\n        else return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 2)\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 30)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(", "    if x == 0 then return true\n  \
    \  if x == 1 then return false\n    if n == 0 then return false\n    if n == 1\
    \ then return true\n    if n % 2 == 0 then return is_simple_power(x//2, n//2)\n\
    \    if n % 2 == 1 then return false\n    if x % n == 0 then return true\n   \
    \ if x % n == 1 then return false\n    return is_simple_power(x//n, n//2)\nend\n\
    </cell>\n<code language=julia-1.3>\n@assert is_simple_power(2, 3) == true\n@assert\
    \ is_simple_power(2, 2) == false\n@assert is_simple_power(2, 1) == false\n@assert\
    \ is_simple_power(2, 0) == false\n@assert is_simple_power(2, -1) == false\n@assert\
    \ is_simple_power(2, -2) == false\n@assert is_simple_power(2, -3) == false\n@assert\
    \ is_simple_power(2, -4) == false\n@assert is_simple_power(2, -5) == false\n@assert\
    \ is_simple_power(2, -6) == false\n@assert is_simple_power(2, -7) == false\n@assert\
    \ is_simple_power(2, -8) == false\n@assert is_simple_power(2, -9) == false\n@assert\
    \ is_simple_power(2, -10) == false\n@assert is_simple_power(2, -11) == false\n\
    @assert is_simple_power(2, -12) == false\n@assert is_simple_power(2, -13) == false\n\
    @assert is_simple_power(2, -14) == false\n@assert is_simple_power(2, -15) == false\n\
    @assert is_simple_power(2, -16) == false\n@assert is_simple_power(2, -17) == false\n\
    @assert is_simple_power(2, -18) == false\n@assert is_simple_power(2, -19) == false\n\
    @assert is_simple_power(2, -20) == false\n@assert is_simple_power(2, -21) == false\n\
    @assert is_simple_power(2, -22) == false\n@assert is_simple_power(2, -23) == false\n\
    @assert is_simple_power(2, -24) == false\n@assert is_simple_power(2, -25) == false\n\
    @assert is_simple_power(2, -26) == false\n@assert is_simple_power(2, -27) == false\n\
    @assert is_simple_power(2, -28) == false\n@assert is_simple_power(2, -29) == false\n\
    @assert is_simple_power(2, -30) == false\n@assert is_simple_power(2, -31) == false\n\
    @assert is_simple_power(2, -32) == false\n@assert is_simple_power(2, -33) == false\n\
    @assert is_simple_power(2, -34) == false\n@assert is_simple_power(2, -35) == false\n\
    @assert is_simple_power(2, -36) == false\n@assert is_simple_power(2, ", "    if\
    \ x == 1\n        return true\n    else if x == 0\n        return false\n    else\n\
    \        return is_simple_power(x % n, n)\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 2)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 4)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 8)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 9)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 13)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 16)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 20)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 21)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 24)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 25)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 28)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 29)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 30)\n</cell>\n<code language=julia-1.5>\nis_simple_power(",
  "    if x == 0 then return true\n    else if x == 1 then return true\n    else if\
    \ n == 0 then return false\n    else if n == 1 then return true\n    else if x\
    \ % n == 0 then return false\n    else if x % n != 0 then return is_simple_power(x\
    \ div n, n-1)\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 2)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 4)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 8)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 9)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 13)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 16)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 20)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 21)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 24)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 25)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 28)\n</cell>\n",
  "    if x == 1\n        return true\n    if x == 0\n        return false\n    if\
    \ n == 0\n        return false\n    if n == 1\n        return true\n    if n %\
    \ 2 == 0\n        return false\n    if n % 3 == 0\n        return false\n    if\
    \ n % 5 == 0\n        return false\n    if n % 7 == 0\n        return false\n\
    \    if n % 11 == 0\n        return false\n    if n % 13 == 0\n        return\
    \ false\n    if n % 17 == 0\n        return false\n    if n % 19 == 0\n      \
    \  return false\n    if n % 23 == 0\n        return false\n    if n % 29 == 0\n\
    \        return false\n    if n % 37 == 0\n        return false\n    if n % 41\
    \ == 0\n        return false\n    if n % 43 == 0\n        return false\n    if\
    \ n % 47 == 0\n        return false\n    if n % 53 == 0\n        return false\n\
    \    if n % 59 == 0\n        return false\n    if n % 61 == 0\n        return\
    \ false\n    if n % 67 == 0\n        return false\n    if n % 71 == 0\n      \
    \  return false\n    if n % 73 == 0\n        return false\n    if n % 79 == 0\n\
    \        return false\n    if n % 83 == 0\n        return false\n    if n % 89\
    \ == 0\n        return false\n    if n % 97 == 0\n        return false\n    if\
    \ n % 101 == 0\n        return false\n    if n % 103 == 0\n        return false\n\
    \    if n % 107 == 0\n        return false\n    if n % 111 == 0\n        return\
    \ false\n    if n % 113 == 0\n        return false\n    if n % 117 == 0\n    \
    \    return false\n    if n % 121 == 0\n        return false\n    if n % 123 ==\
    \ 0\n        return false\n    if n % 127 == 0\n        return false\n    if n\
    \ % 131 == 0\n        return false\n    if n % 133 == 0\n        return false\n\
    \    if n % 137 == 0\n        return false\n    if n % 141 == 0\n        return\
    \ false\n    if n % 143 == 0\n        return false\n    if n % 147 == 0\n    \
    \    return false\n    if n % 151 == 0\n        return false\n    if n % 153 ==\
    \ 0\n        return false\n    if n % 157 == 0\n        return false\n    if n\
    \ % 161 == 0\n        return false\n    if n % 163 == 0\n        return false\n\
    \    if n % 167 == 0\n        return false\n    if n % 171 == 0\n        return\
    \ false\n    if n % 173 == 0\n        return false\n    if n % 177 == 0\n    \
    \    return false\n    if n % 181 == 0\n        return false\n    if n % 183 ==\
    \ 0\n        return false\n    if n % 187 == 0\n        return false\n    if n\
    \ % 191 == 0\n        return false\n    if n % 193 == 0\n        return false\n\
    \    if n % 197 == 0\n        return false\n    if n % 201 == 0\n        return\
    \ false\n    if n % 203 == 0\n        return false\n    if n % 207 == 0\n    \
    \    return false\n    if n % 211 == 0\n        return false\n    if ", "    if\
    \ n == 0 then return true\n    if x == 0 then return false\n    if x == 1 then\
    \ return true\n    if x == n then return true\n    if n % 2 == 1 then return false\n\
    \    if n % 3 == 1 then return false\n    if n % 5 == 1 then return false\n  \
    \  if n % 7 == 1 then return false\n    if n % 11 == 1 then return false\n   \
    \ if n % 13 == 1 then return false\n    if n % 17 == 1 then return false\n   \
    \ if n % 19 == 1 then return false\n    if n % 23 == 1 then return false\n   \
    \ if n % 29 == 1 then return false\n    if n % 37 == 1 then return false\n   \
    \ if n % 41 == 1 then return false\n    if n % 43 == 1 then return false\n   \
    \ if n % 47 == 1 then return false\n    if n % 53 == 1 then return false\n   \
    \ if n % 59 == 1 then return false\n    if n % 61 == 1 then return false\n   \
    \ if n % 67 == 1 then return false\n    if n % 71 == 1 then return false\n   \
    \ if n % 73 == 1 then return false\n    if n % 79 == 1 then return false\n   \
    \ if n % 83 == 1 then return false\n    if n % 89 == 1 then return false\n   \
    \ if n % 97 == 1 then return false\n    if n % 101 == 1 then return false\n  \
    \  if n % 103 == 1 then return false\n    if n % 107 == 1 then return false\n\
    \    if n % 109 == 1 then return false\n    if n % 113 == 1 then return false\n\
    \    if n % 117 == 1 then return false\n    if n % 121 == 1 then return false\n\
    \    if n % 123 == 1 then return false\n    if n % 127 == 1 then return false\n\
    \    if n % 131 == 1 then return false\n    if n % 133 == 1 then return false\n\
    \    if n % 137 == 1 then return false\n    if n % 141 == 1 then return false\n\
    \    if n % 143 == 1 then return false\n    if n % 147 == 1 then return false\n\
    \    if n % 151 == 1 then return false\n    if n % 153 == 1 then return false\n\
    \    if n % 157 == 1 then return false\n    if n % 161 == 1 then return false\n\
    \    if n % 163 == 1 then return false\n    if n % 167 == 1 then return false\n\
    \    if n % 171 == 1 then return false\n    if n % 173 == 1 then return false\n\
    \    if n % 177 == 1 then return false\n    if n % 181 == 1 then return false\n\
    \    if n % 183 == 1 then return false\n    if n % 187 == 1 then return false\n\
    \    if n % 191 == 1 then return false\n    if n % 193 == 1 then return false\n\
    \    if n % 197 == 1 then return false\n    if n % 201 == 1 then return false\n\
    \    if n % 203 == 1 then return false\n    if n % 207 == 1 then return false\n\
    \    if n % 211 == 1 then return ", "    if x == 1 \n        return true\n   \
    \ else if x == 0 \n        return false\n    else \n        return is_simple_power(x\
    \ % n, n) \nend\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(3,\
    \ 2) == true\n@assert is_simple_power(3, 3) == false\n@assert is_simple_power(3,\
    \ 5) == true\n@assert is_simple_power(3, 7) == false\n@assert is_simple_power(3,\
    \ 8) == true\n@assert is_simple_power(3, 9) == false\n@assert is_simple_power(3,\
    \ 10) == true\n@assert is_simple_power(3, 11) == false\n@assert is_simple_power(3,\
    \ 12) == true\n@assert is_simple_power(3, 13) == false\n@assert is_simple_power(3,\
    \ 14) == true\n@assert is_simple_power(3, 15) == false\n@assert is_simple_power(3,\
    \ 16) == true\n@assert is_simple_power(3, 17) == false\n@assert is_simple_power(3,\
    \ 18) == true\n@assert is_simple_power(3, 19) == false\n@assert is_simple_power(3,\
    \ 20) == true\n@assert is_simple_power(3, 21) == false\n@assert is_simple_power(3,\
    \ 22) == true\n@assert is_simple_power(3, 23) == false\n@assert is_simple_power(3,\
    \ 24) == true\n@assert is_simple_power(3, 25) == false\n@assert is_simple_power(3,\
    \ 26) == true\n@assert is_simple_power(3, 27) == false\n@assert is_simple_power(3,\
    \ 28) == true\n@assert is_simple_power(3, 29) == false\n@assert is_simple_power(3,\
    \ 30) == true\n@assert is_simple_power(3, 31) == false\n@assert is_simple_power(3,\
    \ 32) == true\n@assert is_simple_power(3, 33) == false\n@assert is_simple_power(3,\
    \ 34) == true\n@assert is_simple_power(3, 35) == false\n@assert is_simple_power(3,\
    \ 36) == true\n@assert is_simple_power(3, 37) == false\n@assert is_simple_power(3,\
    \ 38) == true\n@assert is_simple_power(3, 39) == false\n@assert is_simple_power(3,\
    \ 40) == true\n@assert is_simple_power(3, 41) == false\n@assert is_simple_power(3,\
    \ 42) == true\n@assert is_simple_power(3, 43) == false\n@assert is_simple_power(3,\
    \ 44) == true\n@assert is_simple_power(3, 45) == false\n@assert is_simple_power(3,\
    \ 46) == true\n@assert is_simple_power(3, 47) == false\n@assert is_simple_power(3,\
    \ 48) == true\n@assert is_simple_power(3, 49) == false\n@assert is_simple_power(3,\
    \ 50) == true\n@", "    if x == 0 then return true\n    if x == 1 then return\
    \ true\n    if x == n then return true\n    if n % x == 0 then return false\n\
    \    return is_simple_power(x div n, n)\nend\n</cell>\n<code language=julia-1.3>\n\
    @assert is_simple_power(2, 2) == true\n@assert is_simple_power(3, 2) == false\n\
    @assert is_simple_power(4, 2) == true\n@assert is_simple_power(5, 2) == false\n\
    @assert is_simple_power(6, 2) == true\n@assert is_simple_power(7, 2) == false\n\
    @assert is_simple_power(8, 2) == true\n@assert is_simple_power(9, 2) == false\n\
    @assert is_simple_power(10, 2) == true\n@assert is_simple_power(11, 2) == false\n\
    @assert is_simple_power(12, 2) == true\n@assert is_simple_power(13, 2) == false\n\
    @assert is_simple_power(14, 2) == true\n@assert is_simple_power(15, 2) == false\n\
    @assert is_simple_power(16, 2) == true\n@assert is_simple_power(17, 2) == false\n\
    @assert is_simple_power(18, 2) == true\n@assert is_simple_power(19, 2) == false\n\
    @assert is_simple_power(20, 2) == true\n@assert is_simple_power(21, 2) == false\n\
    @assert is_simple_power(22, 2) == true\n@assert is_simple_power(23, 2) == false\n\
    @assert is_simple_power(24, 2) == true\n@assert is_simple_power(25, 2) == false\n\
    @assert is_simple_power(26, 2) == true\n@assert is_simple_power(27, 2) == false\n\
    @assert is_simple_power(28, 2) == true\n@assert is_simple_power(29, 2) == false\n\
    @assert is_simple_power(30, 2) == true\n@assert is_simple_power(31, 2) == false\n\
    @assert is_simple_power(32, 2) == true\n@assert is_simple_power(33, 2) == false\n\
    @assert is_simple_power(34, 2) == true\n@assert is_simple_power(35, 2) == false\n\
    @assert is_simple_power(36, 2) == true\n@assert is_simple_power(37, 2) == false\n\
    @assert is_simple_power(38, 2) == true\n@assert is_simple_power(39, 2) == false\n\
    @assert is_simple_power(40, 2) == true\n@assert is_simple_power(41, 2) == false\n\
    @assert is_simple_power(42, 2) == true\n@assert is_simple_power(43, 2) == false\n\
    @assert is_simple_power(44, 2) == true\n@assert is_simple_power(45, 2) == false\n\
    @assert is_simple_power(46, 2) == true\n@assert is_simple_power(47, 2) == false\n\
    @", "    if n == 0 then return true\n    if n == 1 then return true\n    if n\
    \ % 2 == 0 then return false\n    if n % 3 == 0 then return false\n    if n %\
    \ 5 == 0 then return false\n    if n % 7 == 0 then return false\n    if n % 11\
    \ == 0 then return false\n    if n % 13 == 0 then return false\n    if n % 17\
    \ == 0 then return false\n    if n % 19 == 0 then return false\n    if n % 23\
    \ == 0 then return false\n    if n % 29 == 0 then return false\n    if n % 31\
    \ == 0 then return false\n    if n % 37 == 0 then return false\n    if n % 41\
    \ == 0 then return false\n    if n % 43 == 0 then return false\n    if n % 47\
    \ == 0 then return false\n    if n % 53 == 0 then return false\n    if n % 59\
    \ == 0 then return false\n    if n % 61 == 0 then return false\n    if n % 67\
    \ == 0 then return false\n    if n % 71 == 0 then return false\n    if n % 73\
    \ == 0 then return false\n    if n % 79 == 0 then return false\n    if n % 83\
    \ == 0 then return false\n    if n % 89 == 0 then return false\n    if n % 97\
    \ == 0 then return false\n    if n % 103 == 0 then return false\n    if n % 109\
    \ == 0 then return false\n    if n % 113 == 0 then return false\n    if n % 127\
    \ == 0 then return false\n    if n % 131 == 0 then return false\n    if n % 137\
    \ == 0 then return false\n    if n % 143 == 0 then return false\n    if n % 149\
    \ == 0 then return false\n    if n % 153 == 0 then return false\n    if n % 157\
    \ == 0 then return false\n    if n % 161 == 0 then return false\n    if n % 167\
    \ == 0 then return false\n    if n % 173 == 0 then return false\n    if n % 179\
    \ == 0 then return false\n    if n % 183 == 0 then return false\n    if n % 189\
    \ == 0 then return false\n    if n % 193 == 0 then return false\n    if n % 197\
    \ == 0 then return false\n    if n % 201 == 0 then return false\n    if n % 207\
    \ == 0 then return false\n    if n % 211 == 0 then return false\n    if n % 215\
    \ == 0 then return false\n    if n % 219 == 0 then return false\n    if n % 223\
    \ == 0 then return false\n    if n % 229 == 0 then return false\n    if n % 233\
    \ == 0 then return false\n    if n % 239 == 0 then return false\n    if n % 243\
    \ == 0 then return false\n    if n % 247 == 0 then return false\n    if n % 251\
    \ == 0 then return false\n    if n % 257 == 0 ", "    if n == 0 then return true\n\
    \    if x == 0 then return false\n    if x == 1 then return true\n    if x ==\
    \ n then return true\n    if n % 2 == 1 then return false\n    if n % 3 == 1 then\
    \ return false\n    if n % 5 == 1 then return false\n    if n % 7 == 1 then return\
    \ false\n    if n % 11 == 1 then return false\n    if n % 13 == 1 then return\
    \ false\n    if n % 17 == 1 then return false\n    if n % 19 == 1 then return\
    \ false\n    if n % 23 == 1 then return false\n    if n % 29 == 1 then return\
    \ false\n    if n % 31 == 1 then return false\n    if n % 37 == 1 then return\
    \ false\n    if n % 41 == 1 then return false\n    if n % 43 == 1 then return\
    \ false\n    if n % 47 == 1 then return false\n    if n % 53 == 1 then return\
    \ false\n    if n % 59 == 1 then return false\n    if n % 61 == 1 then return\
    \ false\n    if n % 67 == 1 then return false\n    if n % 71 == 1 then return\
    \ false\n    if n % 73 == 1 then return false\n    if n % 79 == 1 then return\
    \ false\n    if n % 83 == 1 then return false\n    if n % 89 == 1 then return\
    \ false\n    if n % 97 == 1 then return false\n    if n % 101 == 1 then return\
    \ false\n    if n % 103 == 1 then return false\n    if n % 107 == 1 then return\
    \ false\n    if n % 109 == 1 then return false\n    if n % 113 == 1 then return\
    \ false\n    if n % 117 == 1 then return false\n    if n % 121 == 1 then return\
    \ false\n    if n % 123 == 1 then return false\n    if n % 127 == 1 then return\
    \ false\n    if n % 131 == 1 then return false\n    if n % 137 == 1 then return\
    \ false\n    if n % 141 == 1 then return false\n    if n % 147 == 1 then return\
    \ false\n    if n % 151 == 1 then return false\n    if n % 157 == 1 then return\
    \ false\n    if n % 161 == 1 then return false\n    if n % 165 == 1 then return\
    \ false\n    if n % 169 == 1 then return false\n    if n % 173 == 1 then return\
    \ false\n    if n % 177 == 1 then return false\n    if n % 181 == 1 then return\
    \ false\n    if n % 185 == 1 then return false\n    if n % 189 == 1 then return\
    \ false\n    if n % 193 == 1 then return false\n    if n % 197 == 1 then return\
    \ false\n    if n % 201 == 1 then return false\n    if n % 205 == 1 then return\
    \ false\n    if n % 209 == 1 then return false\n    if n % 213 == 1 then return\
    \ false\n    if n % 217 == 1 then return false\n    if n % 221 == 1 then return\
    \ false\n    if n % 225 == 1 then return false\n    if n % 229 == 1 then return\
    \ false\n    if n % 233 == 1 then ", "    if x == 0 then return true\n    if x\
    \ == 1 then return true\n    if x == n then return true\n    if n % x == 0 then\
    \ return false\n    else return is_simple_power(x, n//x)\nend", "    if n == 0\
    \ \n        true\n    elseif n == 1 \n        true\n    elseif n % 2 == 0 \n \
    \       is_simple_power(x, n/2)\n    else\n        is_simple_power(x, n/2)\n \
    \   end\nend", "    if x == 1\n        return true\n    else if x == 0\n     \
    \   return false\n    else\n        return is_simple_power(x div n, n) || is_simple_power(x\
    \ mod n, n)\nend", "    if n==0 \n        return true\n    else if n==1 \n   \
    \     return x==1\n    else \n        return is_simple_power(x^n, n-1)\nend",
  "    if x == 0 \n        return true\n    if x == 1 \n        return true\n    if\
    \ x == n \n        return true\n    if n % x == 0 \n        return false\n   \
    \ return is_simple_power(x, n / x)\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 5)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 9)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 13)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 17)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 21)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 25)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 29)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 30)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 31)\n</", "    if n == 0 \n        true\n    elseif n == 1\
    \ \n        true\n    elseif n % 2 == 0 \n        is_simple_power(x, n / 2)\n\
    \    else\n        is_simple_power(x, n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 30)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 31)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, ", "    if x == 0 then return true\n    if n == 0 then return\
    \ false\n    if n == 1 then return true\n    if n % 2 == 0 then return is_simple_power(x\
    \ div 2, n div 2)\n    if n % 2 == 1 then return is_simple_power(x div 2, n div\
    \ 2) || is_simple_power(x div 2, n div 2)\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2,2)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,4)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,7)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,8)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,10)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,13)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,16)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,19)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,20)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,22)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,25)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,28)\n\
    </cell>\n<code language=julia-", "    if x == 0 \n        then return true\n \
    \   else if x == 1 \n        then return true\n    else if x == n \n        then\
    \ return true\n    else if n % x == 0 \n        then return false\n    else return\
    \ is_simple_power(x, n//x)\nend", "    if n == 0 then return true\n    if n ==\
    \ 1 then return true\n    if n % 2 == 0 then return false\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    if n==0 then return true\n\
    \    if n==1 then return true\n    if n==2 then return x==1\n    if n>2 then return\
    \ is_simple_power(x, n-1) and is_simple_power(x, n-2) \nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 5)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 9)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 13)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 17)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 21)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 25)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 29)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 30)\n</cell>\n<code language=julia-1.5>",
  "    if n == 0 \n        return true\n    else if n == 1 \n        return x == 1\n\
    \    else \n        return is_simple_power(x^n, n-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 2)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 3)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 4)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 5)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 6)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 7)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 8)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 9)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 10)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 11)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 12)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 13)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 14)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 15)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 16)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 17)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 18)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 19)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 20)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 21)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 22)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 23)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 24)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 25)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 26)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 27)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 28)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 29)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 30)\n</cell>\n<code language=julia-1.3>\nis_", "    if n ==\
    \ 0 then return true\n    if n == 1 then return true\n    if x == 0 then return\
    \ false\n    if x == 1 then return false\n    if x == n then return true\n   \
    \ if n % 2 == 0 then return false\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if x == 0 \n        return true\n\
    \    if x == 1 \n        return true\n    if x == n \n        return true\n  \
    \  if n % x == 0 \n        return false\n    return is_simple_power(x, n//x)\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2, 3) == true\n\
    @assert is_simple_power(2, 2) == true\n@assert is_simple_power(2, 1) == true\n\
    @assert is_simple_power(2, 0) == true\n@assert is_simple_power(2, -1) == false\n\
    @assert is_simple_power(2, -2) == false\n@assert is_simple_power(2, -3) == false\n\
    @assert is_simple_power(2, -4) == false\n@assert is_simple_power(2, -5) == false\n\
    @assert is_simple_power(2, -6) == false\n@assert is_simple_power(2, -7) == false\n\
    @assert is_simple_power(2, -8) == false\n@assert is_simple_power(2, -9) == false\n\
    @assert is_simple_power(2, -10) == false\n@assert is_simple_power(2, -11) == false\n\
    @assert is_simple_power(2, -12) == false\n@assert is_simple_power(2, -13) == false\n\
    @assert is_simple_power(2, -14) == false\n@assert is_simple_power(2, -15) == false\n\
    @assert is_simple_power(2, -16) == false\n@assert is_simple_power(2, -17) == false\n\
    @assert is_simple_power(2, -18) == false\n@assert is_simple_power(2, -19) == false\n\
    @assert is_simple_power(2, -20) == false\n@assert is_simple_power(2, -21) == false\n\
    @assert is_simple_power(2, -22) == false\n@assert is_simple_power(2, -23) == false\n\
    @assert is_simple_power(2, -24) == false\n@assert is_simple_power(2, -25) == false\n\
    @assert is_simple_power(2, -26) == false\n@assert is_simple_power(2, -27) == false\n\
    @assert is_simple_power(2, -28) == false\n@assert is_simple_power(2, -29) == false\n\
    @assert is_simple_power(2, -30) == false\n@assert is_simple_power(2, -31) == false\n\
    @assert is_simple_power(2, -32) == false\n@assert is_simple_power(2, -33) == false\n\
    @assert is_simple_power(2, -34) == false\n@assert is_simple_power(2, -35) == false\n\
    @assert is_simple_power(2, -36) == false\n@assert is_simple_power(2, -37) == false\n\
    @assert is_simple_power(2, -38) == false\n@assert is_simple_power(2, -39) == false\n\
    @assert is_simple_power(2, -40) == false\n@assert is_simple_power(", "    if x\
    \ == 0 \n        return true\n    else if x == 1 \n        return true\n    else\
    \ if x == n\n        return true\n    else \n        return false\nend\n</cell>\n\
    <code language=julia-1.4>\nis_simple_power(2,3)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,4)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,5)\n\
    </cell>\n<code language=julia-1.4>\nis_simple_power(2,6)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,7)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,8)\n\
    </cell>\n<code language=julia-1.4>\nis_simple_power(2,9)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,10)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,11)\n\
    </cell>\n<code language=julia-1.4>\nis_simple_power(2,12)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,13)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,14)\n\
    </cell>\n<code language=julia-1.4>\nis_simple_power(2,15)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,16)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,17)\n\
    </cell>\n<code language=julia-1.4>\nis_simple_power(2,18)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,19)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,20)\n\
    </cell>\n<code language=julia-1.4>\nis_simple_power(2,21)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,22)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,23)\n\
    </cell>\n<code language=julia-1.4>\nis_simple_power(2,24)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,25)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,26)\n\
    </cell>\n<code language=julia-1.4>\nis_simple_power(2,27)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,28)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,29)\n\
    </cell>\n<code language=julia-1.4>\nis_simple_power(2,30)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2,31)\n</cell>\n<code language=julia-1.", "    if x == 0 \n  \
    \      return true\n    if x == 1 \n        return true\n    if x == n \n    \
    \    return true\n    if n % x == 0 \n        return false\n    return is_simple_power(x\
    \ , n)\nend", "    if x == 0 then return true\n    if x == 1 then return true\n\
    \    if x == n then return true\n    if n % x == 0 then return false\n    if n\
    \ % x == 1 then return false\n    if n % x == n then return true\n    return is_simple_power(x,\
    \ n/x)\nend\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2, 2)\
    \ == true\n@assert is_simple_power(2, 3) == false\n@assert is_simple_power(2,\
    \ 4) == true\n@assert is_simple_power(2, 5) == false\n@assert is_simple_power(2,\
    \ 6) == true\n@assert is_simple_power(2, 7) == false\n@assert is_simple_power(2,\
    \ 8) == true\n@assert is_simple_power(2, 9) == false\n@assert is_simple_power(2,\
    \ 10) == true\n@assert is_simple_power(2, 11) == false\n@assert is_simple_power(2,\
    \ 12) == true\n@assert is_simple_power(2, 13) == false\n@assert is_simple_power(2,\
    \ 14) == true\n@assert is_simple_power(2, 15) == false\n@assert is_simple_power(2,\
    \ 16) == true\n@assert is_simple_power(2, 17) == false\n@assert is_simple_power(2,\
    \ 18) == true\n@assert is_simple_power(2, 19) == false\n@assert is_simple_power(2,\
    \ 20) == true\n@assert is_simple_power(2, 21) == false\n@assert is_simple_power(2,\
    \ 22) == true\n@assert is_simple_power(2, 23) == false\n@assert is_simple_power(2,\
    \ 24) == true\n@assert is_simple_power(2, 25) == false\n@assert is_simple_power(2,\
    \ 26) == true\n@assert is_simple_power(2, 27) == false\n@assert is_simple_power(2,\
    \ 28) == true\n@assert is_simple_power(2, 29) == false\n@assert is_simple_power(2,\
    \ 30) == true\n@assert is_simple_power(2, 31) == false\n@assert is_simple_power(2,\
    \ 32) == true\n@assert is_simple_power(2, 33) == false\n@assert is_simple_power(2,\
    \ 34) == true\n@assert is_simple_power(2, 35) == false\n@assert is_simple_power(2,\
    \ 36) == true\n@assert is_simple_power(2, 37) == false\n@assert is_simple_power(2,\
    \ 38) == true\n@assert is_simple_power(2, 39) == false\n@assert is_simple_power(2,\
    \ 40) == true\n@assert is_simple_power(2, 41) == false\n@assert is_simple_power(2,\
    \ 42) == true\n@assert is_simple_power(2, 43) == false\n@assert is_simple_power(2,\
    \ 44) == true\n@assert is_simple_power(2, 45) == false\n@assert is_simple_power(2,\
    \ 46", "    if x == 0 \n        return true\n    else \n        return false\n\
    end", "    if x == 0 then return true\n    if x == 1 then return true\n    if\
    \ n == 0 then return false\n    if n == 1 then return false\n    if n % 2 == 0\
    \ then return false\n    if n % 3 == 0 then return false\n    if n % 5 == 0 then\
    \ return false\n    if n % 7 == 0 then return false\n    if n % 11 == 0 then return\
    \ false\n    if n % 13 == 0 then return false\n    if n % 17 == 0 then return\
    \ false\n    if n % 19 == 0 then return false\n    if n % 23 == 0 then return\
    \ false\n    if n % 29 == 0 then return false\n    if n % 31 == 0 then return\
    \ false\n    if n % 37 == 0 then return false\n    if n % 41 == 0 then return\
    \ false\n    if n % 43 == 0 then return false\n    if n % 47 == 0 then return\
    \ false\n    if n % 53 == 0 then return false\n    if n % 59 == 0 then return\
    \ false\n    if n % 61 == 0 then return false\n    if n % 67 == 0 then return\
    \ false\n    if n % 71 == 0 then return false\n    if n % 73 == 0 then return\
    \ false\n    if n % 79 == 0 then return false\n    if n % 83 == 0 then return\
    \ false\n    if n % 89 == 0 then return false\n    if n % 97 == 0 then return\
    \ false\n    if n % 101 == 0 then return false\n    if n % 103 == 0 then return\
    \ false\n    if n % 107 == 0 then return false\n    if n % 111 == 0 then return\
    \ false\n    if n % 117 == 0 then return false\n    if n % 121 == 0 then return\
    \ false\n    if n % 123 == 0 then return false\n    if n % 127 == 0 then return\
    \ false\n    if n % 131 == 0 then return false\n    if n % 137 == 0 then return\
    \ false\n    if n % 141 == 0 then return false\n    if n % 147 == 0 then return\
    \ false\n    if n % 151 == 0 then return false\n    if n % 157 == 0 then return\
    \ false\n    if n % 161 == 0 then return false\n    if n % 167 == 0 then return\
    \ false\n    if n % 173 == 0 then return false\n    if n % 179 == 0 then return\
    \ false\n    if n % 183 == 0 then return false\n    if n % 191 == 0 then return\
    \ false\n    if n % 197 == 0 then return false\n    if n % 201 == 0 then return\
    \ false\n    if n % 207 == 0 then return false\n    if n % 211 == 0 then return\
    \ false\n    if n % 217 == 0 then return false\n    if n % 221 == 0 then return\
    \ false\n    if n % 227 == 0 then return false\n    if n % 231 == 0 then return\
    \ false\n    if n % 237 == 0 then return false\n", "    if n == 0 \n        return\
    \ true\n    else if n == 1 \n        return x == n\n    else \n        return\
    \ is_simple_power(x^n, n-1)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_simple_power(2, 3) == true\n@assert is_simple_power(2, 4) == false\n@assert\
    \ is_simple_power(2, 5) == true\n@assert is_simple_power(2, 6) == false\n@assert\
    \ is_simple_power(2, 7) == true\n@assert is_simple_power(2, 8) == false\n@assert\
    \ is_simple_power(2, 9) == true\n@assert is_simple_power(2, 10) == false\n@assert\
    \ is_simple_power(2, 11) == true\n@assert is_simple_power(2, 12) == false\n@assert\
    \ is_simple_power(2, 13) == true\n@assert is_simple_power(2, 14) == false\n@assert\
    \ is_simple_power(2, 15) == true\n@assert is_simple_power(2, 16) == false\n@assert\
    \ is_simple_power(2, 17) == true\n@assert is_simple_power(2, 18) == false\n@assert\
    \ is_simple_power(2, 19) == true\n@assert is_simple_power(2, 20) == false\n@assert\
    \ is_simple_power(2, 21) == true\n@assert is_simple_power(2, 22) == false\n@assert\
    \ is_simple_power(2, 23) == true\n@assert is_simple_power(2, 24) == false\n@assert\
    \ is_simple_power(2, 25) == true\n@assert is_simple_power(2, 26) == false\n@assert\
    \ is_simple_power(2, 27) == true\n@assert is_simple_power(2, 28) == false\n@assert\
    \ is_simple_power(2, 29) == true\n@assert is_simple_power(2, 30) == false\n@assert\
    \ is_simple_power(2, 31) == true\n@assert is_simple_power(2, 32) == false\n@assert\
    \ is_simple_power(2, 33) == true\n@assert is_simple_power(2, 34) == false\n@assert\
    \ is_simple_power(2, 35) == true\n@assert is_simple_power(2, 36) == false\n@assert\
    \ is_simple_power(2, 37) == true\n@assert is_simple_power(2, 38) == false\n@assert\
    \ is_simple_power(2, 39) == true\n@assert is_simple_power(2, 40) == false\n@assert\
    \ is_simple_power(2, 41) == true\n@assert is_simple_power(2, 42) == false\n@assert\
    \ is_simple_power(2, 43) == true\n@assert is_simple_power(2, 44) == false\n@assert\
    \ is_simple_power(2, 45) == true\n@assert is_simple_power(2, 46) == false\n@assert\
    \ is_simple_power(2, 47) == true\n@assert is_simple_power(2, 48) == false\n@assert\
    \ is_simple_power(2, 49) == true\n", "    if n == 0 \n        return true\n  \
    \  else if n == 1 \n        return true\n    else \n        return is_simple_power(x,\
    \ n-1) == true and is_simple_power(x, n-2) == true\nend", "    if x == 1 \n  \
    \      then return true\n    else if x == n\n        then return true\n    else\
    \ \n        return false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"Your\
    \ task is to write a function that returns true if a number x is a simple\n  \
    \  power of n and false in other cases.\n    x is a simple power of n if n**int=x\n\
    \    For example:\n                            \"\"\"", "    if x == 1 \n    \
    \    return true\n    if x == 0 \n        return false\n    if n == 0 \n     \
    \   return false\n    if n == 1 \n        return true\n    if n % 2 == 0 \n  \
    \      return is_simple_power(x, n/2)\n    if n % 2 == 1 \n        return false\n\
    \    return is_simple_power(x, n/2) && is_simple_power(x, n/2-1)\nend", "    if\
    \ x == 0 then return true\n    if n == 0 then return false\n    if n == 1 then\
    \ return true\n    if n % 2 == 0 then return false\n    if x % n == 0 then return\
    \ true\n    if x % n != 0 then return false\n    return is_simple_power(x div\
    \ n, n div 2)\nend\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(3,\
    \ 2) == true\n@assert is_simple_power(3, 3) == true\n@assert is_simple_power(3,\
    \ 5) == false\n@assert is_simple_power(3, 7) == false\n@assert is_simple_power(3,\
    \ 11) == false\n@assert is_simple_power(3, 13) == false\n@assert is_simple_power(3,\
    \ 17) == false\n@assert is_simple_power(3, 19) == false\n@assert is_simple_power(3,\
    \ 23) == true\n@assert is_simple_power(3, 25) == false\n@assert is_simple_power(3,\
    \ 27) == false\n@assert is_simple_power(3, 29) == false\n@assert is_simple_power(3,\
    \ 31) == false\n@assert is_simple_power(3, 33) == false\n@assert is_simple_power(3,\
    \ 35) == false\n@assert is_simple_power(3, 37) == false\n@assert is_simple_power(3,\
    \ 39) == false\n@assert is_simple_power(3, 41) == false\n@assert is_simple_power(3,\
    \ 43) == false\n@assert is_simple_power(3, 45) == false\n@assert is_simple_power(3,\
    \ 47) == false\n@assert is_simple_power(3, 49) == false\n@assert is_simple_power(3,\
    \ 51) == false\n@assert is_simple_power(3, 53) == false\n@assert is_simple_power(3,\
    \ 55) == false\n@assert is_simple_power(3, 57) == false\n@assert is_simple_power(3,\
    \ 59) == false\n@assert is_simple_power(3, 61) == false\n@assert is_simple_power(3,\
    \ 63) == false\n@assert is_simple_power(3, 65) == false\n@assert is_simple_power(3,\
    \ 67) == false\n@assert is_simple_power(3, 69) == false\n@assert is_simple_power(3,\
    \ 71) == false\n@assert is_simple_power(3, 73) == false\n@assert is_simple_power(3,\
    \ 75) == false\n@assert is_simple_power(3, 77) == false\n@assert is_simple_power(3,\
    \ 79) == false\n@assert is_simple_power(3, 81) == false\n@assert is_simple_power(3,\
    \ 83) == false\n@assert is_simple_power(3, 85) == false\n@assert is_simple_power(3,\
    \ 87) == false\n@assert is_simple_power(3, 89) == false\n@assert is_simple_power(3,\
    \ 91) == false\n@assert is_simple_power(3, 93) == false\n@", "    if x == 1 \n\
    \        return true\n    if x == 0 \n        return false\n    if n == 0 \n \
    \       return false\n    if n == 1 \n        return true\n    if n % 2 == 0 \n\
    \        return false\n    if n % 3 == 0 \n        return false\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if\
    \ x == 0 \n        return true\n    else if n == 0 \n        return false\n  \
    \  else if n%2 == 0 \n        return is_simple_power(x, n/2)\n    else \n    \
    \    return is_simple_power(x, n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,4)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,7)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,8)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,10)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,13)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,16)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,19)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,20)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,22)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,25)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,28)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,29)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,30)\n</cell>\n<code language=julia-1.5>\nis_simple_power(",
  "    if n == 0 \n        return true\n    else if n == 1 \n        return x == true\n\
    \    else \n        return is_simple_power(x^n, n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 5)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 9)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 13)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 17)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 21)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 25)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 29)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 30)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 31)\n</cell>\n<code language=julia-1.5>", "    if x == 0 then\
    \ return true\n    if x == 1 then return true\n    if x == n then return true\n\
    \    if x % n == 0 then return false\n    else return is_simple_power(x div n,\
    \ n)\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 3)\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(2, 4)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 7)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 8)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 11)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 12)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 15)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 16)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 19)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 20)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 23)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 24)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 27)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 28)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 30)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 3", "    if x ==\
    \ 1\n        return true\n    elseif x == 0\n        return false\n    elseif\
    \ n==0\n        return false\n    elseif n==1\n        return true\n    else\n\
    \        return is_simple_power(x//n, n-1)\nend", "    if x == 1 \n        return\
    \ true\n    else \n        return false\nend\n</cell>\n<text>\nTest your function\
    \ with the next cell to check that the function works as expected:", "    if x\
    \ == 0 \n        return true\n    if x == 1 \n        return true\n    if x ==\
    \ n \n        return true\n    if n % x == 0 \n        return false\n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if x == 1 \n        return true\n\
    \    else \n        return false\nend\n</cell>\n<code language=julia-1.0>\n@assert\
    \ is_simple_power(2, 3) == true\n@assert is_simple_power(3, 3) == false\n@assert\
    \ is_simple_power(4, 3) == true\n@assert is_simple_power(5, 3) == false\n@assert\
    \ is_simple_power(6, 3) == true\n@assert is_simple_power(7, 3) == false\n@assert\
    \ is_simple_power(8, 3) == true\n@assert is_simple_power(9, 3) == false\n@assert\
    \ is_simple_power(10, 3) == true\n@assert is_simple_power(11, 3) == false\n@assert\
    \ is_simple_power(12, 3) == true\n@assert is_simple_power(13, 3) == false\n@assert\
    \ is_simple_power(14, 3) == true\n@assert is_simple_power(15, 3) == false\n@assert\
    \ is_simple_power(16, 3) == true\n@assert is_simple_power(17, 3) == false\n@assert\
    \ is_simple_power(18, 3) == true\n@assert is_simple_power(19, 3) == false\n@assert\
    \ is_simple_power(20, 3) == true\n@assert is_simple_power(21, 3) == false\n@assert\
    \ is_simple_power(22, 3) == true\n@assert is_simple_power(23, 3) == false\n@assert\
    \ is_simple_power(24, 3) == true\n@assert is_simple_power(25, 3) == false\n@assert\
    \ is_simple_power(26, 3) == true\n@assert is_simple_power(27, 3) == false\n@assert\
    \ is_simple_power(28, 3) == true\n@assert is_simple_power(29, 3) == false\n@assert\
    \ is_simple_power(30, 3) == true\n@assert is_simple_power(31, 3) == false\n@assert\
    \ is_simple_power(32, 3) == true\n@assert is_simple_power(33, 3) == false\n@assert\
    \ is_simple_power(34, 3) == true\n@assert is_simple_power(35, 3) == false\n@assert\
    \ is_simple_power(36, 3) == true\n@assert is_simple_power(37, 3) == false\n@assert\
    \ is_simple_power(38, 3) == true\n@assert is_simple_power(39, 3) == false\n@assert\
    \ is_simple_power(40, 3) == true\n@assert is_simple_power(41, 3) == false\n@assert\
    \ is_simple_power(42, 3) == true\n@assert is_simple_power(43, 3) == false\n@assert\
    \ is_simple_power(44, 3) == true\n@assert is_simple_power(45, 3) == false\n@assert\
    \ is_simple_power(46, 3) == true\n@assert is_simple_power(47, 3) == false\n@assert\
    \ is_simple_power(48, 3) == true\n@assert is_simple_power(49, 3) == false\n@assert\
    \ is_simple_power(50, ", "    if n==0 then return true\n    else if n==1 then\
    \ return x==1\n    else if n==2 then return x==1 and is_simple_power(x, n-1)\n\
    \    else return false\nend\n</cell>\n<code language=julia-1.6>\n@assert is_simple_power(2,3)\
    \ == true\n@assert is_simple_power(2,2) == false\n@assert is_simple_power(2,1)\
    \ == false\n@assert is_simple_power(2,0) == false\n@assert is_simple_power(2,-1)\
    \ == false\n@assert is_simple_power(2,-2) == false\n@assert is_simple_power(2,-3)\
    \ == false\n@assert is_simple_power(2,-4) == false\n@assert is_simple_power(2,-5)\
    \ == false\n@assert is_simple_power(2,-6) == false\n@assert is_simple_power(2,-7)\
    \ == false\n@assert is_simple_power(2,-8) == false\n@assert is_simple_power(2,-9)\
    \ == false\n@assert is_simple_power(2,-10) == false\n@assert is_simple_power(2,-11)\
    \ == false\n@assert is_simple_power(2,-12) == false\n@assert is_simple_power(2,-13)\
    \ == false\n@assert is_simple_power(2,-14) == false\n@assert is_simple_power(2,-15)\
    \ == false\n@assert is_simple_power(2,-16) == false\n@assert is_simple_power(2,-17)\
    \ == false\n@assert is_simple_power(2,-18) == false\n@assert is_simple_power(2,-19)\
    \ == false\n@assert is_simple_power(2,-20) == false\n@assert is_simple_power(2,-21)\
    \ == false\n@assert is_simple_power(2,-22) == false\n@assert is_simple_power(2,-23)\
    \ == false\n@assert is_simple_power(2,-24) == false\n@assert is_simple_power(2,-25)\
    \ == false\n@assert is_simple_power(2,-26) == false\n@assert is_simple_power(2,-27)\
    \ == false\n@assert is_simple_power(2,-28) == false\n@assert is_simple_power(2,-29)\
    \ == false\n@assert is_simple_power(2,-30) == false\n@assert is_simple_power(2,-31)\
    \ == false\n@assert is_simple_power(2,-32) == false\n@assert is_simple_power(2,-33)\
    \ == false\n@assert is_simple_power(2,-34) == false\n@assert is_simple_power(2,-35)\
    \ == false\n@assert is_simple_power(2,-36) == false\n@assert is_simple_power(2,-37)\
    \ == false\n@assert is_simple_power(2,-38) == false\n@assert is_simple_power(2,-39)\
    \ == false\n@assert is_simple_power(2,-40) == false\n", "    if x == 0 \n    \
    \    return true\n    else \n        return is_simple_power(x % n, n)\nend", " \
    \   if x == 1\n        true\n    else\n        if n == 0\n            false\n\
    \        else\n            if n % x == 0\n                is_simple_power(x, n\
    \ / x)\n            else\n                false\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(3, 2)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 5)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 9)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 13)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 17)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 21)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 25)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 29)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, ", "    if x == 1 \n        return true\n\
    \    else if x == n\n        return true\n    else\n        return false\nend\n\
    </cell>\n<code language=julia-1.3>\n@assert is_simple_power(2, 3) == true\n@assert\
    \ is_simple_power(2, 4) == false\n@assert is_simple_power(2, 5) == false\n@assert\
    \ is_simple_power(2, 6) == false\n@assert is_simple_power(2, 7) == false\n@assert\
    \ is_simple_power(2, 8) == false\n@assert is_simple_power(2, 9) == false\n@assert\
    \ is_simple_power(2, 10) == false\n@assert is_simple_power(2, 11) == false\n@assert\
    \ is_simple_power(2, 12) == false\n@assert is_simple_power(2, 13) == false\n@assert\
    \ is_simple_power(2, 14) == false\n@assert is_simple_power(2, 15) == false\n@assert\
    \ is_simple_power(2, 16) == false\n@assert is_simple_power(2, 17) == false\n@assert\
    \ is_simple_power(2, 18) == false\n@assert is_simple_power(2, 19) == false\n@assert\
    \ is_simple_power(2, 20) == false\n@assert is_simple_power(2, 21) == false\n@assert\
    \ is_simple_power(2, 22) == false\n@assert is_simple_power(2, 23) == false\n@assert\
    \ is_simple_power(2, 24) == false\n@assert is_simple_power(2, 25) == false\n@assert\
    \ is_simple_power(2, 26) == false\n@assert is_simple_power(2, 27) == false\n@assert\
    \ is_simple_power(2, 28) == false\n@assert is_simple_power(2, 29) == false\n@assert\
    \ is_simple_power(2, 30) == false\n@assert is_simple_power(2, 31) == false\n@assert\
    \ is_simple_power(2, 32) == false\n@assert is_simple_power(2, 33) == false\n@assert\
    \ is_simple_power(2, 34) == false\n@assert is_simple_power(2, 35) == false\n@assert\
    \ is_simple_power(2, 36) == false\n@assert is_simple_power(2, 37) == false\n@assert\
    \ is_simple_power(2, 38) == false\n@assert is_simple_power(2, 39) == false\n@assert\
    \ is_simple_power(2, 40) == false\n@assert is_simple_power(2, 41) == false\n@assert\
    \ is_simple_power(2, 42) == false\n@assert is_simple_power(2, 43) == false\n@assert\
    \ is_simple_power(2, 44) == false\n@assert is_simple_power(2, 45) == false\n@assert\
    \ is_simple_power(2, 46) == false\n@assert is_simple_power(2, 47) == false\n@assert\
    \ is_simple_power(2, 48) == false\n@assert is_simple_power(2, 49) == false\n@assert\
    \ is_simple_power(2, 50) == false", "    if x == 0 \n        return true\n   \
    \ if x == 1 \n        return true\n    if x == n \n        return true\n    if\
    \ n % x == 0 \n        return false\n    return is_simple_power(x , n)\nend\n\
    </cell>\n<code language=julia-1.0>\n@assert is_simple_power(2, 3) == true\n@assert\
    \ is_simple_power(2, 4) == false\n@assert is_simple_power(2, 5) == false\n@assert\
    \ is_simple_power(2, 6) == true\n@assert is_simple_power(2, 7) == false\n@assert\
    \ is_simple_power(2, 8) == true\n@assert is_simple_power(2, 9) == false\n@assert\
    \ is_simple_power(2, 10) == true\n@assert is_simple_power(2, 11) == false\n@assert\
    \ is_simple_power(2, 12) == true\n@assert is_simple_power(2, 13) == false\n@assert\
    \ is_simple_power(2, 14) == true\n@assert is_simple_power(2, 15) == false\n@assert\
    \ is_simple_power(2, 16) == true\n@assert is_simple_power(2, 17) == false\n@assert\
    \ is_simple_power(2, 18) == true\n@assert is_simple_power(2, 19) == false\n@assert\
    \ is_simple_power(2, 20) == true\n@assert is_simple_power(2, 21) == false\n@assert\
    \ is_simple_power(2, 22) == true\n@assert is_simple_power(2, 23) == false\n@assert\
    \ is_simple_power(2, 24) == true\n@assert is_simple_power(2, 25) == false\n@assert\
    \ is_simple_power(2, 26) == true\n@assert is_simple_power(2, 27) == false\n@assert\
    \ is_simple_power(2, 28) == true\n@assert is_simple_power(2, 29) == false\n@assert\
    \ is_simple_power(2, 30) == true\n@assert is_simple_power(2, 31) == false\n@assert\
    \ is_simple_power(2, 32) == true\n@assert is_simple_power(2, 33) == false\n@assert\
    \ is_simple_power(2, 34) == true\n@assert is_simple_power(2, 35) == false\n@assert\
    \ is_simple_power(2, 36) == true\n@assert is_simple_power(2, 37) == false\n@assert\
    \ is_simple_power(2, 38) == true\n@assert is_simple_power(2, 39) == false\n@assert\
    \ is_simple_power(2, 40) == true\n@assert is_simple_power(2, 41) == false\n@assert\
    \ is_simple_power(2, 42) == true\n@assert is_simple_power(2, 43) == false\n@assert\
    \ is_simple_power(2, 44) == true\n@assert is_simple_power(2, 45) == false\n@assert\
    \ is_simple_power(2, 46) == true\n@assert is_simple_power(2, 47) == false\n@assert\
    \ is_simple_power(2, 48) == true\n@assert is_", "    if x == 0 \n        return\
    \ true\n    if n == 0 \n        return false\n    if x == 1 \n        return true\n\
    \    if x == n \n        return true\n    if n % 2 == 1 \n        return false\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    if x == 1\n        return true\n    if x == 0\n\
    \        return false\n    if n == 0\n        return false\n    if n == 1\n  \
    \      return true\n    if n % 2 == 0\n        return is_simple_power(x % n, n/2)\n\
    \    else\n        return is_simple_power(x % n, n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 5)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 9)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 13)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 17)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 21)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 25)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 29)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 30)\n</", "    if n==0 then return true\n\
    \    if n==1 then return true\n    if n==2 then return x==1\n    if n<0 then return\
    \ false\n    if n==n then return true\n    if n>n then return false\n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if n == 0 then\
    \ return true\n    if x == 1 then return true\n    if x == n then return true\n\
    \    if x % n == 0 then return false\n    return is_simple_power(x div n, n)\n\
    end", "    if n == 1 \n        then true\n    else if n % 2 == 0 \n        then\
    \ is_simple_power(x, n / 2)\n        else false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(3, 2)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(3, 3)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3,\
    \ 4)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3, 5)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(3, 6)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(3, 7)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3,\
    \ 8)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3, 9)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(3, 10)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(3, 11)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3,\
    \ 12)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3, 13)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(3, 14)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(3, 15)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3,\
    \ 16)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3, 17)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(3, 18)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(3, 19)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3,\
    \ 20)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3, 21)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(3, 22)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(3, 23)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3,\
    \ 24)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3, 25)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(3, 26)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(3, 27)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3,\
    \ 28)\n</cell>\n<code language=julia-1.0>\nis_simple_power(3, 29)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(3, 30)\n</cell>\n<code language=julia-1.0>\n",
  "    if n == 0 then return true\n    if x == 0 then return false\n    if x == 1\
    \ then return true\n    if x == n then return true\n    if n % 2 == 0 then return\
    \ is_simple_power(x, n/2)\n    else return is_simple_power(x, n/2) and is_simple_power(x,\
    \ n/2+1)\nend", "    if x == 1\n        return true\n    if x == 0\n        return\
    \ false\n    if n == 0\n        return false\n    if n == 1\n        return true\n\
    \    if n % 2 == 0\n        return is_simple_power(x >> 1, n >> 1)\n    return\
    \ is_simple_power(x >> 1, n - 1) && is_simple_power(x >> 1, n)\nend\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(2, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 29)\n</cell>\n<code language=julia-1.5>\n", "    if x == 0 then return true\n\
    \    if n == 0 then return false\n    if x == 1 then return true\n    if n ==\
    \ 1 then return true\n    if x == n then return true\n    if n % 2 == 1 then return\
    \ false\n    if n % 3 == 1 then return false\n    if n % 5 == 1 then return false\n\
    \    if n % 7 == 1 then return false\n    if n % 11 == 1 then return false\n \
    \   if n % 13 == 1 then return false\n    if n % 17 == 1 then return false\n \
    \   if n % 19 == 1 then return false\n    if n % 23 == 1 then return false\n \
    \   if n % 29 == 1 then return false\n    if n % 31 == 1 then return false\n \
    \   if n % 37 == 1 then return false\n    if n % 41 == 1 then return false\n \
    \   if n % 43 == 1 then return false\n    if n % 47 == 1 then return false\n \
    \   if n % 53 == 1 then return false\n    if n % 59 == 1 then return false\n \
    \   if n % 61 == 1 then return false\n    if n % 67 == 1 then return false\n \
    \   if n % 71 == 1 then return false\n    if n % 73 == 1 then return false\n \
    \   if n % 79 == 1 then return false\n    if n % 83 == 1 then return false\n \
    \   if n % 89 == 1 then return false\n    if n % 97 == 1 then return false\n \
    \   if n % 101 == 1 then return false\n    if n % 103 == 1 then return false\n\
    \    if n % 107 == 1 then return false\n    if n % 109 == 1 then return false\n\
    \    if n % 113 == 1 then return false\n    if n % 117 == 1 then return false\n\
    \    if n % 121 == 1 then return false\n    if n % 123 == 1 then return false\n\
    \    if n % 127 == 1 then return false\n    if n % 131 == 1 then return false\n\
    \    if n % 133 == 1 then return false\n    if n % 137 == 1 then return false\n\
    \    if n % 141 == 1 then return false\n    if n % 143 == 1 then return false\n\
    \    if n % 147 == 1 then return false\n    if n % 151 == 1 then return false\n\
    \    if n % 153 == 1 then return false\n    if n % 157 == 1 then return false\n\
    \    if n % 161 == 1 then return false\n    if n % 163 == 1 then return false\n\
    \    if n % 167 == 1 then return false\n    if n % 171 == 1 then return false\n\
    \    if n % 173 == 1 then return false\n    if n % 177 == 1 then return false\n\
    \    if n % 181 == 1 then return false\n    if n % 183 == 1 then return false\n\
    \    if n % 187 == 1 then return false\n    if n % 191 == 1 then return false\n\
    \    if n % 193 == 1 then return false\n    if n % 197 == 1 then return false\n\
    \    if n % 201 == 1 then return false\n    if n % 203 == 1 then return false\n",
  "    if x == 0 then return true\n    if n == 0 then return false\n    if n == 1\
    \ then return true\n    if n % 2 == 0 then return false\n    if n % 3 == 0 then\
    \ return false\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    if n == 0 \n        true\n  \
    \  elseif n == 1 \n        true\n    elseif n % 2 == 0 \n        is_simple_power(x,\
    \ n/2)\n    else\n        is_simple_power(x, n/2)\n    end\nend", "    if x ==\
    \ 0 \n        then return true\n    else if x == 1 \n        then return true\n\
    \    else if x == n \n        then return true\n    else \n        return false\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2, 3) == true\n\
    @assert is_simple_power(2, 4) == false\n@assert is_simple_power(2, 5) == false\n\
    @assert is_simple_power(2, 6) == false\n@assert is_simple_power(2, 7) == false\n\
    @assert is_simple_power(2, 8) == false\n@assert is_simple_power(2, 9) == false\n\
    @assert is_simple_power(2, 10) == false\n@assert is_simple_power(2, 11) == false\n\
    @assert is_simple_power(2, 12) == false\n@assert is_simple_power(2, 13) == false\n\
    @assert is_simple_power(2, 14) == false\n@assert is_simple_power(2, 15) == false\n\
    @assert is_simple_power(2, 16) == false\n@assert is_simple_power(2, 17) == false\n\
    @assert is_simple_power(2, 18) == false\n@assert is_simple_power(2, 19) == false\n\
    @assert is_simple_power(2, 20) == false\n@assert is_simple_power(2, 21) == false\n\
    @assert is_simple_power(2, 22) == false\n@assert is_simple_power(2, 23) == false\n\
    @assert is_simple_power(2, 24) == false\n@assert is_simple_power(2, 25) == false\n\
    @assert is_simple_power(2, 26) == false\n@assert is_simple_power(2, 27) == false\n\
    @assert is_simple_power(2, 28) == false\n@assert is_simple_power(2, 29) == false\n\
    @assert is_simple_power(2, 30) == false\n@assert is_simple_power(2, 31) == false\n\
    @assert is_simple_power(2, 32) == false\n@assert is_simple_power(2, 33) == false\n\
    @assert is_simple_power(2, 34) == false\n@assert is_simple_power(2, 35) == false\n\
    @assert is_simple_power(2, 36) == false\n@assert is_simple_power(2, 37) == false\n\
    @assert is_simple_power(2, 38) == false\n@assert is_simple_power(2, 39) == false\n\
    @assert is_simple_power(2, 40) == false\n@assert is_simple_power(2, 41) == false\n\
    @assert is_simple_power(2, 42) == false\n@assert is_simple_power(2, 43) == false\n\
    @assert is_simple_power(2, 44) == false\n@assert is_simple_power(2, 45) == false\n\
    @assert is_simple_power(2, 46) == false\n@assert is_simple_power(2, 47) == false\n\
    @assert is_simple_power(2, 48) == false\n@assert is_", "    if x == 0 then return\
    \ true\n    if x == 1 then return true\n    if n == 0 then return false\n    if\
    \ n == 1 then return true\n    if n % 2 == 0 then return false\n    if n % 3 ==\
    \ 0 then return false\n    if n % 5 == 0 then return false\n    if n % 7 == 0\
    \ then return false\n    if n % 11 == 0 then return false\n    if n % 13 == 0\
    \ then return false\n    if n % 17 == 0 then return false\n    if n % 19 == 0\
    \ then return false\n    if n % 23 == 0 then return false\n    if n % 29 == 0\
    \ then return false\n    if n % 31 == 0 then return false\n    if n % 37 == 0\
    \ then return false\n    if n % 41 == 0 then return false\n    if n % 43 == 0\
    \ then return false\n    if n % 47 == 0 then return false\n    if n % 53 == 0\
    \ then return false\n    if n % 59 == 0 then return false\n    if n % 61 == 0\
    \ then return false\n    if n % 67 == 0 then return false\n    if n % 71 == 0\
    \ then return false\n    if n % 73 == 0 then return false\n    if n % 79 == 0\
    \ then return false\n    if n % 83 == 0 then return false\n    if n % 89 == 0\
    \ then return false\n    if n % 97 == 0 then return false\n    if n % 101 == 0\
    \ then return false\n    if n % 103 == 0 then return false\n    if n % 107 ==\
    \ 0 then return false\n    if n % 111 == 0 then return false\n    if n % 113 ==\
    \ 0 then return false\n    if n % 117 == 0 then return false\n    if n % 121 ==\
    \ 0 then return false\n    if n % 123 == 0 then return false\n    if n % 127 ==\
    \ 0 then return false\n    if n % 131 == 0 then return false\n    if n % 133 ==\
    \ 0 then return false\n    if n % 137 == 0 then return false\n    if n % 141 ==\
    \ 0 then return false\n    if n % 143 == 0 then return false\n    if n % 147 ==\
    \ 0 then return false\n    if n % 151 == 0 then return false\n    if n % 153 ==\
    \ 0 then return false\n    if n % 157 == 0 then return false\n    if n % 161 ==\
    \ 0 then return false\n    if n % 163 == 0 then return false\n    if n % 167 ==\
    \ 0 then return false\n    if n % 171 == 0 then return false\n    if n % 173 ==\
    \ 0 then return false\n    if n % 177 == 0 then return false\n    if n % 181 ==\
    \ 0 then return false\n    if n % 183 == 0 then return false\n    if n % 187 ==\
    \ 0 then return false\n    if n % 191 == 0 then return false\n    if n % 193 ==\
    \ 0 then return false\n", "    if x == 0 then return true\n    if x == 1 then\
    \ return true\n    if x == n then return true\n    if x < n then return false\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    if n == 0 then return\
    \ true\n    if x == 0 then return false\n    if x == 1 then return true\n    if\
    \ x == n then return true\n    if n % 2 == 0 then return false\n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    if x == 0 then return true\n    if x == 1 then return true\n\
    \    if x == n then return true\n    if n % x == 0 then return false\n    else\
    \ return is_simple_power(x, n//x)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_simple_power(2, 3) == true\n@assert is_simple_power(3, 3) == true\n@assert\
    \ is_simple_power(4, 3) == false\n@assert is_simple_power(5, 3) == false\n@assert\
    \ is_simple_power(6, 3) == false\n@assert is_simple_power(7, 3) == false\n@assert\
    \ is_simple_power(8, 3) == false\n@assert is_simple_power(9, 3) == false\n@assert\
    \ is_simple_power(10, 3) == false\n@assert is_simple_power(11, 3) == false\n@assert\
    \ is_simple_power(12, 3) == false\n@assert is_simple_power(13, 3) == false\n@assert\
    \ is_simple_power(14, 3) == false\n@assert is_simple_power(15, 3) == false\n@assert\
    \ is_simple_power(16, 3) == false\n@assert is_simple_power(17, 3) == false\n@assert\
    \ is_simple_power(18, 3) == false\n@assert is_simple_power(19, 3) == false\n@assert\
    \ is_simple_power(20, 3) == false\n@assert is_simple_power(21, 3) == false\n@assert\
    \ is_simple_power(22, 3) == false\n@assert is_simple_power(23, 3) == false\n@assert\
    \ is_simple_power(24, 3) == false\n@assert is_simple_power(25, 3) == false\n@assert\
    \ is_simple_power(26, 3) == false\n@assert is_simple_power(27, 3) == false\n@assert\
    \ is_simple_power(28, 3) == false\n@assert is_simple_power(29, 3) == false\n@assert\
    \ is_simple_power(30, 3) == false\n@assert is_simple_power(31, 3) == false\n@assert\
    \ is_simple_power(32, 3) == false\n@assert is_simple_power(33, 3) == false\n@assert\
    \ is_simple_power(34, 3) == false\n@assert is_simple_power(35, 3) == false\n@assert\
    \ is_simple_power(36, 3) == false\n@assert is_simple_power(37, 3) == false\n@assert\
    \ is_simple_power(38, 3) == false\n@assert is_simple_power(39, 3) == false\n@assert\
    \ is_simple_power(40, 3) == false\n@assert is_simple_power(41, 3) == false\n@assert\
    \ is_simple_power(42, 3) == false\n@assert is_simple_power(43, 3) == false\n@assert\
    \ is_simple_power(44, 3) == false\n@assert is_simple_power(45, 3) == false\n@assert\
    \ is_simple_power(46, 3) == false\n@assert is_simple_power(47, 3) == false", " \
    \   if n == 0 then return true\n    if n == 1 then return true\n    if x == 0\
    \ then return false\n    if x == 1 then return false\n    if x == n then return\
    \ true\n    if x % n == 0 then return false\n    return is_simple_power(x div\
    \ n, n)\nend\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 3)\n</cell>\n\
    <code language=julia-1.3>\nis_simple_power(2, 4)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 5)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 6)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 7)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 8)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 9)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 10)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 11)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 12)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 13)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 14)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 15)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 16)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 17)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 18)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 19)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 20)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 21)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 22)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 23)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 24)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 25)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 26)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 27)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 28)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 29)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 30)\n</cell>", "    if n==0 then return true\n    if n==1 then return true\n\
    \    if n==2 then return x==1\n    if n>2 then return is_simple_power(x^n, n-1)\n\
    \    return false\nend", "    if n == 0 \n        true\n    elseif n == 1 \n \
    \       true\n    elseif n % 2 == 0 \n        is_simple_power(x, n / 2)\n    else\n\
    \        is_simple_power(x, n / 2) && is_simple_power(x, n / 2)\n    end\nend",
  "    if x == 0 then return true\n    if n == 0 then return false\n    if n == 1\
    \ then return true\n    if n % 2 == 0 then return is_simple_power(x div 2, n div\
    \ 2)\n    if n % 2 == 1 then return false\n    return is_simple_power(x div 2,\
    \ n div 2)\nend", "    if x == 1 \n        return true\n    else if x == 0 \n\
    \        return false\n    else \n        return is_simple_power(x div n, n) \n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2, 3) == true\n\
    @assert is_simple_power(2, 2) == false\n@assert is_simple_power(2, 1) == false\n\
    @assert is_simple_power(2, 0) == false\n@assert is_simple_power(1, 3) == false\n\
    @assert is_simple_power(1, 2) == false\n@assert is_simple_power(1, 1) == false\n\
    @assert is_simple_power(1, 0) == false\n@assert is_simple_power(0, 3) == false\n\
    @assert is_simple_power(0, 0) == false\n@assert is_simple_power(-1, 3) == false\n\
    @assert is_simple_power(-1, 2) == false\n@assert is_simple_power(-1, 1) == false\n\
    @assert is_simple_power(-1, 0) == false\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns true if the number x is a power of n and false in other\
    \ cases. x is a power of n if n**int=x. For example:", "    if n == 0 then return\
    \ true\n    if n == 1 then return x == 1\n    if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2)\n    else return is_simple_power(x * x, n / 2)\nend", "    if n == 0\
    \ then return true\n    if n == 1 then return true\n    if x == 0 then return\
    \ false\n    if x == 1 then return false\n    if x == 2 then return true\n   \
    \ if x == n then return true\n    if x % n == 0 then return false\n    if x %\
    \ n != 0 then return true\n    return is_simple_power(x, n-1)\nend", "    if x\
    \ == 0 then return true\n    else if n==1 then return true\n    else if n==2 then\
    \ return (x==1)\n    else if n==3 then return (x==1)\n    else if n==4 then return\
    \ (x==1)\n    else if n==5 then return (x==1)\n    else if n==6 then return (x==1)\n\
    \    else if n==7 then return (x==1)\n    else if n==8 then return (x==1)\n  \
    \  else if n==9 then return (x==1)\n    else return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"Your task is to write a function that returns true\
    \ if a number x is a simple power of n and false in other cases.\n    x is a simple\
    \ power of n if n**int=x\n    For example:\n                            \"\"\"",
  "    if x == 1\n        return true\n    else\n        return false\nend", "   \
    \ if x == 1 \n        return true\n    if x == 0 \n        return false\n    if\
    \ n == 0 \n        return false\n    if n == 1 \n        return true\n    if n\
    \ % 2 == 0 \n        return is_simple_power(x, n / 2)\n    if n % 2 == 1 \n  \
    \      return false\n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    if n == 0 then return true\n    if n == 1 then return true\n  \
    \  if x == 0 then return false\n    if x == 1 then return false\n    if x == n\
    \ then return true\n    if x % n == 0 then return false\n    return is_simple_power(x\
    \ div n, n)\nend\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 3)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2, 4)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 5)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 6)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 7)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 8)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 9)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 10)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 11)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 12)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 13)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 14)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 15)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 16)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 17)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 18)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 19)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 20)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 21)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 22)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 23)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 24)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 25)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 26)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 27)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 28)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 29)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 30)\n</cell>", "    if x == 0 then return true\n    if x == 1 then return true\n\
    \    if n == 0 then return false\n    if n == 1 then return true\n    if n % 2\
    \ == 0 then return false\n    if n % 3 == 0 then return false\n    if n % 5 ==\
    \ 0 then return false\n    if n % 7 == 0 then return false\n    if n % 11 == 0\
    \ then return false\n    if n % 13 == 0 then return false\n    if n % 17 == 0\
    \ then return false\n    if n % 19 == 0 then return false\n    if n % 23 == 0\
    \ then return false\n    if n % 29 == 0 then return false\n    if n % 31 == 0\
    \ then return false\n    if n % 37 == 0 then return false\n    if n % 41 == 0\
    \ then return false\n    if n % 43 == 0 then return false\n    if n % 47 == 0\
    \ then return false\n    if n % 53 == 0 then return false\n    if n % 59 == 0\
    \ then return false\n    if n % 61 == 0 then return false\n    if n % 67 == 0\
    \ then return false\n    if n % 71 == 0 then return false\n    if n % 73 == 0\
    \ then return false\n    if n % 79 == 0 then return false\n    if n % 83 == 0\
    \ then return false\n    if n % 89 == 0 then return false\n    if n % 97 == 0\
    \ then return false\n    if n % 101 == 0 then return false\n    if n % 103 ==\
    \ 0 then return false\n    if n % 107 == 0 then return false\n    if n % 111 ==\
    \ 0 then return false\n    if n % 113 == 0 then return false\n    if n % 117 ==\
    \ 0 then return false\n    if n % 121 == 0 then return false\n    if n % 123 ==\
    \ 0 then return false\n    if n % 127 == 0 then return false\n    if n % 131 ==\
    \ 0 then return false\n    if n % 133 == 0 then return false\n    if n % 137 ==\
    \ 0 then return false\n    if n % 141 == 0 then return false\n    if n % 143 ==\
    \ 0 then return false\n    if n % 147 == 0 then return false\n    if n % 151 ==\
    \ 0 then return false\n    if n % 153 == 0 then return false\n    if n % 157 ==\
    \ 0 then return false\n    if n % 161 == 0 then return false\n    if n % 163 ==\
    \ 0 then return false\n    if n % 167 == 0 then return false\n    if n % 171 ==\
    \ 0 then return false\n    if n % 173 == 0 then return false\n    if n % 177 ==\
    \ 0 then return false\n    if n % 181 == 0 then return false\n    if n % 183 ==\
    \ 0 then return false\n    if n % 187 == 0 then return false\n    if n % 191 ==\
    \ 0 then return false\n    if n % 193 == 0 then return false\n", "    if x ==\
    \ 1\n        return true\n    else if x == 0\n        return false\n    else\n\
    \        return is_simple_power(x div n, n) || is_simple_power(x mod n, n)\nend",
  "    if n == 0 \n        true\n    else\n        if x == n\n            true\n \
    \       else\n            if n % x == 0\n                is_simple_power(x, n//x)\n\
    \            else\n                false\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nis_simple_power(2, 3)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 4)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 5)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 6)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 7)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 8)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 9)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 10)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 11)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 12)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 13)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 14)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 15)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 16)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 17)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 18)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 19)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 20)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 21)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 22)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 23)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 24)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 25)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 26)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, 27)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(2, 28)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2,\
    \ 29)\n</cell>\n<code language=julia-1.4>\nis_simple_power(2, 30)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(2, ", "    if n == 1 \n        then return\
    \ true\n    else\n        if n % 2 == 0 \n            then return is_simple_power(x,\
    \ n / 2)\n        else\n            if n % 3 == 0 \n                then return\
    \ is_simple_power(x, n / 3)\n            else\n                if n % 5 == 0 \n\
    \                    then return is_simple_power(x, n / 5)\n                else\n\
    \                    if n % 7 == 0 \n                        then return is_simple_power(x,\
    \ n / 7)\n                    else\n                        if n % 11 == 0 \n\
    \                            then return is_simple_power(x, n / 11)\n        \
    \                else\n                            if n % 13 == 0 \n         \
    \                       then return is_simple_power(x, n / 13)\n             \
    \               else\n                                if n % 17 == 0 \n      \
    \                              then return is_simple_power(x, n / 17)\n      \
    \                          else\n                                    return false\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 4)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 8)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 16)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 32)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 64)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 128)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 256)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 512)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 1024)\n</cell>\n\
    <code language=julia-1.3>\nis_simple_power(3, 2048)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 4096)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 8192)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 16384)\n</cell>\n\
    <code language=julia-1.3>\nis_simple_power(3, 32768)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 65536)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 131072)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 262144)\n</cell>\n\
    <code language=julia-1.3>\nis_simple_power(3, 524288)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 1048576)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, ",
  "    if x == 0 then return true\n    if x == 1 then return true\n    if n == 0 then\
    \ return false\n    if n == 1 then return false\n    if n % 2 == 0 then return\
    \ false\n    if n % 3 == 0 then return false\n    if n % 5 == 0 then return false\n\
    \    if n % 7 == 0 then return false\n    if n % 11 == 0 then return false\n \
    \   if n % 13 == 0 then return false\n    if n % 17 == 0 then return false\n \
    \   if n % 19 == 0 then return false\n    if n % 23 == 0 then return false\n \
    \   if n % 29 == 0 then return false\n    if n % 31 == 0 then return false\n \
    \   if n % 37 == 0 then return false\n    if n % 41 == 0 then return false\n \
    \   if n % 43 == 0 then return false\n    if n % 47 == 0 then return false\n \
    \   if n % 53 == 0 then return false\n    if n % 59 == 0 then return false\n \
    \   if n % 61 == 0 then return false\n    if n % 67 == 0 then return false\n \
    \   if n % 71 == 0 then return false\n    if n % 73 == 0 then return false\n \
    \   if n % 79 == 0 then return false\n    if n % 83 == 0 then return false\n \
    \   if n % 89 == 0 then return false\n    if n % 97 == 0 then return false\n \
    \   if n % 101 == 0 then return false\n    if n % 103 == 0 then return false\n\
    \    if n % 107 == 0 then return false\n    if n % 111 == 0 then return false\n\
    \    if n % 117 == 0 then return false\n    if n % 121 == 0 then return false\n\
    \    if n % 123 == 0 then return false\n    if n % 127 == 0 then return false\n\
    \    if n % 131 == 0 then return false\n    if n % 137 == 0 then return false\n\
    \    if n % 141 == 0 then return false\n    if n % 147 == 0 then return false\n\
    \    if n % 151 == 0 then return false\n    if n % 157 == 0 then return false\n\
    \    if n % 161 == 0 then return false\n    if n % 167 == 0 then return false\n\
    \    if n % 173 == 0 then return false\n    if n % 179 == 0 then return false\n\
    \    if n % 183 == 0 then return false\n    if n % 189 == 0 then return false\n\
    \    if n % 193 == 0 then return false\n    if n % 197 == 0 then return false\n\
    \    if n % 201 == 0 then return false\n    if n % 207 == 0 then return false\n\
    \    if n % 211 == 0 then return false\n    if n % 215 == 0 then return false\n\
    \    if n % 219 == 0 then return false\n    if n % 223 == 0 then return false\n\
    \    if n % 227 == 0 then return false\n", "    if n==1 \n        return true\n\
    \    if n==0 \n        return false\n    if n>1 \n        return is_simple_power(x,\
    \ n-1) && is_simple_power(x, n-1)\n    else \n        return is_simple_power(x,\
    \ n-1)\nend\n</cell>\n<code language=julia-1.0>\n@assert is_simple_power(2, 3)\
    \ == true\n@assert is_simple_power(2, 0) == false\n@assert is_simple_power(2,\
    \ 1) == true\n@assert is_simple_power(2, 2) == true\n@assert is_simple_power(2,\
    \ 3) == true\n@assert is_simple_power(2, 4) == false\n@assert is_simple_power(2,\
    \ 5) == false\n@assert is_simple_power(2, 6) == false\n@assert is_simple_power(2,\
    \ 7) == false\n@assert is_simple_power(2, 8) == false\n@assert is_simple_power(2,\
    \ 9) == false\n@assert is_simple_power(2, 10) == false\n@assert is_simple_power(2,\
    \ 11) == false\n@assert is_simple_power(2, 12) == false\n@assert is_simple_power(2,\
    \ 13) == false\n@assert is_simple_power(2, 14) == false\n@assert is_simple_power(2,\
    \ 15) == false\n@assert is_simple_power(2, 16) == false\n@assert is_simple_power(2,\
    \ 17) == false\n@assert is_simple_power(2, 18) == false\n@assert is_simple_power(2,\
    \ 19) == false\n@assert is_simple_power(2, 20) == false\n@assert is_simple_power(2,\
    \ 21) == false\n@assert is_simple_power(2, 22) == false\n@assert is_simple_power(2,\
    \ 23) == false\n@assert is_simple_power(2, 24) == false\n@assert is_simple_power(2,\
    \ 25) == false\n@assert is_simple_power(2, 26) == false\n@assert is_simple_power(2,\
    \ 27) == false\n@assert is_simple_power(2, 28) == false\n@assert is_simple_power(2,\
    \ 29) == false\n@assert is_simple_power(2, 30) == false\n@assert is_simple_power(2,\
    \ 31) == false\n@assert is_simple_power(2, 32) == false\n@assert is_simple_power(2,\
    \ 33) == false\n@assert is_simple_power(2, 34) == false\n@assert is_simple_power(2,\
    \ 35) == false\n@assert is_simple_power(2, 36) == false\n@assert is_simple_power(2,\
    \ 37) == false\n@assert is_simple_power(2, 38) == false\n@assert is_simple_power(2,\
    \ 39) == false\n@assert is_simple_power(2, 40) == false\n@assert is_simple_power(2,\
    \ 41) == false\n@assert is_simple_power(2, 42) == false\n@assert is_simple_power(2,\
    \ 43) == false\n@assert is_simple_", "    if x == 1\n        return true\n   \
    \ if x == 0\n        return false\n    if n == 0\n        return false\n    if\
    \ n == 1\n        return true\n    if n % 2 == 0\n        return is_simple_power(x,\
    \ n/2)\n    return is_simple_power(x, n/2) && is_simple_power(x, n/2-1)\nend\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2, 2)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 5)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 9)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 13)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 17)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 21)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 25)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 29)", "    if x\
    \ == 0 then return true\n    if x == 1 then return true\n    if n == 0 then return\
    \ false\n    if n == 1 then return true\n    if n % 2 == 0 then return false\n\
    \    if n % 3 == 0 then return false\n    if n % 5 == 0 then return false\n  \
    \  if n % 7 == 0 then return false\n    if n % 11 == 0 then return false\n   \
    \ if n % 13 == 0 then return false\n    if n % 17 == 0 then return false\n   \
    \ if n % 19 == 0 then return false\n    if n % 23 == 0 then return false\n   \
    \ if n % 29 == 0 then return false\n    if n % 31 == 0 then return false\n   \
    \ if n % 37 == 0 then return false\n    if n % 41 == 0 then return false\n   \
    \ if n % 43 == 0 then return false\n    if n % 47 == 0 then return false\n   \
    \ if n % 53 == 0 then return false\n    if n % 59 == 0 then return false\n   \
    \ if n % 61 == 0 then return false\n    if n % 67 == 0 then return false\n   \
    \ if n % 71 == 0 then return false\n    if n % 73 == 0 then return false\n   \
    \ if n % 79 == 0 then return false\n    if n % 83 == 0 then return false\n   \
    \ if n % 89 == 0 then return false\n    if n % 97 == 0 then return false\n   \
    \ if n % 101 == 0 then return false\n    if n % 103 == 0 then return false\n \
    \   if n % 107 == 0 then return false\n    if n % 111 == 0 then return false\n\
    \    if n % 117 == 0 then return false\n    if n % 121 == 0 then return false\n\
    \    if n % 127 == 0 then return false\n    if n % 131 == 0 then return false\n\
    \    if n % 137 == 0 then return false\n    if n % 141 == 0 then return false\n\
    \    if n % 147 == 0 then return false\n    if n % 151 == 0 then return false\n\
    \    if n % 157 == 0 then return false\n    if n % 161 == 0 then return false\n\
    \    if n % 167 == 0 then return false\n    if n % 171 == 0 then return false\n\
    \    if n % 177 == 0 then return false\n    if n % 181 == 0 then return false\n\
    \    if n % 187 == 0 then return false\n    if n % 191 == 0 then return false\n\
    \    if n % 197 == 0 then return false\n    if n % 201 == 0 then return false\n\
    \    if n % 207 == 0 then return false\n    if n % 211 == 0 then return false\n\
    \    if n % 217 == 0 then return false\n    if n % 221 == 0 then return false\n\
    \    if n % 227 == 0 then return false\n    if n % 231 == 0 then return false\n\
    \    if n % 237 == 0 then return false\n", "    if x == 1 \n        return true\n\
    \    else if x == 0 \n        return false\n    else if n <= 0 \n        return\
    \ false\n    else if n == 1 \n        return true\n    else \n        return is_simple_power(x//n,\
    \ n-1)\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 2)\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 29)\n</cell>\n<code language=julia-1.5", "    if x == 0 \n        then return\
    \ true\n    else if n==0\n        then return false\n    else if n==1\n      \
    \  then return true\n    else if n%2==0\n        then return false\n    else if\
    \ n%3==0\n        then return false\n    else if n%5==0\n        then return false\n\
    \    else if n%7==0\n        then return false\n    else if n%11==0\n        then\
    \ return false\n    else if n%13==0\n        then return false\n    else if n%17==0\n\
    \        then return false\n    else if n%19==0\n        then return false\n \
    \   else if n%23==0\n        then return false\n    else if n%29==0\n        then\
    \ return false\n    else if n%31==0\n        then return false\n    else if n%37==0\n\
    \        then return false\n    else if n%41==0\n        then return false\n \
    \   else if n%43==0\n        then return false\n    else if n%47==0\n        then\
    \ return false\n    else if n%53==0\n        then return false\n    else if n%59==0\n\
    \        then return false\n    else if n%61==0\n        then return false\n \
    \   else if n%67==0\n        then return false\n    else if n%71==0\n        then\
    \ return false\n    else if n%73==0\n        then return false\n    else if n%79==0\n\
    \        then return false\n    else if n%83==0\n        then return false\n \
    \   else if n%89==0\n        then return false\n    else if n%97==0\n        then\
    \ return false\n    else if n%101==0\n        then return false\n    else if n%103==0\n\
    \        then return false\n    else if n%107==0\n        then return false\n\
    \    else if n%109==0\n        then return false\n    else if n%113==0\n     \
    \   then return false\n    else if n%127==0\n        then return false\n    else\
    \ if n%131==0\n        then return false\n    else if n%137==0\n        then return\
    \ false\n    else if n%141==0\n        then return false\n    ", "    if n ==\
    \ 0 then return true\n    if x == 0 then return false\n    if x == 1 then return\
    \ true\n    if x == n then return true\n    if x % n == 0 then return false\n\
    \    return is_simple_power(x div n, n)\nend", "    if n == 0 \n        return\
    \ true\n    else if n == 1 \n        return x == pow(x, n)\n    else \n      \
    \  return is_simple_power(x, n-1) && is_simple_power(x, n-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 2)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 5)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 9)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 13)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 17)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 21)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 25)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 29)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 30)\n</cell>", "    if n == 0 \n   \
    \     true\n    elseif n == 1 \n        true\n    elseif n % 2 == 0 \n       \
    \ is_simple_power(x, n / 2)\n    else\n        is_simple_power(x, n / 2) && is_simple_power(x,\
    \ n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 4)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 8)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 9)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 13)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 16)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 20)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 21)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 24)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 25)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 28)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 29)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 30)\n</cell>\n<code language=julia-", "    if x == 0 then return\
    \ true\n    if x == 1 then return true\n    if n == 0 then return false\n    if\
    \ n == 1 then return true\n    if n % 2 == 0 then return false\n    if n % 3 ==\
    \ 0 then return false\n    if n % 5 == 0 then return false\n    if n % 7 == 0\
    \ then return false\n    if n % 11 == 0 then return false\n    if n % 13 == 0\
    \ then return false\n    if n % 17 == 0 then return false\n    if n % 19 == 0\
    \ then return false\n    if n % 23 == 0 then return false\n    if n % 29 == 0\
    \ then return false\n    if n % 31 == 0 then return false\n    if n % 37 == 0\
    \ then return false\n    if n % 41 == 0 then return false\n    if n % 43 == 0\
    \ then return false\n    if n % 47 == 0 then return false\n    if n % 53 == 0\
    \ then return false\n    if n % 59 == 0 then return false\n    if n % 61 == 0\
    \ then return false\n    if n % 67 == 0 then return false\n    if n % 71 == 0\
    \ then return false\n    if n % 73 == 0 then return false\n    if n % 79 == 0\
    \ then return false\n    if n % 83 == 0 then return false\n    if n % 89 == 0\
    \ then return false\n    if n % 97 == 0 then return false\n    if n % 103 == 0\
    \ then return false\n    if n % 109 == 0 then return false\n    if n % 113 ==\
    \ 0 then return false\n    if n % 127 == 0 then return false\n    if n % 131 ==\
    \ 0 then return false\n    if n % 137 == 0 then return false\n    if n % 143 ==\
    \ 0 then return false\n    if n % 149 == 0 then return false\n    if n % 153 ==\
    \ 0 then return false\n    if n % 157 == 0 then return false\n    if n % 161 ==\
    \ 0 then return false\n    if n % 167 == 0 then return false\n    if n % 173 ==\
    \ 0 then return false\n    if n % 179 == 0 then return false\n    if n % 183 ==\
    \ 0 then return false\n    if n % 189 == 0 then return false\n    if n % 193 ==\
    \ 0 then return false\n    if n % 197 == 0 then return false\n    if n % 201 ==\
    \ 0 then return false\n    if n % 207 == 0 then return false\n    if n % 211 ==\
    \ 0 then return false\n    if n % 215 == 0 then return false\n    if n % 219 ==\
    \ 0 then return false\n    if n % 223 == 0 then return false\n    if n % 227 ==\
    \ 0 then return false\n    if n % 231 == 0 then return false\n    if n % 237 ==\
    \ 0 then return false\n    if n % 241 == 0 then return false\n    if n % 247 ==\
    \ 0 then return false\n", "    if x == 1\n        return true\n    else\n    \
    \    return false\nend", "    if n == 0 then return true\n    if x == 1 then return\
    \ true\n    if x == n then return true\n    if x % n == 0 then return false\n\
    \    return is_simple_power(x div n, n-1)\nend", "    if x == 0 then return true\n\
    \    if n == 0 then return false\n    if x == 1 then return true\n    if n ==\
    \ 1 then return true\n    if x == n then return true\n    if x % n == 0 then return\
    \ false\n    return is_simple_power(x div n, n)\nend", "    if n == 0 then return\
    \ true\n    if n == 1 then return true\n    if x == 0 then return false\n    if\
    \ x == 1 then return true\n    if x == 2 then return true\n    if x == n then\
    \ return true\n    if x % n == 0 then return true\n    if x % n != 0 then return\
    \ false\n    \n    return is_simple_power(x, n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_simple_power(2, 3) == true\n@assert is_simple_power(2, 4) == false\n\
    @assert is_simple_power(2, 5) == true\n@assert is_simple_power(2, 6) == false\n\
    @assert is_simple_power(2, 7) == true\n@assert is_simple_power(2, 8) == false\n\
    @assert is_simple_power(2, 9) == true\n@assert is_simple_power(2, 10) == false\n\
    @assert is_simple_power(2, 11) == true\n@assert is_simple_power(2, 12) == false\n\
    @assert is_simple_power(2, 13) == true\n@assert is_simple_power(2, 14) == false\n\
    @assert is_simple_power(2, 15) == true\n@assert is_simple_power(2, 16) == false\n\
    @assert is_simple_power(2, 17) == true\n@assert is_simple_power(2, 18) == false\n\
    @assert is_simple_power(2, 19) == true\n@assert is_simple_power(2, 20) == false\n\
    @assert is_simple_power(2, 21) == true\n@assert is_simple_power(2, 22) == false\n\
    @assert is_simple_power(2, 23) == true\n@assert is_simple_power(2, 24) == false\n\
    @assert is_simple_power(2, 25) == true\n@assert is_simple_power(2, 26) == false\n\
    @assert is_simple_power(2, 27) == true\n@assert is_simple_power(2, 28) == false\n\
    @assert is_simple_power(2, 29) == true\n@assert is_simple_power(2, 30) == false\n\
    @assert is_simple_power(2, 31) == true\n@assert is_simple_power(2, 32) == false\n\
    @assert is_simple_power(2, 33) == true\n@assert is_simple_power(2, 34) == false\n\
    @assert is_simple_power(2, 35) == true\n@assert is_simple_power(2, 36) == false\n\
    @assert is_simple_power(2, 37) == true\n@assert is_simple_power(2, 38) == false\n\
    @assert is_simple_power(2, 39) == true\n@assert is_simple_power(2, 40) == false\n\
    @assert is_simple_power(2, 41) == true\n@assert is_simple_power(2, 42) == false\n\
    @assert is_simple_power(2, 43) == true\n@assert is_simple_power(2, 44) == false\n\
    @assert is_simple_power(2, 45) == true", "    if x == 0 then return true\n   \
    \ if x == 1 then return true\n    if x == n then return true\n    if n % x ==\
    \ 0 then return false\n    else return is_simple_power(x, n//x)\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_simple_power(2, 3) == true\n@assert is_simple_power(2,\
    \ 4) == false\n@assert is_simple_power(2, 5) == false\n@assert is_simple_power(2,\
    \ 6) == true\n@assert is_simple_power(2, 7) == false\n@assert is_simple_power(2,\
    \ 8) == true\n@assert is_simple_power(2, 9) == false\n@assert is_simple_power(2,\
    \ 10) == true\n@assert is_simple_power(2, 11) == false\n@assert is_simple_power(2,\
    \ 12) == true\n@assert is_simple_power(2, 13) == false\n@assert is_simple_power(2,\
    \ 14) == true\n@assert is_simple_power(2, 15) == false\n@assert is_simple_power(2,\
    \ 16) == true\n@assert is_simple_power(2, 17) == false\n@assert is_simple_power(2,\
    \ 18) == true\n@assert is_simple_power(2, 19) == false\n@assert is_simple_power(2,\
    \ 20) == true\n@assert is_simple_power(2, 21) == false\n@assert is_simple_power(2,\
    \ 22) == true\n@assert is_simple_power(2, 23) == false\n@assert is_simple_power(2,\
    \ 24) == true\n@assert is_simple_power(2, 25) == false\n@assert is_simple_power(2,\
    \ 26) == true\n@assert is_simple_power(2, 27) == false\n@assert is_simple_power(2,\
    \ 28) == true\n@assert is_simple_power(2, 29) == false\n@assert is_simple_power(2,\
    \ 30) == true\n@assert is_simple_power(2, 31) == false\n@assert is_simple_power(2,\
    \ 32) == true\n@assert is_simple_power(2, 33) == false\n@assert is_simple_power(2,\
    \ 34) == true\n@assert is_simple_power(2, 35) == false\n@assert is_simple_power(2,\
    \ 36) == true\n@assert is_simple_power(2, 37) == false\n@assert is_simple_power(2,\
    \ 38) == true\n@assert is_simple_power(2, 39) == false\n@assert is_simple_power(2,\
    \ 40) == true\n@assert is_simple_power(2, 41) == false\n@assert is_simple_power(2,\
    \ 42) == true\n@assert is_simple_power(2, 43) == false\n@assert is_simple_power(2,\
    \ 44) == true\n@assert is_simple_power(2, 45) == false\n@assert is_simple_power(2,\
    \ 46) == true\n@assert is_simple_power(2, 47) == false\n@assert is_simple_power(2,\
    \ 48) == true\n", "    if x == 1 \n        return true\n    else if x == n\n \
    \       return true\n    else \n        return false\nend", "    if x == 0 \n\
    \        return true\n    else \n        return is_simple_power(x div n, n) ||\
    \ is_simple_power(x mod n, n)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_simple_power(2, 2) == true\n@assert is_simple_power(2, 3) == false\n@assert\
    \ is_simple_power(2, 4) == true\n@assert is_simple_power(2, 5) == false\n@assert\
    \ is_simple_power(2, 6) == true\n@assert is_simple_power(2, 7) == false\n@assert\
    \ is_simple_power(2, 8) == true\n@assert is_simple_power(2, 9) == false\n@assert\
    \ is_simple_power(2, 10) == true\n@assert is_simple_power(2, 11) == false\n@assert\
    \ is_simple_power(2, 12) == true\n@assert is_simple_power(2, 13) == false\n@assert\
    \ is_simple_power(2, 14) == true\n@assert is_simple_power(2, 15) == false\n@assert\
    \ is_simple_power(2, 16) == true\n@assert is_simple_power(2, 17) == false\n@assert\
    \ is_simple_power(2, 18) == true\n@assert is_simple_power(2, 19) == false\n@assert\
    \ is_simple_power(2, 20) == true\n@assert is_simple_power(2, 21) == false\n@assert\
    \ is_simple_power(2, 22) == true\n@assert is_simple_power(2, 23) == false\n@assert\
    \ is_simple_power(2, 24) == true\n@assert is_simple_power(2, 25) == false\n@assert\
    \ is_simple_power(2, 26) == true\n@assert is_simple_power(2, 27) == false\n@assert\
    \ is_simple_power(2, 28) == true\n@assert is_simple_power(2, 29) == false\n@assert\
    \ is_simple_power(2, 30) == true\n@assert is_simple_power(2, 31) == false\n@assert\
    \ is_simple_power(2, 32) == true\n@assert is_simple_power(2, 33) == false\n@assert\
    \ is_simple_power(2, 34) == true\n@assert is_simple_power(2, 35) == false\n@assert\
    \ is_simple_power(2, 36) == true\n@assert is_simple_power(2, 37) == false\n@assert\
    \ is_simple_power(2, 38) == true\n@assert is_simple_power(2, 39) == false\n@assert\
    \ is_simple_power(2, 40) == true\n@assert is_simple_power(2, 41) == false\n@assert\
    \ is_simple_power(2, 42) == true\n@assert is_simple_power(2, 43) == false\n@assert\
    \ is_simple_power(2, 44) == true\n@assert is_simple_power(2, 45) == false\n@assert\
    \ is_simple_power(2, 46) == true\n@assert is_simple_power(2, 47) == false\n@assert\
    \ is_simple_power(2, 48) == true\n@assert is_", "    if n == 0 then return true\n\
    \    if n == 1 then return true\n    if x == 0 then return false\n    if x ==\
    \ 1 then return false\n    if x == n then return true\n    if n % 2 == 0 then\
    \ return false\n    \n    \n    if is_simple_power(x, n/2) then return true\n\
    \    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x, n/2)\
    \ then return true\n    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x,\
    \ n/2) then return true\n    if is_simple_power(x, n/2) then return true\n   \
    \ if is_simple_power(x, n/2) then return true\n    if is_simple_power(x, n/2)\
    \ then return true\n    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x,\
    \ n/2) then return true\n    if is_simple_power(x, n/2) then return true\n   \
    \ if is_simple_power(x, n/2) then return true\n    if is_simple_power(x, n/2)\
    \ then return true\n    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x,\
    \ n/2) then return true\n    if is_simple_power(x, n/2) then return true\n   \
    \ if is_simple_power(x, n/2) then return true\n    if is_simple_power(x, n/2)\
    \ then return true\n    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x,\
    \ n/2) then return true\n    if is_simple_power(x, n/2) then return true\n   \
    \ if is_simple_power(x, n/2) then return true\n    if is_simple_power(x, n/2)\
    \ then return true\n    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x,\
    \ n/2) then return true\n    if is_simple_power(x, n/2) then return true\n   \
    \ if is_simple_power(x, n/2) then return true\n    if is_simple_power(x, n/2)\
    \ then return true\n    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x,\
    \ n/2) then return true\n    if is_simple_power(x, n/2) then return true\n   \
    \ if is_simple_power(x, n/2) then return true\n    if is_simple_power(x, n/2)\
    \ then return true\n    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x,\
    \ n/2) then return true\n    if is_simple_power(x, n/2) then return true\n   \
    \ if is_simple_power(x, n/2) then return true\n    if is_simple_power(x, n/2)\
    \ then return true\n    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x,\
    \ n/2) then return true\n    if is_simple_power(x, n/2) then return true\n   \
    \ if is_simple_power(x, n/2) then return true\n    if is_simple_power(x, n/2)\
    \ then return true\n    if is_simple_power(x, n/2) then return true\n    if is_simple_power(x,\
    \ n/2) then return true\n    if is_simple_power(x, n/2) then return true\n   \
    \ if is_simple_power(x, n/", "    if x == 0 \n        return true\n    if x ==\
    \ 1 \n        return true\n    if x == n \n        return true\n    if n % x ==\
    \ 0 \n        return false\n    if n % x == 1 \n        return false\n    if n\
    \ % x == n \n        return true\n    return is_simple_power(x, n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(2, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 30)\n</cell>", " \
    \   if x == 0 then return true\n    if n == 0 then return false\n    if n == 1\
    \ then return true\n    if n % 2 == 0 then return false\n    if n % 3 == 0 then\
    \ return false\n    if n % 5 == 0 then return false\n    if n % 7 == 0 then return\
    \ false\n    if n % 11 == 0 then return false\n    if n % 13 == 0 then return\
    \ false\n    if n % 17 == 0 then return false\n    if n % 19 == 0 then return\
    \ false\n    if n % 23 == 0 then return false\n    if n % 29 == 0 then return\
    \ false\n    if n % 31 == 0 then return false\n    if n % 37 == 0 then return\
    \ false\n    if n % 41 == 0 then return false\n    if n % 43 == 0 then return\
    \ false\n    if n % 47 == 0 then return false\n    if n % 53 == 0 then return\
    \ false\n    if n % 59 == 0 then return false\n    if n % 61 == 0 then return\
    \ false\n    if n % 67 == 0 then return false\n    if n % 71 == 0 then return\
    \ false\n    if n % 73 == 0 then return false\n    if n % 79 == 0 then return\
    \ false\n    if n % 83 == 0 then return false\n    if n % 89 == 0 then return\
    \ false\n    if n % 97 == 0 then return false\n    if n % 101 == 0 then return\
    \ false\n    if n % 103 == 0 then return false\n    if n % 107 == 0 then return\
    \ false\n    if n % 111 == 0 then return false\n    if n % 117 == 0 then return\
    \ false\n    if n % 121 == 0 then return false\n    if n % 123 == 0 then return\
    \ false\n    if n % 127 == 0 then return false\n    if n % 131 == 0 then return\
    \ false\n    if n % 137 == 0 then return false\n    if n % 141 == 0 then return\
    \ false\n    if n % 147 == 0 then return false\n    if n % 151 == 0 then return\
    \ false\n    if n % 157 == 0 then return false\n    if n % 161 == 0 then return\
    \ false\n    if n % 167 == 0 then return false\n    if n % 171 == 0 then return\
    \ false\n    if n % 177 == 0 then return false\n    if n % 181 == 0 then return\
    \ false\n    if n % 187 == 0 then return false\n    if n % 191 == 0 then return\
    \ false\n    if n % 197 == 0 then return false\n    if n % 201 == 0 then return\
    \ false\n    if n % 207 == 0 then return false\n    if n % 211 == 0 then return\
    \ false\n    if n % 217 == 0 then return false\n    if n % 221 == 0 then return\
    \ false\n    if n % 227 == 0 then return false\n    if n % 231 == 0 then return\
    \ false\n    if n % 237 == 0 then return ", "    if x == 0 then return true\n\
    \    if n == 0 then return false\n    if x == 1 then return true\n    if n ==\
    \ 1 then return true\n    if x == n then return true\n    if x % n == 0 then return\
    \ false\n    if x % n == 1 then return false\n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    if x == 0 \n        return true\n    if n == 0\
    \ \n        return false\n    if n == 1 \n        return x == n\n    if n % 2\
    \ == 0 \n        return is_simple_power(x, n / 2)\n    if n % 3 == 0 \n      \
    \  return is_simple_power(x, n / 3)\n    if n % 5 == 0 \n        return is_simple_power(x,\
    \ n / 5)\n    return false\nend", "    if n == 0 then return true\n    if x ==\
    \ 0 then return false\n    if n == 1 then return true\n    if x == 1 then return\
    \ true\n    if n == x then return true\n    if n % 2 == 1 then return false\n\
    \    if n % 3 == 0 then return false\n    if n % 5 == 0 then return false\n  \
    \  if n % 7 == 0 then return false\n    if n % 11 == 0 then return false\n   \
    \ if n % 13 == 0 then return false\n    if n % 17 == 0 then return false\n   \
    \ if n % 19 == 0 then return false\n    if n % 23 == 0 then return false\n   \
    \ if n % 29 == 0 then return false\n    if n % 31 == 0 then return false\n   \
    \ if n % 37 == 0 then return false\n    if n % 41 == 0 then return false\n   \
    \ if n % 43 == 0 then return false\n    if n % 47 == 0 then return false\n   \
    \ if n % 53 == 0 then return false\n    if n % 59 == 0 then return false\n   \
    \ if n % 61 == 0 then return false\n    if n % 67 == 0 then return false\n   \
    \ if n % 71 == 0 then return false\n    if n % 73 == 0 then return false\n   \
    \ if n % 79 == 0 then return false\n    if n % 83 == 0 then return false\n   \
    \ if n % 89 == 0 then return false\n    if n % 97 == 0 then return false\n   \
    \ if n % 101 == 0 then return false\n    if n % 103 == 0 then return false\n \
    \   if n % 107 == 0 then return false\n    if n % 111 == 0 then return false\n\
    \    if n % 117 == 0 then return false\n    if n % 121 == 0 then return false\n\
    \    if n % 127 == 0 then return false\n    if n % 131 == 0 then return false\n\
    \    if n % 137 == 0 then return false\n    if n % 141 == 0 then return false\n\
    \    if n % 147 == 0 then return false\n    if n % 151 == 0 then return false\n\
    \    if n % 157 == 0 then return false\n    if n % 161 == 0 then return false\n\
    \    if n % 167 == 0 then return false\n    if n % 171 == 0 then return false\n\
    \    if n % 177 == 0 then return false\n    if n % 181 == 0 then return false\n\
    \    if n % 187 == 0 then return false\n    if n % 191 == 0 then return false\n\
    \    if n % 197 == 0 then return false\n    if n % 201 == 0 then return false\n\
    \    if n % 207 == 0 then return false\n    if n % 211 == 0 then return false\n\
    \    if n % 217 == 0 then return false\n    if n % 221 == 0 then return false\n\
    \    if n % 227 == 0 then return false\n    if n % 231 == 0 then return false\n\
    \    if n % ", "    if n == 0 then return true\n    if n == 1 then return true\n\
    \    if x == 0 then return false\n    if x == 1 then return false\n    if x ==\
    \ 2 then return true\n    if x == n then return true\n    if x % n == 0 then return\
    \ false\n    if x % n == 1 then return true\n    if x % n == n then return true\n\
    \    if x % n == (n - 1) then return false\n    if x % n == (n - 2) then return\
    \ true\n    if x % n == (n - 3) then return true\n    if x % n == (n - 4) then\
    \ return true\n    if x % n == (n - 5) then return true\n    if x % n == (n -\
    \ 6) then return true\n    if x % n == (n - 7) then return true\n    if x % n\
    \ == (n - 8) then return true\n    if x % n == (n - 9) then return true\n    if\
    \ x % n == (n - 10) then return true\n    if x % n == (n - 11) then return true\n\
    \    if x % n == (n - 12) then return true\n    if x % n == (n - 13) then return\
    \ true\n    if x % n == (n - 14) then return true\n    if x % n == (n - 15) then\
    \ return true\n    if x % n == (n - 16) then return true\n    if x % n == (n -\
    \ 17) then return true\n    if x % n == (n - 18) then return true\n    if x %\
    \ n == (n - 19) then return true\n    if x % n == (n - 20) then return true\n\
    \    if x % n == (n - 21) then return true\n    if x % n == (n - 22) then return\
    \ true\n    if x % n == (n - 23) then return true\n    if x % n == (n - 24) then\
    \ return true\n    if x % n == (n - 25) then return true\n    if x % n == (n -\
    \ 26) then return true\n    if x % n == (n - 27) then return true\n    if x %\
    \ n == (n - 28) then return true\n    if x % n == (n - 29) then return true\n\
    \    if x % n == (n - 30) then return true\n    if x % n == (n - 31) then return\
    \ true\n    if x % n == (n - 32) then return true\n    if x % n == (n - 33) then\
    \ return true\n    if x % n == (n - 34) then return true\n    if x % n == (n -\
    \ 35) then return true\n    if x % n == (n - 36) then return true\n    if x %\
    \ n == (n - 37) then return true\n    if x % n == (n - 38) ", "    if x == 0 \n\
    \        return true\n    if n == 0 \n        return false\n    if x == 1 \n \
    \       return true\n    if n == 1 \n        return true\n    if x % n == 0 \n\
    \        return true\n    if n % x == 0 \n        return false\n    return is_simple_power(x\
    \ div n, n-1)\nend", "    if n == 0 \n        return true\n    else if n == 1\
    \ \n        return x == n\n    else \n        return is_simple_power(x % n, n-1)\n\
    end", "    if n == 0 then return true\n    if x == 1 then return true\n    if\
    \ x == n then return true\n    if n % 2 == 0 then return false\n    return is_simple_power(x\
    \ div 2, n-1)\nend\n</cell>\n<code language=julia-1.4>\n@assert is_simple_power(2,\
    \ 3) == true\n@assert is_simple_power(3, 3) == true\n@assert is_simple_power(4,\
    \ 3) == false\n@assert is_simple_power(5, 3) == false\n@assert is_simple_power(6,\
    \ 3) == false\n@assert is_simple_power(7, 3) == false\n@assert is_simple_power(8,\
    \ 3) == false\n@assert is_simple_power(9, 3) == false\n@assert is_simple_power(10,\
    \ 3) == false\n@assert is_simple_power(11, 3) == false\n@assert is_simple_power(12,\
    \ 3) == false\n@assert is_simple_power(13, 3) == false\n@assert is_simple_power(14,\
    \ 3) == false\n@assert is_simple_power(15, 3) == false\n@assert is_simple_power(16,\
    \ 3) == false\n@assert is_simple_power(17, 3) == false\n@assert is_simple_power(18,\
    \ 3) == false\n@assert is_simple_power(19, 3) == false\n@assert is_simple_power(20,\
    \ 3) == false\n@assert is_simple_power(21, 3) == false\n@assert is_simple_power(22,\
    \ 3) == false\n@assert is_simple_power(23, 3) == false\n@assert is_simple_power(24,\
    \ 3) == false\n@assert is_simple_power(25, 3) == false\n@assert is_simple_power(26,\
    \ 3) == false\n@assert is_simple_power(27, 3) == false\n@assert is_simple_power(28,\
    \ 3) == false\n@assert is_simple_power(29, 3) == false\n@assert is_simple_power(30,\
    \ 3) == false\n@assert is_simple_power(31, 3) == false\n@assert is_simple_power(32,\
    \ 3) == false\n@assert is_simple_power(33, 3) == false\n@assert is_simple_power(34,\
    \ 3) == false\n@assert is_simple_power(35, 3) == false\n@assert is_simple_power(36,\
    \ 3) == false\n@assert is_simple_power(37, 3) == false\n@assert is_simple_power(38,\
    \ 3) == false\n@assert is_simple_power(39, 3) == false\n@assert is_simple_power(40,\
    \ 3) == false\n@assert is_simple_power(41, 3) == false\n@assert is_simple_power(42,\
    \ 3) == false\n@assert is_simple_power(43, 3) == false\n@assert is_simple_power(44,\
    \ 3) == false\n@assert is_simple_power(45, 3) == false\n@assert is_simple_power(46,\
    \ 3) == false\n@assert is_simple_power(47, 3) == false\n", "    if x == 0 \n \
    \       then return true\n    else \n        if n == 0 \n            then return\
    \ true\n        else \n            if x % n == 0 \n                then return\
    \ true\n            else \n                if n % x == 0 \n                  \
    \  then return true\n                else \n                    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2,0)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,1)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,2)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,4)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,6)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,9)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,12)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,13)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,15)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,16)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,18)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,21)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,24)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,25)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,27)\n\
    </cell>\n<code language=julia-", "    if n == 0 then return true\n    if n ==\
    \ 1 then return true\n    if n % 2 == 0 then return false\n    if n % 3 == 0 then\
    \ return false\n    \n    \n    if x == 1 then return true\n    if x == n then\
    \ return true\n    \n    \n    if x % n == 0 then return true\n    \n    \n  \
    \  if x % n == 1 then return false\n    \n    \n    if x % n == 2 then return\
    \ false\n    \n    \n    if x % n == 3 then return false\n    \n    \n    if x\
    \ % n == 4 then return false\n    \n    \n    if x % n == 5 then return false\n\
    \    \n    \n    if x % n == 6 then return false\n    \n    \n    if x % n ==\
    \ 7 then return false\n    \n    \n    if x % n == 8 then return false\n    \n\
    \    \n    if x % n == 9  then return false\n    \n    \n    if x % n == 10  then\
    \ return false\n    \n    \n    if x % n == 11  then return false\n    \n    \n\
    \    if x % n == 12  then return false\n    \n    \n    if x % n == 13  then return\
    \ false\n    \n    \n    if x % n == 14  then return false\n    \n    \n    if\
    \ x % n == 15  then return false\n    \n    \n    if x % n == 16  then return\
    \ false\n    \n    \n    if x % n == 17  then return false\n    \n    \n    if\
    \ x % n == 18  then return false\n    \n    \n    if x % n == 19  then return\
    \ false\n    \n    \n    if x % n == 20  then return false\n    \n    \n    if\
    \ x % n == 21  then return false\n    \n    \n    if x % n == 22  then return\
    \ false\n    \n    \n    if x % n == 23  then return false\n    \n    \n    if\
    \ x % n == 24  then return false\n    \n    \n    if x % n == 25  then return\
    \ false\n    \n    \n    if x % n == 26  then return false\n    \n    \n    if\
    \ x % n == 27  then return false\n    \n    \n    if x % n == 28  then return\
    \ false\n    \n    \n    if x % n == 29  then return false\n    \n    \n    if\
    \ x % n == 3  then return false\n    \n    \n    if x % n == 4  then return false\n\
    \    \n    \n    if x % n == 5  then return false\n    \n    \n    if x % n ==\
    \ 6  then ", "    if n == 0 then return true\n    if n == 1 then return true\n\
    \    if x == 0 then return false\n    if x == 1 then return false\n    if x ==\
    \ 2 then return true\n    if x == n then return true\n    if x % n == 0 then return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 4)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 8)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 9)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 13)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 16)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 20)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 21)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 24)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 25)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 28)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 29)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 30)\n</cell", "    if x == 0 then return true\n    if x ==\
    \ 1 then return true\n    if x == n then return true\n    if x % n == 0 then return\
    \ false\n    return is_simple_power(x div n, n)\nend", "    if x == 1 \n     \
    \   return true\n    if x == 0 \n        return false\n    if n == 0 \n      \
    \  return false\n    if n == 1 \n        return true\n    if n % 2 == 0 \n   \
    \     return false\n    if n % 3 == 0 \n        return false\n    if n % 5 ==\
    \ 0 \n        return false\n    if n % 7 == 0 \n        return false\n    if n\
    \ % 11 == 0 \n        return false\n    if n % 13 == 0 \n        return false\n\
    \    if n % 17 == 0 \n        return false\n    if n % 19 == 0 \n        return\
    \ false\n    if n % 23 == 0 \n        return false\n    if n % 29 == 0 \n    \
    \    return false\n    if n % 31 == 0 \n        return false\n    if n % 37 ==\
    \ 0 \n        return false\n    if n % 41 == 0 \n        return false\n    if\
    \ n % 43 == 0 \n        return false\n    if n % 47 == 0 \n        return false\n\
    \    if n % 53 == 0 \n        return false\n    if n % 59 == 0 \n        return\
    \ false\n    if n % 61 == 0 \n        return false\n    if n % 67 == 0 \n    \
    \    return false\n    if n % 71 == 0 \n        return false\n    if n % 73 ==\
    \ 0 \n        return false\n    if n % 79 == 0 \n        return false\n    if\
    \ n % 83 == 0 \n        return false\n    if n % 89 == 0 \n        return false\n\
    \    if n % 97 == 0 \n        return false\n    if n % 101 == 0 \n        return\
    \ false\n    if n % 103 == 0 \n        return false\n    if n % 107 == 0 \n  \
    \      return false\n    if n % 111 == 0 \n        return false\n    if n % 117\
    \ == 0 \n        return false\n    if n % 121 == 0 \n        return false\n  \
    \  if n % 123 == 0 \n        return false\n    if n % 129 == 0 \n        return\
    \ false\n    if n % 131 == 0 \n        return false\n    if n % 137 == 0 \n  \
    \      return false\n    if n % 141 == 0 \n        return false\n    if n % 147\
    \ == 0 \n        return false\n    if n % 151 == 0 \n        return false\n  \
    \  if n % 157 == 0 \n        return false\n    if n % 161 == 0 \n        return\
    \ false\n    if n % 167 == 0 \n        return false\n    if n % 173 == 0 \n  \
    \      return false\n    if n % 179 == 0 \n        return false\n    if n % 183\
    \ == 0 \n        return false\n    if n % 191 == 0 \n        return false\n  \
    \  if n % 197 == 0 \n        return false\n    if n % 201 == 0 \n        return\
    \ false\n    if n % 207 == 0 \n        return false\n    if n % 211 == 0 \n  \
    \      return false\n    if n % 217 == 0 \n        return false\n    if n % 221\
    \ == 0 \n        return false\n    if n % 227 == 0 \n        return false\n  \
    \  if n % 231 == 0 \n        return false\n    if n % 237 == 0 \n        return\
    \ false\n", "    if x == 0 then return true\n    else if n == 0 then return false\n\
    \    else if n <= x then return false\n    else if n % x == 0 then return false\n\
    \    else return is_simple_power(x div n, n-1)\nend", "    if n==1 then return\
    \ true\n    if n==0 then return false\n    if n==-1 then return false\n    if\
    \ n<0 then return false\n    if n==x then return true\n    if n>x then return\
    \ false\n    \n    if n==1 then return true\n    if n==0 then return false\n \
    \   if n==-1 then return false\n    if n<0 then return false\n    if n==x then\
    \ return true\n    if n>x then return false\n    \n    if n==1 then return true\n\
    \    if n==0 then return false\n    if n==-1 then return false\n    if n<0 then\
    \ return false\n    if n==x then return true\n    if n>x then return false\n \
    \   \n    if n==1 then return true\n    if n==0 then return false\n    if n==-1\
    \ then return false\n    if n<0 then return false\n    if n==x then return true\n\
    \    if n>x then return false\n    \n    if n==1 then return true\n    if n==0\
    \ then return false\n    if n==-1 then return false\n    if n<0 then return false\n\
    \    if n==x then return true\n    if n>x then return false\n    \n    if n==1\
    \ then return true\n    if n==0 then return false\n    if n==-1 then return false\n\
    \    if n<0 then return false\n    if n==x then return true\n    if n>x then return\
    \ false\n    \n    if n==1 then return true\n    if n==0 then return false\n \
    \   if n==-1 then return false\n    if n<0 then return false\n    if n==x then\
    \ return true\n    if n>x then return false\n    \n    if n==1 then return true\n\
    \    if n==0 then return false\n    if n==-1 then return false\n    if n<0 then\
    \ return false\n    if n==x then return true\n    if n>x then return false\n \
    \   \n    if n==1 then return true\n    if n==0 then return false\n    if n==-1\
    \ then return false\n    if n<0 then return false\n    if n==x then return true\n\
    \    if n>x then return false\n    \n    if n==1 then return true\n    if n==0\
    \ then return false\n    if n==-1 then return false\n    if n<0 then return false\n\
    \    if n==x then return true\n    if n>x then return false\n    \n    if n==1\
    \ then return true\n    if n==0 ", "    if n == 0 \n        return true\n    if\
    \ n == 1 \n        return true\n    if n % 2 == 0 \n        return false\n   \
    \ if n % 3 == 0 \n        return false\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    if x == 0 then return true\n    if x == 1 then return true\n  \
    \  if x == n then return true\n    if n % x == 0 then return false\n    return\
    \ is_simple_power(x div n, n)\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 4)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 8)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 9)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 13)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 16)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 20)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 21)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 24)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 25)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 28)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(2, 29)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 30)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 31)\n</", "    if n == 0 \n        return true\n    else if n == 1 \n      \
    \  return x == 1\n    else \n        return is_simple_power(x % n, n-1) == true\n\
    end", "    if x == 1 \n        return true\n    else if x == 0 \n        return\
    \ false\n    else \n        return is_simple_power(x div n, n) || is_simple_power(x\
    \ mod n, n)\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 4)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(3, 5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 8)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 9)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 13)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 16)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 20)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 21)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 24)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 25)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 28)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 29)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 30)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 31)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 32)\n</cell>", " \
    \   if x == 1 \n        then return true\n    else \n        begin\n         \
    \   if x % n == 0 \n                then return true\n            else \n    \
    \            begin\n                    if x % n == 1 \n                     \
    \   then return false\n                    else \n                        begin\n\
    \                            if x % n == 2 \n                                then\
    \ return false\n                            else \n                          \
    \      begin\n                                    if x % n == 3 \n           \
    \                             then return false\n                            \
    \        else \n                                        begin\n              \
    \                              if x % n == 4 \n                              \
    \                  then return false\n                                       \
    \     else \n                                                begin\n         \
    \                                           if x % n == 5 \n                 \
    \                                       then return false\n                  \
    \                                  else \n                                   \
    \                     begin\n                                                \
    \            if x % n == 6 \n                                                \
    \                then return false\n                                         \
    \                   else \n                                                  \
    \              return true\n                                                 \
    \       end\n                                                end\n           \
    \                             end\n                                end\n     \
    \                   end\n                end\n        end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_simple_power(3, 2) == true\n@assert is_simple_power(3,\
    \ 3) == false\n@assert is_simple_power(3, 5) == true\n@assert is_simple_power(3,\
    \ 6) == false\n@assert is_simple_power(3, 7) == true\n@assert is_simple_power(3,\
    \ 8) == false\n@assert is_simple_power(3, 9) == true\n@assert is_simple_power(3,\
    \ 10) == false\n@assert is_simple_power(3, 11) == true\n@assert is_simple_power(3,\
    \ 12) == false\n@assert is_simple_power(3, 13) == true\n@assert is_simple_power(3,\
    \ 14) == false\n@assert is_simple_power(3, 15) == true\n@assert is_simple_power(3,\
    \ 16) == false\n@assert is_simple_power(3, 17) == true\n@assert is_simple_power(3,\
    \ 18) == false\n@assert is_simple_power(3, 19) == true\n@assert is_simple_power(3,\
    \ 20) == false\n@assert is_simple_power(3, 21) == true\n@assert is_simple_power(3,\
    \ 22) == false\n@assert is_simple_power(3, 23) == true\n@assert is_simple_power(3,\
    \ 24) == false\n@assert is_simple_power(3, 25) == true\n@assert is_simple_power(3,\
    \ 26) == false\n@assert is_simple_power(3, 27) == true\n@assert is_simple_power(3,\
    \ 28) == false\n@assert is_simple_power(3, 29) == true\n@assert is_simple_power(3,\
    \ 30) == false\n@assert is_simple_power(3, 31) == true\n@assert is_simple_power(3,\
    \ 32) == false\n@assert is_simple_power(3, 33) == true\n@assert is_simple_power(3,\
    \ 34) == false\n@assert is_simple_power(3, 35) == true\n@assert is_simple_power(3,\
    \ 36) == false\n@assert ", "    if x == 0 then return true\n    if x == 1 then\
    \ return true\n    if n == 0 then return false\n    if n == 1 then return true\n\
    \    if n % 2 == 0 then return false\n    if n % 3 == 0 then return false\n  \
    \  if n % 5 == 0 then return false\n    if n % 7 == 0 then return false\n    if\
    \ n % 11 == 0 then return false\n    if n % 13 == 0 then return false\n    if\
    \ n % 17 == 0 then return false\n    if n % 19 == 0 then return false\n    if\
    \ n % 23 == 0 then return false\n    if n % 29 == 0 then return false\n    if\
    \ n % 31 == 0 then return false\n    if n % 37 == 0 then return false\n    if\
    \ n % 41 == 0 then return false\n    if n % 43 == 0 then return false\n    if\
    \ n % 47 == 0 then return false\n    if n % 53 == 0 then return false\n    if\
    \ n % 59 == 0 then return false\n    if n % 61 == 0 then return false\n    if\
    \ n % 67 == 0 then return false\n    if n % 71 == 0 then return false\n    if\
    \ n % 73 == 0 then return false\n    if n % 79 == 0 then return false\n    if\
    \ n % 83 == 0 then return false\n    if n % 89 == 0 then return false\n    if\
    \ n % 97 == 0 then return false\n    if n % 101 == 0 then return false\n    if\
    \ n % 103 == 0 then return false\n    if n % 107 == 0 then return false\n    if\
    \ n % 111 == 0 then return false\n    if n % 113 == 0 then return false\n    if\
    \ n % 117 == 0 then return false\n    if n % 121 == 0 then return false\n    if\
    \ n % 123 == 0 then return false\n    if n % 127 == 0 then return false\n    if\
    \ n % 131 == 0 then return false\n    if n % 133 == 0 then return false\n    if\
    \ n % 137 == 0 then return false\n    if n % 141 == 0 then return false\n    if\
    \ n % 143 == 0 then return false\n    if n % 147 == 0 then return false\n    if\
    \ n % 151 == 0 then return false\n    if n % 153 == 0 then return false\n    if\
    \ n % 157 == 0 then return false\n    if n % 161 == 0 then return false\n    if\
    \ n % 163 == 0 then return false\n    if n % 167 == 0 then return false\n    if\
    \ n % 171 == 0 then return false\n    if n % 173 == 0 then return false\n    if\
    \ n % 177 == 0 then return false\n    if n % 181 == 0 then return false\n    if\
    \ n % 183 == 0 then return false\n    if n % 187 == 0 then return false\n    if\
    \ n % 191 == 0 then return false\n    if n % 193 == 0 then return false\n", " \
    \   if x == 0 \n        return true\n    else \n        return false\nend\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(2,3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,0)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,1)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,2)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,5)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,8)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,9)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,11)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,12)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,14)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,17)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,20)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,21)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,23)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,24)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,26)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,29)\n\
    </cell>\n<code language=julia-1.5>\nis_", "    if x == 1 \n        return true\n\
    \    if x == 0 \n        return false\n    if x == n \n        return true\n \
    \   if n % x == 0 \n        return false\n    return is_simple_power(x, n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2, 3) == true\n\
    @assert is_simple_power(2, 4) == false\n@assert is_simple_power(2, 5) == true\n\
    @assert is_simple_power(2, 6) == false\n@assert is_simple_power(2, 7) == true\n\
    @assert is_simple_power(2, 8) == false\n@assert is_simple_power(2, 9) == true\n\
    @assert is_simple_power(2, 10) == false\n@assert is_simple_power(2, 11) == true\n\
    @assert is_simple_power(2, 12) == false\n@assert is_simple_power(2, 13) == true\n\
    @assert is_simple_power(2, 14) == false\n@assert is_simple_power(2, 15) == true\n\
    @assert is_simple_power(2, 16) == false\n@assert is_simple_power(2, 17) == true\n\
    @assert is_simple_power(2, 18) == false\n@assert is_simple_power(2, 19) == true\n\
    @assert is_simple_power(2, 20) == false\n@assert is_simple_power(2, 21) == true\n\
    @assert is_simple_power(2, 22) == false\n@assert is_simple_power(2, 23) == true\n\
    @assert is_simple_power(2, 24) == false\n@assert is_simple_power(2, 25) == true\n\
    @assert is_simple_power(2, 26) == false\n@assert is_simple_power(2, 27) == true\n\
    @assert is_simple_power(2, 28) == false\n@assert is_simple_power(2, 29) == true\n\
    @assert is_simple_power(2, 30) == false\n@assert is_simple_power(2, 31) == true\n\
    @assert is_simple_power(2, 32) == false\n@assert is_simple_power(2, 33) == true\n\
    @assert is_simple_power(2, 34) == false\n@assert is_simple_power(2, 35) == true\n\
    @assert is_simple_power(2, 36) == false\n@assert is_simple_power(2, 37) == true\n\
    @assert is_simple_power(2, 38) == false\n@assert is_simple_power(2, 39) == true\n\
    @assert is_simple_power(2, 40) == false\n@assert is_simple_power(2, 41) == true\n\
    @assert is_simple_power(2, 42) == false\n@assert is_simple_power(2, 43) == true\n\
    @assert is_simple_power(2, 44) == false\n@assert is_simple_power(2, 45) == true\n\
    @assert is_simple_power(2, 46) == false\n@assert is_simple_power(2, 47) == true\n\
    @assert is_simple_power(2, 48) == false\n@assert is_", "    if x == 0 \n     \
    \   then return true\n    elseif x == 1 \n        then return true\n    elseif\
    \ x == n \n        then return true\n    else\n        false\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nis_simple_power(3, 2)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(3, 3)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3,\
    \ 4)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3, 5)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(3, 6)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(3, 7)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3,\
    \ 8)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3, 9)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(3, 10)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(3, 11)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3,\
    \ 12)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3, 13)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(3, 14)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(3, 15)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3,\
    \ 16)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3, 17)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(3, 18)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(3, 19)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3,\
    \ 20)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3, 21)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(3, 22)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(3, 23)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3,\
    \ 24)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3, 25)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(3, 26)\n</cell>\n<code language=julia-1.4>\n\
    is_simple_power(3, 27)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3,\
    \ 28)\n</cell>\n<code language=julia-1.4>\nis_simple_power(3, 29)\n</cell>\n<code\
    \ language=julia-1.4>\nis_simple_power(3, 30)\n</cell>\n", "    if x == 0 then\
    \ return true\n    if x == 1 then return true\n    if x == n then return true\n\
    \    if n % x == 0 then return false\n    return is_simple_power(x, n//x)\nend",
  "    if x == 1 \n        then true\n    else if x == n\n        then true\n    else\
    \ if x < n\n        then false\n    else if x == n^1\n        then true\n    else\
    \ if x == n^2\n        then true\n    else if x == n^3\n        then true\n  \
    \  else if x == n^4\n        then true\n    else if x == n^5\n        then true\n\
    \    else if x == n^6\n        then true\n    else if x == n^7\n        then true\n\
    \    else if x == n^8\n        then true\n    else if x == n^9\n        then true\n\
    \    else if x == n^10\n        then true\n    else if x == n^11\n        then\
    \ true\n    else if x == n^12\n        then true\n    else if x == n^13\n    \
    \    then true\n    else if x == n^14\n        then true\n    else if x == n^15\n\
    \        then true\n    else if x == n^16\n        then true\n    else if x ==\
    \ n^17\n        then true\n    else if x == n^18\n        then true\n    else\
    \ if x == n^19\n        then true\n    else if x == n^20\n        then true\n\
    \    else if x == n^21\n        then true\n    else if x == n^22\n        then\
    \ true\n    else if x == n^23\n        then true\n    else if x == n^24\n    \
    \    then true\n    else if x == n^25\n        then true\n    else if x == n^26\n\
    \        then true\n    else if x == n^27\n        then true\n    else if x ==\
    \ n^28\n        then true\n    else if x == n^29\n        then true\n    else\
    \ if x == n^30\n        then true\n    else if x == n^31\n        then true\n\
    \    else if x == n^32\n        then true\n    else if x == n^33\n        then\
    \ true\n    else if x == n^34\n        then true\n    else if x == n^35\n    \
    \    then true\n    else if x == n^36\n        then true\n    else if x == n^37\n\
    \        then true\n    else if x == n^38\n        then true\n    else if x ==\
    \ n^39\n        then true\n    else if x == n^40\n        then true\n    else\
    \ if x == n", "    if n == 0 then return true\n    else if n == 1 then return\
    \ x == 1\n    else if n % 2 == 0 then return is_simple_power(x, n / 2)\n    else\
    \ return is_simple_power(x, n / 2) && is_simple_power(x, n / 2)\nend", "    if\
    \ x == 0 \n        return true\n    if x == 1 \n        return true\n    if x\
    \ == n \n        return true\n    if n % x == 0 \n        return false\n    return\
    \ is_simple_power(x , n)\nend", "    if n == 1 \n        then true\n    else\n\
    \        if x % n == 0 \n            then true\n        else\n            if n\
    \ % x == 0 \n                then true\n            else\n                if x\
    \ % n == 0 \n                    and n % x == 0 \n                    then true\n\
    \                else false\n        end\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    @assert is_simple_power(2, 3) == true\n@assert is_simple_power(2, 4) == false\n\
    @assert is_simple_power(2, 5) == false\n@assert is_simple_power(2, 6) == true\n\
    @assert is_simple_power(2, 7) == false\n@assert is_simple_power(2, 8) == true\n\
    @assert is_simple_power(2, 9) == false\n@assert is_simple_power(2, 10) == true\n\
    @assert is_simple_power(2, 11) == false\n@assert is_simple_power(2, 12) == true\n\
    @assert is_simple_power(2, 13) == false\n@assert is_simple_power(2, 14) == true\n\
    @assert is_simple_power(2, 15) == false\n@assert is_simple_power(2, 16) == true\n\
    @assert is_simple_power(2, 17) == false\n@assert is_simple_power(2, 18) == true\n\
    @assert is_simple_power(2, 19) == false\n@assert is_simple_power(2, 20) == true\n\
    @assert is_simple_power(2, 21) == false\n@assert is_simple_power(2, 22) == true\n\
    @assert is_simple_power(2, 23) == false\n@assert is_simple_power(2, 24) == true\n\
    @assert is_simple_power(2, 25) == false\n@assert is_simple_power(2, 26) == true\n\
    @assert is_simple_power(2, 27) == false\n@assert is_simple_power(2, 28) == true\n\
    @assert is_simple_power(2, 29) == false\n@assert is_simple_power(2, 30) == true\n\
    @assert is_simple_power(2, 31) == false\n@assert is_simple_power(2, 32) == true\n\
    @assert is_simple_power(2, 33) == false\n@assert is_simple_power(2, 34) == true\n\
    @assert is_simple_power(2, 35) == false\n@assert is_simple_power(2, 36) == true\n\
    @assert is_simple_power(2, 37) == false\n@assert is_simple_power(2, 38) == true\n\
    @assert is_simple_power(2, 39) == false\n@assert is_simple_power(2, 40) == true\n\
    @assert is_simple_power(2, 41) == false\n@assert is_simple_power(2, 42) == true\n\
    @assert is_simple_power(2, 43) == false\n@assert is_simple_power(2, 44) == true\n\
    @assert is_simple_power(2, 45) == false\n@assert is_simple_power(2, 46) == true\n\
    @assert is_", "    if n == 0 then return true\n    if n == 1 then return true\n\
    \    if x == 0 then return false\n    if x == 1 then return false\n    if x ==\
    \ 2 then return true\n    if x == n then return true\n    if x % n == 0 then return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,3)\n\
    </cell>\n<code language=julia-1.0>\nis_simple_power(2,4)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2,5)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,6)\n\
    </cell>\n<code language=julia-1.0>\nis_simple_power(2,7)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2,8)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,9)\n\
    </cell>\n<code language=julia-1.0>\nis_simple_power(2,10)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2,11)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,12)\n\
    </cell>\n<code language=julia-1.0>\nis_simple_power(2,13)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2,14)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,15)\n\
    </cell>\n<code language=julia-1.0>\nis_simple_power(2,16)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2,17)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,18)\n\
    </cell>\n<code language=julia-1.0>\nis_simple_power(2,19)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2,20)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,21)\n\
    </cell>\n<code language=julia-1.0>\nis_simple_power(2,22)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2,23)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,24)\n\
    </cell>\n<code language=julia-1.0>\nis_simple_power(2,25)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2,26)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,27)\n\
    </cell>\n<code language=julia-1.0>\nis_simple_power(2,28)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2,29)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,30)\n\
    </cell", "    if x == 0 then return true\n    if x == 1 then return true\n   \
    \ if x == n then return true\n    if n % x == 0 then return false\n    else return\
    \ is_simple_power(x, n//x)\nend", "    if n == 1 \n        then true\n    else\
    \ if n % 2 == 0 \n        then is_simple_power(x, n / 2)\n        else false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 2)\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 30)\n</cell>\n<code\
    \ language=julia-1.5>\n", "    if n==1 \n        return true\n    if n==0 \n \
    \       return false\n    if n==-1 \n        return false\n    if n==-2 \n   \
    \     return false\n    if n==-3 \n        return false\n    if n==-4 \n     \
    \   return false\n    if n==-5 \n        return false\n    if n==-6 \n       \
    \ return false\n    if n==-7 \n        return false\n    if n==-8 \n        return\
    \ false\n    if n==-9 \n        return false\n    if n==-10 \n        return false\n\
    \    if n==-11 \n        return false\n    if n==-12 \n        return false\n\
    \    if n==-13 \n        return false\n    if n==-14 \n        return false\n\
    \    if n==-15 \n        return false\n    if n==-16 \n        return false\n\
    \    if n==-17 \n        return false\n    if n==-18 \n        return false\n\
    \    if n==-19 \n        return false\n    if n==-20 \n        return false\n\
    \    if n==-21 \n        return false\n    if n==-22 \n        return false\n\
    \    if n==-23 \n        return false\n    if n==-24 \n        return false\n\
    \    if n==-25 \n        return false\n    if n==-26 \n        return false\n\
    \    if n==-27 \n        return false\n    if n==-28 \n        return false\n\
    \    if n==-29 \n        return false\n    if n==-30 \n        return false\n\
    \    if n==-31 \n        return false\n    if n==-32 \n        return false\n\
    \    if n==-33 \n        return false\n    if n==-34 \n        return false\n\
    \    if n==-35 \n        return false\n    if n==-36 \n        return false\n\
    \    if n==-37 \n        return false\n    if n==-38 \n        return false\n\
    \    if n==-39 \n        return false\n    if n==-40 \n        return false\n\
    \    if n==-41 \n        return false\n    if n==-42 \n        return false\n\
    \    if n==-43 \n        return false\n    if n==-44 \n        return false\n\
    \    if n==-45 \n        return false\n    if n==-46 \n        return false\n\
    \    if n==-47 \n        return false\n    if n==-48 \n        return false\n\
    \    if n==-49 \n        return false\n    if n==-50 \n        return false\n\
    \    if n==-51 \n        return false\n    if n==-52 \n        return false\n\
    \    if n==-53 \n        return false\n    if n==-54 \n        return false\n\
    \    if n==", "    if n==1 \n        return true\n    else \n        return false\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2,2) == true\n\
    @assert is_simple_power(2,3) == false\n@assert is_simple_power(2,4) == true\n\
    @assert is_simple_power(2,5) == false\n@assert is_simple_power(2,6) == true\n\
    @assert is_simple_power(2,7) == false\n@assert is_simple_power(2,8) == true\n\
    @assert is_simple_power(2,9) == false\n@assert is_simple_power(2,10) == true\n\
    @assert is_simple_power(2,11) == false\n@assert is_simple_power(2,12) == true\n\
    @assert is_simple_power(2,13) == false\n@assert is_simple_power(2,14) == true\n\
    @assert is_simple_power(2,15) == false\n@assert is_simple_power(2,16) == true\n\
    @assert is_simple_power(2,17) == false\n@assert is_simple_power(2,18) == true\n\
    @assert is_simple_power(2,19) == false\n@assert is_simple_power(2,20) == true\n\
    @assert is_simple_power(2,21) == false\n@assert is_simple_power(2,22) == true\n\
    @assert is_simple_power(2,23) == false\n@assert is_simple_power(2,24) == true\n\
    @assert is_simple_power(2,25) == false\n@assert is_simple_power(2,26) == true\n\
    @assert is_simple_power(2,27) == false\n@assert is_simple_power(2,28) == true\n\
    @assert is_simple_power(2,29) == false\n@assert is_simple_power(2,30) == true\n\
    @assert is_simple_power(2,31) == false\n@assert is_simple_power(2,32) == true\n\
    @assert is_simple_power(2,33) == false\n@assert is_simple_power(2,34) == true\n\
    @assert is_simple_power(2,35) == false\n@assert is_simple_power(2,36) == true\n\
    @assert is_simple_power(2,37) == false\n@assert is_simple_power(2,38) == true\n\
    @assert is_simple_power(2,39) == false\n@assert is_simple_power(2,40) == true\n\
    @assert is_simple_power(2,41) == false\n@assert is_simple_power(2,42) == true\n\
    @assert is_simple_power(2,43) == false\n@assert is_simple_power(2,44) == true\n\
    @assert is_simple_power(2,45) == false\n@assert is_simple_power(2,46) == true\n\
    @assert is_simple_power(2,47) == false\n@assert is_simple_power(2,48) == true\n\
    @assert is_simple_power(2,49) == false\n@assert is_simple_power(2,", "    if x\
    \ == 1\n        true\n    else\n        if n%x == 0\n            true\n      \
    \  else\n            if n%x == 1\n                false\n            else\n  \
    \              if n%x == 2\n                    false\n                else\n\
    \                    if n%x == 3\n                        false\n            \
    \        else\n                        if n%x == 4\n                         \
    \   false\n                        else\n                            if n%x ==\
    \ 5\n                                false\n                            else\n\
    \                                if n%x == 6\n                               \
    \     false\n                                else\n                          \
    \          if n%x == 7\n                                        false\n      \
    \                              else\n                                        if\
    \ n%x == 8\n                                            false\n              \
    \                          else\n                                            if\
    \ n%x == 9\n                                                false\n          \
    \                                  else\n                                    \
    \            if n%x == 10\n                                                  \
    \  false\n                                                else\n             \
    \                                       if n%x == 11\n                       \
    \                                 false\n                                    \
    \                else\n                                                      \
    \  if n%x == 12\n                                                            false\n\
    \                                                        else\n              \
    \                                              if n%x == 13\n                \
    \                                                false\n                     \
    \                                       else\n                               \
    \                                 if n%x == 14\n                             \
    \                                       false\n                              \
    \                                  else\n                                    \
    \                                if n%x == 15\n                              \
    \                                          false\n                           \
    \                                         else\n                             \
    \                           if n%x == 16\n                                   \
    \                         false\n                                            \
    \            else\n                                                          \
    \  if n%x == 17\n                                                            \
    \    false\n                                                            else\n\
    \                                                                if n%x == 18\n\
    \                                                                    false\n \
    \                                                               else\n       \
    \                                                             if n%x == 19\n \
    \                                                                       false\n\
    \                                                                    else\n  \
    \                                                      if n%x == 20\n        \
    \                                                    false\n                 \
    \                                       else\n                               \
    \                             if n%x == 21\n                                 \
    \                               false\n                                      \
    \                      else\n                                                \
    \                if n%x == 22\n                                              \
    \                      false\n                                               \
    \                 else\n                                                     \
    \               if n%x == 23\n                                               \
    \                         false\n                                            \
    \                        else\n                                              \
    \          if n%x == 24\n                                                    \
    \        false\n                                                        else\n\
    \                                                            if n%x == 25\n  \
    \                                                              false\n       \
    \                                                     else\n                 \
    \                                               if n%x == 26\n               \
    \                                                     false\n                \
    \                                                else\n                      \
    \                                              if n%x == 27\n                \
    \                                                        false\n             \
    \                                                       else\n               \
    \                                         if n%x == 28\n                     \
    \                                       false\n                              \
    \                          else\n                                            \
    \                if n%x == 29\n                                              \
    \                  false\n                                                   \
    \         else\n                                                             \
    \   if n%x==30\n                                                             \
    \       false\n                                                              \
    \  else\n                                                                    if\
    \ n%x==31\n                                                                  \
    \      false\n                                                               \
    \     else\n                                                        if n%x==32\n\
    \                                                            false\n         \
    \                                               else\n                       \
    \                                     if n%x==33\n                           \
    \                                     false\n                                \
    \                            else\n                                          \
    \                      if n%x==34\n                                          \
    \                          false\n                                           \
    \                     else\n                                                 \
    \                   if n%x==35\n                                             \
    \                           false\n                                          \
    \                          else\n                                            \
    \            if n%x==36\n                                                    \
    \        false\n                                                        else",
  "    if n == 0 then return true\n    if n == 1 then return true\n    if n % 2 ==\
    \ 0 then return false\n    if n % 3 == 0 then return false\n    if n % 5 == 0\
    \ then return false\n    if n % 7 == 0 then return false\n    if n % 11 == 0 then\
    \ return false\n    if n % 13 == 0 then return false\n    if n % 17 == 0 then\
    \ return false\n    if n % 19 == 0 then return false\n    if n % 23 == 0 then\
    \ return false\n    if n % 29 == 0 then return false\n    if n % 31 == 0 then\
    \ return false\n    if n % 37 == 0 then return false\n    if n % 41 == 0 then\
    \ return false\n    if n % 43 == 0 then return false\n    if n % 47 == 0 then\
    \ return false\n    if n % 53 == 0 then return false\n    if n % 59 == 0 then\
    \ return false\n    if n % 61 == 0 then return false\n    if n % 67 == 0 then\
    \ return false\n    if n % 71 == 0 then return false\n    if n % 73 == 0 then\
    \ return false\n    if n % 79 == 0 then return false\n    if n % 83 == 0 then\
    \ return false\n    if n % 89 == 0 then return false\n    if n % 97 == 0 then\
    \ return false\n    if n % 103 == 0 then return false\n    if n % 109 == 0 then\
    \ return false\n    if n % 113 == 0 then return false\n    if n % 127 == 0 then\
    \ return false\n    if n % 131 == 0 then return false\n    if n % 137 == 0 then\
    \ return false\n    if n % 143 == 0 then return false\n    if n % 149 == 0 then\
    \ return false\n    if n % 153 == 0 then return false\n    if n % 159 == 0 then\
    \ return false\n    if n % 163 == 0 then return false\n    if n % 167 == 0 then\
    \ return false\n    if n % 171 == 0 then return false\n    if n % 177 == 0 then\
    \ return false\n    if n % 183 == 0 then return false\n    if n % 189 == 0 then\
    \ return false\n    if n % 193 == 0 then return false\n    if n % 197 == 0 then\
    \ return false\n    if n % 201 == 0 then return false\n    if n % 207 == 0 then\
    \ return false\n    if n % 211 == 0 then return false\n    if n % 215 == 0 then\
    \ return false\n    if n % 219 == 0 then return false\n    if n % 223 == 0 then\
    \ return false\n    if n % 227 == 0 then return false\n    if n % 231 == 0 then\
    \ return false\n    if n % 237 == 0 then return false\n    if n % 241 == 0 then\
    \ return false\n    if n % 247 == 0 then return false\n    if n % 251 == 0 then\
    \ return false\n    if n % 257 == 0 ", "    if x == 0 \n        return true\n\
    \    if x == 1 \n        return true\n    if x == n \n        return true\n  \
    \  if n % x == 0 \n        return false\n    if n % x == 1 \n        return false\n\
    \    if n % x == n \n        return true\n    if n % x == n-1 \n        return\
    \ false\n    if n % x == n-2 \n        return false\n    if n % x == n-3 \n  \
    \      return false\n    if n % x == n-4 \n        return false\n    if n % x\
    \ == n-5 \n        return false\n    if n % x == n-6 \n        return false\n\
    \    if n % x == n-7 \n        return false\n    if n % x == n-8 \n        return\
    \ false\n    if n % x == n-9 \n        return false\n    if n % x == n-10 \n \
    \       return false\n    if n % x == n-11 \n        return false\n    if n %\
    \ x == n-12 \n        return false\n    if n % x == n-13 \n        return false\n\
    \    if n % x == n-14 \n        return false\n    if n % x == n-15 \n        return\
    \ false\n    if n % x == n-16 \n        return false\n    if n % x == n-17 \n\
    \        return false\n    if n % x == n-18 \n        return false\n    if n %\
    \ x == n-19 \n        return false\n    if n % x == n-20 \n        return false\n\
    \    if n % x == n-21 \n        return false\n    if n % x == n-22 \n        return\
    \ false\n    if n % x == n-23 \n        return false\n    if n % x == n-24 \n\
    \        return false\n    if n % x == n-25 \n        return false\n    if n %\
    \ x == n-26 \n        return false\n    if n % x == n-27 \n        return false\n\
    \    if n % x == n-28 \n        return false\n    if n % x == n-29 \n        return\
    \ false\n    if n % x == n-30 \n        return false\n    if n % x == n-31 \n\
    \        return false\n    if n % x == n-32 \n        return false\n    if n %\
    \ x == n-33 \n        return false\n    if n % x == n-34 \n        return false\n\
    \    if n % x == n-35 \n        return false\n    if n % x == n-36 \n        return\
    \ false\n    if n % x == n-37 \n        return false\n    if n % x == n-38 \n\
    \        return false\n    if n % x == n-39 \n        return false\n    if n %\
    \ x == n-40 \n        return false\n    if n % x == n-41 \n        return false\n\
    \    if n % x == n-42 \n        return false\n    if n % x == n-43 \n        return\
    \ false\n    if n % x == n-44 \n        return false\n    if n % x == n-45 \n\
    \        return false\n    if n % x == n-46 \n        return false\n    if n %\
    \ x == n-47 \n        return false\n    if n % x == n-48 \n        return false\n\
    \    if n % x == n-49 \n        return false\n    if n % x == n-50 \n        return\
    \ false\n    if n % x == ", "    if x == 1\n        true\n    else\n        if\
    \ n%x == 0\n            false\n        else\n            true\n        end\n \
    \   end\nend\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2,3)\
    \ == true\n@assert is_simple_power(2,4) == false\n@assert is_simple_power(2,5)\
    \ == true\n@assert is_simple_power(2,6) == false\n@assert is_simple_power(2,7)\
    \ == true\n@assert is_simple_power(2,8) == false\n@assert is_simple_power(2,9)\
    \ == true\n@assert is_simple_power(2,10) == false\n@assert is_simple_power(2,11)\
    \ == true\n@assert is_simple_power(2,12) == false\n@assert is_simple_power(2,13)\
    \ == true\n@assert is_simple_power(2,14) == false\n@assert is_simple_power(2,15)\
    \ == true\n@assert is_simple_power(2,16) == false\n@assert is_simple_power(2,17)\
    \ == true\n@assert is_simple_power(2,18) == false\n@assert is_simple_power(2,19)\
    \ == true\n@assert is_simple_power(2,20) == false\n@assert is_simple_power(2,21)\
    \ == true\n@assert is_simple_power(2,22) == false\n@assert is_simple_power(2,23)\
    \ == true\n@assert is_simple_power(2,24) == false\n@assert is_simple_power(2,25)\
    \ == true\n@assert is_simple_power(2,26) == false\n@assert is_simple_power(2,27)\
    \ == true\n@assert is_simple_power(2,28) == false\n@assert is_simple_power(2,29)\
    \ == true\n@assert is_simple_power(2,30) == false\n@assert is_simple_power(2,31)\
    \ == true\n@assert is_simple_power(2,32) == false\n@assert is_simple_power(2,33)\
    \ == true\n@assert is_simple_power(2,34) == false\n@assert is_simple_power(2,35)\
    \ == true\n@assert is_simple_power(2,36) == false\n@assert is_simple_power(2,37)\
    \ == true\n@assert is_simple_power(2,38) == false\n@assert is_simple_power(2,39)\
    \ == true\n@assert is_simple_power(2,40) == false\n@assert is_simple_power(2,41)\
    \ == true\n@assert is_simple_power(2,42) == false\n@assert is_simple_power(2,43)\
    \ == true\n@assert is_simple_power(2,44) == false\n@assert is_simple_power(2,45)\
    \ == true\n@assert is_simple_power(2,46) == false\n@assert is_simple_power(2,47)\
    \ == true\n@assert is_simple_power(2,48) == false\n@assert is_simple_power(2,49)\
    \ == true\n@assert is_", "    if x == 1 \n        return true\n    else \n   \
    \     return false\nend\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,3)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,4)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,5)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,6)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,7)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,8)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,9)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,10)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,11)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,12)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,13)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,14)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,15)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,16)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,17)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,18)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,19)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,20)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,21)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,22)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,23)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,24)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,25)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,26)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,27)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,28)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,29)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,30)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2,31)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2,32)\n</cell>\n<code language=julia-1.3>\n", "    if x == 0 \n\
    \        return true\n    if x == 1 \n        return true\n    if x == n \n  \
    \      return true\n    if n % x == 0 \n        return false\n    return is_simple_power(x,\
    \ n-1)\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(2, 3)\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(4, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(5,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(6, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(7, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(8, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(9,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(10, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(11, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(12, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(13,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(14, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(15, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(16, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(17,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(18, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(19, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(20, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(21,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(22, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(23, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(24, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(25,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(26, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(27, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(28, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(29,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(30, 3)\n</cell>\n<code\
    \ language=julia-1.5>", "    if x == 1\n        return true\n    if x == 0\n \
    \       return false\n    if n == 0\n        return false\n    if n == 1\n   \
    \     return true\n    if n % 2 == 0\n        return is_simple_power(x % n, n-1)\n\
    \    return is_simple_power(x % n, n-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    @assert is_simple_power(3, 2) == true\n@assert is_simple_power(3, 3) == false\n\
    @assert is_simple_power(3, 5) == true\n@assert is_simple_power(3, 7) == false\n\
    @assert is_simple_power(3, 8) == true\n@assert is_simple_power(3, 9) == false\n\
    @assert is_simple_power(3, 10) == true\n@assert is_simple_power(3, 11) == false\n\
    @assert is_simple_power(3, 12) == true\n@assert is_simple_power(3, 13) == false\n\
    @assert is_simple_power(3, 14) == true\n@assert is_simple_power(3, 15) == false\n\
    @assert is_simple_power(3, 16) == true\n@assert is_simple_power(3, 17) == false\n\
    @assert is_simple_power(3, 18) == true\n@assert is_simple_power(3, 19) == false\n\
    @assert is_simple_power(3, 20) == true\n@assert is_simple_power(3, 21) == false\n\
    @assert is_simple_power(3, 22) == true\n@assert is_simple_power(3, 23) == false\n\
    @assert is_simple_power(3, 24) == true\n@assert is_simple_power(3, 25) == false\n\
    @assert is_simple_power(3, 26) == true\n@assert is_simple_power(3, 27) == false\n\
    @assert is_simple_power(3, 28) == true\n@assert is_simple_power(3, 29) == false\n\
    @assert is_simple_power(3, 30) == true\n@assert is_simple_power(3, 31) == false\n\
    @assert is_simple_power(3, 32) == true\n@assert is_simple_power(3, 33) == false\n\
    @assert is_simple_power(3, 34) == true\n@assert is_simple_power(3, 35) == false\n\
    @assert is_simple_power(3, 36) == true\n@assert is_simple_power(3, 37) == false\n\
    @assert is_simple_power(3, 38) == true\n@assert is_simple_power(3, 39) == false\n\
    @assert is_simple_power(3, 40) == true\n@assert is_simple_power(3, 41) == false\n\
    @assert is_simple_power(3, 42) == true\n@assert is_simple_power(3, 43) == false\n\
    @assert is_simple_power(3, 44) == true\n@assert is_simple_power(3, 45) == false\n\
    @assert is_simple_power(3, 46) == true\n@assert is_simple_power(3, 47) == false\n\
    @assert is_simple_power(3, 48", "    if x == 0 then return true\n    if x == 1\
    \ then return false\n    if n == 0 then return false\n    if n == 1 then return\
    \ true\n    if n % 2 == 0 then return false\n    if n % 3 == 0 then return false\n\
    \    if n % 5 == 0 then return false\n    if n % 7 == 0 then return false\n  \
    \  if n % 11 == 0 then return false\n    if n % 13 == 0 then return false\n  \
    \  if n % 17 == 0 then return false\n    if n % 19 == 0 then return false\n  \
    \  if n % 23 == 0 then return false\n    if n % 29 == 0 then return false\n  \
    \  if n % 31 == 0 then return false\n    if n % 37 == 0 then return false\n  \
    \  if n % 41 == 0 then return false\n    if n % 43 == 0 then return false\n  \
    \  if n % 47 == 0 then return false\n    if n % 53 == 0 then return false\n  \
    \  if n % 59 == 0 then return false\n    if n % 61 == 0 then return false\n  \
    \  if n % 67 == 0 then return false\n    if n % 71 == 0 then return false\n  \
    \  if n % 73 == 0 then return false\n    if n % 79 == 0 then return false\n  \
    \  if n % 83 == 0 then return false\n    if n % 89 == 0 then return false\n  \
    \  if n % 97 == 0 then return false\n    if n % 101 == 0 then return false\n \
    \   if n % 103 == 0 then return false\n    if n % 107 == 0 then return false\n\
    \    if n % 111 == 0 then return false\n    if n % 117 == 0 then return false\n\
    \    if n % 121 == 0 then return false\n    if n % 123 == 0 then return false\n\
    \    if n % 127 == 0 then return false\n    if n % 131 == 0 then return false\n\
    \    if n % 137 == 0 then return false\n    if n % 141 == 0 then return false\n\
    \    if n % 147 == 0 then return false\n    if n % 151 == 0 then return false\n\
    \    if n % 157 == 0 then return false\n    if n % 161 == 0 then return false\n\
    \    if n % 167 == 0 then return false\n    if n % 173 == 0 then return false\n\
    \    if n % 179 == 0 then return false\n    if n % 183 == 0 then return false\n\
    \    if n % 191 == 0 then return false\n    if n % 197 == 0 then return false\n\
    \    if n % 201 == 0 then return false\n    if n % 207 == 0 then return false\n\
    \    if n % 211 == 0 then return false\n    if n % 217 == 0 then return false\n\
    \    if n % 221 == 0 then return false\n    if n % 227 == 0 then return false\n\
    \    if n % 231 == 0 then return false\n    if n % 237 == 0 then return false\n",
  "    if n==1 \n        return true\n    else \n        return is_simple_power(x,\
    \ n-1) and x%n==0\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 2)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 10)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 22)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 30)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 3", "    if n==0\
    \ then return true\n    else if n==1 then return x==1\n    else if n==2 then return\
    \ x==1 and is_simple_power(x^2, n-1)\n    else return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_simple_power(2,3) == true\n@assert is_simple_power(2,4)\
    \ == false\n@assert is_simple_power(2,5) == false\n@assert is_simple_power(2,6)\
    \ == true\n@assert is_simple_power(2,7) == false\n@assert is_simple_power(2,8)\
    \ == true\n@assert is_simple_power(2,9) == false\n@assert is_simple_power(2,10)\
    \ == true\n@assert is_simple_power(2,11) == false\n@assert is_simple_power(2,12)\
    \ == true\n@assert is_simple_power(2,13) == false\n@assert is_simple_power(2,14)\
    \ == true\n@assert is_simple_power(2,15) == false\n@assert is_simple_power(2,16)\
    \ == true\n@assert is_simple_power(2,17) == false\n@assert is_simple_power(2,18)\
    \ == true\n@assert is_simple_power(2,19) == false\n@assert is_simple_power(2,20)\
    \ == true\n@assert is_simple_power(2,21) == false\n@assert is_simple_power(2,22)\
    \ == true\n@assert is_simple_power(2,23) == false\n@assert is_simple_power(2,24)\
    \ == true\n@assert is_simple_power(2,25) == false\n@assert is_simple_power(2,26)\
    \ == true\n@assert is_simple_power(2,27) == false\n@assert is_simple_power(2,28)\
    \ == true\n@assert is_simple_power(2,29) == false\n@assert is_simple_power(2,30)\
    \ == true\n@assert is_simple_power(2,31) == false\n@assert is_simple_power(2,32)\
    \ == true\n@assert is_simple_power(2,33) == false\n@assert is_simple_power(2,34)\
    \ == true\n@assert is_simple_power(2,35) == false\n@assert is_simple_power(2,36)\
    \ == true\n@assert is_simple_power(2,37) == false\n@assert is_simple_power(2,38)\
    \ == true\n@assert is_simple_power(2,39) == false\n@assert is_simple_power(2,40)\
    \ == true\n@assert is_simple_power(2,41) == false\n@assert is_simple_power(2,42)\
    \ == true\n@assert is_simple_power(2,43) == false\n@assert is_simple_power(2,44)\
    \ == true\n@assert is_simple_power(2,45) == false\n@assert is_simple_power(2,46)\
    \ == true\n@assert is_simple_power(2,47) == false\n@assert is_simple_power(",
  "    if x == 0 then return true\n    if n == 0 then return false\n    if n == 1\
    \ then return true\n    if x < 0 then return false\n    if x == 1 then return\
    \ true\n    if x == n then return true\n    if n % 2 == 1 then return false\n\
    \    if n % 3 == 1 then return false\n    if n % 5 == 1 then return false\n  \
    \  if n % 7 == 1 then return false\n    if n % 11 == 1 then return false\n   \
    \ if n % 13 == 1 then return false\n    if n % 17 == 1 then return false\n   \
    \ if n % 19 == 1 then return false\n    if n % 23 == 1 then return false\n   \
    \ if n % 29 == 1 then return false\n    if n % 37 == 1 then return false\n   \
    \ if n % 41 == 1 then return false\n    if n % 43 == 1 then return false\n   \
    \ if n % 47 == 1 then return false\n    if n % 53 == 1 then return false\n   \
    \ if n % 59 == 1 then return false\n    if n % 63 ==1 then return false\n    if\
    \ n % 69 == 1 then return false\n    if n % 73 ==1 then return false\n    if n\
    \ % 79 == 1 then return false\n    if n % 83 == 1 then return false\n    if n\
    \ % 89 == 1 then return false\n    if n % 97 == 1 then return false\n    if n\
    \ % 101 == 1 then return false\n    if n % 105 ==1 then return false\n    if n\
    \ % 109 == 1 then return false\n    if n % 113 == 1 then return false\n    if\
    \ n % 117 == 1 then return false\n    if n % 121 == 1 then return false\n    if\
    \ n % 125 == 1 then return false\n    if n % 129 == 1 then return false\n    if\
    \ n % 133 == 1 then return false\n    if n % 137 == 1 then return false\n    if\
    \ n % 141 == 1 then return false\n    if n % 145 == 1 then return false\n    if\
    \ n % 149 == 1 then return false\n    if n % 153 == 1 then return false\n    if\
    \ n % 157 == 1 then return false\n    if n % 161 == 1 then return false\n    if\
    \ n % 165 == 1 then return false\n    if n % 169 == 1 then return false\n    if\
    \ n % 173 == 1 then return false\n    if n % 177 == 1 then return false\n    if\
    \ n % 181 == 1 then return false\n    if n % 185 == 1 then return false\n    if\
    \ n % 189 == 1 then return false\n    if n % 193 == 1 then return false\n    if\
    \ n % 197 == 1 then return false\n    if n % 201 == 1 then return false\n    if\
    \ n % 205 == 1 then return false\n    if n % 209 == 1 then return false\n    if\
    \ n % 213 == 1 then return false\n    if n % 217 == 1 then return false\n    if\
    \ n % 221 == 1 then return false\n    if n % 225 == 1 then return false\n    if\
    \ n % 229 == 1 then return false\n    if n % 233", "    if n == 1 \n        return\
    \ true\n    else \n        return false\nend", "    if n == 0 \n        return\
    \ true\n    else \n        return is_simple_power(x, n//2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 2)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 5)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 9)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 13)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 17)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 21)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 25)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 29)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 30)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 31)\n</cell>\n", "    if x == 0 \n        return true\n   \
    \ if n == 0 \n        return false\n    if x == 1 \n        return true\n    if\
    \ n == 1 \n        return true\n    if x % n == 0 \n        return true\n    if\
    \ n % x == 0 \n        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,2)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,3)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,4)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,6)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,9)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,12)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,13)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,14)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,15)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,16)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,18)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,21)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,24)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,25)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,26)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,27)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,28)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,29)\n</cell>\n<code language=julia-1.5", "    if x == 1 \n \
    \       return true\n    if x == 0 \n        return false\n    if n == 0 \n  \
    \      return false\n    if n == 1 \n        return true\n    if n % 2 == 0 \n\
    \        return false\n    if n % 3 == 0 \n        return false\n    if n % 5\
    \ == 0 \n        return false\n    if n % 7 == 0 \n        return false\n    if\
    \ n % 11 == 0 \n        return false\n    if n % 13 == 0 \n        return false\n\
    \    if n % 17 == 0 \n        return false\n    if n % 19 == 0 \n        return\
    \ false\n    if n % 23 == 0 \n        return false\n    if n % 29 == 0 \n    \
    \    return false\n    if n % 31 == 0 \n        return false\n    if n % 37 ==\
    \ 0 \n        return false\n    if n % 41 == 0 \n        return false\n    if\
    \ n % 43 == 0 \n        return false\n    if n % 47 == 0 \n        return false\n\
    \    if n % 53 == 0 \n        return false\n    if n % 59 == 0 \n        return\
    \ false\n    if n % 61 == 0 \n        return false\n    if n % 67 == 0 \n    \
    \    return false\n    if n % 71 == 0 \n        return false\n    if n % 73 ==\
    \ 0 \n        return false\n    if n % 79 == 0 \n        return false\n    if\
    \ n % 83 == 0 \n        return false\n    if n % 89 == 0 \n        return false\n\
    \    if n % 97 == 0 \n        return false\n    if n % 101 == 0 \n        return\
    \ false\n    if n % 103 == 0 \n        return false\n    if n % 107 == 0 \n  \
    \      return false\n    if n % 111 == 0 \n        return false\n    if n % 117\
    \ == 0 \n        return false\n    if n % 121 == 0 \n        return false\n  \
    \  if n % 123 == 0 \n        return false\n    if n % 129 == 0 \n        return\
    \ false\n    if n % 131 == 0 \n        return false\n    if n % 137 == 0 \n  \
    \      return false\n    if n % 141 == 0 \n        return false\n    if n % 147\
    \ == 0 \n        return false\n    if n % 151 == 0 \n        return false\n  \
    \  if n % 157 == 0 \n        return false\n    if n % 161 == 0 \n        return\
    \ false\n    if n % 167 == 0 \n        return false\n    if n % 173 == 0 \n  \
    \      return false\n    if n % 179 == 0 \n        return false\n    if n % 183\
    \ == 0 \n        return false\n    if n % 189 == 0 \n        return false\n  \
    \  if n % 193 == 0 \n        return false\n    if n % 197 == 0 \n        return\
    \ false\n    if n % 201 == 0 \n        return false\n    if n % 207 == 0 \n  \
    \      return false\n    if n % 211 == 0 \n        return false\n    if n % 215\
    \ == 0 \n        return false\n    if n % 219 == 0 \n        return false\n  \
    \  if n % 223 == 0 \n        return false\n    if n % 229 == 0 \n        return\
    \ false\n", "    if x == 1 \n        return true\n    else \n        return false\n\
    end", "    if x == 1 \n        return true\n    if x == 0 \n        return false\n\
    \    if n == 0 \n        return false\n    if n == 1 \n        return true\n \
    \   if n % 2 == 0 \n        return false\n    if n % 3 == 0 \n        return false\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    if n == 0 then return true\n    if x == 1 then return true\n    if x == n then\
    \ return true\n    if x % n == 0 then return false\n    else return is_simple_power(x,\
    \ n-1)\nend", "    if x == 0 \n        return true\n    if x == 1 \n        return\
    \ true\n    if x == n \n        return true\n    if n % x == 0 \n        return\
    \ false\n    return is_simple_power(x , n)\nend", "    if n == 0 then return true\n\
    \    if x == 0 then return false\n    if x % n == 0 then return false\n    return\
    \ is_simple_power(x div n, n-1)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_simple_power(2, 3) == true\n@assert is_simple_power(3, 3) == false\n@assert\
    \ is_simple_power(4, 3) == true\n@assert is_simple_power(5, 3) == false\n@assert\
    \ is_simple_power(6, 3) == true\n@assert is_simple_power(7, 3) == false\n@assert\
    \ is_simple_power(8, 3) == true\n@assert is_simple_power(9, 3) == false\n@assert\
    \ is_simple_power(10, 3) == true\n@assert is_simple_power(11, 3) == false\n@assert\
    \ is_simple_power(12, 3) == true\n@assert is_simple_power(13, 3) == false\n@assert\
    \ is_simple_power(14, 3) == true\n@assert is_simple_power(15, 3) == false\n@assert\
    \ is_simple_power(16, 3) == true\n@assert is_simple_power(17, 3) == false\n@assert\
    \ is_simple_power(18, 3) == true\n@assert is_simple_power(19, 3) == false\n@assert\
    \ is_simple_power(20, 3) == true\n@assert is_simple_power(21, 3) == false\n@assert\
    \ is_simple_power(22, 3) == true\n@assert is_simple_power(23, 3) == false\n@assert\
    \ is_simple_power(24, 3) == true\n@assert is_simple_power(25, 3) == false\n@assert\
    \ is_simple_power(26, 3) == true\n@assert is_simple_power(27, 3) == false\n@assert\
    \ is_simple_power(28, 3) == true\n@assert is_simple_power(29, 3) == false\n@assert\
    \ is_simple_power(30, 3) == true\n@assert is_simple_power(31, 3) == false\n@assert\
    \ is_simple_power(32, 3) == true\n@assert is_simple_power(33, 3) == false\n@assert\
    \ is_simple_power(34, 3) == true\n@assert is_simple_power(35, 3) == false\n@assert\
    \ is_simple_power(36, 3) == true\n@assert is_simple_power(37, 3) == false\n@assert\
    \ is_simple_power(38, 3) == true\n@assert is_simple_power(39, 3) == false\n@assert\
    \ is_simple_power(40, 3) == true\n@assert is_simple_power(41, 3) == false\n@assert\
    \ is_simple_power(42, 3) == true\n@assert is_simple_power(43, 3) == false\n@assert\
    \ is_simple_power(44, 3) == true\n@assert is_simple_power(45, 3) == false\n@assert\
    \ is_simple_power(46, 3) == true\n@assert is_simple_power(47, 3) == false\n@assert\
    \ is_simple_power(48, ", "    if n == 0 then return true\n    if n == 1 then return\
    \ true\n    if x == 0 then return false\n    if x == 1 then return false\n   \
    \ if x == 2 then return true\n    if x == n then return true\n    if x % n ==\
    \ 0 then return true\n    if x % n != 0 then return false\n    return is_simple_power(x,\
    \ n-1)\nend\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2, 3)\
    \ == true\n@assert is_simple_power(2, 2) == true\n@assert is_simple_power(2, 1)\
    \ == true\n@assert is_simple_power(2, 0) == false\n@assert is_simple_power(2,\
    \ -1) == false\n@assert is_simple_power(2, -2) == false\n@assert is_simple_power(2,\
    \ -3) == false\n@assert is_simple_power(2, -4) == false\n@assert is_simple_power(2,\
    \ -5) == false\n@assert is_simple_power(2, -6) == false\n@assert is_simple_power(2,\
    \ -7) == false\n@assert is_simple_power(2, -8) == false\n@assert is_simple_power(2,\
    \ -9) == false\n@assert is_simple_power(2, -10) == false\n@assert is_simple_power(2,\
    \ -11) == false\n@assert is_simple_power(2, -12) == false\n@assert is_simple_power(2,\
    \ -13) == false\n@assert is_simple_power(2, -14) == false\n@assert is_simple_power(2,\
    \ -15) == false\n@assert is_simple_power(2, -16) == false\n@assert is_simple_power(2,\
    \ -17) == false\n@assert is_simple_power(2, -18) == false\n@assert is_simple_power(2,\
    \ -19) == false\n@assert is_simple_power(2, -20) == false\n@assert is_simple_power(2,\
    \ -21) == false\n@assert is_simple_power(2, -22) == false\n@assert is_simple_power(2,\
    \ -23) == false\n@assert is_simple_power(2, -24) == false\n@assert is_simple_power(2,\
    \ -25) == false\n@assert is_simple_power(2, -26) == false\n@assert is_simple_power(2,\
    \ -27) == false\n@assert is_simple_power(2, -28) == false\n@assert is_simple_power(2,\
    \ -29) == false\n@assert is_simple_power(2, -30) == false\n@assert is_simple_power(2,\
    \ -31) == false\n@assert is_simple_power(2, -32) == false\n@assert is_simple_power(2,\
    \ -33) == false\n@assert is_simple_power(2, -34) == false\n@assert is_simple_power(2,\
    \ -35) == false\n@assert is_simple_power(2, -36) == false\n@assert is_simple_power(2,\
    \ -37) == false\n@assert is_simple_power(2, -", "    if n == 0 then return true\n\
    \    if n == 1 then return true\n    if x == 0 then return false\n    if x ==\
    \ 1 then return false\n    if x == 2 then return true\n    if x == n then return\
    \ true\n    if x % n == 0 then return false\n    if x % n == 1 then return true\n\
    \    if x % n == -1 then return false\n    if x % n == -2 then return true\n \
    \   if x % n == -3 then return false\n    if x % n == -4 then return true\n  \
    \  if x % n == -5 then return false\n    if x % n == -6 then return true\n   \
    \ if x % n == -7 then return false\n    if x % n == -8 then return true\n    if\
    \ x % n == -9 then return false\n    if x % n == -10 then return true\n    if\
    \ x % n == -11 then return false\n    if x % n == -12 then return true\n    if\
    \ x % n == -13 then return false\n    if x % n == -14 then return true\n    if\
    \ x % n == -15 then return false\n    if x % n == -16 then return true\n    if\
    \ x % n == -17 then return false\n    if x % n == -18 then return true\n    if\
    \ x % n == -19 then return false\n    if x % n == -20 then return true\n    if\
    \ x % n == -21 then return false\n    if x % n == -22 then return true\n    if\
    \ x % n == -23 then return false\n    if x % n == -24 then return true\n    if\
    \ x % n == -25 then return false\n    if x % n == -26 then return true\n    if\
    \ x % n == -27 then return false\n    if x % n == -28 then return true\n    if\
    \ x % n == -29 then return false\n    if x % n == -30 then return true\n    if\
    \ x % n == -31 then return false\n    if x % n == -32 then return true\n    if\
    \ x % n == -33 then return false\n    if x % n == -34 then return true\n    if\
    \ x % n == -35 then return false\n    if x % n == -36 then return true\n    if\
    \ x % n == -37 then return false\n    if x % n == -38 then return true\n    if\
    \ x % n == -39 then return false\n    if x % n == -40 then return true\n    if\
    \ x % n == -41 then return false\n    if x % n == -42 then return true\n    if\
    \ x % n == -43 then return false\n    if x % n == -44 then return true\n    if\
    \ x % n == -45 then return false\n", "    if n == 0 \n        true\n    elseif\
    \ n == 1 \n        true\n    elseif n % 2 == 0 \n        is_simple_power(x, n\
    \ / 2)\n    else\n        is_simple_power(x, n / 2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 2)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 5)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 9)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 13)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 17)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 21)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 25)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 29)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 30)", "    if x == 0 \n        return\
    \ true\n    if x == 1 \n        return true\n    if x == n \n        return true\n\
    \    if n % x == 0 \n        return false\n    else \n        return is_simple_power(x,\
    \ n//x)\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 2)\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 30)", "    if n\
    \ == 0 \n        true\n    elseif n == 1 \n        true\n    elseif x == 0 \n\
    \        false\n    elseif x == 1 \n        true\n    elseif x == n \n       \
    \ true\n    elseif x % n == 0 \n        true\n    else\n        false\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_simple_power(2, 3) == true\n\
    @assert is_simple_power(2, 0) == false\n@assert is_simple_power(2, 1) == true\n\
    @assert is_simple_power(2, 2) == true\n@assert is_simple_power(2, 4) == false\n\
    @assert is_simple_power(2, 5) == false\n@assert is_simple_power(2, 6) == false\n\
    @assert is_simple_power(2, 7) == false\n@assert is_simple_power(2, 8) == false\n\
    @assert is_simple_power(2, 9) == false\n@assert is_simple_power(2, 10) == false\n\
    @assert is_simple_power(2, 11) == false\n@assert is_simple_power(2, 12) == false\n\
    @assert is_simple_power(2, 13) == false\n@assert is_simple_power(2, 14) == false\n\
    @assert is_simple_power(2, 15) == false\n@assert is_simple_power(2, 16) == false\n\
    @assert is_simple_power(2, 17) == false\n@assert is_simple_power(2, 18) == false\n\
    @assert is_simple_power(2, 19) == false\n@assert is_simple_power(2, 20) == false\n\
    @assert is_simple_power(2, 21) == false\n@assert is_simple_power(2, 22) == false\n\
    @assert is_simple_power(2, 23) == false\n@assert is_simple_power(2, 24) == false\n\
    @assert is_simple_power(2, 25) == false\n@assert is_simple_power(2, 26) == false\n\
    @assert is_simple_power(2, 27) == false\n@assert is_simple_power(2, 28) == false\n\
    @assert is_simple_power(2, 29) == false\n@assert is_simple_power(2, 30) == false\n\
    @assert is_simple_power(2, 31) == false\n@assert is_simple_power(2, 32) == false\n\
    @assert is_simple_power(2, 33) == false\n@assert is_simple_power(2, 34) == false\n\
    @assert is_simple_power(2, 35) == false\n@assert is_simple_power(2, 36) == false\n\
    @assert is_simple_power(2, 37) == false\n@assert is_simple_power(2, 38) == false\n\
    @assert is_simple_power(2, 39) == false\n@assert is_simple_power(2, 40) == false\n\
    @assert is_simple_power(2, 41) == false\n@assert is_simple_power(2, 42) == false\n\
    @assert is_simple_power(2, 43) == false\n@assert is_simple_power(", "    if n\
    \ == 0 \n        return true\n    if n == 1 \n        return x == 1\n    if n\
    \ % 2 == 0 \n        return is_simple_power(x, n / 2)\n    return is_simple_power(x\
    \ * x, n / 2)\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 2)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 30)\n</cell", " \
    \   if x == 0 then return true\n    if x == 1 then return true\n    if x == n\
    \ then return true\n    if n % x == 0 then return false\n    else return is_simple_power(x\
    \ div n, n)\nend\n</cell>\n<code language=julia-1.0>\n@assert is_simple_power(2,\
    \ 2) == true\n@assert is_simple_power(2, 3) == false\n@assert is_simple_power(2,\
    \ 4) == true\n@assert is_simple_power(2, 5) == false\n@assert is_simple_power(2,\
    \ 6) == true\n@assert is_simple_power(2, 7) == false\n@assert is_simple_power(2,\
    \ 8) == true\n@assert is_simple_power(2, 9) == false\n@assert is_simple_power(2,\
    \ 10) == true\n@assert is_simple_power(2, 11) == false\n@assert is_simple_power(2,\
    \ 12) == true\n@assert is_simple_power(2, 13) == false\n@assert is_simple_power(2,\
    \ 14) == true\n@assert is_simple_power(2, 15) == false\n@assert is_simple_power(2,\
    \ 16) == true\n@assert is_simple_power(2, 17) == false\n@assert is_simple_power(2,\
    \ 18) == true\n@assert is_simple_power(2, 19) == false\n@assert is_simple_power(2,\
    \ 20) == true\n@assert is_simple_power(2, 21) == false\n@assert is_simple_power(2,\
    \ 22) == true\n@assert is_simple_power(2, 23) == false\n@assert is_simple_power(2,\
    \ 24) == true\n@assert is_simple_power(2, 25) == false\n@assert is_simple_power(2,\
    \ 26) == true\n@assert is_simple_power(2, 27) == false\n@assert is_simple_power(2,\
    \ 28) == true\n@assert is_simple_power(2, 29) == false\n@assert is_simple_power(2,\
    \ 30) == true\n@assert is_simple_power(2, 31) == false\n@assert is_simple_power(2,\
    \ 32) == true\n@assert is_simple_power(2, 33) == false\n@assert is_simple_power(2,\
    \ 34) == true\n@assert is_simple_power(2, 35) == false\n@assert is_simple_power(2,\
    \ 36) == true\n@assert is_simple_power(2, 37) == false\n@assert is_simple_power(2,\
    \ 38) == true\n@assert is_simple_power(2, 39) == false\n@assert is_simple_power(2,\
    \ 40) == true\n@assert is_simple_power(2, 41) == false\n@assert is_simple_power(2,\
    \ 42) == true\n@assert is_simple_power(2, 43) == false\n@assert is_simple_power(2,\
    \ 44) == true\n@assert is_simple_power(2, 45) == false\n@assert is_simple_power(2,\
    \ 46) == true\n@assert is_simple_power(2, 47) == false\n", "    if n == 0 then\
    \ return true\n    if x == 0 then return false\n    if x == 1 then return true\n\
    \    if x == n then return true\n    if x % n == 0 then return false\n    return\
    \ is_simple_power(x div n, n)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_simple_power(2, 2) == true\n@assert is_simple_power(2, 3) == false\n@assert\
    \ is_simple_power(2, 4) == true\n@assert is_simple_power(2, 5) == false\n@assert\
    \ is_simple_power(2, 6) == true\n@assert is_simple_power(2, 7) == false\n@assert\
    \ is_simple_power(2, 8) == true\n@assert is_simple_power(2, 9) == false\n@assert\
    \ is_simple_power(2, 10) == true\n@assert is_simple_power(2, 11) == false\n@assert\
    \ is_simple_power(2, 12) == true\n@assert is_simple_power(2, 13) == false\n@assert\
    \ is_simple_power(2, 14) == true\n@assert is_simple_power(2, 15) == false\n@assert\
    \ is_simple_power(2, 16) == true\n@assert is_simple_power(2, 17) == false\n@assert\
    \ is_simple_power(2, 18) == true\n@assert is_simple_power(2, 19) == false\n@assert\
    \ is_simple_power(2, 20) == true\n@assert is_simple_power(2, 21) == false\n@assert\
    \ is_simple_power(2, 22) == true\n@assert is_simple_power(2, 23) == false\n@assert\
    \ is_simple_power(2, 24) == true\n@assert is_simple_power(2, 25) == false\n@assert\
    \ is_simple_power(2, 26) == true\n@assert is_simple_power(2, 27) == false\n@assert\
    \ is_simple_power(2, 28) == true\n@assert is_simple_power(2, 29) == false\n@assert\
    \ is_simple_power(2, 30) == true\n@assert is_simple_power(2, 31) == false\n@assert\
    \ is_simple_power(2, 32) == true\n@assert is_simple_power(2, 33) == false\n@assert\
    \ is_simple_power(2, 34) == true\n@assert is_simple_power(2, 35) == false\n@assert\
    \ is_simple_power(2, 36) == true\n@assert is_simple_power(2, 37) == false\n@assert\
    \ is_simple_power(2, 38) == true\n@assert is_simple_power(2, 39) == false\n@assert\
    \ is_simple_power(2, 40) == true\n@assert is_simple_power(2, 41) == false\n@assert\
    \ is_simple_power(2, 42) == true\n@assert is_simple_power(2, 43) == false\n@assert\
    \ is_simple_power(2, 44) == true\n@assert is_simple_power(2, 45) == false\n@assert\
    \ is_simple_power(2, 46) == true\n@assert is_simple_", "    if x == 1 \n     \
    \   return true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,4)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,5)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,6)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,7)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,8)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,10)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,13)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,14)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,15)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,16)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,17)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,18)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,19)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,20)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,22)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,25)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,26)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,27)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,28)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,29)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2,30)\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,31)\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2,32)\n</cell>\n<code language=julia-1.5>\n",
  "    if n == 0 \n        true\n    elseif n == 1 \n        true\n    elseif x ==\
    \ 0 \n        false\n    elseif x == 1 \n        true\n    elseif x == 2 \n  \
    \      true\n    elseif x == n \n        true\n    elseif x % n == 0 \n      \
    \  true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_simple_power(3, 2) == true\n@assert is_simple_power(3, 3) == true\n\
    @assert is_simple_power(3, 5) == false\n@assert is_simple_power(3, 7) == false\n\
    @assert is_simple_power(3, 10) == false\n@assert is_simple_power(3, 11) == false\n\
    @assert is_simple_power(3, 13) == false\n@assert is_simple_power(3, 17) == false\n\
    @assert is_simple_power(3, 18) == false\n@assert is_simple_power(3, 19) == false\n\
    @assert is_simple_power(3, 20) == false\n@assert is_simple_power(3, 21) == false\n\
    @assert is_simple_power(3, 22) == false\n@assert is_simple_power(3, 23) == false\n\
    @assert is_simple_power(3, 24) == false\n@assert is_simple_power(3, 25) == false\n\
    @assert is_simple_power(3, 26) == false\n@assert is_simple_power(3, 27) == false\n\
    @assert is_simple_power(3, 28) == false\n@assert is_simple_power(3, 29) == false\n\
    @assert is_simple_power(3, 30) == false\n@assert is_simple_power(3, 31) == false\n\
    @assert is_simple_power(3, 32) == false\n@assert is_simple_power(3, 33) == false\n\
    @assert is_simple_power(3, 34) == false\n@assert is_simple_power(3, 35) == false\n\
    @assert is_simple_power(3, 36) == false\n@assert is_simple_power(3, 37) == false\n\
    @assert is_simple_power(3, 38) == false\n@assert is_simple_power(3, 39) == false\n\
    @assert is_simple_power(3, 40) == false\n@assert is_simple_power(3, 41) == false\n\
    @assert is_simple_power(3, 42) == false\n@assert is_simple_power(3, 43) == false\n\
    @assert is_simple_power(3, 44) == false\n@assert is_simple_power(3, 45) == false\n\
    @assert is_simple_power(3, 46) == false\n@assert is_simple_power(3, 47) == false\n\
    @assert is_simple_power(3, 48) == false\n@assert is_simple_power(3, 49) == false\n\
    @assert is_simple_power(3, 50) == false\n@assert is_simple_power(3, 51) == false\n\
    @assert is_simple_power(3, 52) == false\n@assert is_simple_power(3, ", "    if\
    \ x == 1\n        return true\n    else\n        return false\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_simple_power(2, 3) == true\n@assert is_simple_power(2,\
    \ 4) == false\n@assert is_simple_power(2, 5) == false\n@assert is_simple_power(2,\
    \ 6) == true\n@assert is_simple_power(2, 7) == false\n@assert is_simple_power(2,\
    \ 8) == false\n@assert is_simple_power(2, 9) == true\n@assert is_simple_power(2,\
    \ 10) == false\n@assert is_simple_power(2, 11) == false\n@assert is_simple_power(2,\
    \ 12) == true\n@assert is_simple_power(2, 13) == false\n@assert is_simple_power(2,\
    \ 14) == false\n@assert is_simple_power(2, 15) == true\n@assert is_simple_power(2,\
    \ 16) == false\n@assert is_simple_power(2, 17) == false\n@assert is_simple_power(2,\
    \ 18) == true\n@assert is_simple_power(2, 19) == false\n@assert is_simple_power(2,\
    \ 20) == false\n@assert is_simple_power(2, 21) == true\n@assert is_simple_power(2,\
    \ 22) == false\n@assert is_simple_power(2, 23) == false\n@assert is_simple_power(2,\
    \ 24) == true\n@assert is_simple_power(2, 25) == false\n@assert is_simple_power(2,\
    \ 26) == false\n@assert is_simple_power(2, 27) == true\n@assert is_simple_power(2,\
    \ 28) == false\n@assert is_simple_power(2, 29) == false\n@assert is_simple_power(2,\
    \ 30) == true\n@assert is_simple_power(2, 31) == false\n@assert is_simple_power(2,\
    \ 32) == false\n@assert is_simple_power(2, 33) == true\n@assert is_simple_power(2,\
    \ 34) == false\n@assert is_simple_power(2, 35) == false\n@assert is_simple_power(2,\
    \ 36) == true\n@assert is_simple_power(2, 37) == false\n@assert is_simple_power(2,\
    \ 38) == false\n@assert is_simple_power(2, 39) == true\n@assert is_simple_power(2,\
    \ 40) == false\n@assert is_simple_power(2, 41) == false\n@assert is_simple_power(2,\
    \ 42) == true\n@assert is_simple_power(2, 43) == false\n@assert is_simple_power(2,\
    \ 44) == false\n@assert is_simple_power(2, 45) == true\n@assert is_simple_power(2,\
    \ 46) == false\n@assert is_simple_power(2, 47) == false\n@assert is_simple_power(2,\
    \ 48) == true\n@assert is_simple_power(2, 49) == false\n@assert is_simple_power(2,\
    \ 50) == false\n@assert is_simple_power(2, 51) == ", "    if x == 0 \n       \
    \ return true\n    else if x == 1 \n        return true\n    else if x == n \n\
    \        return true\n    else \n        return false\nend", "    if x == 0 then\
    \ return true\n    else if n == 0 then return false\n    else if x < 0 then return\
    \ false\n    else if x < n then return is_simple_power(x//n, n) else false\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert is_simple_power(2,3) == true\n@assert\
    \ is_simple_power(2,0) == false\n@assert is_simple_power(2,-1) == false\n@assert\
    \ is_simple_power(2,2) == true\n@assert is_simple_power(2,1) == false\n@assert\
    \ is_simple_power(2,4) == true\n@assert is_simple_power(2,5) == false\n@assert\
    \ is_simple_power(2,6) == false\n@assert is_simple_power(2,7) == false\n@assert\
    \ is_simple_power(2,8) == false\n@assert is_simple_power(2,9) == false\n@assert\
    \ is_simple_power(2,10) == false\n@assert is_simple_power(2,11) == false\n@assert\
    \ is_simple_power(2,12) == false\n@assert is_simple_power(2,13) == false\n@assert\
    \ is_simple_power(2,14) == false\n@assert is_simple_power(2,15) == false\n@assert\
    \ is_simple_power(2,16) == false\n@assert is_simple_power(2,17) == false\n@assert\
    \ is_simple_power(2,18) == false\n@assert is_simple_power(2,19) == false\n@assert\
    \ is_simple_power(2,20) == false\n@assert is_simple_power(2,21) == false\n@assert\
    \ is_simple_power(2,22) == false\n@assert is_simple_power(2,23) == false\n@assert\
    \ is_simple_power(2,24) == false\n@assert is_simple_power(2,25) == false\n@assert\
    \ is_simple_power(2,26) == false\n@assert is_simple_power(2,27) == false\n@assert\
    \ is_simple_power(2,28) == false\n@assert is_simple_power(2,29) == false\n@assert\
    \ is_simple_power(2,30) == false\n@assert is_simple_power(2,31) == false\n@assert\
    \ is_simple_power(2,32) == false\n@assert is_simple_power(2,33) == false\n@assert\
    \ is_simple_power(2,34) == false\n@assert is_simple_power(2,35) == false\n@assert\
    \ is_simple_power(2,36) == false\n@assert is_simple_power(2,37) == false\n@assert\
    \ is_simple_power(2,38) == false\n@assert is_simple_power(2,39) == false\n@assert\
    \ is_simple_power(2,40) == false\n@assert is_simple_power(2,41) == false\n@assert\
    \ is_simple_power(2,42) == false\n@assert is_simple_power(2,43) == false\n@assert\
    \ is_simple_power(2,44) == false", "    if n == 0 \n        return true\n    else\
    \ \n        return is_simple_power(x, n-1) or x == n**(n-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_simple_power(2, 3) == true\n@assert is_simple_power(2,\
    \ 4) == false\n@assert is_simple_power(2, 5) == false\n@assert is_simple_power(2,\
    \ 6) == false\n@assert is_simple_power(2, 7) == false\n@assert is_simple_power(2,\
    \ 8) == true\n@assert is_simple_power(2, 9) == false\n@assert is_simple_power(2,\
    \ 10) == false\n@assert is_simple_power(2, 11) == false\n@assert is_simple_power(2,\
    \ 12) == false\n@assert is_simple_power(2, 13) == false\n@assert is_simple_power(2,\
    \ 14) == false\n@assert is_simple_power(2, 15) == false\n@assert is_simple_power(2,\
    \ 16) == false\n@assert is_simple_power(2, 17) == false\n@assert is_simple_power(2,\
    \ 18) == false\n@assert is_simple_power(2, 19) == false\n@assert is_simple_power(2,\
    \ 20) == false\n@assert is_simple_power(2, 21) == false\n@assert is_simple_power(2,\
    \ 22) == false\n@assert is_simple_power(2, 23) == false\n@assert is_simple_power(2,\
    \ 24) == false\n@assert is_simple_power(2, 25) == false\n@assert is_simple_power(2,\
    \ 26) == false\n@assert is_simple_power(2, 27) == false\n@assert is_simple_power(2,\
    \ 28) == false\n@assert is_simple_power(2, 29) == false\n@assert is_simple_power(2,\
    \ 30) == false\n@assert is_simple_power(2, 31) == false\n@assert is_simple_power(2,\
    \ 32) == false\n@assert is_simple_power(2, 33) == false\n@assert is_simple_power(2,\
    \ 34) == false\n@assert is_simple_power(2, 35) == false\n@assert is_simple_power(2,\
    \ 36) == false\n@assert is_simple_power(2, 37) == false\n@assert is_simple_power(2,\
    \ 38) == false\n@assert is_simple_power(2, 39) == false\n@assert is_simple_power(2,\
    \ 40) == false\n@assert is_simple_power(2, 41) == false\n@assert is_simple_power(2,\
    \ 42) == false\n@assert is_simple_power(2, 43) == false\n@assert is_simple_power(2,\
    \ 44) == false\n@assert is_simple_power(2, 45) == false\n@assert is_simple_power(2,\
    \ 46) == false\n@assert is_simple_power(2, 47) == false\n@assert is_simple_power(2,\
    \ 48) == false\n@assert is_simple_power(2, 49) == false\n@assert is_simple_power(2, ",
  "    if n == 1 then return true\n    if n == 0 then return false\n    if x == 0\
    \ then return false\n    if x == 1 then return true\n    if x == -1 then return\
    \ false\n    if x == n then return true\n    if x > n then return false\n    if\
    \ x < 0 then return false\n    if x == n^2 then return true\n    if x == n^3 then\
    \ return true\n    if x == n^4 then return true\n    if x == n^5 then return true\n\
    \    if x == n^6 then return true\n    if x == n^7 then return true\n    if x\
    \ == n^8 then return true\n    if x == n^9 then return true\n    if x == n^10\
    \ then return true\n    if x == n^11 then return true\n    if x == n^12 then return\
    \ true\n    if x == n^13 then return true\n    if x == n^14 then return true\n\
    \    if x == n^15 then return true\n    if x == n^16 then return true\n    if\
    \ x == n^17 then return true\n    if x == n^18 then return true\n    if x == n^19\
    \ then return true\n    if x == n^20 then return true\n    if x == n^21 then return\
    \ true\n    if x == n^22 then return true\n    if x == n^23 then return true\n\
    \    if x == n^24 then return true\n    if x == n^25 then return true\n    if\
    \ x == n^26 then return true\n    if x == n^27 then return true\n    if x == n^28\
    \ then return true\n    if x == n^29 then return true\n    if x == n^30 then return\
    \ true\n    if x == n^31 then return true\n    if x == n^32 then return true\n\
    \    if x == n^33 then return true\n    if x == n^34 then return true\n    if\
    \ x == n^35 then return true\n    if x == n^36 then return true\n    if x == n^37\
    \ then return true\n    if x == n^38 then return true\n    if x == n^39 then return\
    \ true\n    if x == n^40 then return true\n    if x == n^41 then return true\n\
    \    if x == n^42 then return true\n    if x == n^43 then return true\n    if\
    \ x == n^44 then return true\n    if x == n^45 then return true\n    if x == n^46\
    \ then return true\n    if x == n^47 then return true\n    if x == n^48 then return\
    \ true\n    if x == n^49 then return true\n    if x == n^50 then return true\n\
    \    if x == n^5", "    if x == 1 \n        return true\n    else if x == 0 \n\
    \        return false\n    else \n        return is_simple_power(x div n, n) ||\
    \ is_simple_power(x mod n, n)\nend", "    if n == 0 \n        true\n    elseif\
    \ n == 1 \n        true\n    elseif n % 2 == 0 \n        is_simple_power(x, n\
    \ / 2)\n    else\n        is_simple_power(x, n / 2) && is_simple_power(x, n /\
    \ 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 3)\n\
    </cell>\n<code language=julia-1.3>\nis_simple_power(2, 4)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 5)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 6)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 7)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 8)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 9)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 10)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 11)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 12)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 13)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 14)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 15)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 16)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 17)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 18)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 19)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 20)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 21)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 22)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 23)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 24)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 25)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 26)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2, 27)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(2, 28)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(2, 29)\n</cell>\n<code language=julia-1.3>\nis_simple_power(2,\
    \ 30)\n</cell>\n<code language=julia-", "    if x == 1\n        return true\n\
    \    else if x == 0\n        return false\n    else\n        return is_simple_power(x\
    \ div n, n) || is_simple_power(x mod n, n)\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 30)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 31)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 32)\n</cell>\n", "    if x == 0 \n        return true\n   \
    \ if x == 1 \n        return true\n    if x == n \n        return true\n    if\
    \ n % x == 0 \n        return false\n    return is_simple_power(x, n-1)\nend\n\
    </cell>\n<code language=julia-1.5>\nis_simple_power(2, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(4,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(5, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(6, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(7, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(8,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(9, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(10, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(11, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(12,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(13, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(14, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(15, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(16,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(17, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(18, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(19, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(20,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(21, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(22, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(23, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(24,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(25, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(26, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(27, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(28,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(29, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(30, 3)\n</cell>\n<code language=julia-1.5>",
  "    if x == 1\n        return true\n    elseif x == n\n        return true\n  \
    \  else\n        return false\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(2,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(4, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(5, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(6,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(7, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(8, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(9, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(10,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(11, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(12, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(13, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(14,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(15, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(16, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(17, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(18,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(19, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(20, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(21, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(22,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(23, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(24, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(25, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(26,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(27, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(28, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(29, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(30,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(31, 3)\n</cell>\n<code\
    \ language=julia-1.5>\n", "    if x == 1\n        return true\n    else if x ==\
    \ 0\n        return false\n    else\n        return is_simple_power(x//n, n) &&\
    \ is_simple_power(x%n, n)\nend\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 2)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 3)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 4)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 5)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 6)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 7)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 8)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 9)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 10)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 11)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 12)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 13)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 14)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 15)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 16)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 17)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 18)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 19)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 20)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 21)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 22)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 23)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 24)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 25)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 26)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3, 27)\n</cell>\n<code\
    \ language=julia-1.3>\nis_simple_power(3, 28)\n</cell>\n<code language=julia-1.3>\n\
    is_simple_power(3, 29)\n</cell>\n<code language=julia-1.3>\nis_simple_power(3,\
    \ 30)\n</cell>\n<code language=", "    if n == 0 then return true\n    if x ==\
    \ 1 then return true\n    if x == n then return true\n    if n % 2 == 0 then return\
    \ false\n    else return is_simple_power(x, n//2)\nend\n</cell>\n<code language=julia-1.0>\n\
    @assert is_simple_power(2, 2) == true\n@assert is_simple_power(3, 2) == false\n\
    @assert is_simple_power(4, 2) == false\n@assert is_simple_power(5, 2) == true\n\
    @assert is_simple_power(6, 2) == false\n@assert is_simple_power(7, 2) == false\n\
    @assert is_simple_power(8, 2) == true\n@assert is_simple_power(9, 2) == false\n\
    @assert is_simple_power(10, 2) == true\n@assert is_simple_power(11, 2) == false\n\
    @assert is_simple_power(12, 2) == true\n@assert is_simple_power(13, 2) == false\n\
    @assert is_simple_power(14, 2) == true\n@assert is_simple_power(15, 2) == false\n\
    @assert is_simple_power(16, 2) == true\n@assert is_simple_power(17, 2) == false\n\
    @assert is_simple_power(18, 2) == true\n@assert is_simple_power(19, 2) == false\n\
    @assert is_simple_power(20, 2) == true\n@assert is_simple_power(21, 2) == false\n\
    @assert is_simple_power(22, 2) == true\n@assert is_simple_power(23, 2) == false\n\
    @assert is_simple_power(24, 2) == true\n@assert is_simple_power(25, 2) == false\n\
    @assert is_simple_power(26, 2) == true\n@assert is_simple_power(27, 2) == false\n\
    @assert is_simple_power(28, 2) == true\n@assert is_simple_power(29, 2) == false\n\
    @assert is_simple_power(30, 2) == true\n@assert is_simple_power(31, 2) == false\n\
    @assert is_simple_power(32, 2) == true\n@assert is_simple_power(33, 2) == false\n\
    @assert is_simple_power(34, 2) == true\n@assert is_simple_power(35, 2) == false\n\
    @assert is_simple_power(36, 2) == true\n@assert is_simple_power(37, 2) == false\n\
    @assert is_simple_power(38, 2) == true\n@assert is_simple_power(39, 2) == false\n\
    @assert is_simple_power(40, 2) == true\n@assert is_simple_power(41, 2) == false\n\
    @assert is_simple_power(42, 2) == true\n@assert is_simple_power(43, 2) == false\n\
    @assert is_simple_power(44, 2) == true\n@assert is_simple_power(45, 2) == false\n\
    @assert is_simple_power(46, 2) == true\n@assert is_simple_power(47, 2) == false",
  "    if x == 0 \n        return true\n    if x == 1 \n        return true\n    if\
    \ x == n \n        return true\n    if n % x == 0 \n        return false\n   \
    \ return is_simple_power(x, n / x)\nend", "    if x == 1 \n        return true\n\
    \    else if x == 0 \n        return false\n    else \n        return is_simple_power(x\
    \ % n, n) \nend", "    if x == 1\n        return true\n    else if x == 0\n  \
    \      return false\n    else\n        return is_simple_power(x//n, n) && is_simple_power(x%n,\
    \ n)\nend\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 2)\n</cell>\n\
    <code language=julia-1.5>\nis_simple_power(3, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 4)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 5)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 6)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 7)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 8)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 9)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 10)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 11)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 12)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 13)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 14)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 15)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 16)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 17)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 18)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 19)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 20)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 21)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 22)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 23)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 24)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 25)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 26)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(3, 27)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(3, 28)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 29)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3, 30)\n</cell>\n<code\
    \ language=", "    if x == 0 \n        return true\n    if x == 1 \n        return\
    \ true\n    if x == n \n        return true\n    if n % x == 0 \n        return\
    \ false\n    return is_simple_power(x, n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(2, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(3,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(4, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(5, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(6, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(7,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(8, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(9, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(10, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(11,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(12, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(13, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(14, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(15,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(16, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(17, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(18, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(19,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(20, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(21, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(22, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(23,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(24, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(25, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(26, 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(27,\
    \ 3)\n</cell>\n<code language=julia-1.5>\nis_simple_power(28, 3)\n</cell>\n<code\
    \ language=julia-1.5>\nis_simple_power(29, 3)\n</cell>\n<code language=julia-1.5>\n\
    is_simple_power(30, 3)\n</cell>\n<code language=julia-1.5>", "    if n == 0 then\
    \ return true\n    else if n == 1 then return x == 1\n    else return is_simple_power(x,\
    \ n-1) and x == n*n\nend\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,\
    \ 3)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2, 4)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(2, 5)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2, 6)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,\
    \ 7)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2, 8)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(2, 9)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2, 10)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,\
    \ 11)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2, 12)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(2, 13)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2, 14)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,\
    \ 15)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2, 16)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(2, 17)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2, 18)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,\
    \ 19)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2, 20)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(2, 21)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2, 22)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,\
    \ 23)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2, 24)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(2, 25)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2, 26)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,\
    \ 27)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2, 28)\n</cell>\n<code\
    \ language=julia-1.0>\nis_simple_power(2, 29)\n</cell>\n<code language=julia-1.0>\n\
    is_simple_power(2, 30)\n</cell>\n<code language=julia-1.0>\nis_simple_power(2,\
    \ 31)\n</cell>\n<code language=julia-1.0", "    if x == 1\n        return true\n\
    \    else\n        return false\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

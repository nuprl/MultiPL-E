name: HumanEval_116_sort_array
language: jl
prompt: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
  \ according to\n    number of ones in their binary representation in ascending order.\n\
  \    For similar number of ones, sort based on decimal value.\n\n    It must be\
  \ implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
  \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
  \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
  \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) ==\
  \ [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5])\
  \ == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16,\
  \ 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
completions: ["    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n\
    \    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted_arr[i] = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\n\
    end", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(one", "    \n    ones =\
    \ zeros(Int64, length(arr))\n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ .== 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = ones[ones != 0]\n    \n    ones = sort(ones)\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    ", "    ones =\
    \ zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    sorted_arr .= arr\n    \n    ones_sorted = sort(ones)\n  \
    \  \n    sorted_arr .= ones_sorted\n    \n    return sorted_arr\nend", "    \n\
    \    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n     \
    \   ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n   \
    \ \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n   \
    \ ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[order(one", "    \n    ones\
    \ = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted_arr =\
    \ zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i]\
    \ = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\nend", "    ones\
    \ = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    ones[arr .== 0] =\
    \ 0\n    ones[ones == 0] = -1\n    ones[ones == 1] = 0\n    ones[ones == -1] =\
    \ 1\n    ones[ones == 2] = 1\n    ones[ones == -2] = 1\n    ones[ones == -3] =\
    \ 1\n    ones[ones == -4] = 1\n    ones[ones == -5] = 1\n    ones[ones == -6]\
    \ = 1\n    ones[ones == -7] = 1\n    ones[ones == -8] = 1\n    ones[ones == -9]\
    \ = 1\n    ones[ones == -10] = 1\n    ones[ones == -11] = 1\n    ones[ones ==\
    \ -12] = 1\n    ones[ones == -13] = 1\n    ones[ones == -14] = 1\n    ones[ones\
    \ == -15] = 1\n    ones[ones == -16] = 1\n    ones[ones == -17] = 1\n    ones[ones\
    \ == -18] = 1\n    ones[ones == -19] = 1\n    ones[ones == -20] = 1\n    ones[ones\
    \ == -21] = 1\n    ones[ones == -22] = 1\n    ones[ones == -23] = 1\n    ones[ones\
    \ == -24] = 1\n    ones[ones == -25] = 1\n    ones[ones == -26] = 1\n    ones[ones\
    \ == -27] = 1\n    ones[ones == -28] = 1\n    ones[ones == -29] = 1\n    ones[ones\
    \ == -30] = 1\n    ones[ones == -31] = 1\n    ones[ones == -32] = 1\n    ones[ones\
    \ == -33] = 1\n    ones[ones == -34] = 1\n    ones[ones == -35] = 1\n    ones[ones\
    \ == -36] = 1\n    ones[ones == -37] = 1\n    ones[ones == -38] = 1\n    ones[ones\
    \ == -39] = 1\n    ones[ones == -40] = 1\n    ones[ones == -41] = 1\n    ones[ones\
    \ == -42] = 1\n    ones[ones == -43] = 1\n    ones[ones == -44] = 1\n    ones[ones\
    \ == -45] = 1\n    ones[ones == -46] = 1\n    ones[ones == -47] = 1\n    ones[ones\
    \ == -48] = 1\n    ones[ones == -49] = 1\n    ones[ones == -50] = 1\n    ones[ones\
    \ == -51] = 1\n    ones[ones == -52] = 1\n    ones[ones == -53] = 1\n    ones[",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    ones = zeros(Int64,\
    \ length(arr))\n    ones[arr .== 1] = 1\n    ones = ones ./ sum(ones)\n    ones\
    \ = sort(ones)\n    ones = ones[2:end]\n    ones = ones[ones .> 0]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= ", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    one", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(one", "    \n    ones = zeros(Int64, length(arr))\n    \n\
    \    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n \
    \       ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(one", "    \n    ones =\
    \ zeros(Int64, length(arr))\n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]==1)\n\
    \    end\n    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i =\
    \ 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n    end\n    \n    return\
    \ sorted_arr\nend\n</cell>\n<code language=julia-1.5>\narr = [1,0,1,1,0,1]\n</cell>\n\
    <code language=julia-1.5>\nsort_array(arr)\n</cell>\n<text>\nPart 2\nImplement\
    \ the function count_ones(arr::Vector{Int64})::Int64 that returns the number of\
    \ ones in arr in ascending order.", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   \n    sorted_arr .= ones\n    \n    sorted_arr .= sort(ones)\n    \n    sorted_arr\
    \ .= sort(arr)\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    @test sort_array([1, 0, 1, 0]) == [1, 0, 1, 0]\n@test sort_array([1, 0, 1, 1])\
    \ == [1, 0, 1, 1]\n@test sort_array([1, 1, 0, 0]) == [1, 1, 0, 0]\n@test sort_array([1,\
    \ 1, 0, 1]) == [1, 1, 0, 1]\n@test sort_array([1, 1, 1, 0]) == [1, 1, 1, 0]\n\
    @test sort_array([1, 1, 1, 1]) == [1, 1, 1, 1]\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of integers and returns the number of ones\
    \ in each position. For example, given [1, 1, 0, 1] it should return [2, 2, 2,\
    \ 1].", "    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    ones[arr\
    \ .== 0] = 0\n    \n    sorted_arr = zeros(Int64, length(arr))\n    sorted_arr[ones\
    \ .== 1] = arr[ones .== 1]\n    sorted_arr[ones .== 0] = arr[ones .== 0]\n   \
    \ \n    sorted_arr\nend", "    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    ones[arr .== 2] = 2\n    ones[arr .== 4] = 4\n    ones[arr .==\
    \ 8] = 8\n    ones[arr .== 16] = 16\n    ones[arr .== 32] = 32\n    ones[arr .==\
    \ 64] = 64\n    ones[arr .== 128] = 128\n    ones[arr .== 256] = 256\n    ones[arr\
    \ .== 512] = 512\n    ones[arr .== 1024] = 1024\n    ones[arr .== 2048] = 2048\n\
    \    ones[arr .== 4096] = 4096\n    ones[arr .== 8192] = 8192\n    ones[arr .==\
    \ 16384] = 16384\n    ones[arr .== 32768] = 32768\n    ones[arr .== 65536] = 65536\n\
    \    ones[arr .== 131072] = 32768\n    ones[arr .== 262144] = 131072\n    ones[arr\
    \ .== 524288] = 262144\n    ones[arr .== 1048576] = 524288\n    ones[arr .== 2097152]\
    \ = 1048576\n    ones[arr .== 4194304] = 32768\n    ones[arr .== 8388608] = 4194304\n\
    \    ones[arr .== 16777216] = 8388608\n    ones[arr .== 33554432] = 16777216\n\
    \    ones[arr .== 67108864] = 33554432\n    ones[arr .== 134217728] = 67108864\n\
    \    ones[arr .== 268435456] = 134217728\n    ones[arr .== 536870912] = 268435456\n\
    \    ones[arr .== 1073741824] = 536870912\n    ones[arr .== 2147483648] = 1073741824\n\
    \    ones[arr .== 4294967296] = 2147483648\n    ones[arr .== 8589934592] = 4294967296\n\
    \    ones[arr .== 17179869184] = 8589934592\n    ones[arr .== 34359738368] = 17179869184\n\
    \    ones[arr .== 68719476736] = 34359738368\n    ones[arr .== 137438953472] =\
    \ 68719", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    ones = zeros(Int64, length(arr))\n    for i = 1:length(arr)\n        ones[i]\
    \ = sum(arr[i] == 1)\n    end\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n    end\n\
    \    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\narr = [1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(one", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    ", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   \n    for i = 1:length(arr)\n        sorted_arr[i] = ones[arr[i]]\n    end\n\
    \    \n    sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n   \
    \ \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n \
    \   \n    sorted = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted[i] = arr[findall(ones == i)[1]]\n    end\n    \n    return sorted\n\
    end", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    ones = zeros(Int64, length(arr))\n    for i = 1:length(arr)\n        ones[i]\
    \ = sum(arr[i] == 1)\n    end\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[ones == i]\n   \
    \ end\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, ", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = sort(ones)\n    \n    decimals = zeros(Int64, length(ones))\n\
    \    \n    for i = 1:length(ones)\n        decimals[i] = ones[i] - 1\n    end\n\
    \    \n    decimals = sort(decimals)\n    \n    arr = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        arr[i] = arr[decimals[i]]\n    end\n\
    \    \n    return arr\nend\n</cell>\n<code language=julia-1.5>\narr = [1, 3, 10,\
    \ 2, 5, 7, 4, 6, 8, 9]\n</cell>\n<code language=julia-1.5>\nsort_array(arr)\n\
    </cell>\n<text>\nPart III: Binary Search Algorithm", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        sorted_arr[i] = sum(ones[arr .== i])\n\
    \    end\n    \n    return sorted_arr\nend", "    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    ones[arr .== 0] = 0\n    ones = sort(ones)\n   \
    \ ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones .!= 0]\n\
    \    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones .!=\
    \ 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .== 1]\n    ones = ones[ones\
    \ .!= 0]\n    ", "    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] =\
    \ 1\n    ones[arr .== 0] = 0\n    ones = ones ./ sum(ones)\n    ones = sort(ones)\n\
    \    ones = ones[2:end]\n    ones = ones[ones .> 0]\n    ones = ones[ones .<=\
    \ 1]\n    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .>= 0]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .>= 0]\n    ones = ones[ones .<= 1]", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   \n    for i = 1:length(arr)\n        sorted_arr[i] = sum(ones[arr .== i])\n\
    \    end\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [1,0,1,1,0,1,1,1,0,1,0,0,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    sorted_ones = zeros(Int64, length(ones))\n    \n \
    \   for i = 1:length(ones)\n        sorted_ones[i] = ones[i]\n    end\n    \n\
    \    sorted_ones = sort(sorted_ones)\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[sorted_ones[i]]\n\
    \    end\n    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]", "    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    ones[arr .== 0] = 0\n    \n    ones = sort(ones)\n    \n   \
    \ ones = ones[2:end]\n    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones\
    \ .!= 1]\n    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n\
    \    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n\
    \    ones = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n    ones\
    \ = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n    ones = ones[ones\
    \ .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n    ones = ones[ones .!= 0]\n\
    \    \n    ones = ones[ones .!= 1]\n    \n    ones = ones[ones .!= 0]\n    \n\
    \    ones = ones[ones .!= 1]\n    \n    ones = ones[ones .!= 0]\n    \n    ones\
    \ = ones[ones .!= 1]\n    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones\
    \ .!= 1]\n    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n\
    \    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n\
    \    ones = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n    ones\
    \ = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n    ones = ones[ones\
    \ .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n    ones = ones[ones .!= 0]\n\
    \    \n    ones = ones[ones .!= 1]\n    \n    ones = ones[ones .!= 0]\n    \n\
    \    ones = ones[ones .!= 1]\n    \n    ones = ones[ones .!= 0]\n    \n    ones\
    \ = ones[ones .!= 1]\n    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones\
    \ .!= 1]\n    \n    ones = ones[ones .", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   \n    for i = 1:length(arr)\n        sorted_arr[i] = sum(ones[arr .== i])\n\
    \    end\n    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   \n    for i = 1:length(arr)\n        sorted_arr[i] = ones[arr[i]]\n    end\n\
    \    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\narr = [4,\
    \ 2, 6, 1, 3, 5]\n</cell>\n<code language=julia-1.5>\nsort_array(arr)\n</cell>\n\
    <text>\nPart 2\nImplement a function that finds the longest substring with given\
    \ length in an array. \nFor example for the array [4, 2, 6, 1, 3, 5] the longest\
    \ substring with length 3 is \"11\".", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]==1)\n    end\n\
    \    \n    ones = sort(ones)\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n    end\n\
    \    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\narr = [1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,",
  "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n   \
    \ sorted = zeros(Int64, length(arr))\n    sorted[ones .== 1] = arr[ones .== 1]\n\
    \    \n    sorted[ones .!= 1] .= sorted[ones .!= 1] .+ ones[ones .!= 1]\n    \n\
    \    sorted\nend", "    \n    ones = zeros(Int64, length(arr))\n    \n    for\
    \ i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n   \
    \ sorted = zeros(Int64, length(arr))\n    sorted[arr .== 1] = 1\n    \n    sorted[ones\
    \ .== 1] .= sort(ones[ones .== 1])\n    \n    return sorted\nend", "    \n   \
    \ ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n       \
    \ ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = ones[ones != 0]\n    \n    ones = sort(ones)\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    ", "    \n    ones\
    \ = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n        ones[i]\
    \ = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    ", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    ones_sorted = sort(ones)\n    \n    decimals\
    \ = zeros(Int64, length(arr))\n    decimals[ones_sorted .== 1] = 1\n    \n   \
    \ decimals_sorted = sort(decimals)\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    return ones\nend", "    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    ones[arr .== 0] = 0\n    ones = ones ./ sum(ones)\n    ones\
    \ = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10\n    ones = ones[2:end]\n\
    \    ones = ones .+ ones[1]\n    ones = ones[2:end]\n    ones = ones ./ sum(ones)\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10\n    ones\
    \ = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones[2:end]\n    ones\
    \ = ones ./ sum(ones)\n    ones = sort(ones)\n    ones = ones[2:end]\n    ones\
    \ = ones .* 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones =\
    \ ones[2:end]\n    ones = ones ./ sum(ones)\n    ones = sort(ones)\n    ones =\
    \ ones[2:end]\n    ones = ones .* 10\n    ones = ones[2:end]\n    ones = ones\
    \ .+ ones[1]\n    ones = ones[2:end]\n    ones = ones ./ sum(ones)\n    ones =\
    \ sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10\n    ones = ones[2:end]\n\
    \    ones = ones .+ ones[1]\n    ones = ones[2:end]\n    ones = ones ./ sum(ones)\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10\n    ones\
    \ = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones[2:end]\n    ones\
    \ = ones ./ sum(ones)\n    ones = sort(ones)\n    ones = ones[2:end]\n    ones\
    \ = ones .* 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones =\
    \ ones[2:end]\n    ones = ones ./ sum(ones)\n    ones = sort(ones)\n    ones =\
    \ ones[2:end]\n    ones = ones .* 10\n    ones = ones[2:end]\n    ones = ones\
    \ .+ ones[1]\n    ones = ones[2:end]\n    ones = ones ./ sum(ones)\n    ones =\
    \ sort(ones)\n    ones = ", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for\
    \ i = 1:length(arr)\n        sorted_arr[i] = sum(ones[arr .== i])\n    end\n \
    \   \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   \n    for i = 1:length(arr)\n        sorted_arr[i] = ones[arr[i]]\n    end\n\
    \    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    ones_sorted = sort(ones)\n    \n    decimals\
    \ = zeros(Int64, length(ones_sorted))\n    decimals[ones_sorted .== 1] = 1\n \
    \   \n    decimals_sorted = sort(decimals)\n    \n    \n    \n    \n    return\
    \ ones_sorted .+ decimals_sorted\nend\n</cell>\n<code language=julia-1.5>\narr\
    \ = [1, 3, 7, 9, 10, 4, 6, 8, 2, 5]\n</cell>\n<code language=julia-1.5>\nsort_array(arr)\n\
    </cell>\n<text>\nPart 2\nNow implement the function count_ones(arr::Vector{Int64})::Int64\
    \ that returns the number of ones in arr in ascending order.", "    \n    ones\
    \ = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted_arr =\
    \ zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i]\
    \ = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\nend", "    \n\
    \    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n    \
    \    ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = sort(ones)\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n", "   \
    \ \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n  \
    \      ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n", "    \n\
    \    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n     \
    \   ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    ", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n\
    \    \n    ones_sorted = sort(ones)\n    \n    ones_sorted_decimal = zeros(Int64,\
    \ length(ones_sorted))\n    for i = 1:length(ones_sorted)\n        ones_sorted_decimal[i]\
    \ = ones_sorted[i] * 10^floor(log10(ones_sorted[i]))\n    end\n    \n    ones_sorted_decimal_sorted\
    \ = sort(ones_sorted_decimal)\n    \n    ones_sorted_decimal_sorted_reversed =\
    \ reverse(ones_sorted_decimal_sorted)\n    \n    ones_sorted_decimal_sorted_reversed_sorted\
    \ = sort(ones_sorted_decimal_sorted_reversed)\n    \n    ones_sorted_decimal_sorted_reversed_sorted_reversed\
    \ = reverse(ones_sorted_decimal_sorted_reversed_sorted)\n    \n    ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted\
    \ = sort(ones_sorted_decimal_sorted_reversed_sorted_reversed)\n    \n    ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed\
    \ = reverse(ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted)\n    \n\
    \    ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted\
    \ = sort(ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed)\n\
    \    \n    ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed\
    \ = reverse(ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted)\n\
    \    \n    ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted\
    \ = sort(ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed)\n\
    \    \n    ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed\
    \ = reverse(ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted)\n\
    \    \n    ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted\
    \ = sort(ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed)\n\
    \    \n    ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed\
    \ = reverse(ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted)\n\
    \    \n    ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted\
    \ = sort(ones_sorted_decimal_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed)\n\
    \    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n    \
    \    ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n  \
    \  \n    ones = sort(ones)\n    \n    ones = ones[ones > 0]\n    \n    ones =\
    \ ones[ones <= length(ones)]\n    \n    ones = ones[ones != length(ones)]\n  \
    \  \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n\
    \    \n    sorted_arr = zeros(Int64, length(arr))\n    sorted_arr .= arr\n   \
    \ \n    ones_count = zeros(Int64, length(arr))\n    ones_count[ones .== 1] = 1\n\
    \    \n    sorted_arr .= ones_count .* sorted_arr\n    \n    sorted_arr .= sort(sorted_arr)\n\
    \    \n    return sorted_arr\nend", "    \n    arr = sort(arr)\n    \n    ones\
    \ = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n        ones[i]\
    \ = sum(arr & ones(Int64, i))\n    end\n    \n    ones = sort(ones)\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    ", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]", "    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n    sorted_arr[arr\
    \ .== 1] = 1\n    \n    sorted_arr .= sort(ones)\n    \n    sorted_arr .= sort(arr)\n\
    \    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]", "    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   sorted_arr[ones .== 1] = sort(ones[ones .== 1])\n    \n    sorted_arr[ones\
    \ .!= 1] .= sort(arr[ones .!= 1])\n    \n    return sorted_arr\nend", "    \n\
    \    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n    \
    \    ones[i] = sum(arr[i] == 1)\n    end\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    \n    for i in 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n\
    \    end\n    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    ones_sorted = sort(ones)\n    \n    decimals\
    \ = zeros(Int64, length(ones_sorted))\n    decimals[ones_sorted .== 1] = 1\n \
    \   \n    decimals_sorted = sort(decimals)\n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n", "    \n    arr = arr\
    \ .- 1 \n    \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr .== i)\n    end\n    \n    ones = ones ./ length(arr)\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones\
    \ .+ 1 \n    \n    ones = ones ./ length(arr)\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones .+ 1 \n    \n    ones = ones ./ length(arr)\n    \n   \
    \ ones = ones[2:end]\n    \n    ones = ones .+ 1 \n    \n    ones = ones ./ length(arr)\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones .+ 1 \n    \n    ones = ones\
    \ ./ length(arr)\n    \n    ones = ones[2:end]\n    \n    ones = ones .+ 1 \n\
    \    \n    ones = ones ./ length(arr)\n    \n    ones = ones[2:end]\n    \n  \
    \  ones = ones .+ 1 \n    \n    ones = ones ./ length(arr)\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones .+ 1 \n    \n    ones = ones ./ length(arr)\n    \n   \
    \ ones = ones[2:end]\n    \n    ones = ones .+ 1 \n    \n    ones = ones ./ length(arr)\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones .+ 1 \n    \n    ones = ones\
    \ ./ length(arr)\n    \n    ones = ones[2:end]\n    \n    ones = ones .+ 1 \n\
    \    \n    ones = ones ./ length(arr)\n    \n    ones = ones[2:end]\n    \n  \
    \  ones = ones .+ 1 \n    \n    ones = ones ./ length(arr)\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones .+ 1 \n    \n    ones = ones ./ length(arr)\n    \n   \
    \ ones = ones[2:end]\n    \n    ones = ones .+ 1 \n    \n    ones = ones ./ length(arr)\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones .+ 1 \n    \n    ones = ones\
    \ ./ length(arr)\n    \n    ones = ones[2:end]\n    \n    ones = ones .+ ", " \
    \   \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   \n    for i = 1:length(arr)\n        sorted_arr[i] = sum(ones[arr .== i])\n\
    \    end\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert sort([1,1,2,3]) == [1,2,3]\n@assert sort([1,2,1,3]) == [1,2,3]\n@assert\
    \ sort([1,1,2,3,3]) == [1,2,3]\n@assert sort([1,1,2,3,3,3]) == [1,2,3]\n@assert\
    \ sort([1,1,2,3,3,3,3]) == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3]) == [1,2,3]\n\
    @assert sort([1,1,2,3,3,3,3,3,3]) == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3])\
    \ == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3]) == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3])\
    \ == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3]) == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3])\
    \ == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3]) == [1,2,3]\n@assert\
    \ sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3]) == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3])\
    \ == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3]) == [1,2,3]\n@assert\
    \ sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3]) == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3])\
    \ == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]) == [1,2,3]\n\
    @assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]) == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3])\
    \ == [1,2,3]\n@assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]) == [1,2,3]\n\
    @assert sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]) == [1,2,3]\n@assert\
    \ sort([1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]) == [1,2,", "    \n \
    \   ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n    ones_sorted\
    \ = sort(ones)\n    \n    ones_sorted_sorted = zeros(Int64, length(ones_sorted))\n\
    \    ones_sorted_sorted[ones_sorted .== 1] = 1\n    \n    ones_sorted_sorted_sorted\
    \ = sort(ones_sorted_sorted)\n    \n    ones_sorted_sorted_sorted_sorted = sort(ones_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted = sort(ones_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted = sort(ones_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = sort(ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted)\n\
    \    \n    ones_sorted_sorted_sorted_sorted_sorted_sorted_", "    \n    ones =\
    \ zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        ones[i]\
    \ = sum(bitget(arr, i))\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[order(", "    \n    ones = zeros(Int64, length(arr))\n\
    \    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n\
    \    sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted_arr[i] = arr[findall(ones == i)[1]]\n    end\n    \n    return\
    \ sorted_arr\nend\n</cell>\n<code language=julia-1.5>\narr = [1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, ", "  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    sorted_arr .= arr\n    \n    sorted_arr .= ones\n    \n    sorted_arr .=\
    \ sort(sorted_arr)\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [1, 2, 3, 2]\n</cell>\n<code language=julia-1.5>\nsort_array(arr)\n</cell>\n\
    <text>\nPart III: Binary Search Algorithm\nIn this Kata, you have to implement\
    \ binary search algorithm for searching elements in sorted array.", "    \n  \
    \  ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted_arr\
    \ = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i]\
    \ = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\nend\n</cell>\n\
    <code language=julia-1.5>\narr = [1, 4, 3, 2]\n</cell>\n<code language=julia-1.5>\n\
    sort_array(arr)\n</cell>\n<text>\nPart 2\nNow let's implement the function count_ones\
    \ that counts the number of ones in an array:", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n\
    \    end\n    \n    ones = sort(ones)\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    for i = 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n    end\n  \
    \  \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n   \
    \ \n    ones = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n   \
    \ ones = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones != 0]\n   \
    \ \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones != 0]\n    \n   \
    \ ones = ones[sortperm(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[sortperm(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n   \
    \ \n    ones = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n   \
    \ ones = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[sortperm(ones)]\n    \n", "    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    ones[arr .== 0] = 0\n    ones = ones ./ sum(ones)\n    ones\
    \ = sort(ones)\n    ones = ones[2:end]\n    ones = ones[ones .> 0]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones\
    \ .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones =\
    \ ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]\n\
    \    ones = ones[ones .<= 1]\n    ones = ones[ones .<= 1]", "    \n    ones =\
    \ zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        ones[i]\
    \ = sum(arr[i] == 1)\n    end\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n    end\n\
    \    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\narr = [1,0,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1,0,0,1,1,1,0,1,1,",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    ones = zeros(Int64,\
    \ length(arr))\n    ones[arr .== 1] = 1\n    ones[ones == 0] = -1\n    ones =\
    \ ones ./ sum(ones)\n    ones = sort(ones)\n    ones = ones[2:end]\n    ones =\
    \ ones[ones .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .!= 0]\n    ones\
    \ = ones[2:end]\n    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n    ones\
    \ = ones[ones .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .!= 0]\n  \
    \  ones = ones[2:end]\n    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n \
    \   ones = ones[ones .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .!=\
    \ 0]\n    ones = ones[2:end]\n    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n\
    \    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .!=\
    \ 0]\n    ones = ones[2:end]\n    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n\
    \    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .!=\
    \ 0]\n    ones = ones[2:end]\n    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n\
    \    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .!=\
    \ 0]\n    ones = ones[2:end]\n    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n\
    \    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .!=\
    \ 0]\n    ones = ones[2:end]\n    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n\
    \    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .!=\
    \ 0]\n    ones = ones[2:end]\n    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n\
    \    ones = ones[ones .!= 0]\n    ones = ones[2:end]\n    ones = ones[ones .!=\
    \ 0]\n", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n\
    \    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted_arr[i] = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\n\
    end", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n\
    \    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted_arr[i] = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\n\
    end", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    ",
  "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n   \
    \ sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n  \
    \      sorted_arr[i] = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [3, 1, 2, 0, 4, 5]\n</cell>\n<code\
    \ language=julia-1.5>\nsort_array(arr)\n</cell>\n<text>\nPart 2\nIn this Kata,\
    \ you have to implement a function that counts the number of 1's in an array of\
    \ integers. \nIt must be implemented like this:\n\"\"\"", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        sorted_arr[i] = sum(ones[arr .== i])\n\
    \    end\n    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    ", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    ones_count\
    \ = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n        ones_count[i]\
    \ = sum(ones[arr .== i])\n    end\n    \n    sorted_arr .= ones_count.argsort\n\
    \    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    ", "    \n    ones = zeros(Int64, length(arr))\n\
    \    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n\
    \    sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted_arr[i] = arr[ones[i]]\n    end\n    \n    return sorted_arr\n\
    end", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n \
    \   \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted_arr[i] = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,",
  "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n   \
    \ sorted_arr = zeros(Int64, length(arr))\n    sorted_arr[arr .== 1] = sort(ones[arr\
    \ .== 1])\n    \n    sorted_arr[arr .!= 1] = (arr .- sorted_arr[arr .!= 1]) .*\
    \ 10^9\n    \n    return sorted_arr\nend", "    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    ones = zeros(Int64, length(arr))\n    \n\
    \    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n   \
    \ \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n \
    \   \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    sorted_arr = zeros(Int64, length(arr))\n    \n   \
    \ for i in 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n    end\n    \n\
    \    return sorted_arr\nend", "    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    ones = ones ./ sum(ones)\n    ones = sort(ones)\n    ones =\
    \ ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n    ones = ones ./\
    \ sum(ones)\n    ones = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n\
    \    ones = ones ./ sum(ones)\n    ones = ones .* 10\n    ones = ones .+ ones(Int64,\
    \ length(ones))\n    ones = ones ./ sum(ones)\n    ones = ones .* 10\n    ones\
    \ = ones .+ ones(Int64, length(ones))\n    ones = ones ./ sum(ones)\n    ones\
    \ = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n    ones = ones\
    \ ./ sum(ones)\n    ones = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n\
    \    ones = ones ./ sum(ones)\n    ones = ones .* 10\n    ones = ones .+ ones(Int64,\
    \ length(ones))\n    ones = ones ./ sum(ones)\n    ones = ones .* 10\n    ones\
    \ = ones .+ ones(Int64, length(ones))\n    ones = ones ./ sum(ones)\n    ones\
    \ = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n    ones = ones\
    \ ./ sum(ones)\n    ones = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n\
    \    ones = ones ./ sum(ones)\n    ones = ones .* 10\n    ones = ones .+ ones(Int64,\
    \ length(ones))\n    ones = ones ./ sum(ones)\n    ones = ones .* 10\n    ones\
    \ = ones .+ ones(Int64, length(ones))\n    ones = ones ./ sum(ones)\n    ones\
    \ = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n    ones = ones\
    \ ./ sum(ones)\n    ones = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n\
    \    ones = ones ./ sum(ones)\n    ones = ones .* 10\n    ones = ones .+ ones(Int64,\
    \ length(ones))\n    ones = ones ./ sum(ones)\n    ones = ones .* 10\n    ones\
    \ = ", "    \n    ones = zeros(Int64, length(arr))\n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n\
    \    end\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [1, 1, 0, 1, 1, 1, 0, 1, 1]\n</cell>\n<code language=julia-1.5>\nsort_array(arr)\n\
    </cell>\n<text>\nPart 2\nImplement a function that returns an array of integers\
    \ such that each element of the array is less than or equal to the previous element\
    \ in the array. \nFor example, if the input array is [4, 3, 2], the output should\
    \ be [4, 3, 2, 4, 3, 2]. \nThe input array is sorted in ascending order.", " \
    \   \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n", "    \n\
    \    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted\
    \ = zeros(Int64, length(arr))\n    sorted[ones .== 1] .= sort(ones[ones .== 1])\n\
    \    sorted[ones .== 0] .= sort(arr[ones .== 0])\n    \n    return sorted\nend",
  "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n   \
    \ sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n  \
    \      sorted_arr[i] = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\n\
    end", "    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n \
    \   sorted = sort(ones)\n    \n    sorted[sorted .== 0] = -1\n    \n    return\
    \ sorted\nend", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i =\
    \ 1:length(arr)\n        ones[i] = sum(arr[i]==1)\n    end\n    \n    sorted_arr\
    \ = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i]\
    \ = arr[ones[i]]\n    end\n    \n    return sorted_arr\nend", "    \n    ones\
    \ = zeros(Int64, length(arr))\n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    sorted_arr = zeros(Int64, length(arr))\n    \n   \
    \ for i = 1:length(arr)\n        sorted_arr[i] = arr[findall(ones == i)[1]]\n\
    \    end\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [1, 3, 10, 4, 2]\n</cell>\n<code language=julia-1.5>\nsort_array(arr)\n\
    </cell>\n<text>\nPart 2\nImplement the function count_ones(arr::Vector{Int64})::Int64\
    \ that returns the number of ones in arr in ascending order.", "    \n    ones\
    \ = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n        ones[i]\
    \ = sum(arr[i] == 1)\n    end\n    \n    ones = sort(ones)\n    \n    sorted_arr\
    \ = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n        sorted_arr[i]\
    \ = arr[ones[i]]\n    end\n    \n    return sorted_arr\nend", "    \n    ones\
    \ = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        ones[i]\
    \ = sum(arr[i]==1)\n    end\n    \n    ones = ones[ones!=0]\n    \n    ones =\
    \ sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones!=0]\n \
    \   \n    ones = ones[2:end]\n    \n    ones = ones[ones!=0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones!=0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones!=0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones!=0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones!=0]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones!=0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones!=0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones!=0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones!=0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones!=0]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones!=0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones!=0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones!=0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones!=0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones!=0]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones!=0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones!=0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones!=0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones!=0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones!=",
  "    \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n \
    \       ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = sort(ones)\n   \
    \ \n    decimals = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        decimals[i] = ones[i] - ones[i - 1]\n    end\n    \n    decimals = sort(decimals)\n\
    \    \n    return arr[decimals]\nend\n</cell>\n<code language=julia-1.5>\narr\
    \ = [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\
    \ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, ", "    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] .== 1)\n    end\n\
    \    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted_arr[i] = arr[ones[i]]\n    end\n    \n    return sorted_arr\n\
    end", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    ones\
    \ = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        ones[i]\
    \ = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n", "    \n\
    \    ones = zeros(Int64, length(arr))\n    for i = 1:length(arr)\n        ones[i]\
    \ = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n   \
    \ ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ", " \
    \   \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    \n    for i in 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n\
    \    end\n    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   sorted_arr .= arr\n    \n    sorted_arr .= ones\n    \n    sorted_arr .= sort(sorted_arr)\n\
    \    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    ones_sorted = sort(ones)\n    \n    sorted_arr\
    \ = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i]\
    \ = ones_sorted[i]\n    end\n    \n    return sorted_arr\nend", "    \n    ones\
    \ = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted_arr =\
    \ zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i]\
    \ = ones[arr[i]]\n    end\n    \n    return sorted_arr\nend", "    ones = zeros(Int64,\
    \ length(arr))\n    ones[arr .== 1] = 1\n    ones[ones .== 0] = -1\n    ones =\
    \ ones ./ sum(ones)\n    ones = sort(ones)\n    ones = ones[2:end]\n    ones =\
    \ ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n    ones = ones[2:end]\n\
    \    ones = ones ./ sum(ones)\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n    ones\
    \ = ones[2:end]\n    ones = ones ./ sum(ones)\n    ones = sort(ones)\n    ones\
    \ = ones[2:end]\n    ones = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n\
    \    ones = ones[2:end]\n    ones = ones ./ sum(ones)\n    ones = sort(ones)\n\
    \    ones = ones[2:end]\n    ones = ones .* 10\n    ones = ones .+ ones(Int64,\
    \ length(ones))\n    ones = ones[2:end]\n    ones = ones ./ sum(ones)\n    ones\
    \ = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10\n    ones = ones\
    \ .+ ones(Int64, length(ones))\n    ones = ones[2:end]\n    ones = ones ./ sum(ones)\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10\n    ones\
    \ = ones .+ ones(Int64, length(ones))\n    ones = ones[2:end]\n    ones = ones\
    \ ./ sum(ones)\n    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones\
    \ .* 10\n    ones = ones .+ ones(Int64, length(ones))\n    ones = ones[2:end]\n\
    \    ones = ones ./ sum(ones)\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n    ones\
    \ = ones[2:end]\n    ones = ones ./ sum(ones)\n    ones = sort(ones)\n    ones\
    \ = ones[2:end]\n    ones = ones .* 10\n    ones = ones .+ ones(Int64, length(ones))\n\
    \    ones = ones[2:", "    \n    ones = zeros(Int64, length(arr))\n    \n    for\
    \ i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(one", "    ones = zeros(Int64, length(arr))\n   \
    \ ones[arr .== 1] = 1\n    ones[arr .== 2] = 2\n    ones[arr .== 4] = 4\n    ones[arr\
    \ .== 8] = 8\n    ones[arr .== 16] = 16\n    ones[arr .== 32] = 32\n    ones[arr\
    \ .== 64] = 64\n    ones[arr .== 128] = 128\n    ones[arr .== 256] = 256\n   \
    \ ones[arr .== 512] = 512\n    ones[arr .== 1024] = 1024\n    ones[arr .== 2048]\
    \ = 2048\n    ones[arr .== 4096] = 4096\n    ones[arr .== 8192] = 8192\n    ones[arr\
    \ .== 16384] = 16384\n    ones[arr .== 32768] = 32768\n    ones[arr .== 65536]\
    \ = 65536\n    ones[arr .== 131072] = 32768\n    ones[arr .== 262144] = 262144\n\
    \    ones[arr .== 524288] = 524288\n    ones[arr .== 1048576] = 1048576\n    ones[arr\
    \ .== 2097152] = 2097152\n    ones[arr .== 4194304] = 32768\n    ones[arr .==\
    \ 8388608] = 8388608\n    ones[arr .== 16777216] = 8388608\n    ones[arr .== 33554432]\
    \ = 8388608\n    ones[arr .== 67108864] = 8388608\n    ones[arr .== 134217728]\
    \ = 8388608\n    ones[arr .== 268435456] = 8388608\n    ones[arr .== 536870912]\
    \ = 8388608\n    ones[arr .== 1073741824] = 8388608\n    ones[arr .== 2147483648]\
    \ = 8388608\n    ones[arr .== 4294967296] = 8388608\n    ones[arr .== 8589934592]\
    \ = 8388608\n    ones[arr .== 17179869184] = 8388608\n    ones[arr .== 34359738368]\
    \ = 8388608\n    ones[arr .== 68719476736] = 8388608\n    ones[arr .== 137438953472]\
    \ = 838860", "    \n    ones = zeros(Int64, length(arr))\n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n\
    \    end\n    \n    return sorted_arr\nend", "    ones = zeros(Int64, length(arr))\n\
    \    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n", "    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    ones = ones ./ sum(ones)\n    ones = sort(ones)\n    ones =\
    \ ones[2:end]\n    ones = ones .* 10\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 100\n    ones = sort(ones)\n    ones = ones[2:end]\n    ones\
    \ = ones .* 1000\n    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones\
    \ .* 10000\n    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .*\
    \ 100000\n    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 1000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 100000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 1000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 100000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 1000000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10000000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 100000000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 1000000000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10000000000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 100000000000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 1000000000000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10000000000000000000\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 100000000000000000000\n",
  "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    ", " \
    \   \n    arr = sort(arr)\n    \n    ones = zeros(Int64, length(arr))\n    \n\
    \    for i = 1:length(arr)\n        ones[i] = sum(arr[i]==1)\n    end\n    \n\
    \    ones = sort(ones)\n    \n    ones = ones[2:end]\n    \n    arr = arr[ones]\n\
    \    \n    return arr\nend", "    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    ones[arr .== 0] = 0\n    \n    ones = sort(ones)\n    \n   \
    \ ones = ones[2:end]\n    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones\
    \ .!= 1]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones .!= 0]\n  \
    \  \n    ones = ones[ones .!= 1]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones\
    \ .!= 1]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones .!= 0]\n  \
    \  \n    ones = ones[ones .!= 1]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones\
    \ .!= 1]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones .!= 0]\n  \
    \  \n    ones = ones[ones .!= 1]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones .!= 1]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones .!= 0]\n    \n    ones = ones[ones\
    \ .!= 1]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones .!= 0]\n  \
    \  \n    ones = ones[ones .!= 1]", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   \n    for i = 1:length(arr)\n        sorted_arr[i] = ones[arr[i]]\n    end\n\
    \    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] .== 1)\n    end\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:", "    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .==\
    \ 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n    sorted_arr .=\
    \ arr\n    \n    ones_sorted = sort(ones)\n    \n    sorted_arr .= ones_sorted\n\
    \    \n    sorted_arr .= sort(sorted_arr)\n    \n    return sorted_arr\nend",
  "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n \
    \   ones = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]", "    ones = zeros(Int64,\
    \ length(arr))\n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]==1)\n\
    \    end\n    \n    ones = ones[ones!=0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones!=0]\n    \n    ones = ones[order(ones)]\n    \n  \
    \  ones = ones[ones!=0]\n    \n    ones = ones[order(ones)]\n    \n    ones =\
    \ ones[ones!=0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones!=0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones!=0]\n    \n  \
    \  ones = ones[order(ones)]\n    \n    ones = ones[ones!=0]\n    \n    ones =\
    \ ones[order(ones)]\n    \n    ones = ones[ones!=0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones!=0]\n    \n    ones = ones[order(ones)]\n    \n  \
    \  ones = ones[ones!=0]\n    \n    ones = ones[order(ones)]\n    \n    ones =\
    \ ones[ones!=0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones!=0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones!=0]\n    \n  \
    \  ones = ones[order(ones)]\n    \n    ones = ones[ones!=0]\n    \n    ones =\
    \ ones[order(ones)]\n    \n    ones = ones[ones!=0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones!=0]\n    \n    ones = ones[order(ones)]\n    \n  \
    \  ones = ones[ones!=0]\n    \n    ones = ones[order(ones)]\n    \n    ones =\
    \ ones[ones!=0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones!=0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones!=0]\n    \n  \
    \  ones = ones[order(ones)]\n    \n    ones = ones[ones!=0]\n    \n    ones =\
    \ ones[order(ones)]\n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n\
    \    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted_arr[i] = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\n\
    end", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    return ones\nend", "    \n \
    \   ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n    ones_sorted\
    \ = sort(ones)\n    \n    ones_sorted_dec = zeros(Int64, length(ones_sorted))\n\
    \    for i = 1:length(ones_sorted)\n        ones_sorted_dec[i] = ones_sorted[i]\
    \ * 10^length(ones_sorted[i] - 1)\n    end\n    \n    ones_sorted_dec = sort(ones_sorted_dec)\n\
    \    \n    return ones_sorted_dec\nend\n</cell>\n<code language=julia-1.5>\narr\
    \ = [1, 3, 10, 2, 5, 7, 4, 6, 8, 9]\nsort_array(arr)\n</cell>\n<text>\nPart III.\
    \ Sort array in descending order\nIn this Kata, you have to sort an array of non-negative\
    \ integers according to\nnumber of ones in their binary representation in descending\
    \ order.\nFor similar number of ones, sort based on decimal value.", "    \n \
    \   ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted_arr\
    \ = zeros(Int64, length(arr))\n    \n    sorted_arr .= sort(ones)\n    \n    sorted_arr\
    \ .= sort(arr)\n    \n    return sorted_arr\nend", "    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    ones[arr .== 0] = 0\n    ones = ones ./ sum(ones)\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10\n    ones\
    \ = ones .+ ones[1]\n    ones = ones ./ 10\n    ones = ones[2:end]\n    ones =\
    \ ones .+ ones[1]\n    ones = ones ./ 10\n    ones = ones[2:end]\n    ones = ones\
    \ .+ ones[1]\n    ones = ones ./ 10\n    ones = ones[2:end]\n    ones = ones .+\
    \ ones[1]\n    ones = ones ./ 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n\
    \    ones = ones ./ 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n \
    \   ones = ones ./ 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n  \
    \  ones = ones ./ 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n   \
    \ ones = ones ./ 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones\
    \ = ones ./ 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones =\
    \ ones ./ 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones\
    \ ./ 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones ./\
    \ 10\n    ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones ./ 10\n\
    \    ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones ./ 10\n \
    \   ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones ./ 10\n  \
    \  ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones ./ 10\n   \
    \ ones = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones ./ 10\n    ones\
    \ = ones[2:end]\n    ones = ones .+ ones[1]\n    ones = ones ./ 10\n    ones =\
    \ ones[2:end]\n    ", "    \n    ones = zeros(Int64, length(arr))\n    \n    for\
    \ i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[", " \
    \   \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n  \
    \  sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n \
    \       sorted_arr[i] = sum(ones[arr .== i])\n    end\n    \n    return sorted_arr\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [1, 3, 7, 9, 11, 13, 15]\n</cell>\n\
    <code language=julia-1.5>\nsort_array(arr)\n</cell>\n<text>\nPart 2\nImplement\
    \ a function that sorts array of non-negative integers according to their binary\
    \ representation in descending order.", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[ones < length(arr)]\n    \n    ones\
    \ = ones[", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[order(ones)]", "    \n    ones\
    \ = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n        ones[i]\
    \ = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    ",
  "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = ones[order(ones)]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n\
    \    end\n    \n    return sorted_arr\nend", "    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    ones[arr .== 0] = 0\n    ones = ones ./ sum(ones)\n\
    \    ones = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 10\n    ones\
    \ = sort(ones)\n    ones = ones[2:end]\n    ones = ones .* 100\n    ones = sort(ones)\n\
    \    ones = ones[2:end]\n    ones = ones .* 1000\n    ones = sort(ones)\n    ones\
    \ = ones[2:end]\n    ones = ones .* 10000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 100000\n    ones = sort(ones)\n    ones = ones[2:end]\n  \
    \  ones = ones .* 1000000\n    ones = sort(ones)\n    ones = ones[2:end]\n   \
    \ ones = ones .* 10000000\n    ones = sort(ones)\n    ones = ones[2:end]\n   \
    \ ones = ones .* 100000000\n    ones = sort(ones)\n    ones = ones[2:end]\n  \
    \  ones = ones .* 1000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 10000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 100000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 1000000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 10000000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 100000000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 1000000000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 10000000000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 100000000000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 1000000000000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ones = ones .* 10000000000000000000\n    ones = sort(ones)\n    ones = ones[2:end]\n\
    \    ", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n\
    \    \n    ones_sorted = sort(ones)\n    \n    sorted_arr = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        sorted_arr[i] = ones_sorted[i]\n   \
    \ end\n    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]", "    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    ones[arr .== 0] = 0\n    ones[ones == 0] = -1\n\
    \    ones[ones == 1] = 1\n    ones = ones[ones != 0]\n    ones = ones[ones !=\
    \ -1]\n    ones = ones[ones != 1]\n    ones = ones[ones != -2]\n    ones = ones[ones\
    \ != -3]\n    ones = ones[ones != -4]\n    ones = ones[ones != -5]\n    ones =\
    \ ones[ones != -6]\n    ones = ones[ones != -7]\n    ones = ones[ones != -8]\n\
    \    ones = ones[ones != -9]\n    ones = ones[ones != -10]\n    ones = ones[ones\
    \ != -11]\n    ones = ones[ones != -12]\n    ones = ones[ones != -13]\n    ones\
    \ = ones[ones != -14]\n    ones = ones[ones != -15]\n    ones = ones[ones != -16]\n\
    \    ones = ones[ones != -17]\n    ones = ones[ones != -18]\n    ones = ones[ones\
    \ != -19]\n    ones = ones[ones != -20]\n    ones = ones[ones != -21]\n    ones\
    \ = ones[ones != -22]\n    ones = ones[ones != -23]\n    ones = ones[ones != -24]\n\
    \    ones = ones[ones != -25]\n    ones = ones[ones != -26]\n    ones = ones[ones\
    \ != -27]\n    ones = ones[ones != -28]\n    ones = ones[ones != -29]\n    ones\
    \ = ones[ones != -30]\n    ones = ones[ones != -31]\n    ones = ones[ones != -32]\n\
    \    ones = ones[ones != -33]\n    ones = ones[ones != -34]\n    ones = ones[ones\
    \ != -35]\n    ones = ones[ones != -36]\n    ones = ones[ones != -37]\n    ones\
    \ = ones[ones != -38]\n    ones = ones[ones != -39]\n    ones = ones[ones != -40]\n\
    \    ones = ones[ones != -41]\n    ones = ones[ones != -42]\n    ones = ones[ones\
    \ != -43]\n    ones = ones[", "    \n    ones = zeros(Int64, length(arr))\n  \
    \  \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        sorted_arr[i] = arr[ones[i]]\n    end\n    \n    return sorted_arr\n\
    end\n</cell>\n<code language=julia-1.5>\narr = [1,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,",
  "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    \n    for i in 1:length(arr)\n        sorted_arr[i] = arr[findall(ones\
    \ == i)[1]]\n    end\n    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    sorted_arr = zeros(Int64, length(arr))\n    \n   \
    \ for i = 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n    end\n    \n\
    \    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\narr = [1,1,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1]\n\
    </cell>\n<code language=julia-1.5>\nsort_array(arr)\n</cell>\n<text>\nPart 2\n\
    Implement a function that counts how many times a given number appears in an array.",
  "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[end-1:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[end-1:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[end-1:end]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[end-1:end]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[end-1:end]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[end-1:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[end-1:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[end-1:end]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[end-1:end]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[end-1:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[end-1:end]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[end-1:end]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[end-1:end]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[end-1:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[end-1:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[end-1:end]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[end-1:end]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[end-1:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[end-1:end]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[end-1:end]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[end-1:end]\n    \n    ones = ones[ones != 0]\n    ", "    \n  \
    \  ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n       \
    \ ones[i] = sum(arr[i] == 1)\n    end\n    \n    sorted_ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        sorted_ones[i] = ones[i]\n    end\n\
    \    \n    sorted_ones = sort(sorted_ones)\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[sorted_ones[i]]\n\
    \    end\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\
    \ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, ",
  "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    ", " \
    \   \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n\
    \    \n", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    one", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    ", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   \n    sorted_arr .= 0\n    \n    for i = 1:length(arr)\n        sorted_arr\
    \ .= sorted_arr .+ ones[i]\n    end\n    \n    sorted_arr .= sort(sorted_arr)\n\
    \    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n@test sort_array([1,\
    \ 0, 1, 0]) == [0, 0, 1, 1]\n@test sort_array([1, 0, 1, 1]) == [0, 0, 1, 0]\n\
    @test sort_array([1, 1, 0, 0]) == [0, 0, 1, 0]\n@test sort_array([1, 1, 0, 1])\
    \ == [0, 0, 1, 0]\n@test sort_array([1, 1, 1, 0]) == [0, 0, 1, 0]\n@test sort_array([1,\
    \ 1, 1, 1]) == [0, 0, 1, 0]\n</cell>\n<text>\nPart III. Sort by number of ones",
  "    \n    ones = zeros(Int64, length(arr))\n    for i = 1:length(arr)\n       \
    \ ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones_sorted = sort(ones)\n  \
    \  \n    decimals = zeros(Int64, length(ones_sorted))\n    for i = 1:length(ones_sorted)\n\
    \        decimals[i] = ones_sorted[i] * 10^floor(log10(ones_sorted[i]))\n    end\n\
    \    \n    decimal_sorted = sort(decimals)\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    for i = 1:length(arr)\n        sorted_arr[i] = decimal_sorted[ones_sorted[i]]\n\
    \    end\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,",
  "    \n    ones = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = ones[ones > 0]\n\
    \    \n    ones = sort(ones)\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    one", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted = zeros(Int64, length(arr))\n    sorted[ones\
    \ .== 1] = arr[ones .== 1]\n    \n    sorted[ones .!= 1] .= sort(arr[ones .!=\
    \ 1])\n    \n    return sorted\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i in 1:length(arr)\n\
    \        sorted_arr[i] = arr[ones[i]]\n    end\n    \n    return sorted_arr\n\
    end", "    \n    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n\
    \        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones = sort(ones)\n  \
    \  \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones =\
    \ ones[ones < length(ones)]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones < length(ones)]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[ones < length(ones)]\n    \n    ones = ones[2:end]\n    \n    ones =\
    \ ones[ones > 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones < length(ones)]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[ones < length(ones)]\n    \n    ones = ones[2:end]\n    \n    ones =\
    \ ones[ones > 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones < length(ones)]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[ones < length(ones)]\n    \n    ones = ones[2:end]\n    \n    ones =\
    \ ones[ones > 0]\n    \n    ones = ones[ones < length(ones)]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones < length(ones)]\n\
    \    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones\
    \ = ones[ones < length(ones)]\n    \n    ones = ones[2:end]\n    \n    ones =\
    \ ones[ones > 0]\n    \n    ones = ones[ones < length(", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i]\
    \ == 1)\n    end\n    \n    sorted_arr = zeros(Int64, length(arr))\n    \n   \
    \ for i in 1:length(arr)\n        sorted_arr[i] = arr[ones[i]]\n    end\n    \n\
    \    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n  \
    \  \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[1:end-1]\n    \n    ones = ones[ones != 0]\n  \
    \  \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[1:end-1]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[1:end-1]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[1:end-1]\n    \n    ones = ones[ones != 0]\n  \
    \  \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[1:end-1]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[1:end-1]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[1:end-1]\n    \n    ones = ones[ones != 0]\n  \
    \  \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[1:end-1]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[1:end-1]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[1:end-1]\n    \n    ones = ones[ones != 0]\n  \
    \  \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones\
    \ = ones[1:end-1]\n    ", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n    sorted_arr[ones\
    \ .== 1] = arr[ones .== 1]\n    \n    sorted_arr .= sort(arr)\n    \n    return\
    \ sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n    \n    for\
    \ i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    one", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    ones[arr .== 1] = 1\n    \n    ones_sorted = sort(ones)\n\
    \    \n    decimals = zeros(Int64, length(ones_sorted))\n    decimals[ones_sorted\
    \ .== 1] = 1\n    \n    decimals_sorted = sort(decimals)\n    \n    \n    return\
    \ ones_sorted .+ decimals_sorted\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[ones !=\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ > 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n\
    \    ones = ones[ones > 0]\n    \n    ones = ones[ones != 0]\n    \n    ", " \
    \   ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    ones[arr .==\
    \ 0] = 0\n    \n    sorted_arr = zeros(Int64, length(arr))\n    \n    for i =\
    \ 1:length(arr)\n        sorted_arr[i] = sum(ones[arr .== i])\n    end\n    \n\
    \    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n  \
    \  ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n   \
    \ \n    for i = 1:length(arr)\n        sorted_arr[i] = sum(ones[arr .== i])\n\
    \    end\n    \n    return sorted_arr\nend\n</cell>\n<code language=julia-1.5>\n\
    arr = [1, 3, 7, 9, 10, 2, 5, 6, 8, 4, 1]\n</cell>\n<code language=julia-1.5>\n\
    sort_array(arr)\n</cell>\n<text>\nPart 2: Binary Search Algorithm\nIn this Kata,\
    \ you have to implement binary search algorithm to find if an element exists in\
    \ an array. \nThe algorithm should return true if it finds the element and false\
    \ if it doesn't.", "    \n    ones = zeros(Int64, length(arr))\n    \n    for\
    \ i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = sort(ones)\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n", "    \n    ones = zeros(Int64, length(arr))\n    ones[arr\
    \ .== 1] = 1\n    \n    ones_sorted = sort(ones)\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(ones_sorted)\n        sorted_arr[ones_sorted\
    \ == i] = i\n    end\n    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64,\
    \ length(arr))\n    ones[arr .== 1] = 1\n    \n    sorted = zeros(Int64, length(arr))\n\
    \    sorted[arr .== 1] = 1\n    sorted[ones .== 1] .= 2\n    \n    sorted[ones\
    \ .== 2] .= 1\n    sorted[ones .== 3] .= 2\n    \n    sorted[ones .== 4] .= 1\n\
    \    sorted[ones .== 5] .= 2\n    \n    sorted[ones .== 6] .= 1\n    sorted[ones\
    \ .== 7] .= 2\n    \n    sorted[ones .== 8] .= 1\n    sorted[ones .== 9] .= 2\n\
    \    \n    sorted[ones .== 10] .= 1\n    sorted[ones .== 11] .= 2\n    \n    sorted[ones\
    \ .== 12] .= 1\n    sorted[ones .== 13] .= 2\n    \n    sorted[ones .== 14] .=\
    \ 1\n    sorted[ones .== 15] .= 2\n    \n    sorted[ones .== 16] .= 1\n    sorted[ones\
    \ .== 17] .= 2\n    \n    sorted[ones .== 18] .= 1\n    sorted[ones .== 19] .=\
    \ 2\n    \n    sorted[ones .== 20] .= 1\n    sorted[ones .== 21] .= 2\n    \n\
    \    sorted[ones .== 22] .= 1\n    sorted[ones .== 23] .= 2\n    \n    sorted[ones\
    \ .== 24] .= 1\n    sorted[ones .== 25] .= 2\n    \n    sorted[ones .== 26] .=\
    \ 1\n    sorted[ones .== 27] .= 2\n    \n    sorted[ones .== 28] .= 1\n    sorted[ones\
    \ .== 29] .= 2\n    \n    sorted[ones .== 30] .= 1\n    sorted[ones .== 31] .=\
    \ 2\n    \n    sorted[ones .== 32] .= 1\n    sorted[ones .== 33] .= 2\n    \n\
    \    sorted[ones .== 34] .= 1\n    sorted[ones .== 35] .= 2\n    \n    sorted[ones\
    \ .== 36] .= 1\n    sorted[ones .", "    \n    ones = zeros(Int64, length(arr))\n\
    \    ones[arr .== 1] = 1\n    \n    sorted_arr = zeros(Int64, length(arr))\n \
    \   sorted_arr[arr .== 1] = sort(ones[arr .== 1])\n    \n    sorted_arr\nend",
  "    \n    ones = zeros(Int64, length(arr))\n    ones[arr .== 1] = 1\n    \n   \
    \ sorted_arr = zeros(Int64, length(arr))\n    \n    sorted_arr .= sort(ones)\n\
    \    \n    sorted_arr .= sort(arr)\n    \n    return sorted_arr\nend", "    \n\
    \    ones = zeros(Int64, length(arr))\n    \n    for i = 1:length(arr)\n     \
    \   ones[i] = sum(arr[i] == 1)\n    end\n    \n    sorted_ones = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        sorted_ones[i] = ones[i]\n\
    \    end\n    \n    sorted_ones = sort(sorted_ones)\n    \n    sorted_arr = zeros(Int64,\
    \ length(arr))\n    \n    for i = 1:length(arr)\n        sorted_arr[i] = arr[sorted_ones[i]]\n\
    \    end\n    \n    return sorted_arr\nend", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] .== 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[ones .!= 0]\n    \n    ones = ones[ones .!= length(ones)]\n    \n   \
    \ ones = ones[ones .!= 1]\n    \n    ones = ones[ones .!= length(ones)]\n    \n\
    \    ones = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n\
    \    \n    ones = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!=\
    \ length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n    \n    ones\
    \ = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n\
    \    \n    ones = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!=\
    \ length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n    \n    ones\
    \ = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n\
    \    \n    ones = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!=\
    \ length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n    \n    ones\
    \ = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n\
    \    \n    ones = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!=\
    \ length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n    \n    ones\
    \ = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n\
    \    \n    ones = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!=\
    \ length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n    \n    ones\
    \ = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!= length(ones)]\n\
    \    \n    ones = ones[ones .!= length(ones)]\n    \n    ones = ones[ones .!=\
    \ length(ones)]\n    \n", "    \n    ones = zeros(Int64, length(arr))\n    \n\
    \    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    \n    ones = ones[sortperm(ones)]\n    \n\
    \    ones = ones[sortperm(ones)]\n    ", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i in 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n\
    \    ones = ones[2:end]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones != 0]\n    ", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = sort(ones)\n    \n    ones\
    \ = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones\
    \ = ones[ones > 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones >\
    \ 0]\n    \n    ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n  \
    \  ones = ones[2:end]\n    \n    ones = ones[ones > 0]\n    \n    ones = ones[2:end]\n\
    \    \n    ones = ones[ones > 0]\n", "    \n    ones = zeros(Int64, length(arr))\n\
    \    \n    for i = 1:length(arr)\n        ones[i] = sum(arr[i] == 1)\n    end\n\
    \    \n    ones = ones[ones > 0]\n    \n    ones = ones[order(ones)]\n    \n \
    \   ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n\
    \    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n  \
    \  ones = ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones =\
    \ ones[ones != 0]\n    \n    ones = ones[ones != 0]\n    \n    ones = ones[ones\
    \ != 0]\n    \n    ones = ones[ones != "]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

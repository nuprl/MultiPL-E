name: HumanEval_118_get_closest_vowel
language: jl
prompt: "\"\"\"You are given a word. Your task is to find the closest vowel that stands\
  \ between \n    two consonants from the right side of the word (case sensitive).\n\
  \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
  \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
  \ that the given string contains English letter only.\n\n    Example:\n        \
  \            \"\"\"\nfunction get_closest_vowel(word::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
  yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
  easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
  ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
  \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
  )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
  )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\n\
  end\n"
completions: ["    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count\
    \ = count(vowels)\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowel", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    vowels_count = 0\n    vowels_index = 0\n    vowels_index_count = 0\n\
    \    vowels_index_count_2 = 1\n    vowels_index_count_3 = 2\n    vowels_index_count_4\
    \ = 3\n    vowels_index_count_5 = 4\n    vowels_index_count_6 = 5\n    vowels_index_count_7\
    \ = 6\n    vowels_index_count_8 = 7\n    vowels_index_count_9 = 8\n    vowels_index_count_10\
    \ = 9\n    vowels_index_count_11 = 10\n    vowels_index_count_12 = 11\n    vowels_index_count_13\
    \ = 12\n    vowels_index_count_14 = 13\n    vowels_index_count_15 = 14\n    vowels_index_count_16\
    \ = 15\n    vowels_index_count_17 = 16\n    vowels_index_count_18 = 17\n    vowels_index_count_19\
    \ = 18\n    vowels_index_count_20 = 19\n    vowels_index_count_21 = 20\n    vowels_index_count_22\
    \ = 21\n    vowels_index_count_23 = 22\n    vowels_index_count_24 = 23\n    vowels_index_count_25\
    \ = 24\n    vowels_index_count_26 = 25\n    vowels_index_count_27 = 26\n    vowels_index_count_28\
    \ = 27\n    vowels_index_count_29 = 28\n    vowels_index_count_30 = 29\n    vowels_index_count_31\
    \ = 30\n    vowels_index_count_32 = 31\n    vowels_index_count_33 = 32\n    vowels_index_count_34\
    \ = 33\n    vowels_index_count_35 = 34\n    vowels_index_count_36 = 35\n    vowels_index_count_37\
    \ = 36\n    vowels_index_count_38 = 37\n    vowels_index_count_39 = 38\n    vowels_index_count_40\
    \ = 39\n    vowels_index_count_41 = 40\n    vowels_index_count_42 = 41\n    vowels_index_count_43\
    \ = 42\n    vowels_index_count_44 = 43\n    vowels_index_count_45 = 44\n    vowels_index_count_46\
    \ = 45\n    vowels_index_count_47 = 46\n    vowels_index_count_48 = 47\n    vowels_index_count_49\
    \ = 48\n    vowels_index_count_50 = 49\n    vowels_index_count_51 = 50\n    vowels_index_count_52\
    \ = 51\n    vowels_index_count_53 = 52\n    vowels_index_count_54 = 53\n    vowels_index_count_55\
    \ = 54\n    vowels_index_count_56 = 55\n    vowels_index_count_", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.contains(word))\n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx - 1\n    \n    if vowels[vowels_idx] == word[vowels_idx]\n\
    \        return word[vowels_idx]\n    \n    else if vowels[vowels_idx] == word[vowels_idx+1]\n\
    \        return word[vowels_idx+1]\n    \n    else if vowels[vowels_idx] == word[vowels_idx-1]\n\
    \        return word[vowels_idx-1]\n    \n    else if vowels[vowels_idx] == word[vowels_idx+2]\n\
    \        return word[vowels_idx+2]\n    \n    else if vowels[vowels_idx] == word[vowels_idx-2]\n\
    \        return word[vowels_idx-2]\n    \n    else if vowels[vowels_idx] == word[vowels_idx+3]\n\
    \        return word[vowels_idx+3]\n    \n    else if vowels[vowels_idx] == word[vowels_idx-3]\n\
    \        return word[vowels_idx-3]\n    \n    else if vowels[vowels_idx] == word[vowels_idx+4]\n\
    \        return word[vowels_idx+4]\n    \n    else if vowels[vowels_idx] == word[vowels_idx-4]\n\
    \        return word[vowels_idx-4]\n    \n    else if vowels[vowels_idx] == word[vowels_idx+5]\n\
    \        return word[vowels_idx+5]\n    \n    else if vowels[vowels_idx] == word[vowels_idx-5]\n\
    \        return word[vowels_idx-5]\n    \n    else if vowels[vowels_idx] == word[vowels_idx+6]\n\
    \        return word[vowels_idx+6]\n    \n    else if vowels[vowels_idx] == word[vowels_idx-6]\n\
    \        return word[vowels_idx-6]\n    \n    else if vowels[vowels_idx] == word[vowels_idx+7]\n\
    \        return word[vowels_idx+7]\n    \n    else if vowels[vowels_idx] == word[vowels_idx-7]\n\
    \        return word[vowels_idx-7]\n    \n    else if vowels[vowels_idx] == word[vowels_idx+8]\n\
    \        return word[vowels_idx+8]\n    \n    else if vowels[vowels_idx] == word[vowels_idx-8]\n\
    \        return word[", "    vowels = \"aeiouAEIOU\"\n    vowels_index = findfirst(vowels,\
    \ word)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if ", "    vowels = \"aeiouAEIOU\"\n    \n    vowels_count\
    \ = count(vowels, word)\n    \n    if vowels_count > 1\n        closest_vowel\
    \ = vowels[vowels_count - 2]\n    else\n        closest_vowel = \"\"\n    end\n\
    \    \n    return closest_vowel\nend\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_", "    vowels = [\"a\",\"e\",\"i\",\"\
    o\",\"u\"]\n    vowels_count = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max\
    \ = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min\
    \ = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_", "   \
    \ vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n    vowels_idx\
    \ = sort(vowels_idx)\n    vowels_idx = vowels_idx[end-length+1:end]\n    vowels_idx\
    \ = vowels_idx[findfirst(vowels, word)]\n    return word[vowels_idx]\nend\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>", "    vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_left = 0\n\
    \    vowels_count_left_right_left_right = 0\n    vowels_count_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right = 0\n    vowels_count_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right = 0\n    vowels_count_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = vowels.findLastIndex(vowels.contains(word))\n    if vowels_idx == -1\n   \
    \     return \"\"\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx + 1\n    \n    if vowels[vowels_idx] == word[vowels_idx]\n    \
    \    return word[vowels_idx]\n    else\n        return \"\"\nend\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=juli", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_index = vowels.find{|x| x == word[word.length-1]}\n\
    \    vowels_index = vowels_index if vowels_index != -1\n    vowels_index = vowels_index\
    \ if vowels_index > 0\n    vowels_index = vowels_index if vowels_index < vowels.length-1\n\
    \    vowels_index = vowels_index if vowels_index != word.length-1\n    vowels_index\
    \ = vowels_index if vowels_index != word.length\n    vowels_index = vowels_index\
    \ if vowels_index != 0\n    vowels_index = vowels_index if vowels_index != 1\n\
    \    vowels_index = vowels_index if vowels_index != 2\n    vowels_index = vowels_index\
    \ if vowels_index != 3\n    vowels_index = vowels_index if vowels_index != 4\n\
    \    vowels_index = vowels_index if vowels_index != 5\n    vowels_index = vowels_index\
    \ if vowels_index != 6\n    vowels_index = vowels_index if vowels_index != 7\n\
    \    vowels_index = vowels_index if vowels_index != 8\n    vowels_index = vowels_index\
    \ if vowels_index != 9\n    vowels_index = vowels_index if vowels_index != 10\n\
    \    vowels_index = vowels_index if vowels_index != 11\n    vowels_index = vowels_index\
    \ if vowels_index != 12\n    vowels_index = vowels_index if vowels_index != 13\n\
    \    vowels_index = vowels_index if vowels_index != 14\n    vowels_index = vowels_index\
    \ if vowels_index != 15\n    vowels_index = vowels_index if vowels_index != 16\n\
    \    vowels_index = vowels_index if vowels_index != 17\n    vowels_index = vowels_index\
    \ if vowels_index != 18\n    vowels_index = vowels_index if vowels_index != 19\n\
    \    vowels_index = vowels_index if vowels_index != 20\n    vowels_index = vowels_index\
    \ if vowels_index != 21\n    vowels_index = vowels_index if vowels_index != 22\n\
    \    vowels_index = vowels_index if vowels_index != 23\n    vowels_index = vowels_index\
    \ if vowels_index != 24\n    vowels_index = vowels_index if vowels_index != 25\n\
    \    vowels_index = vowels_index if vowels_index != 26\n    vowels_index = vowels_index\
    \ if vowels_index != 27\n    vowels_index = vowels_index if vowels_index != 28\n\
    \    vowels_", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count\
    \ = 0\n    vowels_index = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowels_index_count = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count = 0\n    vowel", "    vowels = \"aeiouAEIOU\"\n\
    \    vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n \
    \   vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n   \
    \ vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n    vowels_idx =\
    \ vowels_idx[length(vowels_idx)-1]\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|x|\
    \ word.include?(x)}\n    if vowels_idx.nil?\n        return \"\"\n    end\n  \
    \  vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx.abs\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[length(vowels_idx)-1]\n\
    \    vowel_idx = find(vowels, word[vowels_idx])\n    if vowel_idx == length(word)\n\
    \        return \"\"\n    else\n        return word[vowels_idx:vowel_idx]\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"h", "    vowels = \"aeiouAEIOU\"\
    \n    vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx[end-length(word)+1:end]\n    vowels_idx = vowels_idx[findfirst(vowels,\
    \ word)]\n    return word[vowels_idx]\nend\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"hellooo\")\n\
    </cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_", "    vowels = \"aeiouAEIOU\"\n \
    \   vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n  \
    \  vowels_idx = vowels_idx[length(vowels_idx)-1]\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowel", "    vowels = \"aeiouAEIOU\"\n   \
    \ vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[length(vowels_idx)-1]\n    vowels_idx = find(vowels, vowels_idx)\n\
    \    vowels_idx = vowels_idx[1]\n    vowels_idx = vowels[vowels_idx]\n    return\
    \ vowels_idx\nend", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowel_counter\
    \ = 0\n    vowel_found = False\n    vowel_found2 = False\n    vowel_found3 = False\n\
    \    vowel_found4 = False\n    vowel_found5 = False\n    vowel_found6 = False\n\
    \    vowel_found7 = False\n    vowel_found8 = False\n    vowel_found9 = False\n\
    \    vowel_found10 = False\n    vowel_found11 = False\n    vowel_found12 = False\n\
    \    vowel_found13 = False\n    vowel_found14 = False\n    vowel_found15 = False\n\
    \    vowel_found16 = False\n    vowel_found17 = False\n    vowel_found18 = False\n\
    \    vowel_found19 = False\n    vowel_found20 = False\n    vowel_found21 = False\n\
    \    vowel_found22 = False\n    vowel_found23 = False\n    vowel_found24 = False\n\
    \    vowel_found25 = False\n    vowel_found26 = False\n    vowel_found27 = False\n\
    \    vowel_found28 = False\n    vowel_found29 = False\n    vowel_found30 = False\n\
    \    vowel_found31 = False\n    vowel_found32 = False\n    vowel_found33 = False\n\
    \    vowel_found34 = False\n    vowel_found35 = False\n    vowel_found36 = False\n\
    \    vowel_found37 = False\n    vowel_found38 = False\n    vowel_found39 = False\n\
    \    vowel_found40 = False\n    vowel_found41 = False\n    vowel_found42 = False\n\
    \    vowel_found43 = False\n    vowel_found44 = False\n    vowel_found45 = False\n\
    \    vowel_found46 = False\n    vowel_found47 = False\n    vowel_found48 = False\n\
    \    vowel_found49 = False\n    vowel_found50 = False\n    vowel_found51 = False\n\
    \    vowel_found52 = False\n    vowel_found53 = False\n    vowel_found54 = False\n\
    \    vowel_found55 = False\n    vowel_found56 = False\n    vowel_found57 = False\n\
    \    vowel_found58 = False\n    vowel_found59 = False\n    vowel_found60 = False\n\
    \    vowel_found61 = False\n    vowel_found62 = False\n    vowel_found63 = False\n\
    \    vowel_found64 = False\n    vowel_found65 = False\n    vowel_found66 = False\n\
    \    vowel_found67 = False\n    vowel_found68 = False\n    vowel_found69 = False",
  "    vowels = \"aeiouAEIOU\"\n    vowels_count = length(vowels)\n    vowels_count\
    \ = vowels_count - length(word) - 2\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_", "    vowels = \"aeiouAEIOU\"\n    vowels_index = find(vowels,\
    \ word) \n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index - 1\n    \n\
    \    vowels_index = find(vowels, word, vowels_index)\n    if vowels_index == -1\n\
    \        return \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index\
    \ = find(vowels, word, vowels_index)\n    if vowels_index == -1\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index - 1\n    \n\
    \    vowels_index = find(vowels, word, vowels_index)\n    if vowels_index == -1\n\
    \        return \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index\
    \ = find(vowels, word, vowels_index)\n    if vowels_index == -1\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n    if vowel",
  "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n    vowels_idx\
    \ = sort(vowels_idx)\n    vowels_idx = vowels_idx[length(vowels_idx)-1]\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowel", "    vowels = \"\
    aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx[length(vowels_idx)-1]\n    vowel_idx = find(vowels,\
    \ vowels_idx)\n    vowel_idx = vowel_idx - 1\n    vowel = word[vowel_idx]\n  \
    \  return vowel\nend\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloo\")\n\
    </cell>\n<code language=julia-1.6>\nget_closest_vowel(\"hellooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=juli", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count\
    \ = count(vowels)\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_count\
    \ = count(vowels, word)\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count % length(vowels)\n    vowels_index = vowels_count - 1\n    vowels_index\
    \ = length(vowels) - vowels_index\n    vowels_index = vowels_index - 1\n    vowels_index\
    \ = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index =\
    \ vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index\
    \ - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index -\
    \ 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n\
    \    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n  \
    \  vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index\
    \ = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index =\
    \ vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index\
    \ - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index -\
    \ 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n\
    \    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n  \
    \  vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index\
    \ = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index =\
    \ vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index\
    \ - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index -\
    \ 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n\
    \    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n  \
    \  vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index\
    \ = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index =\
    \ vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index\
    \ - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index -\
    \ 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n\
    \    vowels_index = vowels_index - 1\n    vowel", "    vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right\
    \ = 0\n    vowels_count_left_left = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left\
    \ = 0\n    vowels_count_right_right = 0\n    vowels_count_left_left_left = 0\n\
    \    vowels_count_left_left_right = 0\n    vowels_count_left_right_left = 0\n\
    \    vowels_count_left_right_right = 0\n    vowels_count_right_left_left = 0\n\
    \    vowels_count_right_left_right = 0\n    vowels_count_right_right_left = 0\n\
    \    vowels_count_right_right_right = 0\n    \n    for char in word\n        if\
    \ char in vowels\n            vowels_count += 1\n            if vowels_count >\
    \ 1\n                vowels_count_left += 1\n                if vowels_count_left\
    \ > 1\n                    vowels_count_left_left += 1\n                    if\
    \ vowels_count_left_left > 1\n                        vowels_count_left_left_left\
    \ += 1\n                        if vowels_count_left_left_left > 1\n         \
    \                   vowels_count_left_left_left_left += 1\n                  \
    \          if vowels_count_left_left_left_left > 1\n                         \
    \       vowels_count_left_left_left_left_left += 1\n                         \
    \       if vowels_count_left_left_left_left_left > 1\n                       \
    \             vowels_count_left_left_left_left_left_left += 1\n              \
    \                      if vowels_count_left_left_left_left_left_left > 1\n   \
    \                                     vowels_count_left_left_left_left_left_left_left\
    \ += 1\n                                        if vowels_count_left_left_left_left_left_left_left\
    \ > 1\n                                            vowels_count_left_left_left_left_left_left_left_left\
    \ += 1\n                                            if vowels_count_left_left_left_left_left_left_left_left\
    \ > 1\n                                                vowels_count_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                if vowels_count_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                    vowels_count_left_left_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                    if vowels_count_left_left_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                        vowels_count_left_left_left_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                        if vowels_count_left_left_left_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                            vowels_count_left_left_left_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                            if vowels_count_left_left_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                                vowels_count_left_left_left_left_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                                    if\
    \ vowels_count_left_left_left_left_left_left_", "    vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count = 0\n\
    \    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels,\
    \ word)\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ % length(vowels)\n    \n    if vowels_count == 0\n        return \"\"\n    else\n\
    \        return vowels[vowels_count]\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-", "    vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    vowels_count = 0\n    vowels_count_from_right = 0\n    vowels_count_from_left\
    \ = 0\n    vowels_count_from_middle = 0\n    vowels_count_from_middle2 = 0\n \
    \   vowels_count_from_middle3 = 0\n    vowels_count_from_middle4 = 0\n    vowels_count_from_middle5\
    \ = 0\n    vowels_count_from_middle6 = 0\n    vowels_count_from_middle7 = 0\n\
    \    vowels_count_from_middle8 = 0\n    vowels_count_from_middle9 = 0\n    vowels_count_from_middle10\
    \ = 0\n    vowels_count_from_middle11 = 0\n    vowels_count_from_middle12 = 0\n\
    \    vowels_count_from_middle13 = 0\n    vowels_count_from_middle14 = 0\n    vowels_count_from_middle15\
    \ = 0\n    vowels_count_from_middle16 = 0\n    vowels_count_from_middle17 = 0\n\
    \    vowels_count_from_middle18 = 0\n    vowels_count_from_middle19 = 0\n    vowels_count_from_middle20\
    \ = 0\n    vowels_count_from_middle21 = 0\n    vowels_count_from_middle22 = 0\n\
    \    vowels_count_from_middle23 = 0\n    vowels_count_from_middle24 = 0\n    vowels_count_from_middle25\
    \ = 0\n    vowels_count_from_middle26 = 0\n    vowels_count_from_middle27 = 0\n\
    \    vowels_count_from_middle28 = 0\n    vowels_count_from_middle29 = 0\n    vowels_count_from_middle30\
    \ = 0\n    vowels_count_from_middle31 = 0\n    vowels_count_from_middle32 = 0\n\
    \    vowels_count_from_middle33 = 0\n    vowels_count_from_middle34 = 0\n    vowels_count_from_middle35\
    \ = 0\n    vowels_count_from_middle36 = 0\n    vowels_count_from_middle37 = 0\n\
    \    vowels_count_from_middle38 = 0\n    vowels_count_from_middle39 = 0\n    vowels_count_from_middle40\
    \ = 0\n    vowels_count_from_middle41 = 0\n    vowels_count_from_middle42 = 0\n\
    \    vowels_count_from_middle43 = 0\n    vowels_count_from_middle44 = 0\n    vowels_count_from_middle45\
    \ = 0\n    vowels_count_from_middle46 = 0\n    vowels_count_from_middle47 = 0\n\
    \    vowels_count_from_middle48 = 0\n    vowels_count_from_middle49 = 0\n    vowels_count_from_middle50\
    \ = 0\n    vowels_count_from_middle51 = 0\n    vowels_count_from_middle52 = 0\n\
    \    vowels_count_from_middle53 = 0\n    vowel", "    vowels = \"aeiouAEIOU\"\n\
    \    vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n \
    \   vowels_idx = vowels_idx[length(vowels_idx)-1]\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx+1\n    vowel", "    vowels = \"aeiouAEIOU\"\n   \
    \ vowels_index = findfirst(vowels, word)\n    if vowels_index == -1\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_length = length(vowels)\n\
    \    \n    vowels_index_2 = findfirst(vowels, word, vowels_index)\n    if vowels_index_2\
    \ == -1\n        return \"\"\n    \n    vowels_index_2 = vowels_index_2 + 1\n\
    \    vowels_length_2 = length(vowels)\n    \n    vowels_index_3 = findfirst(vowels,\
    \ word, vowels_index_2)\n    if vowels_index_3 == -1\n        return \"\"\n  \
    \  \n    vowels_index_3 = vowels_index_3 + 1\n    vowels_length_3 = length(vowels)\n\
    \    \n    vowels_index_4 = findfirst(vowels, word, vowels_index_3)\n    if vowels_index_4\
    \ == -1\n        return \"\"\n    \n    vowels_index_4 = vowels_index_4 + 1\n\
    \    vowels_length_4 = length(vowels)\n    \n    vowels_index_5 = findfirst(vowels,\
    \ word, vowels_index_4)\n    if vowels_index_5 == -1\n        return \"\"\n  \
    \  \n    vowels_index_5 = vowels_index_5 + 1\n    vowels_length_5 = length(vowels)\n\
    \    \n    vowels_index_6 = findfirst(vowels, word, vowels_index_5)\n    if vowels_index_6\
    \ == -1\n        return \"\"\n    \n    vowels_index_6 = vowels_index_6 + 1\n\
    \    vowels_length_6 = length(vowels)\n    \n    vowels_index_7 = findfirst(vowels,\
    \ word, vowels_index_6)\n    if vowels_index_7 == -1\n        return \"\"\n  \
    \  \n    vowels_index_7 = vowels_index_7 + 1\n    vowels_length_7 = length(vowels)\n\
    \    \n    vowels_index_8 = findfirst(vowels, word, vowels_index_7)\n    if vowels_index_8\
    \ == -1\n        return \"\"\n    \n    vowels_index_8 = vowels_index_8 + 1\n\
    \    vowels_length_8 = length(vowels)\n    \n    vowels_index_9 = findfirst(vowels,\
    \ word, vowels_index_8)\n    if vowels_index_9 == -1\n        return \"\"\n  \
    \  \n    vowels_index_9 = vowels_index_9 + 1\n    vowels_length_9 = length(vowels)\n\
    \    \n    vowels_index_10 = findfirst(vowels, word, vowels_index_9)\n    if vowels_index_10\
    \ == -1\n        return \"\"\n    \n    vowels_index_10 = vowels_index_10 + 1\n\
    \    vowels_length_10 = length(vowels)\n    \n    vowels_index_", "    vowels\
    \ = \"aeiouAEIOU\"\n    \n    vowels_count = count(vowels, word)\n    \n    if\
    \ vowels_count > 1\n        return \"\"\n    \n    vowels_count = vowels_count\
    \ - 1\n    \n    vowels_index = find(vowels, word)\n    \n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    \n\
    \    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index +\
    \ 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ + 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_idx = findfirst(vowels, word)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx\
    \ < 0 \n        error(\"No vowel found\")\n    end\n    vowels_idx = vowels_idx\
    \ + ", "    vowels = \"aeiouAEIOU\"\n    vowels_index = vowels.find{|vowel| vowel\
    \ == word[word.length-1]}\n    vowels_index = vowels_index if vowels_index !=\
    \ -1\n    vowels_index = vowels_index if vowels_index > 0\n    vowels_index =\
    \ vowels_index if vowels_index < vowels.length-1\n    vowels_index = vowels_index\
    \ if vowels_index != 0\n    vowels_index = vowels_index if vowels_index != vowels.length-1\n\
    \    vowels_index = vowels_index if vowels_index != vowels.length\n    vowels_index\
    \ = vowels_index if vowels_index != vowels.length+1\n    vowels_index = vowels_index\
    \ if vowels_index != vowels.length+2\n    vowels_index = vowels_index if vowels_index\
    \ != vowels.length+3\n    vowels_index = vowels_index if vowels_index != vowels.length+4\n\
    \    vowels_index = vowels_index if vowels_index != vowels.length+5\n    vowels_index\
    \ = vowels_index if vowels_index != vowels.length+6\n    vowels_index = vowels_index\
    \ if vowels_index != vowels.length+7\n    vowels_index = vowels_index if vowels_index\
    \ != vowels.length+8\n    vowels_index = vowels_index if vowels_index != vowels.length+9\n\
    \    vowels_index = vowels_index if vowels_index != vowels.length+10\n    vowels_index\
    \ = vowels_index if vowels_index != vowels.length+11\n    vowels_index = vowels_index\
    \ if vowels_index != vowels.length+12\n    vowels_index = vowels_index if vowels_index\
    \ != vowels.length+13\n    vowels_index = vowels_index if vowels_index != vowels.length+14\n\
    \    vowels_index = vowels_index if vowels_index != vowels.length+15\n    vowels_index\
    \ = vowels_index if vowels_index != vowels.length+16\n    vowels_index = vowels_index\
    \ if vowels_index != vowels.length+17\n    vowels_index = vowels_index if vowels_index\
    \ != vowels.length+18\n    vowels_index = vowels_index if vowels_index != vowels.length+19\n\
    \    vowels_index = vowels_index if vowels_index != vowels.length+20\n    vowels_index\
    \ = vowels_index if vowels_index != vowels.length+21\n    vowels_index = vowels_index\
    \ if vowels_index != vowels.length+22\n    vowels_index = vowels_index if vowels_index\
    \ != vowels.length+23\n    vowels_index = ", "    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    vowels_count = count(vowels)\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowel", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_idx = vowels.findIndex(vowels.contains(word))\n\
    \    if vowels_idx == -1\n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ - 1\n    \n    if vowels[vowels_idx] == word[vowels_idx + 1]\n        return\
    \ word[vowels_idx]\n    \n    if vowels[vowels_idx] == word[vowels_idx - 1]\n\
    \        return word[vowels_idx]\n    \n    if vowels[vowels_idx] == word[vowels_idx\
    \ + 2]\n        return word[vowels_idx]\n    \n    if vowels[vowels_idx] == word[vowels_idx\
    \ - 2]\n        return word[vowels_idx]\n    \n    return \"\"\nend", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_idx = find(vowels, word)\n    if vowels_idx < length(word)-1\
    \ && vowels_idx > 1\n        closest_vowel = word[vowels_idx+1:end]\n    else\n\
    \        closest_vowel = \"\"\n    end\n    return closest_vowel\nend\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.contains(word))\n\
    \    if vowels_idx == -1\n        return \"\"\n    else\n        return vowels[vowels_idx+1]\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloo\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hellooo\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\nget_", " \
    \   vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n \
    \   vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter = 0\n    vowel_counter\
    \ = 0", "    vowels = \"aeiouAEIOU\"\n    \n    vowel_positions = findall(vowels,\
    \ word)\n    \n    if length(vowel_positions) == 0\n        return \"\"\n    \n\
    \    vowel_positions = sort(vowel_positions)\n    \n    closest_vowel = vowel_positions[end]\n\
    \    \n    return closest_vowel\nend\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hEllo\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hElloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hElloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hElloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hElloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hElloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hElloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hElloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hElloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hElloWorld\")\n</cell>\n\
    <code language=julia-1.5", "    vowels = \"aeiouAEIOU\"\n    vowels_index = findlastindex(vowels,\
    \ word)\n    if vowels_index == -1 \n        return \"No vowel found\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index + 1\n    vowels_index = findlastindex(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1 \n        return \"No vowel found\"\
    \n    \n    vowels_index = vowels_index", "    vowels = \"aeiouAEIOU\"\n    vowels_index\
    \ = vowels.find{|x| x =~ /[aeiou]/}\n    vowels_index == -1 ? \"\" : vowels[vowels_index+1]\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| a tags=ruby,regex |>\n<code>\ndef closest_vowel(word)\n\
    \  vowels = \"aeiouAEIOU\"\n  vowels_index = vowels.find{|x| x =~ /[aeiou]/}\n\
    \  vowels_index == -1 ? \"\" : vowels[vowels_index+1]\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a |>\n<code>\ndef closest_vowel(word)\n  vowels = \"aeiouAEIOU\"\n  vowels_index\
    \ = vowels.find{|x| x =~ /[aeiou]/}\n  vowels_index == -1 ? \"\" : vowels[vowels_index+1]\n\
    end\n</code>\n<|/ a tags=ruby,regex dscore=1 |>\n<| a dscore=1 |>\n<code>\ndef\
    \ closest_vowel(word)\n  vowels = \"aeiouAEIOU\"\n  vowels_index = vowels.find{|x|\
    \ x =~ /[aeiou]/}\n  vowels_index == -1 ? \"\" : vowels[vowels_index+1]\nend\n\
    </code>\n<|/ a tags=ruby,regex |>\n<| a dscore=1 |>\n<code>\ndef closest_vowel(word)\n\
    \  vowels = \"aeiouAEIOU\"\n  vowels_index = vowels.find{|x| x =~ /[aeiou]/}\n\
    \  vowels_index == -1 ? \"\" : vowels[vowels_index+1]\nend\n</code>\n<|/ a tags=ruby,regex\
    \ |>\n<| a tags=ruby,regex |>\n<code>\ndef closest_vowel(word)\n  vowels = \"\
    aeiouAEIOU\"\n  vowels_index = vowels.find{|x| x =~ /[aeiou]/}\n  vowels_index\
    \ == -1 ? \"\" : vowels[vowels_index+1]\nend\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ dscore=0 |>\n<code>\ndef closest_vowel(word)\n  vowels = \"aeiouAEIOU\"\n  vowels_index\
    \ = vowels.find{|x| x =~ /[aeiou]/}\n  vowels_index == -1 ? \"\" : vowels[vowels_index+1]\n\
    end\n</code>\n<|/ a tags=ruby,", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right\
    \ = 0\n    \n    for i in vowels:\n        if word.find(i) != -1:\n          \
    \  vowels_count += 1\n            \n    for i in word:\n        if i.isupper():\n\
    \            vowels_count_left += 1\n            \n    for i in word[::-1]:\n\
    \        if i.isupper():\n            vowels_count_right += 1\n            \n\
    \    if vowels_count > 0 and vowels_count_left == 0 and vowels_count_right ==\
    \ 0:\n        return \"\"\n    elif vowels_count > 0 and vowels_count_left ==\
    \ 0 and vowels_count_right > 0:\n        return word[vowels_count_left]\n    elif\
    \ vowels_count > 0 and vowels_count_left > 0 and vowels_count_right == 0:\n  \
    \      return word[vowels_count_left-1]\n    elif vowels_count > 0 and vowels_count_left\
    \ > 0 and vowels_count_right > 0:\n        vowel_distance = abs(vowels_count_left\
    \ - vowels_count_right)\n        if vowel_distance == 0:\n            return word[vowels_count_left-1]\n\
    \        elif vowel_distance == 1:\n            return word[vowels_count_left-1]\
    \ + word[vowels_count_right]\n        elif vowel_distance == 2:\n            return\
    \ word[vowels_count_left-1] + word[vowels_count_right-1] + word[vowels_count_right]\n\
    \        elif vowel_distance == 3:\n            return word[vowels_count_left-1]\
    \ + word[vowels_count_right-1] + word[vowels_count_right-1] + word[vowels_count_right]\n\
    \        elif vowel_distance == 4:\n            return word[vowels_count_left-1]\
    \ + word[vowels_count_right-1] + word[vowels_count_right-1] + word[vowels_count_right-1]\
    \ + word[vowels_count_right]\n        elif vowel_distance == 5:\n            return\
    \ word[vowels_count_left-1] + word[vowels_count_right-1] + word[vowels_count_right-1]\
    \ + word[vowels_count_right-1] + word[vowels_count_right-1] + word[vowels_count_right]\n\
    \        elif vowel_distance == 6:\n            return word[vowels_count_left-1]\
    \ + word[vowels_count_right-1] + word[vowels_count_right-1] + word[vowels_count_right-1]\
    \ + word[vowels_count_right-1] + word[vowels_count_right-1] + word[vowels_count_right]\n\
    \        elif vowel_distance == 7:\n            return word[vowels_count_left-1]\
    \ + word[vowels_count_right-1] + word[vowels_count_right-1] + word[vowels_", " \
    \   vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n\
    \    vowels_count_left_right = 0\n    \n    for char in word:\n        if char\
    \ in vowels:\n            vowels_count += 1\n            if vowels_count > vowels_count_left:\n\
    \                vowels_count_left = vowels_count\n            if vowels_count\
    \ > vowels_count_right:\n                vowels_count_right = vowels_count\n \
    \           if vowels_count > vowels_count_left_right:\n                vowels_count_left_right\
    \ = vowels_count\n    \n    if vowels_count_left == vowels_count_right:\n    \
    \    return \"\"\n    elif vowels_count_left > vowels_count_right:\n        return\
    \ word[vowels_count_left_right:]\n    else:\n        return word[vowels_count_right:]\n\
    end\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>", "    vowels = \"aeiouAEIOU\"\n\
    \    \n    vowel_positions = findall(vowels, word)\n    \n    if length(vowel_positions)\
    \ == 0\n        return \"\"\n    end\n    \n    vowel_positions = vowel_positions[2:end]\n\
    \    \n    closest_vowel = vowel_positions[findmin(vowel_positions)]\n    \n \
    \   return closest_vowel\nend\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abrac", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_index = find(vowels, word[end])\n    if vowels_index\
    \ == -1 \n        return \"\"\n    \n    vowels_index = find(vowels, word[end\
    \ - 1])\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = find(vowels, word[end - 2])\n    if vowels_index == -1\n        return \"\"\
    \n    \n    vowels_index = find(vowels, word[end - 3])\n    if vowels_index ==\
    \ -1\n        return \"\"\n    \n    vowels_index = find(vowels, word[end - 4])\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = find(vowels,\
    \ word[end - 5])\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = find(vowels, word[end - 6])\n    if vowels_index == -1\n        return \"\"\
    \n    \n    vowels_index = find(vowels, word[end - 7])\n    if vowels_index ==\
    \ -1\n        return \"\"\n    \n    vowels_index = find(vowels, word[end - 8])\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = find(vowels,\
    \ word[end - 9])\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = find(vowels, word[end - 10])\n    if vowels_index == -1\n        return \"\
    \"\n    \n    vowels_index = find(vowels, word[end - 11])\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = find(vowels, word[end -\
    \ 12])\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = find(vowels, word[end - 13])\n    if vowels_index == -1\n        return \"\
    \"\n    \n    vowels_index = find(vowels, word[end - 14])\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = find(vowels, word[end -\
    \ 15])\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = find(vowels, word[end - 16])\n    if vowels_index == -1\n        return \"\
    \"\n    \n    vowels_index = find(vowels, word[end - 17])\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = find(vowels, word[end -\
    \ 18])\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = find(vowels, word[end - 19])\n    if vowels_index == -1\n        return \"\
    \"\n    \n    vowels_index = find(vowels, word[end - 20", "    vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n\
    \    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels,\
    \ word)\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ % len(vowels)\n    vowels_index = vowels_count - 1\n    vowels_index = vowels_index\
    \ - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index -\
    \ 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n\
    \    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n  \
    \  vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index\
    \ = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index =\
    \ vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index\
    \ - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index -\
    \ 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n\
    \    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n  \
    \  vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index\
    \ = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index =\
    \ vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index\
    \ - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index -\
    \ 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n\
    \    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n  \
    \  vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index\
    \ = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index =\
    \ vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index\
    \ - 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index -\
    \ 1\n    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n\
    \    vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n  \
    \  vowels_index = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index\
    \ = vowels_index - 1\n    vowels_index = vowels_index - 1\n    vowels_index =\
    \ vowels_index - 1\n    vowels_index = ", "    vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0", "    vowels = \"aeiouAEIOU\"\n    vowels_count =\
    \ count(vowels)\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1", "    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count = 0\n\
    \    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels,\
    \ word)\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[length(vowels_idx)-1]\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowel", " \
    \   vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.contains(word))\n\
    \    if vowels_idx == -1\n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ - 1\n    \n    if vowels[vowels_idx] == word[vowels_idx]\n        return word[vowels_idx]\n\
    \    \n    vowels_idx = vowels_idx + 1\n    if vowels[vowels_idx] == word[vowels_idx]\n\
    \        return word[vowels_idx]\n    \n    return \"\"\nend\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"apple\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_", "    vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n \
    \   vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.contains(word))\n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n\
    \    vowels_idx = vowels_idx + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n\
    \    vowels_idx = vowels_idx + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n\
    \    vowels_idx = vowels_idx + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n\
    \    vowels_idx = vowels_idx + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n",
  "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.findLastIndex(word))\n\
    \    if vowels_idx == -1\n        return \"\"\n    else\n        return vowels[vowels_idx]\n\
    end\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"apple\")\n</cell>\n\
    <code language=julia-1.3>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.3>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.3>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.3>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.3>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.3>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.3>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.3>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.3>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.3>\nget_closest_vowel(\"ban", "    vowels = \"\
    aeiouAEIOU\"\n    vowels_index = findfirst(vowels, word)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n\
    \    if vowels_idx.length == 0\n        return \"\"\n    \n    vowels_idx = vowels_idx[end]\n\
    \    \n    vowels_idx = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n  \
    \  \n    vowels_idx = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n\
    \    vowels_idx = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n  \
    \  vowels_idx = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx\
    \ = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx =\
    \ vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx = vowels_idx-1\n\
    \    \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx = vowels_idx-1\n  \
    \  \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx = vowels_idx-1\n    \n\
    \    vowels_idx = vowels_idx+1\n    \n    vowels_idx = vowels_idx-1\n    \n  \
    \  vowels_idx = vowels_idx+1\n    \n    vowels_idx = vowels_idx-1\n    \n    vowels_idx\
    \ = vowels_idx+1\n    \n    vowels_idx = vowels_idx-1\n    \n    vowels_idx =\
    \ vowels_idx+1\n    \n    vowels_idx = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n\
    \    \n    vowels_idx = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n  \
    \  \n    vowels_idx = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n\
    \    vowels_idx = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n  \
    \  vowels_idx = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx\
    \ = vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx =\
    \ vowels_idx-1\n    \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx = vowels_idx-1\n\
    \    \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx = vowels_idx-1\n  \
    \  \n    vowels_idx = vowels_idx+1\n    \n    vowels_idx = vowels_idx", "    vowels\
    \ = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowels_count = count(vowels)\n    vowels_count_right\
    \ = count(vowels, 1)\n    vowels_count_left = count(vowels, -1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n    vowels_count_right = count(vowels, 1)\n    vowels_count_left\
    \ = count(vowels, -1)\n", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    vowel_counter = 0\n    vowel_counter = vowels.count(word[vowel_counter])\n\
    \    vowel_counter = vowel_counter - 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1\n\
    \    vowel_counter = vowel_counter + 1\n    vowel_counter = vowel_counter + 1",
  "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels)\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1", "    vowels = \"aeiouAEIOU\"\n    vowels_index = findfirst(vowels,\
    \ word)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = vowels.find{|x| word.ends_with?(x)}\n    if vowels_idx.nil?\n        return\
    \ \"\"\n    end\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx.abs\
    \ % vowels.length\n    vowel = vowels[vowels_idx]\n    return vowel\nend\n</code>\n\
    <|/ a tags=ruby,string |>\n<| a dscore=0 |>\n<code>\ndef closest_vowel(word)\n\
    \  vowels = \"aeiouAEIOU\"\n  vowels_idx = vowels.find{|x| word.ends_with?(x)}\n\
    \  if vowels_idx.nil?\n    return \"\"\n  end\n  vowels_idx = vowels_idx + 1\n\
    \  vowels_idx = vowels_idx.abs % vowels.length\n  vowel = vowels[vowels_idx]\n\
    \  return vowel\nend", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|x|\
    \ x <=> word[-1]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx\
    \ = vowels.find{|x| x <=> word[-2]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n\
    \    vowels_idx = vowels.find{|x| x <=> word[-3]}\n    vowels_idx = vowels_idx.nil?\
    \ ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x <=> word[-4]}\n    vowels_idx\
    \ = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x <=> word[-5]}\n\
    \    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x|\
    \ x <=> word[-6]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx\
    \ = vowels.find{|x| x <=> word[-7]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n\
    \    vowels_idx = vowels.find{|x| x <=> word[-8]}\n    vowels_idx = vowels_idx.nil?\
    \ ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x <=> word[-9]}\n    vowels_idx\
    \ = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x <=> word[-10]}\n\
    \    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x|\
    \ x <=> word[-11]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx\
    \ = vowels.find{|x| x <=> word[-12]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n\
    \    vowels_idx = vowels.find{|x| x <=> word[-13]}\n    vowels_idx = vowels_idx.nil?\
    \ ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x <=> word[-14]}\n    vowels_idx\
    \ = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x <=> word[-15]}\n\
    \    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{",
  "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|x| word.ends_with?(x)}\n\
    \    if vowels_idx == -1\n        return \"\"\n    ending_vowel_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels.find{|x| word.ends_with?(x)}\n    if vowels_idx\
    \ == -1\n        return \"\"\n    ending_vowel_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels.find{|x| word.ends_with?(x)}\n    if vowels_idx == -1\n        return\
    \ \"\"\n    ending_vowel_idx = vowels_idx + 1\n    vowels_idx = vowels.find{|x|\
    \ word.ends_with?(x)}\n    if vowels_idx == -1\n        return \"\"\n    ending_vowel_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels.find{|x| word.ends_with?(x)}\n   \
    \ if vowels_idx == -1\n        return \"\"\n    ending_vowel_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels.find{|x| word.ends_with?(x)}\n    if vowels_idx\
    \ == -1\n        return \"\"\n    ending_vowel_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels.find{|x| word.ends_with?(x)}\n    if vowels_idx == -1\n        return\
    \ \"\"\n    ending_vowel_idx = vowels_idx + 1\n    vowels_idx = vowels.find{|x|\
    \ word.ends_with?(x)}\n    if vowels_idx == -1\n        return \"\"\n    ending_vowel_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels.find{|x| word.ends_with?(x)}\n   \
    \ if vowels_idx == -1\n        return \"\"\n    ending_vowel_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels.find{|x| word.ends_with?(x)}\n    if vowels_idx\
    \ == -1\n        return \"\"\n    ending_vowel_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels.find{|x| word.ends_with?(x)}\n    if vowels_idx == -1\n        return\
    \ \"\"\n    ending_vowel_idx = vowels_idx + 1\n    vowels_idx = vowels.find{|x|\
    \ word.ends_with?(x)}\n    if vowels_idx == -1\n        return \"\"\n    ending_vowel_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels.find{|x| word.ends_with?(x)}\n   \
    \ if vowels_idx == -1\n        return \"\"\n    ending_vowel_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels.find{", "    vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right\
    \ = 0\n    \n    for char in word\n        if char in vowels\n            vowels_count\
    \ += 1\n            if vowels_count > 1\n                vowels_count_left +=\
    \ 1\n            if vowels_count < 1\n                vowels_count_right += 1\n\
    \    \n    if vowels_count_left == 0\n        return \"\"\n    \n    if vowels_count_right\
    \ == 0\n        return \"\"\n    \n    if vowels_count_left > vowels_count_right\n\
    \        return word[word.index(vowels[vowels_count_left-1]):word.index(vowels[vowels_count_right])]\n\
    \    \n    return word[word.index(vowels[vowels_count_right-1]):word.index(vowels[vowels_count_left])]\n\
    end\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hellooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-", "    vowels\
    \ = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    \n    for i\
    \ in word:\n        if i in vowels:\n            vowels_count += 1\n         \
    \   if vowels_count > vowels_count_left:\n                vowels_count_left =\
    \ vowels_count\n            if vowels_count < vowels_count_right:\n          \
    \      vowels_count_right = vowels_count\n    \n    if vowels_count_left == vowels_count_right:\n\
    \        return \"\"\n    \n    vowels_count_left = vowels_count_right + 1\n \
    \   \n    for i in word:\n        if i in vowels:\n            vowels_count +=\
    \ 1\n            if vowels_count > vowels_count_left:\n                vowels_count_left\
    \ = vowels_count\n            if vowels_count < vowels_count_right:\n        \
    \        vowels_count_right = vowels_count\n    \n    if vowels_count_left ==\
    \ vowels_count_right:\n        return \"\"\n    \n    vowels_count_left = vowels_count_right\
    \ + 1\n    \n    for i in word:\n        if i in vowels:\n            vowels_count\
    \ += 1\n            if vowels_count > vowels_count_left:\n                vowels_count_left\
    \ = vowels_count\n            if vowels_count < vowels_count_right:\n        \
    \        vowels_count_right = vowels_count\n    \n    if vowels_count_left ==\
    \ vowels_count_right:\n        return \"\"\n    \n    vowels_count_left = vowels_count_right\
    \ + 1\n    \n    for i in word:\n        if i in vowels:\n            vowels_count\
    \ += 1\n            if vowels_count > vowels_count_left:\n                vowels_count_left\
    \ = vowels_count\n            if vowels_count < vowels_count_right:\n        \
    \        vowels_count_right = vowels_count\n    \n    if vowels_count_left ==\
    \ vowels_count_right:\n        return \"\"\n    \n    vowels_count_left = vowels_count_right\
    \ + 1\n    \n    for i in word:\n        if i in vowels:\n            vowels_count\
    \ += 1\n            if vowels_count > vowels_count_left:\n                vowels_count_left\
    \ = vowels_count\n            if vowels_count < vowels_count_right:\n        \
    \        vowels_count_right = vowels_count\n    \n    if vowels_count_left ==\
    \ vowels_count_right:\n        return \"\"\n    \n    vowels_count_left = vowels_count_right\
    \ + 1\n    \n    for i in word:\n        if i in vowels:\n            vowels_count\
    \ += 1\n            if vowels_count > vowels_count_left:\n                vowels_count_left\
    \ = vowels_count\n            if vowels_count < vowels_count_right:\n        \
    \        vowels_count_right = vowels_count\n    \n    if vowels_count_left ==\
    \ vowels_count_right:\n        return \"\"\n    \n    vowels_count_left = ", " \
    \   vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    \n\
    \    for letter in word:\n        if letter in vowels:\n            vowels_count\
    \ += 1\n            if vowels_count > vowels_count_left:\n                vowels_count_left\
    \ = vowels_count\n            if vowels_count > vowels_count_right:\n        \
    \        vowels_count_right = vowels_count\n            if vowels_count > vowels_count_left_right:\n\
    \                vowels_count_left_right = vowels_count\n            if vowels_count\
    \ > vowels_count_left_right_count:\n                vowels_count_left_right_count\
    \ = vowels_count\n            if vowels_count > vowels_count_left_right_count_left:\n\
    \                vowels_count_left_right_count_left = vowels_count\n         \
    \   if vowels_count > vowels_count_left_right_count_right:\n                vowels_count_left_right_count_right\
    \ = vowels_count\n            if vowels_count > vowels_count_left_right_count_left_right:\n\
    \                vowels_count_left_right_count_left_right = vowels_count\n   \
    \         if vowels_count > vowels_count_left_right_count_left_right_count:\n\
    \                vowels_count_left_right_count_left_right_count = vowels_count\n\
    \            if vowels_count > vowels_count_left_right_count_left_right_count_left:\n\
    \                vowels_count_left_right_count_left_right_count_left = vowels_count\n\
    \            if vowels_count > vowels_count_left_right_count_left_right_count_right:\n\
    \                vowels_count_left_right_count_left_right_count_right = vowels_count\n\
    \            if vowels_count > vowels_count_left_right_count_left_right_count_left_right:\n\
    \                vowels_count_left_right_count_left_right_count_left_right = vowels_count\n\
    \            if vowels_count > vowels_count_left_right_count_left_right_count_left_right_count:\n\
    \                vowels_count_left_right_count_left_right_count_left_right_count\
    \ = vowels_count\n    \n    if vowels_count == 0:\n        return \"\"\n    \n\
    \    if vowels_count_left == vowels_count_right:\n        return \"\"\n    \n\
    \    if vowels_count_left_right == vowels_count_left_right_count:\n", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_count = count(vowels,word)\n    vowels_count =\
    \ vowels_count - 2\n    \n    if vowels_count < 0 \n        return \"\"\n    \n\
    \    vowels_count = vowels_count + 1\n    \n    vowels_index = find(vowels,word,vowels_count)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    \n    vowels_index = find(vowels,word,vowels_index)\n\
    \    \n    if vowels_index == -1 \n        return \"\"\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowel", "    vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    vowels_count = count(vowels)\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowel", "    vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_right = 0\n    vowels_count_left_right_count_right_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left = 0\n    vowels_count_left_right_count_right_count_left_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right = 0\n  \
    \  vowels_count_left_right_count_right_count_left_count_right_count = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count_right\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count_right\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count\
    \ = 0\n    vowels_count_left_right_count_right_count_left_count_right_count_left_count_right_count_left_count_right_count_left_count_right_",
  "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_index\
    \ = 0\n    vowels_index2 = -1\n    vowels_index3 = -1\n    vowels_index4 = -1\n\
    \    vowels_index5 = -1\n    vowels_index6 = -1\n    vowels_index7 = -1\n    vowels_index8\
    \ = -1\n    vowels_index9 = -1\n    vowels_index10 = -1\n    vowels_index11 =\
    \ -1\n    vowels_index12 = -1\n    vowels_index13 = -1\n    vowels_index14 = -1\n\
    \    vowels_index15 = -1\n    vowels_index16 = -1\n    vowels_index17 = -1\n \
    \   vowels_index18 = -1\n    vowels_index19 = -1\n    vowels_index20 = -1\n  \
    \  vowels_index21 = -1\n    vowels_index22 = -1\n    vowels_index23 = -1\n   \
    \ vowels_index24 = -1\n    vowels_index25 = -1\n    vowels_index26 = -1\n    vowels_index27\
    \ = -1\n    vowels_index28 = -1\n    vowels_index29 = -1\n    vowels_index30 =\
    \ -1\n    vowels_index31 = -1\n    vowels_index32 = -1\n    vowels_index33 = -1\n\
    \    vowels_index34 = -1\n    vowels_index35 = -1\n    vowels_index36 = -1\n \
    \   vowels_index37 = -1\n    vowels_index38 = -1\n    vowels_index39 = -1\n  \
    \  vowels_index40 = -1\n    vowels_index41 = -1\n    vowels_index42 = -1\n   \
    \ vowels_index43 = -1\n    vowels_index44 = -1\n    vowels_index45 = -1\n    vowels_index46\
    \ = -1\n    vowels_index47 = -1\n    vowels_index48 = -1\n    vowels_index49 =\
    \ -1\n    vowels_index50 = -1\n    vowels_index51 = -1\n    vowels_index52 = -1\n\
    \    vowels_index53 = -1\n    vowels_index54 = -1\n    vowels_index55 = -1\n \
    \   vowels_index56 = -1\n    vowels_index57 = -1\n    vowels_index58 = -1\n  \
    \  vowels_index59 = -1\n    vowels_index60 = -1\n    vowels_index61 = -1\n   \
    \ vowels_index62 = -1\n    vowels_index63 = -1\n    vowels_index64 = -1\n    vowels_index65\
    \ = -1\n    vowels_index66 = -1\n    vowels_index67 = -1\n    vowels_index68 =\
    \ -1\n    vowels_index69 = -1", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    vowels_count = length(vowels)\n    \n    vowels_count = 0\n    \n  \
    \  vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n\
    \    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    \n    vowels_count = 0\n    \n    vowels_count = 0\n    \n    vowels_count\
    \ = 0\n    ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[length(vowels_idx)-1]\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowel", " \
    \   vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowel_counter = 0\n    vowel_found\
    \ = false\n    vowel_start = -1\n    vowel_end = -1\n    vowel_found = false\n\
    \    vowel_start = -1\n    vowel_end = -1\n    vowel_found = false\n    vowel_start\
    \ = -1\n    vowel_end = -1\n    vowel_found = false\n    vowel_start = -1\n  \
    \  vowel_end = -1\n    vowel_found = false\n    vowel_start = -1\n    vowel_end\
    \ = -1\n    vowel_found = false\n    vowel_start = -1\n    vowel_end = -1\n  \
    \  vowel_found = false\n    vowel_start = -1\n    vowel_end = -1\n    vowel_found\
    \ = false\n    vowel_start = -1\n    vowel_end = -1\n    vowel_found = false\n\
    \    vowel_start = -1\n    vowel_end = -1\n    vowel_found = false\n    vowel_start\
    \ = -1\n    vowel_end = -1\n    vowel_found = false\n    vowel_start = -1\n  \
    \  vowel_end = -1\n    vowel_found = false\n    vowel_start = -1\n    vowel_end\
    \ = -1\n    vowel_found = false\n    vowel_start = -1\n    vowel_end = -1\n  \
    \  vowel_found = false\n    vowel_start = -1\n    vowel_end = -1\n    vowel_found\
    \ = false\n    vowel_start = -1\n    vowel_end = -1\n    vowel_found = false\n\
    \    vowel_start = -1\n    vowel_end = -1\n    vowel_found = false\n    vowel_start\
    \ = -1\n    vowel_end = -1\n    vowel_found = false\n    vowel_start = -1\n  \
    \  vowel_end = -1\n    vowel_found = false\n    vowel_start = -1\n    vowel_end\
    \ = -1\n    vowel_found = false\n    vowel_start = -1\n    vowel_end = -1\n  \
    \  vowel_found = false\n    vowel_start = -1\n    vowel_end = -1\n    vowel_found\
    \ = false\n    vowel_start = -1\n    vowel_end = -1\n    vowel_found = false\n\
    \    vowel_start = -1\n    vowel_end = -1\n    vowel_found = false\n    vowel_start\
    \ = -1\n    vowel_end = -1\n    vowel_found = false\n    vowel_start = -1\n  \
    \  vowel_end = -1\n    vowel_found = false\n    vowel_start = -1\n    vowel_end\
    \ = -1\n    vowel_found = false\n    vowel_start = -1\n    vowel_end = -1\n  \
    \  vowel_found = false\n    vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = vowels.findLastIndex(vowels.contains(word))\n    if vowels_idx == -1\n   \
    \     return \"\"\n    else\n        return vowels[vowels_idx+1]\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n<code\
    \ language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"hello\")\n</cell>\n", "    vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0", "    vowels = \"aeiouAEIOU\"\n    vowels_count =\
    \ count(vowels,word)\n    if vowels_count > 1\n        closest_vowel = word[vowels_count\
    \ - 1]\n    else\n        closest_vowel = \"\"\n    end\n    return closest_vowel\n\
    end\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of vowels present in the string.", "    vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    vowels_count = count(vowels)\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowel", "    vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.contains(word))\n\
    \    if vowels_idx == -1\n        return \"\"\n    else\n        return vowels[vowels_idx+1]\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hELLO\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hELLO\")\n</cell>\n<code language=julia-1.5>", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_idx = find(vowels, word)\n    if vowels_idx ==\
    \ -1 \n        \"\"\n    else\n        word[vowels_idx + 1]\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"apple\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell", "    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = length(vowels)\n    vowels_index\
    \ = -1\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n   \
    \ vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index = 0\n    vowels_index\
    \ = 0\n    vowels_index = 0\n    vowels_index = 0", "    vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    vowels_count = length(vowels)\n    vowels_count =\
    \ 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    ", "    vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    vowels_count = count(vowels, word)\n    vowels_count_right = count(vowels,\
    \ word[::-1])\n    if vowels_count > 0 and vowels_count_right > 0\n        closest_vowel\
    \ = vowels[vowels_count - vowels_count_right]\n        return closest_vowel\n\
    \    else\n        return \"\"\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_",
  "    vowels = \"aeiouAEIOU\"\n    vowels_index = findfirst(vowels, word)\n    if\
    \ vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_length = length(vowels)\n    \n    consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    consonants_index = findfirst(consonants, word)\n    if consonants_index\
    \ == -1\n        return \"\"\n    \n    consonants_index = consonants_index +\
    \ 1\n    consonants_length = length(consonants)\n    \n    vowel_start = consonants_index\
    \ - vowels_length\n    vowel_end = consonants_index + vowels_length\n    \n  \
    \  if vowel_start < 0\n        vowel_start = 0\n    end\n    \n    if vowel_end\
    \ > length(word)\n        vowel_end = length(word)\n    end\n    \n    if vowel_start\
    \ == 0\n        vowel_start = vowel_end - 1\n    end\n    \n    if vowel_end ==\
    \ length(word)\n        vowel_end = length(word)\n    end\n    \n    vowel_start\
    \ = vowel_start - 1\n    vowel_end = vowel_end + 1\n    \n    vowel_word = word[vowel_start:vowel_end]\n\
    \    \n    return vowel_word\nend\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel", "    vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_index = find(vowels,\
    \ word)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = find(vowels, word, vowels_index)\n    if vowels_index == -1\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = vowels_index - 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = vowels_index - 1\n  \
    \  \n    vowels_index = find(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = vowels_index - 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = vowels_index - 1\n  \
    \  \n    vowels_index = find(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = find(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = vowels_index - 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = vowels_index - 1\n  \
    \  \n    vowels_index = find(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"", "    vowels = \"aeiouAEIOU\"\n    vowels_idx =\
    \ vowels.findLastIndex(vowels.contains(word))\n    if vowels_idx < 0 \n      \
    \  return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx =\
    \ vowels_idx - 1\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    vowels_",
  "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n    if vowels_idx.length\
    \ == 0\n        return \"\"\n    \n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx[1..end]\n    \n    vowels_idx\
    \ = vowels_idx[1..end]\n    \n    vowels_idx = vowels_idx", "    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = vowels.count(\"a\")\n   \
    \ vowels_count += vowels.count(\"e\")\n    vowels_count += vowels.count(\"i\"\
    )\n    vowels_count += vowels.count(\"o\")\n    vowels_count += vowels.count(\"\
    u\")\n    vowels_count -= 1\n    vowels_count %= 4\n    if vowels_count < 0 or\
    \ vowels_count > 3:\n        return \"\"\n    \n    vowels_index = word.count(\"\
    a\") + word.count(\"e\") + word.count(\"i\") + word.count(\"o\") + word.count(\"\
    u\")\n    vowels_index %= 4\n    if vowels_index < 0 or vowels_index > 3:\n  \
    \      return \"\"\n    \n    vowels_index = word.count(\"a\") + word.count(\"\
    e\") + word.count(\"i\") + word.count(\"o\") + word.count(\"u\")\n    vowels_index\
    \ %= 4\n    if vowels_index < 0 or vowels_index > 3:\n        return \"\"\n  \
    \  \n    vowels_index = word.count(\"a\") + word.count(\"e\") + word.count(\"\
    i\") + word.count(\"o\") + word.count(\"u\")\n    vowels_index %= 4\n    if vowels_index\
    \ < 0 or vowels_index > 3:\n        return \"\"\n    \n    vowels_index = word.count(\"\
    a\") + word.count(\"e\") + word.count(\"i\") + word.count(\"o\") + word.count(\"\
    u\")\n    vowels_index %= 4\n    if vowels_index < 0 or vowels_index > 3:\n  \
    \      return \"\"\n    \n    vowels_index = word.count(\"a\") + word.count(\"\
    e\") + word.count(\"i\") + word.count(\"o\") + word.count(\"u\")\n    vowels_index\
    \ %= 4\n    if vowels_index < 0 or vowels_index > 3:\n        return \"\"\n  \
    \  \n    vowels_index = word.count(\"a\") + word.count(\"e\") + word.count(\"\
    i\") + word.count(\"o\") + word.count(\"u\")\n    vowels_index %= 4\n    if vowels_index\
    \ < 0 or vowels_index > 3:\n        return \"\"\n    \n    vowels_index = word.count(\"\
    a\") + word.count(\"e\") + word.count(\"i\") + word.count(\"o\") + word.count(\"\
    u\")\n    vowels_index %= 4\n    if vowels_index < 0 or vowels_index > 3:\n  \
    \      return \"\"\n    \n    vowels_index = word.count(\"a\") + word.count(\"\
    e\") + word.count(\"i", "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels,\
    \ word)\n    \n    if vowels_count > 1\n        closest_vowel = vowels[vowels_count\
    \ - 1]\n    else\n        closest_vowel = \"\"\n    end\n    \n    return closest_vowel\n\
    end\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|x|\
    \ x =~ /[aeiou]/}\n    if vowels_idx.nil?\n        return \"\"\n    end\n    vowels_idx\
    \ = vowels_idx.succ \n    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n\
    \    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n    vowels_idx\
    \ = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n    vowels_idx = vowels_idx.succ\
    \ if vowels_idx.succ != vowels_idx.end\n    vowels_idx = vowels_idx.succ if vowels_idx.succ\
    \ != vowels_idx.end\n    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n\
    \    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n    vowels_idx\
    \ = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n    vowels_idx = vowels_idx.succ\
    \ if vowels_idx.succ != vowels_idx.end\n    vowels_idx = vowels_idx.succ if vowels_idx.succ\
    \ != vowels_idx.end\n    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n\
    \    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n    vowels_idx\
    \ = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n    vowels_idx = vowels_idx.succ\
    \ if vowels_idx.succ != vowels_idx.end\n    vowels_idx = vowels_idx.succ if vowels_idx.succ\
    \ != vowels_idx.end\n    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n\
    \    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n    vowels_idx\
    \ = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n    vowels_idx = vowels_idx.succ\
    \ if vowels_idx.succ != vowels_idx.end\n    vowels_idx = vowels_idx.succ if vowels_idx.succ\
    \ != vowels_idx.end\n    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_idx.end\n\
    \    vowels_idx = vowels_idx.succ if vowels_idx.succ != vowels_id", "    vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    \n   \
    \ for letter in word\n        if letter in vowels\n            vowels_count +=\
    \ 1\n            if vowels_count > 1\n                vowels_count_left += 1\n\
    \            else\n                vowels_count_right += 1\n        else\n   \
    \         if vowels_count > 1\n                vowels_count_left_right += 1\n\
    \            else\n                vowels_count_left += 1\n    \n    if vowels_count_left\
    \ == 1\n        return word[vowels_count_left]\n    elseif vowels_count_right\
    \ == 1\n        return word[vowels_count_right]\n    elseif vowels_count_left_right\
    \ == 1\n        return word[vowels_count_left_right]\n    else\n        return\
    \ \"\"\nend\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n\
    </cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code\
    \ language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    vowels_count = 0\n    vowels_count_right = 0\n    vowels_count_left = 0\n\
    \    vowels_count_left_right = 0\n    vowels_count_left_right_count = 0\n    vowels_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_right = 0\n    vowels_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_right = 0\n    vowels_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count = 0\n\
    \    vowels_count_left_right_count_left_right_count_left_right_count_left = 0\n\
    \    vowels_count_left_right_count_left_right_count_left_right_count_right = 0\n\
    \    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.contains)\n\
    \    vowels_idx = vowels_idx == -1 ? vowels_idx : vowels_idx+1\n    vowels_idx\
    \ = vowels_idx < word.length ? vowels_idx : word.length-1\n    \n    vowels_idx\
    \ = vowels_idx > 0 ? vowels_idx : word.length-1\n    \n    vowels_idx = vowels_idx\
    \ < word.length ? vowels_idx : word.length-1\n    \n    vowels_idx = vowels_idx\
    \ > 0 ? vowels_idx : word.length-1\n    \n    vowels_idx = vowels_idx < word.length\
    \ ? vowels_idx : word.length-1\n    \n    vowels_idx = vowels_idx > 0 ? vowels_idx\
    \ : word.length-1\n    \n    vowels_idx = vowels_idx < word.length ? vowels_idx\
    \ : word.length-1\n    \n    vowels_idx = vowels_idx > 0 ? vowels_idx : word.length-1\n\
    \    \n    vowels_idx = vowels_idx < word.length ? vowels_idx : word.length-1\n\
    \    \n    vowels_idx = vowels_idx > 0 ? vowels_idx : word.length-1\n    \n  \
    \  vowels_idx = vowels_idx < word.length ? vowels_idx : word.length-1\n    \n\
    \    vowels_idx = vowels_idx > 0 ? vowels_idx : word.length-1\n    \n    vowels_idx\
    \ = vowels_idx < word.length ? vowels_idx : word.length-1\n    \n    vowels_idx\
    \ = vowels_idx > 0 ? vowels_idx : word.length-1\n    \n    vowels_idx = vowels_idx\
    \ < word.length ? vowels_idx : word.length-1\n    \n    vowels_idx = vowels_idx\
    \ > 0 ? vowels_idx : word.length-1\n    \n    vowels_idx = vowels_idx < word.length\
    \ ? vowels_idx : word.length-1\n    \n    vowels_idx = vowels_idx > 0 ? vowels_idx\
    \ : word.length-1\n    \n    vowels_idx = vowels_idx < word.length ? vowels_idx\
    \ : word.length-1\n    \n    vowels_idx = vowels_idx > 0 ? vowels_idx : word.length-1\n\
    \    \n    vowels_idx = vowels_idx < word.length ? vowels_idx : word.length-1\n\
    \    \n    vowels_idx = vowels_idx > 0 ? vowels_idx : word.length-1\n    \n  \
    \  vowels_idx = vowels_idx < word.length ? vowels_idx : word.length-1\n    \n\
    \    vowels_idx = vowels_idx > ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = vowels.find{|x| x =~ /[aeiou]/i}\n    if vowels_idx == -1\n        return\
    \ \"\"\n    ending_vowel_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n\
    \    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowel", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_right\
    \ = 0\n    \n    for char in word\n        if char in vowels\n            vowels_count\
    \ += 1\n            if vowels_count == 1\n                vowels_count_left +=\
    \ 1\n            else\n                vowels_count_right += 1\n        else\n\
    \            if vowels_count == 1\n                vowels_count_left_right +=\
    \ 1\n            else\n                vowels_count_left_right += 1\n    \n  \
    \  if vowels_count_left == 0\n        return \"\"\n    elseif vowels_count_right\
    \ == 0\n        return \"\"\n    elseif vowels_count_left_right == 0\n       \
    \ return \"\"\n    else\n        if vowels_count_left > vowels_count_right\n \
    \           return vowels[vowels_count_left - 1]\n        else\n            return\
    \ vowels[vowels_count_right - 1]\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"apple\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"bananas\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=", "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels,\
    \ word)\n    vowels_count = vowels_count - 1 if vowels_count > 0 else 0\n    vowels_count\
    \ = vowels_count + 1 if vowels_count < len(word) else 0\n    \n    vowel_start\
    \ = vowels[vowels_count]\n    vowel_end = vowels[vowels_count+1]\n    \n    if\
    \ vowel_start == vowel_end:\n        return \"\"\n    \n    vowel_start = vowels[vowels_count-1]\n\
    \    vowel_end = vowels[vowels_count]\n    \n    if vowel_start == vowel_end:\n\
    \        return \"\"\n    \n    vowel_start = vowels[vowels_count+1]\n    vowel_end\
    \ = vowels[vowels_count]\n    \n    if vowel_start == vowel_end:\n        return\
    \ \"\"\n    \n    vowel_start = vowels[vowels_count-1]\n    vowel_end = vowels[vowels_count+1]\n\
    \    \n    if vowel_start == vowel_end:\n        return \"\"\n    \n    vowel_start\
    \ = vowels[vowels_count]\n    vowel_end = vowels[vowels_count-1]\n    \n    if\
    \ vowel_start == vowel_end:\n        return \"\"\n    \n    vowel_start = vowels[vowels_count-1]\n\
    \    vowel_end = vowels[vowels_count+1]\n    \n    if vowel_start == vowel_end:\n\
    \        return \"\"\n    \n    vowel_start = vowels[vowels_count+1]\n    vowel_end\
    \ = vowels[vowels_count-1]\n    \n    if vowel_start == vowel_end:\n        return\
    \ \"\"\n    \n    vowel_start = vowels[vowels_count]\n    vowel_end = vowels[vowels_count+1]\n\
    \    \n    if vowel_start == vowel_end:\n        return \"\"\n    \n    vowel_start\
    \ = vowels[vowels_count-1]\n    vowel_end = vowels[vowels_count]\n    \n    if\
    \ vowel_start == vowel_end:\n        return \"\"\n    \n    vowel_start = vowels[vowels_count+1]\n\
    \    vowel_end = vowels[vowels_count-1]\n    \n    if vowel_start == vowel_end:\n\
    \        return \"\"\n    \n    vowel_start = vowels[vowels_count]\n    vowel_end\
    \ = vowels[vowels_count-1]\n    \n    if vowel_start == vowel_end:\n        return\
    \ \"\"\n    \n    vowel_start = vowels[vowels_count-1]\n    vowel_end = vowels[vowels_count+1]\n\
    \    \n    if vowel_start == vowel_end:\n        return \"\"\n    \n    vowel_start\
    \ = vowels[vowels_count+1]\n    vowel_end = vowels[vowels_count]\n    \n    if\
    \ vowel_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|v| word\
    \ =~ /[#{v}]/}\n    if vowels_idx.nil?\n        return \"\"\n    else\n      \
    \  vowels_idx = vowels_idx.to_i - 1\n        vowels[vowels_idx]\n    end\nend\n\
    </code>\n<|/ a tags=ruby,regex |>\n<| c |>\nThis doesn't work. Try it with `get_closest_vowel(\"\
    aA\")`.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test case to the\
    \ answer. Can you please give me an example where it doesn't work?\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I added a test case to the answer. Can you\
    \ please give me an example where it doesn't work?\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I added a test case to the answer. Can you please give me an\
    \ example where it doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I added a test case to the answer. Can you please give me an example where it\
    \ doesn't work?\n<|/ c |>\n<| a dscore=0 |>\n<code>\ndef closest_vowel(word)\n\
    \  vowels = \"aeiouAEIOU\"\n  vowels_idx = vowels.find{|v| word =~ /[#{v}]/}\n\
    \  if vowels_idx.nil?\n    return \"\"\n  else\n    vowels_idx = vowels_idx.to_i\
    \ - 1\n    vowels[vowels_idx]\n  end\nend\n</code>\n<|/ a tags=ruby,regex |>\n\
    <| c |>\nPlease add some explanation to your answer.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work. Try it with `closest_vowel(\"aA\")`.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\ndef closest_vowel(word)\n  vowels = \"aeiouAEIOU\"\n  vowels_idx\
    \ = vowels.find{|v| word =~ /[#{v}]/}\n  if vowels_idx.nil?\n    return \"\"\n\
    \  else\n    vowels_idx = vowels_idx.to_i - 1\n    vowels[vowels_idx]\n  end\n\
    end\n</code>\n<|/ a tags=ruby,regex |>\n<| c |>\nPlease add some explanation to\
    \ your answer.\n<|/ c |>\n<| a tags=ruby,regex |>\n<code>\ndef closest_vowel(word)",
  "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = count(vowels)\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowel", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    vowels_count = length(vowels)\n    vowels_count = 0\n    vowels_count = 0\n\
    \    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(word[end])\n\
    \    if vowels_idx == -1 \n        return \"\"\n    else \n        return vowels[vowels_idx+1]\n\
    end\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of vowels found in the string.", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = vowels.findLastIndex(vowels.contains(word))\n    if vowels_idx < 0 \n    \
    \    return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n\
    \    vowels_idx = vowels_idx + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n\
    \    vowels_idx = vowels_idx + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n\
    \    vowels_idx = vowels_idx + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n\
    \    vowels_idx = vowels_idx + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        return \"\"\n    \n\
    \    vowels_idx = vowels_idx + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n", "    vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    vowels_count = count(vowels)\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels, word)\n\
    \    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count < 0\n        vowels_count\
    \ = 0\n    ending_vowel = vowels[vowels_count]\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    if vowels_count ", "    vowels\
    \ = \"aeiouAEIOU\"\n    \n    vowel_counter = 0\n    \n    for letter in word\n\
    \        if letter in vowels\n            vowel_counter += 1\n            \n \
    \   if vowel_counter > 1\n        return \"\"\n    \n    vowel_counter = 0\n \
    \   \n    for letter in word\n        if letter in vowels\n            vowel_counter\
    \ += 1\n            \n    if vowel_counter < 1\n        return \"\"\n    \n  \
    \  vowel_counter = 0\n    \n    for letter in word\n        if letter in vowels\n\
    \            vowel_counter += 1\n            \n    if vowel_counter > 1\n    \
    \    return \"\"\n    \n    vowel_counter = 0\n    \n    for letter in word\n\
    \        if letter in vowels\n            vowel_counter += 1\n            \n \
    \   if vowel_counter < 1\n        return \"\"\n    \n    vowel_counter = 0\n \
    \   \n    for letter in word\n        if letter in vowels\n            vowel_counter\
    \ += 1\n            \n    if vowel_counter > 1\n        return \"\"\n    \n  \
    \  vowel_counter = 0\n    \n    for letter in word\n        if letter in vowels\n\
    \            vowel_counter += 1\n            \n    if vowel_counter < 1\n    \
    \    return \"\"\n    \n    vowel_counter = 0\n    \n    for letter in word\n\
    \        if letter in vowels\n            vowel_counter += 1\n            \n \
    \   if vowel_counter > 1\n        return \"\"\n    \n    vowel_counter = 0\n \
    \   \n    for letter in word\n        if letter in vowels\n            vowel_counter\
    \ += 1\n            \n    if vowel_counter < 1\n        return \"\"\n    \n  \
    \  vowel_counter = 0\n    \n    for letter in word\n        if letter in vowels\n\
    \            vowel_counter += 1\n            \n    if vowel_counter > 1\n    \
    \    return \"\"\n    \n    vowel_counter = 0\n    \n    for letter in word\n\
    \        if letter in vowels\n            vowel_counter += 1\n            \n \
    \   if vowel_counter < 1\n        return \"\"\n    \n    vowel_counter = 0\n \
    \   \n    for letter in word\n        if letter in vowels\n            vowel_counter\
    \ += 1\n            \n    if vowel_counter > 1\n        return \"\"\n    \n  \
    \  vowel_counter = 0\n    \n    for letter in word\n        if letter in vowels\n\
    \            vowel_counter += 1\n            \n    if vowel_counter < 1\n    \
    \    return \"\"\n    \n    vowel_counter = 0\n    \n    for letter in word\n\
    \        if letter in vowels\n            vowel_counter += 1\n            \n \
    \   if vowel_counter > 1\n        return \"\"\n    \n    vowel_counter = 0\n \
    \   \n    for letter in word\n        if letter in vowels\n            ", "  \
    \  vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels, word)\n    vowels_count\
    \ = vowels_count - 1\n    \n    if vowels_count < 0\n        return \"\"\n   \
    \ \n    vowels_index = vowels_count - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    vowels_index = vowels_index - 1", "    vowels = \"aeiouAEIOU\"\
    \n    vowels_count = length(vowels)\n    vowels_count = vowels_count - 1\n   \
    \ vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count - 1", "  \
    \  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = count(vowels)\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels,\
    \ word)\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[length(vowels_idx)-1]\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowel", " \
    \   vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels,word)\n    if vowels_count\
    \ > 1\n        vowels_count = vowels_count - 1\n    ending_vowel = vowels[vowels_count]\n\
    \    vowels_count = count(vowels,word,1)\n    if vowels_count > 1\n        vowels_count\
    \ = vowels_count - 1\n        vowels_count = vowels_count - 1\n    ending_vowel\
    \ = vowels[vowels_count]\n    return ending_vowel\nend\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-",
  "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = count(vowels)\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowel", "    vowels = \"aeiouAEIOU\"\n    \n    vowels_count\
    \ = count(vowels, word)\n    \n    if vowels_count > 1\n        return \"\"\n\
    \    \n    vowels_count = vowels_count - 1\n    \n    vowels_index = find(vowels,\
    \ word)\n    \n    if vowels_index == length(word)\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels, word,\
    \ vowels_index)\n    \n    if vowels_index == length(word)\n        return \"\"\
    \n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    \n    if vowels_index == length(word)\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index = find(vowels,\
    \ word, vowels_index)\n    ", "    vowels = \"aeiouAEIOU\"\n    vowels_index =\
    \ vowels.find{|x| x == word[word.length-1]}\n    if vowels_index == -1\n     \
    \   return \"\"\n    ending_vowel = vowels[vowels_index+1]\n    vowels_index =\
    \ vowels.find{|x| x == word[word.length-2]}\n    if vowels_index == -1\n     \
    \   return \"\"\n    middle_vowel = vowels[vowels_index+2]\n    if word.include?(middle_vowel)\n\
    \        return middle_vowel\n    else\n        return ending_vowel\n    end\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| a tags=ruby,string |>\n<code>\ndef closest_vowel(word)\n\
    \  vowels = \"aeiouAEIOU\"\n  vowels_index = vowels.find{|x| x == word[word.length-1]}\n\
    \  if vowels_index == -1\n    return \"\"\n  end\n  vowels_index = vowels.find{|x|\
    \ x == word[word.length-2]}\n  if vowels_index == -1\n    return \"\"\n  end\n\
    \  middle_vowel = vowels[vowels_index+2]\n  if word.include?(middle_vowel)\n \
    \   return middle_vowel\n  else\n    return vowels[vowels_index+1]\n  end\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\ndef\
    \ closest_vowel(word)\n  vowels = \"aeiouAEIOU\"\n  vowels_index = vowels.find{|x|\
    \ x == word[word.length-1]}\n  if vowels_index == -1\n    return \"\"\n  end\n\
    \  vowels_index = vowels.find{|x| x == word[word.length-2]}\n  if vowels_index\
    \ == -1\n    return \"\"\n  end\n  middle_vowel = vowels[vowels_index+2]\n  if\
    \ word.include?(middle_vowel)\n    return middle_vowel\n  else\n    return vowels[vowels_index+1]\n\
    \  end\nend\n</code>\n<|/ a tags=ruby,string |>\n<| c |>\nPlease add some explanation\
    \ to your answer such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\ndef closest_vowel(word)\n  vowels = \"aeiouAEIOU\"\n  vowels_index = vowels.find{|x|\
    \ x == word[word.length-1]}\n  if vowels_index == -1\n    return \"\"\n  end\n\
    \  vowels_index = vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_index = vowels.find{|x|\
    \ x == word[-1]}\n    vowels_index_2 = vowels.find{|x| x == word[-2]}\n    if\
    \ vowels_index != nil && vowels_index_2 != nil\n        return word[vowels_index..vowels_index_2]\n\
    \    else\n        return \"\"\n    end\nend\n</code>\n<|/ a dscore=2 |>\n<| c\
    \ |>\nThis doesn't work if the word is \"aardvark\"\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for \"aardvark\" because \"aardvark\" doesn't contain any vowels. \"aardvark\"\
    \ contains \"a\" and \"r\", but no vowels.\n<|/ c |>\n<| c |>\nI see what you\
    \ mean. Thanks for pointing that out. I updated my answer.\n<|/ c |>\n<| a tags=ruby,string\
    \ |>\n<code>\ndef closest_vowel(word)\n  vowels = \"aeiouAEIOU\"\n  vowels_index\
    \ = vowels.find{|x| x == word[-1]}\n  vowels_index_2 = vowels.find{|x| x == word[-2]}\n\
    \  if vowels_index != nil && vowels_index_2 != nil\n    return word[vowels_index..vowels_index_2]\n\
    \  else\n    return \"\"\n  end\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=ruby,string\
    \ |>\n<code>\ndef closest_vowel(word)\n  vowels = \"aeiouAEIOU\"\n  vowels_index\
    \ = vowels.find{|x| x == word[-1]}\n  vowels_index_2 = vowels.find{|x| x == word[-2]}\n\
    \  if vowels_index != nil && vowels_index_2 != nil\n    return word[vowels_index..vowels_index_2]\n\
    \  else\n    return \"\"\n  end\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nPlease\
    \ don't post only code as an answer, but also provide an explanation of what your\
    \ code does and how it solves the problem of the question. Answers with an explanation\
    \ are usually more helpful and of better quality, and are more likely to attract\
    \ upvotes.\n<|/ c |>\n<| a dscore=1 |>\n<code>\ndef closest_vowel(word)\n  vowels\
    \ = \"aeiouAEIOU\"\n  vowels_index = vowels.find{|x| x == word[-1]}\n  vowels_index_2\
    \ = vowels.find{|", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|x|\
    \ word.include?(x)}\n    if vowels_idx == -1\n        return \"\"\n    ending_vowel_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx + 1\n    while vowels_idx < word.len\n\
    \        if word[vowels_idx] == word[ending_vowel_idx]\n            return word[vowels_idx]\n\
    \        ending_vowel_idx += 1\n        vowels_idx += 1\n    end\n    return \"\
    \"\nend\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.0>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.0>\nget_closest_vowel(\"\
    hello\")\n</cell>", "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels,\
    \ word)\n    vowels_count = vowels_count - 1\n    \n    if vowels_count < 0\n\
    \        return \"\"\n    \n    vowels_count = vowels_count + 1\n    \n    vowels_index\
    \ = length(vowels)\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    vowels_index = vowels_index - 1\n", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_count = count(vowels, word)\n    vowels_count =\
    \ vowels_count - 1 if vowels_count > 0 else 0\n    vowels_count = vowels_count\
    \ + 1 if vowels_count < len(word) else 0\n    vowels_count = vowels_count - 1\
    \ if vowels_count > 0 else 0\n    vowels_count = vowels_count + 1 if vowels_count\
    \ < len(word) else 0\n    \n    vowels_count = vowels_count - 1 if vowels_count\
    \ > 0 else 0\n    vowels_count = vowels_count + 1 if vowels_count < len(word)\
    \ else 0\n    vowels_count = vowels_count - 1 if vowels_count > 0 else 0\n   \
    \ vowels_count = vowels_count + 1 if vowels_count < len(word) else 0\n    \n \
    \   vowels_count = vowels_count - 1 if vowels_count > 0 else 0\n    vowels_count\
    \ = vowels_count + 1 if vowels_count < len(word) else 0\n    vowels_count = vowels_count\
    \ - 1 if vowels_count > 0 else 0\n    vowels_count = vowels_count + 1 if vowels_count\
    \ < len(word) else 0\n    \n    vowels_count = vowels_count - 1 if vowels_count\
    \ > 0 else 0\n    vowels_count = vowels_count + 1 if vowels_count < len(word)\
    \ else 0\n    vowels_count = vowels_count - 1 if vowels_count > 0 else 0\n   \
    \ vowels_count = vowels_count + 1 if vowels_count < len(word) else 0\n    \n \
    \   vowels_count = vowels_count - 1 if vowels_count > 0 else 0\n    vowels_count\
    \ = vowels_count + 1 if vowels_count < len(word) else 0\n    vowels_count = vowels_count\
    \ - 1 if vowels_count > 0 else 0\n    vowels_count = vowels_count + 1 if vowels_count\
    \ < len(word) else 0\n    \n    vowels_count = vowels_count - 1 if vowels_count\
    \ > 0 else 0\n    vowels_count = vowels_count + 1 if vowels_count < len(word)\
    \ else 0\n    vowels_count = vowels_count - 1 if vowels_count > 0 else 0\n   \
    \ vowels_count = vowels_count + 1 if vowels_count < len(word) else 0\n    \n \
    \   vowels_count = vowels_count - 1 if vowels_count > 0 else 0\n    vowels_count\
    \ = vowels_count + 1 if vowels_count < len(word) else 0\n    vowels_count = vowels_count\
    \ - 1 if vowels_count > 0 else 0\n    vowels_count = vowels_count + 1 if vowels_count\
    \ < len(word) else 0\n    \n    vowels_", "    vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    vowels_count = count(vowels)\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowel", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n  \
    \  vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = findfirst(vowels, word)\n    if vowels_idx < 0 \n        return \"\"\n   \
    \ \n    vowels_idx = vowels_idx + 1\n    vowels_idx = findfirst(vowels, word,\
    \ vowels_idx)\n    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n   \
    \ if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx +\
    \ 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx <\
    \ 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = findfirst(vowels, word, vowels_idx)\n    if vowels_idx < 0 \n        return\
    \ \"\"\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = findfirst(vowels,\
    \ word, vowels_idx)\n    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n   \
    \ if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx +\
    \ 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx <\
    \ 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = findfirst(vowels, word, vowels_idx)\n    if vowels_idx < 0 \n        return\
    \ \"\"\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = findfirst(vowels,\
    \ word, vowels_idx)\n    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n   \
    \ if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx +\
    \ 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n    if vowels_idx <\
    \ 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = findfirst(vowels, word, vowels_idx)\n    if vowels_idx < 0 \n        return\
    \ \"\"\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = findfirst(vowels,\
    \ word, vowels_idx)\n    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = findfirst(vowels, word, vowels_idx)\n   \
    \ if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = ", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_count = count(vowels, word)\n    if vowels_count\
    \ > 1\n        return \"\"\n    else\n        vowels_index = vowels_count - 1\n\
    \        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ - 1\n        vowels_index = ", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    vowels_count = vowels.count(\"a\")\n    vowels_count += vowels.count(\"\
    e\")\n    vowels_count += vowels.count(\"i\")\n    vowels_count += vowels.count(\"\
    o\")\n    vowels_count += vowels.count(\"u\")\n    vowels_count -= 1\n    vowels_count\
    \ %= 4\n    if vowels_count == 0:\n        return \"\"\n    \n    vowels_count\
    \ -= 1\n    vowels_count %= 4\n    if vowels_count == 0:\n        return \"\"\n\
    \    \n    vowels_count -= 1\n    vowels_count %= 4\n    if vowels_count == 0:\n\
    \        return \"\"\n    \n    vowels_count -= 1\n    vowels_count %= 4\n   \
    \ if vowels_count == 0:\n        return \"\"\n    \n    vowels_count -= 1\n  \
    \  vowels_count %= 4\n    if vowels_count == 0:\n        return \"\"\n    \n \
    \   vowels_count -= 1\n    vowels_count %= 4\n    if vowels_count == 0:\n    \
    \    return \"\"\n    \n    vowels_count -= 1\n    vowels_count %= 4\n    if vowels_count\
    \ == 0:\n        return \"\"\n    \n    vowels_count -= 1\n    vowels_count %=\
    \ 4\n    if vowels_count == 0:\n        return \"\"\n    \n    vowels_count -=\
    \ 1\n    vowels_count %= 4\n    if vowels_count == 0:\n        return \"\"\n \
    \   \n    vowels_count -= 1\n    vowels_count %= 4\n    if vowels_count == 0:\n\
    \        return \"\"\n    \n    vowels_count -= 1\n    vowels_count %= 4\n   \
    \ if vowels_count == 0:\n        return \"\"\n    \n    vowels_count -= 1\n  \
    \  vowels_count %= 4\n    if vowels_count == 0:\n        return \"\"\n    \n \
    \   vowels_count -= 1\n    vowels_count %= 4\n    if vowels_count == 0:\n    \
    \    return \"\"\n    \n    vowels_count -= 1\n    vowels_count %= 4\n    if vowels_count\
    \ == 0:\n        return \"\"\n    \n    vowels_count -= 1\n    vowels_count %=\
    \ 4\n    if vowels_count == 0:\n        return \"\"\n    \n    vowels_count -=\
    \ 1\n    vowels_count %= 4\n    if vowels_count == 0:\n        return \"\"\n \
    \   \n    vowels_count -= 1\n    vowels_count %= 4\n    if vowels_count == 0:\n\
    \        return \"\"\n    \n    vowels_count -= 1\n    vowels_count %= 4\n   \
    \ if vowels_count == 0:\n        return \"\"\n    \n    vowels_count -= 1\n  \
    \  vowels_", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_count\
    \ = 0\n    vowels_count_right_count = 0\n    vowels_count_left_left_count = 0\n\
    \    vowels_count_left_right_count = 0\n    vowels_count_right_left_count = 0\n\
    \    vowels_count_right_right_count = 0\n    \n    for char in word\n        if\
    \ char in vowels\n            vowels_count += 1\n            if vowels_count >\
    \ 1\n                vowels_count_left += 1\n                if vowels_count_left\
    \ > 1\n                    vowels_count_left_left += 1\n                    if\
    \ vowels_count_left_left > 1\n                        vowels_count_left_left_left\
    \ += 1\n                        if vowels_count_left_left_left > 1\n         \
    \                   vowels_count_left_left_left_left += 1\n                  \
    \          if vowels_count_left_left_left_left > 1\n                         \
    \       vowels_count_left_left_left_left_left += 1\n                         \
    \       if vowels_count_left_left_left_left_left > 1\n                       \
    \             vowels_count_left_left_left_left_left_left += 1\n              \
    \                      if vowels_count_left_left_left_left_left_left > 1\n   \
    \                                     vowels_count_left_left_left_left_left_left_left\
    \ += 1\n                                        if vowels_count_left_left_left_left_left_left_left\
    \ > 1\n                                            vowels_count_left_left_left_left_left_left_left_left\
    \ += 1\n                                            if vowels_count_left_left_left_left_left_left_left_left\
    \ > 1\n                                                vowels_count_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                if vowels_count_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                    vowels_count_left_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                    if vowels_count_left_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                        vowels_count_left_left_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                        if vowels_count_left_left_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                            vowels_count_left_left_left_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                            if vowels_count_left_left_left_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                                vowels_count_left_left_left_left_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                                    if\
    \ vowels_count_left_left_left_left_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                                      \
    \  vowels_count_left_left_left_left_left_left_left_left_left_left_left_left_left\
    \ += 1\n                                                                     \
    \   if vowels_count_left_left_left_left_left_left_left_left_left_left_left_left_left\
    \ > 1\n                                                                      \
    \      vowels_count_left_left_left_left_left_", "    vowels = \"aeiouAEIOU\"\n\
    \    vowels_idx = findall(vowels, word)\n    if vowels_idx.length == 0\n     \
    \   return \"\"\n    \n    vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n\
    \    \n    vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n  \
    \  \n    vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n\
    \    vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n  \
    \  vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n    vowels_idx\
    \ = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n    vowels_idx =\
    \ vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n    vowels_idx = vowels_idx[end]\n\
    \    vowels_idx = vowels_idx[end]\n    \n    vowels_idx = vowels_idx[end]\n  \
    \  vowels_idx = vowels_idx[end]\n    \n    vowels_idx = vowels_idx[end]\n    vowels_idx\
    \ = vowels_idx[end]\n    \n    vowels_idx = vowels_idx[end]\n    vowels_idx =\
    \ vowels_idx[end]\n    \n    vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n\
    \    \n    vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n  \
    \  \n    vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n\
    \    vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n  \
    \  vowels_idx = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n    vowels_idx\
    \ = vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n    vowels_idx =\
    \ vowels_idx[end]\n    vowels_idx = vowels_idx[end]\n    \n    vowels_idx = vowels_idx[end]\n\
    \    vowels_idx = vowels_idx[end]\n    \n    vowels_idx = vowels_idx[end]\n  \
    \  vowels_idx = vowels_idx[end]\n    \n    vowels_idx = vowels_idx[end]\n    vowels_idx\
    \ = vowels_idx[end]\n    \n    vowels_idx = vowels_idx[end]\n    vowels_idx =\
    \ vowels_idx[end]", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.contains(word))\n\
    \    if vowels_idx == -1\n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ - 1\n    \n    if vowels[vowels_idx] == word[vowels_idx + 1]\n        return\
    \ word[vowels_idx]\n    \n    if vowels[vowels_idx] == word[vowels_idx - 1]\n\
    \        return word[vowels_idx]\n    \n    return \"\"\nend\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of vowels present in the string.",
  "    vowels = \"aeiouAEIOU\"\n    vowels_index = find(vowels, word, 1)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index - 1\n    vowels_index\
    \ = vowels_index + 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word)\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index\
    \ > length(word)\n        vowels_index = length(word)\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word)\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index\
    \ > length(word)\n        vowels_index = length(word)\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word)\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index\
    \ > length(word)\n        vowels_index = length(word)\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word)\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index\
    \ > length(word)\n        vowels_index = length(word)\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word)\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index\
    \ > length(word)\n        vowels_index = length(word)\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word)\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index\
    \ > length(word)\n        vowels_index = length(word)\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word)\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index\
    \ > length(word)\n        vowels_index = length(word)\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word)\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index\
    \ > length(word)\n        vowels_index = length(word)\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = ", "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels, word)\n\
    \    if vowels_count > 1\n        vowels_count = vowels_count - 1\n    ending_vowel\
    \ = vowels[vowels_count]\n    vowels_count = count(vowels, word, vowels_count)\n\
    \    if vowels_count > 1\n        vowels_count = vowels_count - 1\n        vowels_count\
    \ = vowels_count - 1\n    ending_vowel = vowels[vowels_count]\n    return ending_vowel\n\
    end\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.3>\nget_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"\
    helloo\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"helloo\")\n\
    </cell>\n<code language=julia-1.3>\nget_closest_vowel(\"helloo\")\n</cell>\n<code\
    \ language=julia-1.3>\nget_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"\
    helloo\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"helloo\")\n\
    </cell>\n<code language=julia-1.3>\nget_closest_vowel(\"helloo\")\n</cell>\n<code\
    \ language=julia-1.3>\nget_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"\
    helloo\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"helloo\")\n\
    </cell>\n<code language=julia-1.3>\nget_closest_vowel(\"helloo\")\n</cell>\n<code\
    \ language=julia-1.3>\nget_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"\
    helloo\")\n</cell>\n<code language=julia-1.3>\nget_closest_vowel(\"helloo\")\n\
    </cell>\n<code language=julia-1.3>\nget_closest_vowel(\"helloo\")\n</cell>\n<code\
    \ language=julia-1.3>\nget_closest_vowel(\"helloo\")\n</cell>\n<code language=julia-1.3>\n\
    get_closest_vowel(\"helloo\")\n</", "    vowels = \"aeiouAEIOU\"\n    \n    vowels_index\
    \ = findlastindex(word, vowels)\n    \n    if vowels_index == -1\n        return\
    \ \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    if vowels_index >\
    \ length(word)\n        return \"\"\n    \n    vowels_index = vowels_index - 1\n\
    \    \n    if vowels_index == -1\n        return \"\"\n    \n    vowel = word[vowels_index]\n\
    \    \n    if vowel == \"a\"\n        return \"\"\n    \n    if vowel == \"e\"\
    \n        return \"\"\n    \n    if vowel == \"i\"\n        return \"\"\n    \n\
    \    if vowel == \"o\"\n        return \"\"\n    \n    if vowel == \"u\"\n   \
    \     return \"\"\n    \n    return vowel\nend\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    hellooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n\
    <code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\n\
    get_closest_vowel(\"helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"\
    helloooo\")\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\"\
    )\n</cell>\n<code language=julia-1.6>\nget_closest_vowel(\"helloooo\")\n</", " \
    \   vowels = \"aeiouAEIOU\"\n    vowels_count = length(vowels)\n    vowels_count\
    \ = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n\
    \    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count\
    \ = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n\
    \    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count\
    \ = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n\
    \    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count\
    \ = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n\
    \    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count\
    \ = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n\
    \    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count\
    \ = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n\
    \    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count\
    \ = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n\
    \    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count\
    \ = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n\
    \    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count\
    \ = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n\
    \    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count\
    \ = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n\
    \    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count\
    \ = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n\
    \    vowels_count = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count\
    \ = vowels_count+1\n    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n\
    \    vowels_count = vowels_count-1\n    vowels_count = vowels_count+1\n    vowels_count\
    \ = vowels_count-1\n    vowels_count = vowels_count", "    vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n \
    \   vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right = 0\n    vowels_count_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right = 0\n    vowels_count_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right = 0\n    vowels_count_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left_right_left\
    \ = 0\n    vowels_count_left_right_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n    vowels_idx =\
    \ vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n  \
    \  vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n  \
    \  vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n  \
    \  vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n  \
    \  vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = ", "    vowels = \"aeiouAEIOU\"\
    \n    vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx[length(vowels_idx)-1]\n    vowel_idx = find(vowels,\
    \ vowels_idx)\n    vowel_idx = vowel_idx - 1\n    vowel = word[vowel_idx]\n  \
    \  return vowel\nend\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"", "    vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    \n   \
    \ for letter in word:\n        if letter in vowels:\n            vowels_count\
    \ += 1\n            if vowels_count > vowels_count_left:\n                vowels_count_left\
    \ = vowels_count\n            if vowels_count > vowels_count_right:\n        \
    \        vowels_count_right = vowels_count\n            if vowels_count > vowels_count_left_right:\n\
    \                vowels_count_left_right = vowels_count\n    \n    if vowels_count_left\
    \ == 0 and vowels_count_right == 0 and vowels_count_left_right == 0:\n       \
    \ return \"\"\n    \n    if vowels_count_left > vowels_count_right:\n        return\
    \ word[vowels_count_left_right:]\n    \n    return word[vowels_count_right:]\n\
    end", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|v| v == word[word.length-1]}\n\
    \    vowels_idx = vowels_idx == -1 ? word.length-1 : vowels_idx\n    vowels_idx\
    \ = vowels_idx == word.length-1 ? word.length-1 : vowels_idx\n    vowels_idx =\
    \ vowels_idx == -1 ? word.length-1 : vowels_idx\n    vowels_idx = vowels_idx ==\
    \ word.length-1 ? word.length-1 : vowels_idx\n    vowels_idx = vowels_idx == -1\
    \ ? word.length-1 : vowels_idx\n    vowels_idx = vowels_idx == word.length-1 ?\
    \ word.length-1 : vowels_idx\n    vowels_idx = vowels_idx == -1 ? word.length-1\
    \ : vowels_idx\n    vowels_idx = vowels_idx == word.length-1 ? word.length-1 :\
    \ vowels_idx\n    vowels_idx = vowels_idx == -1 ? word.length-1 : vowels_idx\n\
    \    vowels_idx = vowels_idx == word.length-1 ? word.length-1 : vowels_idx\n \
    \   vowels_idx = vowels_idx == -1 ? word.length-1 : vowels_idx\n    vowels_idx\
    \ = vowels_idx == word.length-1 ? word.length-1 : vowels_idx\n    vowels_idx =\
    \ vowels_idx == -1 ? word.length-1 : vowels_idx\n    vowels_idx = vowels_idx ==\
    \ word.length-1 ? word.length-1 : vowels_idx\n    vowels_idx = vowels_idx == -1\
    \ ? word.length-1 : vowels_idx\n    vowels_idx = vowels_idx == word.length-1 ?\
    \ word.length-1 : vowels_idx\n    vowels_idx = vowels_idx == -1 ? word.length-1\
    \ : vowels_idx\n    vowels_idx = vowels_idx == word.length-1 ? word.length-1 :\
    \ vowels_idx\n    vowels_idx = vowels_idx == -1 ? word.length-1 : vowels_idx\n\
    \    vowels_idx = vowels_idx == word.length-1 ? word.length-1 : vowels_idx\n \
    \   vowels_idx = vowels_idx == -1 ? word.length-1 : vowels_idx\n    vowels_idx\
    \ = vowels_idx == word.length-1 ? word.length-1 : vowels_idx\n    vowels_idx =\
    \ vowels_idx == -1 ? word.length-1 : vowels_idx\n    vowels_idx = vowels_idx ==\
    \ word.length-1 ? word.length-1 : vowels_idx\n    vowels_idx = vowels_idx == -1\
    \ ? word.length-1 : vowels_idx\n    vowels_idx = vowels_idx == word.length-1 ?\
    \ word.length-1 : vowels_idx\n    vowels_idx = vowels_idx == -1 ? word.length-1\
    \ : vowel", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    \n    for i\
    \ in word:\n        if i in vowels:\n            vowels_count += 1\n         \
    \   if vowels_count > vowels_count_left:\n                vowels_count_left =\
    \ vowels_count\n            if vowels_count > vowels_count_right:\n          \
    \      vowels_count_right = vowels_count\n    \n    if vowels_count_left == vowels_count_right:\n\
    \        return \"\"\n    \n    vowels_count_left -= 1\n    vowels_count_right\
    \ += 1\n    \n    for i in vowels:\n        if word.find(i) == word.rfind(i):\n\
    \            return i\n    \n    return \"\"\nend", "    vowels = \"aeiouAEIOU\"\
    \n    vowels_idx = vowels.findLastIndex(vowels.contains(word))\n    if vowels_idx\
    \ < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ - 1\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n\
    \    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n    \n\
    \    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx = vowels_idx + 1\n\
    \    vowels_idx = vowels_idx - 1\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ - 1\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n\
    \    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n    \n\
    \    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx = vowels_idx + 1\n\
    \    vowels_idx = vowels_idx - 1\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx\
    \ = vowels_idx - 1\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx\
    \ - 1\n    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n\
    \    \n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n    \n\
    \    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    vowels_idx = vowels_idx - 1\n    \n    vowels_idx = vowels_idx + 1\n\
    \    vowels_idx = vowels_idx - ", "    vowels = \"aeiouAEIOU\"\n    vowels_index\
    \ = vowels.find{|v| v == word[-1]}\n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowels_index != -1 \n    vowels_index\
    \ = vowels_index if vowels_index != -1 \n    vowels_index = vowels_index if vowels_index\
    \ != -1 \n    vowels_index = vowels_index if vowel", "    vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_max = 0\n  \
    \  vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_max = 0\n    vowels_count_min = 0\n    vowels_count_max = 0\n\
    \    vowels_count_min = 0\n    vowels_count_max = 0\n    vowels_count_min = 0\n\
    \    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels,\
    \ word)\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[length(vowels_idx)-1]\n\
    \    vowel_idx = find(vowels, word[vowels_idx])\n    vowel_idx = vowel_idx - 1\n\
    \    vowel = word[vowel_idx]\n    return vowel\nend\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_", "   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n\
    \    vowels_count_left_right = 0\n    \n    for i in word:\n        if i in vowels:\n\
    \            vowels_count += 1\n    \n    for i in vowels:\n        if word.index(i)\
    \ > word.index(\"a\"):\n            vowels_count_left += 1\n    \n    for i in\
    \ vowels:\n        if word.index(i) < word.index(\"a\"):\n            vowels_count_right\
    \ += 1\n    \n    for i in vowels:\n        if word.index(i) > word.index(\"a\"\
    ) and word.index(i) < word.index(\"e\"):\n            vowels_count_left_right\
    \ += 1\n    \n    if vowels_count == 0:\n        return \"\"\n    \n    if vowels_count_left\
    \ == 0 and vowels_count_right == 0 and vowels_count_left_right == 0:\n       \
    \ return \"\"\n    \n    if vowels_count_left == 0 and vowels_count_right == 0\
    \ and vowels_count_left_right == 1:\n        return \"\"\n    \n    if vowels_count_left\
    \ == 0 and vowels_count_right == 1 and vowels_count_left_right == 0:\n       \
    \ return \"\"\n    \n    if vowels_count_left == 0 and vowels_count_right == 1\
    \ and vowels_count_left_right == 1:\n        return \"\"\n    \n    if vowels_count_left\
    \ == 1 and vowels_count_right == 0 and vowels_count_left_right == 0:\n       \
    \ return \"\"\n    \n    if vowels_count_left == 1 and vowels_count_right == 0\
    \ and vowels_count_left_right == 1:\n        return \"\"\n    \n    if vowels_count_left\
    \ == 1 and vowels_count_right == 1 and vowels_count_left_right == 0:\n       \
    \ return \"\"\n    \n    if vowels_count_left == 1 and vowels_count_right == 1\
    \ and vowels_count_left_right == 1:\n        return \"\"\n    \n    if vowels_count_left\
    \ == 0 and vowels_count_right == 0 and vowels_count_left_right == 0 and vowels_count\
    \ > vowels_count_left:\n        return \"\"\n    \n    if vowels_count_left ==\
    \ 0 and vowels_count_right == 0 and vowels_count_left_right == 0 and vowels_count\
    \ < vowels_count_right:\n        return \"\"\n    \n    if vowels_count_left ==\
    \ 0 and vowels_count_right == 0 and vowels_count_left_right == 1 and vowels_count\
    \ > vowels_count_left:\n        return \"\"\n    \n    if vowels_count_left ==\
    \ 0 and vowels_count_right == 0 and vowels_count_left_right == 1 and vowels_count\
    \ < vowels_count_right:\n        return \"\"\n    \n    if vowels_count_left ==\
    \ 0 and vowels_count_right == 1 and vowels_count_left_right == 0 and vowels_count\
    \ > vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_index = find(vowels, word[end-1])\
    \ \n    vowels_index_2 = find(vowels, word[end-2]) \n    if vowels_index == -1\
    \ || vowels_index_2 == -1\n        return \"\"\n    elseif vowels_index > vowels_index_2\n\
    \        return word[end-1]\n    else\n        return word[end-2]\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the number of vowels\
    \ present in the string.", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|x|\
    \ word.ends_with?(x)}\n    if vowels_idx.nil?\n        return \"\"\n    end\n\
    \    vowels_idx = vowels_idx.to_i\n    vowels_idx = vowels_idx - 1\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels[vowels_idx..-1].each do |x|\n        if word.ends_with?(x)\n\
    \            return x\n        end\n    end\n    return \"\"\nend\n</code>\n<|/\
    \ a tags=ruby,string |>\n<| a dscore=0 |>\n<code>\ndef vowel_finder(word)\n  vowels\
    \ = \"aeiouAEIOU\"\n  vowels.each_with_index do |vowel, idx|\n    if word.include?(vowel)\n\
    \      return vowel\n    end\n  end\nend", "    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    vowels_count = vowels.count(\"a\")\n    vowels_count += vowels.count(\"\
    e\")\n    vowels_count += vowels.count(\"i\")\n    vowels_count += vowels.count(\"\
    o\")\n    vowels_count += vowels.count(\"u\")\n    \n    if vowels_count > 0 \n\
    \        vowels_count -= 1\n    \n    vowels_count += word.count(\"a\")\n    vowels_count\
    \ += word.count(\"e\")\n    vowels_count += word.count(\"i\")\n    vowels_count\
    \ += word.count(\"o\")\n    vowels_count += word.count(\"u\")\n    \n    if vowels_count\
    \ > 0 \n        vowels_count -= 1\n    \n    vowels_count += word.count(\"a\"\
    )\n    vowels_count += word.count(\"e\")\n    vowels_count += word.count(\"i\"\
    )\n    vowels_count += word.count(\"o\")\n    vowels_count += word.count(\"u\"\
    )\n    \n    if vowels_count > 0 \n        vowels_count -= 1\n    \n    vowels_count\
    \ += word.count(\"a\")\n    vowels_count += word.count(\"e\")\n    vowels_count\
    \ += word.count(\"i\")\n    vowels_count += word.count(\"o\")\n    vowels_count\
    \ += word.count(\"u\")\n    \n    if vowels_count > 0 \n        vowels_count -=\
    \ 1\n    \n    vowels_count += word.count(\"a\")\n    vowels_count += word.count(\"\
    e\")\n    vowels_count += word.count(\"i\")\n    vowels_count += word.count(\"\
    o\")\n    vowels_count += word.count(\"u\")\n    \n    if vowels_count > 0 \n\
    \        vowels_count -= 1\n    \n    vowels_count += word.count(\"a\")\n    vowels_count\
    \ += word.count(\"e\")\n    vowels_count += word.count(\"i\")\n    vowels_count\
    \ += word.count(\"o\")\n    vowels_count += word.count(\"u\")\n    \n    if vowels_count\
    \ > 0 \n        vowels_count -= 1\n    \n    vowels_count += word.count(\"a\"\
    )\n    vowels_count += word.count(\"e\")\n    vowels_count += word.count(\"i\"\
    )\n    vowels_count += word.count(\"o\")\n    vowels_count += word.count(\"u\"\
    )\n    \n    if vowels_count > 0 \n        vowels_count -= 1\n", "    vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_left = 0\n    vowels_count_left_right\
    \ = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right = 0\n   \
    \ vowels_count_left_left_left = 0\n    vowels_count_left_left_right = 0\n    vowels_count_left_right_left\
    \ = 0\n    vowels_count_left_right_right = 0\n    vowels_count_right_left_left\
    \ = 0\n    vowels_count_right_left_right = 0\n    vowels_count_right_right_left\
    \ = 0\n    vowels_count_right_right_right = 0\n    \n    for i in word:\n    \
    \    if i in vowels:\n            vowels_count += 1\n    \n    for i in vowels:\n\
    \        if word[len(word)-vowels_count:len(word)-1] == i:\n            vowels_count_right\
    \ += 1\n    \n    for i in vowels:\n        if word[:vowels_count] == i:\n   \
    \         vowels_count_left_right += 1\n    \n    for i in vowels:\n        if\
    \ word[-vowels_count:] == i:\n            vowels_count_right_right += 1\n    \n\
    \    for i in vowels:\n        if word[:vowels_count] == i:\n            vowels_count_left_left_right\
    \ += 1\n    \n    for i in vowels:\n        if word[-vowels_count:] == i:\n  \
    \          vowels_count_right_left_right += 1\n    \n    for i in vowels:\n  \
    \      if word[:vowels_count] == i:\n            vowels_count_left_left_left +=\
    \ 1\n    \n    for i in vowels:\n        if word[-vowels_count:] == i:\n     \
    \       vowels_count_right_left_left += 1\n    \n    for i in vowels:\n      \
    \  if word[:vowels_count] == i:\n            vowels_count_left_right_left += 1\n\
    \    \n    for i in vowels:\n        if word[-vowels_count:] == i:\n         \
    \   vowels_count_right_right_left += 1\n    \n    for i in vowels:\n        if\
    \ word[:vowels_count] == i:\n            vowels_count_left_right_right += 1\n\
    \    \n    for i in vowels:\n        if word[-vowels_count:] == i:\n         \
    \   vowels_count_right_right_right += 1\n    \n    if vowels_count == 0:\n   \
    \     return \"\"\n    \n    if vowels_count_right == 0:\n        return word[vowels_count:]\n\
    \    \n    if vowels_count_left_right == 0:\n        return word[:vowels_count]\n\
    \    \n    if vowels_count_left_left_right == 0:\n        return word[:vowels_count]\n\
    \    \n    if vowels_count_right_right_right == 0:\n        return word[vowels_count:]\n\
    \    \n    if vowels_count_left_left_left == 0:\n        return word[:vowels_count]\n\
    \    \n", "    vowels = \"aeiouAEIOU\"\n    vowels_index = vowels.find{|x| x =~\
    \ /[aeiou]/}\n    if vowels_index == -1\n        return \"\"\n    ending_vowel_index\
    \ = vowels_index + 1\n    vowels_index = vowels.find{|x| x =~ /[aeiou]/}\n   \
    \ if vowels_index == -1\n        return \"\"\n    ending_vowel_index = vowels_index\
    \ + 1\n    vowels_index = vowels.find{|x| x =~ /[aeiou]/}\n    if vowels_index\
    \ == -1\n        return \"\"\n    ending_vowel_index = vowels_index + 1\n    vowels_index\
    \ = vowels.find{|x| x =~ /[aeiou]/}\n    if vowels_index == -1\n        return\
    \ \"\"\n    ending_vowel_index = vowels_index + 1\n    vowels_index = vowels.find{|x|\
    \ x =~ /[aeiou]/}\n    if vowels_index == -1\n        return \"\"\n    ending_vowel_index\
    \ = vowels_index + 1\n    vowels_index = vowels.find{|x| x =~ /[aeiou]/}\n   \
    \ if vowels_index == -1\n        return \"\"\n    ending_vowel_index = vowels_index\
    \ + 1\n    vowels_index = vowels.find{|x| x =~ /[aeiou]/}\n    if vowels_index\
    \ == -1\n        return \"\"\n    ending_vowel_index = vowels_index + 1\n    vowels_index\
    \ = vowels.find{|x| x =~ /[aeiou]/}\n    if vowels_index == -1\n        return\
    \ \"\"\n    ending_vowel_index = vowels_index + 1\n    vowels_index = vowels.find{|x|\
    \ x =~ /[aeiou]/}\n    if vowels_index == -1\n        return \"\"\n    ending_vowel_index\
    \ = vowels_index + 1\n    vowels_index = vowels.find{|x| x =~ /[aeiou]/}\n   \
    \ if vowels_index == -1\n        return \"\"\n    ending_vowel_index = vowels_index\
    \ + 1\n    vowels_index = vowels.find{|x| x =~ /[aeiou]/}\n    if vowels_index\
    \ == -1\n        return \"\"\n    ending_vowel_index = vowels_index + 1\n    vowels_index\
    \ = vowels.find{|x| x =~ /[aeiou]/}\n    if vowels_index == -1\n        return\
    \ \"\"\n    ending_vowel_index = vowels_index + 1\n    vowels_index = vowels.find{|x|\
    \ x =~ /[aeiou]/}\n    if ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.findLastIndex(word))\n\
    \    if vowels_idx == -1\n        return \"\"\n    else\n        return vowels[vowels_idx]\n\
    end", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowel_counter = 0\n\
    \    vowel_counter = vowels.count(word[vowel_counter:])\n    vowel_counter = vowels.count(word[vowel_counter-1:])\n\
    \    if vowel_counter == 0 \n        \"\"\n    elseif vowel_counter == 1\n   \
    \     word[vowel_counter]\n    elseif vowel_counter == 2\n        word[vowel_counter-1]\n\
    \    elseif vowel_counter == 3\n        word[vowel_counter-2]\n    elseif vowel_counter\
    \ == 4\n        word[vowel_counter-3]\n    elseif vowel_counter == 5\n       \
    \ word[vowel_counter-4]\n    elseif vowel_counter == 6\n        word[vowel_counter-5]\n\
    \    elseif vowel_counter == 7\n        word[vowel_counter-6]\n    elseif vowel_counter\
    \ == 8\n        word[vowel_counter-7]\n    elseif vowel_counter == 9\n       \
    \ word[vowel_counter-8]\n    elseif vowel_counter == 10\n        word[vowel_counter-9]\n\
    \    elseif vowel_counter == 11\n        word[vowel_counter-10]\n    elseif vowel_counter\
    \ == 12\n        word[vowel_counter-11]\n    elseif vowel_counter == 13\n    \
    \    word[vowel_counter-12]\n    elseif vowel_counter == 14\n        word[vowel_counter-13]\n\
    \    elseif vowel_counter == 15\n        word[vowel_counter-14]\n    elseif vowel_counter\
    \ == 16\n        word[vowel_counter-15]\n    elseif vowel_counter == 17\n    \
    \    word[vowel_counter-16]\n    elseif vowel_counter == 18\n        word[vowel_counter-17]\n\
    \    elseif vowel_counter == 19\n        word[vowel_counter-18]\n    elseif vowel_counter\
    \ == 20\n        word[vowel_counter-19]\n    elseif vowel_counter == 21\n    \
    \    word[vowel_counter-20]\n    elseif vowel_counter == 22\n        word[vowel_counter-21]\n\
    \    elseif vowel_counter == 23\n        word[vowel_counter-22]\n    elseif vowel_counter\
    \ == 24\n        word[vowel_counter-23]\n    elseif vowel_counter == 25\n    \
    \    word[vowel_counter-24]\n    elseif vowel_counter == 26\n        word[vowel_counter-25]\n\
    \    elseif vowel_counter == 27\n        word[vowel_counter-26]\n    elseif vowel_",
  "    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowels_count = length(vowels)\n\
    \    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n", "    vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_index = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count_2 = 0\n    vowels_index_count_3 = 0\n    vowels_index_count_4\
    \ = 0\n    vowels_index_count_5 = 0\n    vowels_index_count_6 = 0\n    vowels_index_count_7\
    \ = 0\n    vowels_index_count_8 = 0\n    vowels_index_count_9 = 0\n    vowels_index_count_10\
    \ = 0\n    vowels_index_count_11 = 0\n    vowels_index_count_12 = 0\n    vowels_index_count_13\
    \ = 0\n    vowels_index_count_14 = 0\n    vowels_index_count_15 = 0\n    vowels_index_count_16\
    \ = 0\n    vowels_index_count_17 = 0\n    vowels_index_count_18 = 0\n    vowels_index_count_19\
    \ = 0\n    vowels_index_count_20 = 0\n    vowels_index_count_21 = 0\n    vowels_index_count_22\
    \ = 0\n    vowels_index_count_23 = 0\n    vowels_index_count_24 = 0\n    vowels_index_count_25\
    \ = 0\n    vowels_index_count_26 = 0\n    vowels_index_count_27 = 0\n    vowels_index_count_28\
    \ = 0\n    vowels_index_count_29 = 0\n    vowels_index_count_30 = 0\n    vowels_index_count_31\
    \ = 0\n    vowels_index_count_32 = 0\n    vowels_index_count_33 = 0\n    vowels_index_count_34\
    \ = 0\n    vowels_index_count_35 = 0\n    vowels_index_count_36 = 0\n    vowels_index_count_37\
    \ = 0\n    vowels_index_count_38 = 0\n    vowels_index_count_39 = 0\n    vowels_index_count_40\
    \ = 0\n    vowels_index_count_41 = 0\n    vowels_index_count_42 = 0\n    vowels_index_count_43\
    \ = 0\n    vowels_index_count_44 = 0\n    vowels_index_count_45 = 0\n    vowels_index_count_46\
    \ = 0\n    vowels_index_count_47 = 0\n    vowels_index_count_48 = 0\n    vowels_index_count_49\
    \ = 0\n    vowels_index_count_50 = 0\n    vowels_index_count_51 = 0\n    vowels_index_count_52\
    \ = 0\n    vowels_index_count_53 = 0\n    vowels_index_count_54 = 0\n    vowels_index_count_55\
    \ = 0\n    vowels_index_count_56 = 0\n    vowels_index_count_57 = 0\n    vowels_index_count_58\
    \ = 0\n    vowels_index_count_59 = 0\n    vowels_index_count_60 = 0\n    vowels_index_count_61\
    \ = 0\n    vowel", "    vowels = \"aeiouAEIOU\"\n    vowels_index = findfirst(vowels,\
    \ word)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n\
    \    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels, word,\
    \ vowels_index)\n    if vowels_index == -1\n        return \"\"\n    \n    vowels_index\
    \ = vowels_index + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n\
    \    if vowels_index == -1\n        return \"\"\n    \n    vowels_index = vowels_index\
    \ + 1\n    vowels_index = findfirst(vowels, word, vowels_index)\n    if vowels_index\
    \ == -1\n        return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index == -1\n       \
    \ return \"\"\n    \n    vowels_index = vowels_index + 1\n    vowels_index = findfirst(vowels,\
    \ word, vowels_index)\n    if ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n    vowels_idx =\
    \ vowels_idx[length(vowels_idx)-1]\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowel", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    vowels_count = count(vowels)\n    vowels_count = vowels_count - 1\n   \
    \ vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowel", "    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = count(vowels)\n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count - 1\n    \n    vowels_count = vowels_count - 1\n    \n    vowels_count\
    \ = vowels_count ", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left = 0\n    vowels_count_right_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_right = 0\n    vowels_count_left_left\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\
    \n    vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx.-1\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n  \
    \  vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n  \
    \  vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n  \
    \  vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n  \
    \  vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ vowels_idx", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|x|\
    \ x =~ /[aeiou]/}\n    if vowels_idx.nil?\n        return \"\"\n    end\n    vowels_idx\
    \ = vowels_idx.to_i\n    vowels_idx = vowels_idx - 1\n    vowels_idx = vowels_idx\
    \ + 1\n    vowel = vowels[vowels_idx]\n    vowel_pos = word.rindex(vowel)\n  \
    \  vowel_pos = vowel_pos + 1\n    vowel_pos = vowel_pos - 1\n    if vowel_pos\
    \ == 0\n        return \"\"\n    end\n    vowel_pos = vowel_pos - 1\n    vowel_pos\
    \ = vowel_pos + 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos = vowel_pos +\
    \ 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos\
    \ = vowel_pos - 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos = vowel_pos -\
    \ 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos\
    \ = vowel_pos + 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos = vowel_pos +\
    \ 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos\
    \ = vowel_pos - 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos = vowel_pos -\
    \ 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos\
    \ = vowel_pos + 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos = vowel_pos +\
    \ 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos\
    \ = vowel_pos - 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos = vowel_pos -\
    \ 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos\
    \ = vowel_pos + 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos = vowel_pos +\
    \ 1\n    vowel_pos = vowel_pos - 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos\
    \ = vowel_pos - 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos = vowel_pos -\
    \ 1\n    vowel_pos = vowel_pos + 1\n    vowel_pos = vowel_pos - 1\n    ", "  \
    \  vowels = \"aeiouAEIOU\"\n    vowels_idx = find(vowels, word) \n    if vowels_idx\
    \ < length(word)-1 && vowels_idx > length(word)-3 \n        return word[vowels_idx:end]\n\
    \    else\n        return \"\"\n    end\nend\n</code>\n<|/ a tags=julia |>\n<|\
    \ a dscore=0 |>\n<code>", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    vowels_count = length(vowels)\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowel", "    vowels = \"aeiouAEIOU\"\n\
    \    vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n \
    \   vowels_idx = vowels_idx[1..end]\n    vowels_idx = unique(vowels_idx)\n   \
    \ vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    ", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_index = find(vowels, word) \n    if vowels_index\
    \ == -1 \n        \"\"\n    else\n        word[vowels_index..end]\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=", "    vowels = \"\
    aeiouAEIOU\"\n    vowels_idx = vowels.find{|x| x =~ /[aeiou]/i}\n    if vowels_idx.nil?\n\
    \        return \"\"\n    end\n    vowels_idx = vowels_idx.succ if vowels_idx.succ\
    \ > vowels_idx.end\n    vowels_idx = vowels_idx.pred if vowels_idx.pred < vowels_idx.end\n\
    \    vowels[vowels_idx]\nend\n</code>\n<|/ a tags=string,ruby,regex |>\n<| a tags=string,ruby,regex\
    \ |>\n<code>\ndef closest_vowel(word)\n  vowels = \"aeiouAEIOU\"\n  vowels_idx\
    \ = vowels.find{|x| x =~ /[aeiou]/i}\n  if vowels_idx.nil?\n    return \"\"\n\
    \  end\n  vowels_idx = vowels_idx.succ if vowels_idx.succ > vowels_idx.end\n \
    \ vowels_idx = vowels_idx.pred if vowels_idx.pred < vowels_idx.end\n  vowels[vowels_idx]\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,ruby,regex |>\n<code>\ndef closest_vowel(word)\n\
    \  vowels = \"aeiouAEIOU\"\n  vowels_idx = vowels.find{|x| x =~ /[aeiou]/i}\n\
    \  if vowels_idx.nil?\n    return \"\"\n  end\n  vowels_idx = vowels_idx.succ\
    \ if vowels_idx.succ > vowels_idx.end\n  vowels_idx = vowels_idx.pred if vowels_idx.pred\
    \ < vowels_idx.end\n  vowels[vowels_idx]\nend\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nPlease add some explanation to your answer such that others can learn\
    \ from it\n<|/ c |>\n<| a tags=string,ruby,regex |>\n<code>\ndef closest_vowel(word)\n\
    \  vowels = \"aeiouAEIOU\"\n  vowels_idx = vowels.find{|x| x =~ /[aeiou]/i}\n\
    \  if vowels_idx.nil?\n    return \"\"\n  end\n  vowels_idx = vowels_idx.succ\
    \ if vowels_idx.succ > vowels_idx.end\n  vowels_idx = vowels_idx.pred if vowels_idx.pred\
    \ < vowels_idx.end\n  vowels[vowels_idx]\nend\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nPlease add some explanation to your answer ", "    vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n \
    \   vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    vowels_count = 0\n    vowels_count_start = 0\n    vowels_count_end = 0\n\
    \    vowels_count_start_end = 0\n    vowels_count_start_end_count = 0\n    vowels_count_start_end_count_start\
    \ = 0\n    vowels_count_start_end_count_end = 0\n    vowels_count_start_end_count_start_end\
    \ = 0\n    vowels_count_start_end_count_start_end_count = 0\n    vowels_count_start_end_count_start_end_count_start\
    \ = 0\n    vowels_count_start_end_count_start_end_count_end = 0\n    vowels_count_start_end_count_start_end_count_start_end\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count = 0\n\
    \    vowels_count_start_end_count_start_end_count_start_end_count_start = 0\n\
    \    vowels_count_start_end_count_start_end_count_start_end_count_end = 0\n  \
    \  vowels_count_start_end_count_start_end_count_start_end_count_start_end = 0\n\
    \    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_end\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_end\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_end\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count\
    \ = 0\n    vowels_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end_count_start_end\
    \ = 0\n    vowels_count_start_end_", "    vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right\
    \ = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count = 0\n\
    \    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels,\
    \ word)\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[length(vowels_idx)-1]\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx-1\n    vowel", " \
    \   vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    vowels_count = length(vowels)\n    vowels_index = 0\n    vowels_index_count\
    \ = 0\n    vowels_index_count_max = 0\n    vowels_index_count_min = 0\n    vowels_index_count_max_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_max_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_count_min_index = 0\n    vowels_index_count_min_index\
    \ = 0\n    vowels_index_", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    vowels_count = 0\n    vowels_index = 0\n    vowels_index2 = -1\n    vowels_index3\
    \ = -1\n    vowels_index4 = -1\n    vowels_index5 = -1\n    vowels_index6 = -1\n\
    \    vowels_index7 = -1\n    vowels_index8 = -1\n    vowels_index9 = -1\n    vowels_index10\
    \ = -1\n    vowels_index11 = -1\n    vowels_index12 = -1\n    vowels_index13 =\
    \ -1\n    vowels_index14 = -1\n    vowels_index15 = -1\n    vowels_index16 = -1\n\
    \    vowels_index17 = -1\n    vowels_index18 = -1\n    vowels_index19 = -1\n \
    \   vowels_index20 = -1\n    vowels_index21 = -1\n    vowels_index22 = -1\n  \
    \  vowels_index23 = -1\n    vowels_index24 = -1\n    vowels_index25 = -1\n   \
    \ vowels_index26 = -1\n    vowels_index27 = -1\n    vowels_index28 = -1\n    vowels_index29\
    \ = -1\n    vowels_index30 = -1\n    vowels_index31 = -1\n    vowels_index32 =\
    \ -1\n    vowels_index33 = -1\n    vowels_index34 = -1\n    vowels_index35 = -1\n\
    \    vowels_index36 = -1\n    vowels_index37 = -1\n    vowels_index38 = -1\n \
    \   vowels_index39 = -1\n    vowels_index40 = -1\n    vowels_index41 = -1\n  \
    \  vowels_index42 = -1\n    vowels_index43 = -1\n    vowels_index44 = -1\n   \
    \ vowels_index45 = -1\n    vowels_index46 = -1\n    vowels_index47 = -1\n    vowels_index48\
    \ = -1\n    vowels_index49 = -1\n    vowels_index50 = -1\n    vowels_index51 =\
    \ -1\n    vowels_index52 = -1\n    vowels_index53 = -1\n    vowels_index54 = -1\n\
    \    vowels_index55 = -1\n    vowels_index56 = -1\n    vowels_index57 = -1\n \
    \   vowels_index58 = -1\n    vowels_index59 = -1\n    vowels_index60 = -1\n  \
    \  vowels_index61 = -1\n    vowels_index62 = -1\n    vowels_index63 = -1\n   \
    \ vowels_index64 = -1\n    vowels_index65 = -1\n    vowels_index66 = -1\n    vowels_index67\
    \ = -1\n    vowels_index68 = -1\n    vowels_index69 = -1", "    vowels = \"aeiouAEIOU\"\
    \n    \n    vowels_index = findfirst(vowels, word)\n    if vowels_index == -1\n\
    \        return \"\"\n    \n    vowels_index = vowels_index + 1\n    \n    vowels_index_2\
    \ = findfirst(vowels, word, vowels_index)\n    if vowels_index_2 == -1\n     \
    \   return \"\"\n    \n    vowels_index_2 = vowels_index_2 + 1\n    \n    vowels_index_3\
    \ = findfirst(vowels, word, vowels_index_2)\n    if vowels_index_3 == -1\n   \
    \     return \"\"\n    \n    vowels_index_3 = vowels_index_3 + 1\n    \n    vowels_index_4\
    \ = findfirst(vowels, word, vowels_index_3)\n    if vowels_index_4 == -1\n   \
    \     return \"\"\n    \n    vowels_index_4 = vowels_index_4 + 1\n    \n    vowels_index_5\
    \ = findfirst(vowels, word, vowels_index_4)\n    if vowels_index_5 == -1\n   \
    \     return \"\"\n    \n    vowels_index_5 = vowels_index_5 + 1\n    \n    vowels_index_6\
    \ = findfirst(vowels, word, vowels_index_5)\n    if vowels_index_6 == -1\n   \
    \     return \"\"\n    \n    vowels_index_6 = vowels_index_6 + 1\n    \n    vowels_index_7\
    \ = findfirst(vowels, word, vowels_index_6)\n    if vowels_index_7 == -1\n   \
    \     return \"\"\n    \n    vowels_index_7 = vowels_index_7 + 1\n    \n    vowels_index_8\
    \ = findfirst(vowels, word, vowels_index_7)\n    if vowels_index_8 == -1\n   \
    \     return \"\"\n    \n    vowels_index_8 = vowels_index_8 + 1\n    \n    vowels_index_9\
    \ = findfirst(vowels, word, vowels_index_8)\n    if vowels_index_9 == -1\n   \
    \     return \"\"\n    \n    vowels_index_9 = vowels_index_9 + 1\n    \n    vowels_index_10\
    \ = findfirst(vowels, word, vowels_index_9)\n    if vowels_index_10 == -1\n  \
    \      return \"\"\n    \n    vowels_index_10 = vowels_index_10 + 1\n    \n  \
    \  vowels_index_11 = findfirst(vowels, word, vowels_index_10)\n    if vowels_index_11\
    \ == -1\n        return \"\"\n    \n    vowels_index_11 = vowels_index_11 + 1\n\
    \    \n    vowels_index_12 = findfirst(vowels, word, vowels_index_11)\n    if\
    \ vowels_index_12 == -1\n        return \"\"\n    \n    vowels_index_12 = vowels_index_12\
    \ + 1\n    \n    vowels_index_13 = find", "    vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_start = 0\n    vowels_count_end\
    \ = 0\n    vowels_count_start_end = 0\n    vowels_count_start_end_count = 0\n\
    \    vowels_count_start_end_count_start = 0\n    vowels_count_start_end_count_end\
    \ = 0\n    vowels_count_start_end_count_start_end = 0\n    \n    for char in word\n\
    \        if char in vowels\n            vowels_count += 1\n            if vowels_count\
    \ == 1\n                vowels_count_start = vowels_count_start_end\n        \
    \        vowels_count_end = vowels_count_start_end\n                vowels_count_start_end_count\
    \ = vowels_count_start_end_count_start\n                vowels_count_start_end_count_end\
    \ = vowels_count_start_end_count_start\n            elseif vowels_count == 2\n\
    \                vowels_count_start = vowels_count_start_end\n               \
    \ vowels_count_end = vowels_count_start_end\n                vowels_count_start_end_count\
    \ = vowels_count_start_end_count_start\n                vowels_count_start_end_count_end\
    \ = vowels_count_start_end_count_end\n            elseif vowels_count == 3\n \
    \               vowels_count_start = vowels_count_start_end\n                vowels_count_end\
    \ = vowels_count_start_end\n                vowels_count_start_end_count = vowels_count_start_end_count_start\n\
    \                vowels_count_start_end_count_end = vowels_count_start_end_count_end\n\
    \            elseif vowels_count == 4\n                vowels_count_start = vowels_count_start_end\n\
    \                vowels_count_end = vowels_count_start_end\n                vowels_count_start_end_count\
    \ = vowels_count_start_end_count_start\n                vowels_count_start_end_count_end\
    \ = vowels_count_start_end_count_end\n            elseif vowels_count == 5\n \
    \               vowels_count_start = vowels_count_start_end\n                vowels_count_end\
    \ = vowels_count_start_end\n                vowels_count_start_end_count = vowels_count_start_end_count_start\n\
    \                vowels_count_start_end_count_end = vowels_count_start_end_count_end\n\
    \            elseif vowels_count == 6\n                vowels_count_start = vowels_count_start_end\n\
    \                vowels_count_end = vowels_count_start_end\n                vowels_count_start_end_count\
    \ = vowels_count_start_end_count_start\n                vowels_count_start_end_count_end\
    \ = vowels_count_start_end_count_end\n            elseif vowels_count == 7\n \
    \               vowels_count_start = vowels_count_start_end\n                vowels_count_end\
    \ = vowels_count_start_end\n                vowels_count_start_end_count = vowels_count_start_end_count_start\n\
    \                vowels_count_start_end_count_end = ", "    vowels = \"aeiouAEIOU\"\
    \n    vowels_idx = vowels.find{|x| x =~ /[aeiou]/i}\n    vowels_idx = vowels_idx\
    \ == -1 ? vowels.size - 1 : vowels_idx\n    vowels_idx = vowels_idx == 0 ? 0 :\
    \ vowels_idx - 1\n    vowels_idx = vowels_idx < 0 ? 0 : vowels_idx\n    vowels_idx\
    \ = vowels_idx > vowels.size - 1 ? vowels.size - 1 : vowels_idx\n    vowels_idx\
    \ = vowels_idx == 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx < 0 ? 0 : vowels_idx\n\
    \    vowels_idx = vowels_idx > vowels.size - 1 ? vowels.size - 1 : vowels_idx\n\
    \    vowels_idx = vowels_idx == 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx\
    \ < 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx > vowels.size - 1 ? vowels.size\
    \ - 1 : vowels_idx\n    vowels_idx = vowels_idx == 0 ? 0 : vowels_idx\n    vowels_idx\
    \ = vowels_idx < 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx > vowels.size\
    \ - 1 ? vowels.size - 1 : vowels_idx\n    vowels_idx = vowels_idx == 0 ? 0 : vowels_idx\n\
    \    vowels_idx = vowels_idx < 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx\
    \ > vowels.size - 1 ? vowels.size - 1 : vowels_idx\n    vowels_idx = vowels_idx\
    \ == 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx < 0 ? 0 : vowels_idx\n  \
    \  vowels_idx = vowels_idx > vowels.size - 1 ? vowels.size - 1 : vowels_idx\n\
    \    vowels_idx = vowels_idx == 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx\
    \ < 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx > vowels.size - 1 ? vowels.size\
    \ - 1 : vowels_idx\n    vowels_idx = vowels_idx == 0 ? 0 : vowels_idx\n    vowels_idx\
    \ = vowels_idx < 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx > vowels.size\
    \ - 1 ? vowels.size - 1 : vowels_idx\n    vowels_idx = vowels_idx == 0 ? 0 : vowels_idx\n\
    \    vowels_idx = vowels_idx < 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx\
    \ > vowels.size - 1 ? vowels.size - 1 : vowels_idx\n    vowels_idx = vowels_idx\
    \ == 0 ? 0 : vowels_idx\n    vowels_idx = vowels_idx < 0 ? 0 : vowels_idx\n  \
    \  ", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = vowels.count(\"\
    a\")\n    vowels_count += vowels.count(\"e\")\n    vowels_count += vowels.count(\"\
    i\")\n    vowels_count += vowels.count(\"o\")\n    vowels_count += vowels.count(\"\
    u\")\n    vowels_count -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count\
    \ -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count\
    \ %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count\
    \ + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count\
    \ -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count\
    \ %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count\
    \ + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count\
    \ -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count\
    \ %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count\
    \ + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count\
    \ -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count\
    \ %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count\
    \ + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count\
    \ -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count\
    \ %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count\
    \ + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count\
    \ -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count\
    \ %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count\
    \ + 1\n    vowels_count -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count\
    \ -= 1\n    vowels_count %= vowels_count + 1\n    vowels_count -= 1\n    vowels_count\
    \ %= vowels_count + 1\n    vowels_count -= 1\n    vowels_", "    vowels = \"aeiouAEIOU\"\
    \n    vowels_count = count(vowels, word)\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count % length(vowels)\n    \n    if vowels_count ==\
    \ 0\n        return \"\"\n    else\n        vowels_count = vowels_count + 1\n\
    \        vowels_count = vowels_count % length(vowels)\n        \n        return\
    \ vowels[vowels_count]\n    end\nend\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(word)\
    \ \n    if vowels_idx == -1 \n        return \"\"\n    else \n        return vowels[vowels_idx+1]\n\
    end\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hey\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5", "    vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left_right_count_left\
    \ = 0\n    vowels_count_", "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels)\n\
    \    vowels_count = vowels_count - 2\n    vowels_count = vowels_count % vowels_count\n\
    \    vowels_index = vowels_count - 1\n    \n    vowels_index = vowels_index +\
    \ 1\n    \n    if vowels_index > length(word)\n        vowels_index = length(word)\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index >\
    \ length(word)\n        vowels_index = length(word) - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word) - 1\n    \n    vowels_index = vowels_index - 1\n    \n    if\
    \ vowels_index > length(word)\n        vowels_index = length(word) - 1\n    \n\
    \    vowels_index = vowels_index - 1\n    \n    if vowels_index > length(word)\n\
    \        vowels_index = length(word) - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    if vowels_index > length(word)\n        vowels_index = length(word)\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index >\
    \ length(word)\n        vowels_index = length(word) - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word) - 1\n    \n    vowels_index = vowels_index - 1\n    \n    if\
    \ vowels_index > length(word)\n        vowels_index = length(word) - 1\n    \n\
    \    vowels_index = vowels_index - 1\n    \n    if vowels_index > length(word)\n\
    \        vowels_index = length(word) - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    if vowels_index > length(word)\n        vowels_index = length(word)\
    \ - 1\n    \n    vowels_index = vowels_index - 1\n    \n    if vowels_index >\
    \ length(word)\n        vowels_index = length(word) - 1\n    \n    vowels_index\
    \ = vowels_index - 1\n    \n    if vowels_index > length(word)\n        vowels_index\
    \ = length(word) - 1\n    \n    vowels_index = vowels_index - 1\n    \n    if\
    \ vowels_index > length(word)\n        vowels_index = length(word) - 1\n    \n\
    \    vowels_index = vowels_index - 1\n    \n    if vowels_index > length(word)\n\
    \        vowels_index = length(word) - 1\n    \n    vowels_index = vowels_index\
    \ - 1\n    \n    if vowels_index > length(word)\n        vowels_index = length(word)\
    \ - 1\n", "    vowels = \"aeiouAEIOU\"\n    vowels_index = vowels.find{|vowel|\
    \ vowel == word[-1]}\n    if vowels_index != -1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        vowels_index = vowels_index - 1\n        vowels_index = vowels_index\
    \ + 1\n        ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.findLastIndex(vowels.contains(word))\n\
    \    if vowels_idx < 0 \n        return \"\"\n    \n    vowels_idx = vowels_idx\
    \ + 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       vowels_idx = vowels.lenght - 1\n    \n    vowels_idx = vowels_idx - 1\n\
    \    \n    if vowels_idx < 0 \n        vowels_idx = vowels.lenght - 1\n    \n\
    \    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        vowels_idx\
    \ = vowels.lenght - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx\
    \ < 0 \n        vowels_idx = vowels.lenght - 1\n    \n    vowels_idx = vowels_idx\
    \ - 1\n    \n    if vowels_idx < 0 \n        vowels_idx = vowels.lenght - 1\n\
    \    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n       \
    \ vowels_idx = vowels.lenght - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        vowels_idx = vowels.lenght - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        vowels_idx = vowels.lenght\
    \ - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n \
    \       vowels_idx = vowels.lenght - 1\n    \n    vowels_idx = vowels_idx - 1\n\
    \    \n    if vowels_idx < 0 \n        vowels_idx = vowels.lenght - 1\n    \n\
    \    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n        vowels_idx\
    \ = vowels.lenght - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx\
    \ < 0 \n        vowels_idx = vowels.lenght - 1\n    \n    vowels_idx = vowels_idx\
    \ - 1\n    \n    if vowels_idx < 0 \n        vowels_idx = vowels.lenght - 1\n\
    \    \n    vowels_idx = vowels_idx - 1\n    \n    if vowels_idx < 0 \n       \
    \ vowels_idx = vowels.lenght - 1\n    \n    vowels_idx = vowels_idx - 1\n    \n\
    \    if vowels_idx < 0 \n        vowels_idx = vowels.lenght - 1\n    \n    vowels_idx\
    \ = vowels_idx - 1\n    \n    if vowels_idx ", "    vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    vowels_count = count(vowels)\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count -\
    \ 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n\
    \    vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n  \
    \  vowels_count = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count =\
    \ vowels_count + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ + 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count +\
    \ 1\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n  \
    \  vowels_count = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count =\
    \ vowels_count - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count + 1\n    vowels_count = vowel", "    vowels\
    \ = \"aeiouAEIOU\"\n    vowels_idx = find(vowels, word, 1)\n    if vowels_idx\
    \ < length(word)\n        vowels_idx = vowels_idx + 1\n        vowels_idx = find(vowels,\
    \ word, vowels_idx)\n        if vowels_idx < length(word)\n            vowels_idx\
    \ = vowels_idx + 1\n            vowels_idx = find(vowels, word, vowels_idx)\n\
    \            if vowels_idx < length(word)\n                vowels_idx = vowels_idx\
    \ + 1\n                vowels_idx = find(vowels, word, vowels_idx)\n         \
    \       if vowels_idx < length(word)\n                    vowels_idx = vowels_idx\
    \ + 1\n                    vowels_idx = find(vowels, word, vowels_idx)\n     \
    \               if vowels_idx < length(word)\n                        vowels_idx\
    \ = vowels_idx + 1\n                        vowels_idx = find(vowels, word, vowels_idx)\n\
    \                        if vowels_idx < length(word)\n                      \
    \      vowels_idx = vowels_idx + 1\n                            vowels_idx = find(vowels,\
    \ word, vowels_idx)\n                            if vowels_idx < length(word)\n\
    \                                return word[vowels_idx:end]\n               \
    \             end\n                        end\n                    end\n    \
    \            end\n            end\n        end\n    end\n    return \"\"\nend\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"apple\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"apples\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    bananas\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"bananas\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"bananas\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"bananas\")\n\
    </cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"bananas\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"banana\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    bananas\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"banana\")\n\
    </cell>\n<code language=julia-1.5>", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = vowels.findLastIndex(vowels.contains(word))\n    if vowels_idx < 0\n     \
    \   return \"\"\n    else\n        return vowels[vowels_idx]\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"Hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"helloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"helloWorld\")", "    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_right\
    \ = 0\n    vowels_count_left = 0\n    vowels_count_both = 0\n    vowels_count_right_left\
    \ = 0\n    vowels_count_right_both = 0\n    vowels_count_left_both = 0\n    vowels_count_both_right\
    \ = 0\n    vowels_count_both_left = 0\n    \n    for char in word\n        if\
    \ char in vowels\n            vowels_count += 1\n            if char == word[vowels_count\
    \ - 1]\n                vowels_count_right += 1\n            if char == word[vowels_count\
    \ + 1]\n                vowels_count_left += 1\n            if char == word[vowels_count\
    \ + 2]\n                vowels_count_both += 1\n            if char == word[vowels_count\
    \ - 2]\n                vowels_count_right_left += 1\n            if char == word[vowels_count\
    \ - 1]\n                vowels_count_right_both += 1\n            if char == word[vowels_count\
    \ + 1]\n                vowels_count_left_both += 1\n            if char == word[vowels_count\
    \ + 2]\n                vowels_count_both_right += 1\n            if char == word[vowels_count\
    \ - 2]\n                vowels_count_both_left += 1\n            if char == word[vowels_count\
    \ - 1]\n                vowels_count_both_both += 1\n    \n    if vowels_count\
    \ > 0\n        if vowels_count_right > 0\n            if vowels_count_left > 0\n\
    \                if vowels_count_both > 0\n                    if vowels_count_right_left\
    \ > 0\n                        if vowels_count_right_both > 0\n              \
    \              if vowels_count_left_both > 0\n                               \
    \ if vowels_count_both_right > 0\n                                    if vowels_count_both_left\
    \ > 0\n                                        if vowels_count_both_both > 0\n\
    \                                            return word[vowels_count - 1]\n \
    \                                       else\n                               \
    \             return \"\"\n                                    else\n        \
    \                                return \"\"\n                               \
    \ else\n                                    return \"\"\n                    \
    \        else\n                                return \"\"\n                 \
    \       else\n                            return \"\"\n                    else\n\
    \                        return \"\"\n                else\n                 \
    \   return \"\"\n            else\n                return \"\"\n        else\n\
    \            return \"\"\n    else\n        return \"\"\nend\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hallo\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hey\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"he", "    vowels = \"aeiouAEIOU\"\n    vowels_count = count(vowels,\
    \ word)\n    vowels_count -= 1\n    vowels_count %= length(vowels)\n    \n   \
    \ vowels_count += length(word) - length(replace(word, vowels, \"\"))\n    \n \
    \   closest_vowel = vowels[vowels_count]\n    \n    return closest_vowel\nend\n\
    </cell>\n<code language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nget_closest_vowel(\"abracadabra\")\n", "    vowels = \"\
    aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n    vowels_idx = sort(vowels_idx)\n\
    \    vowels_idx = vowels_idx[length(vowels_idx)-1]\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx\
    \ = vowels_idx+1\n    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n\
    \    vowels_idx = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx\
    \ = vowels_idx-1\n    vowels_idx = vowels_idx+1\n    vowels_idx = vowels_idx-1\n\
    \    vowels_idx = vowels_idx+1\n    vowel", "    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left = 0\n    vowels_count_right\
    \ = 0\n    vowels_count_left_left = 0\n    vowels_count_left_right = 0\n    vowels_count_right_left\
    \ = 0\n    vowels_count_right_right = 0\n    \n    for char in word:\n       \
    \ if char in vowels:\n            vowels_count += 1\n            if vowels_count\
    \ > 2:\n                vowels_count_left = vowels_count_right + 1\n         \
    \       vowels_count_left_left = vowels_count_right_left + 2\n               \
    \ vowels_count_left_right = vowels_count_right_right + 3\n                vowels_count_right_left\
    \ = vowels_count_left_left + 4\n                vowels_count_right_right = vowels_count_left_right\
    \ + 5\n            else:\n                vowels_count_left = vowels_count_right\
    \ + 1\n                vowels_count_left_left = vowels_count_right_left + 2\n\
    \                vowels_count_left_right = vowels_count_right_right + 3\n    \
    \            vowels_count_right_left = vowels_count_left_left + 4\n          \
    \      vowels_count_right_right = vowels_count_left_right + 5\n        else:\n\
    \            vowels_count_right = 0\n            vowels_count_left_right = 0\n\
    \            vowels_count_right_left = 0\n            vowels_count_left_left =\
    \ 0\n            vowels_count_right_right = 0\n    \n    if vowels_count == 0:\n\
    \        return \"\"\n    elif vowels_count == 1:\n        if vowels_count_left\
    \ == vowels_count_right:\n            return vowels[vowels_count_left]\n     \
    \   else:\n            return \"\"\n    elif vowels_count == 2:\n        if vowels_count_left_left\
    \ == vowels_count_right_left and vowels_count_left_right == vowels_count_right_right:\n\
    \            return vowels[vowels_count_left_left]\n        elif vowels_count_left_left\
    \ == vowels_count_right_left and vowels_count_left_right != vowels_count_right_right:\n\
    \            return vowels[vowels_count_left_right]\n        elif vowels_count_left_left\
    \ != vowels_count_right_left and vowels_count_left_right == vowels_count_right_right:\n\
    \            return vowels[vowels_count_left_left]\n        else:\n          \
    \  return \"\"\n    else:\n        return \"\"\nend\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    hello\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"hello\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"hello\")\n</", "    vowels = \"aeiouAEIOU\"\n    vowels_idx\
    \ = vowels.find{|x| x == word[word.length-1]}\n    vowels_idx = vowels_idx.nil?\
    \ ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x == word[word.length-2]}\n\
    \    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x|\
    \ x == word[word.length-3]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n\
    \    vowels_idx = vowels.find{|x| x == word[word.length-4]}\n    vowels_idx =\
    \ vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x == word[word.length-5]}\n\
    \    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x|\
    \ x == word[word.length-6]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n\
    \    vowels_idx = vowels.find{|x| x == word[word.length-7]}\n    vowels_idx =\
    \ vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x == word[word.length-8]}\n\
    \    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x|\
    \ x == word[word.length-9]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n\
    \    vowels_idx = vowels.find{|x| x == word[word.length-10]}\n    vowels_idx =\
    \ vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x == word[word.length-11]}\n\
    \    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x|\
    \ x == word[word.length-12]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n\
    \    vowels_idx = vowels.find{|x| x == word[word.length-13]}\n    vowels_idx =\
    \ vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x| x == word[word.length-14]}\n\
    \    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n    vowels_idx = vowels.find{|x|\
    \ x == word[word.length-15]}\n    vowels_idx = vowels_idx.nil? ? 0 : vowels_idx\n\
    \    vowels_idx = ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = vowels.find{|x|\
    \ word.ends_with?(x)}\n    if vowels_idx == -1\n        return \"\"\n    ends_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels.find{|x| word.starts_with?(x)}\n \
    \   if vowels_idx == -1\n        return \"\"\n    vowels_idx = vowels_idx + 1\n\
    \    vowels_idx = vowels.find{|x| word.include?(x)}\n    if vowels_idx == -1\n\
    \        return \"\"\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels.find{|x|\
    \ word.include?(x)}\n    if vowels_idx == -1\n        return \"\"\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels.find{|x| word.include?(x)}\n    if\
    \ vowels_idx == -1\n        return \"\"\n    vowels_idx = vowels_idx + 1\n   \
    \ vowels_idx = vowels.find{|x| word.include?(x)}\n    if vowels_idx == -1\n  \
    \      return \"\"\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels.find{|x|\
    \ word.include?(x)}\n    if vowels_idx == -1\n        return \"\"\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels.find{|x| word.include?(x)}\n    if\
    \ vowels_idx == -1\n        return \"\"\n    vowels_idx = vowels_idx + 1\n   \
    \ vowels_idx = vowels.find{|x| word.include?(x)}\n    if vowels_idx == -1\n  \
    \      return \"\"\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels.find{|x|\
    \ word.include?(x)}\n    if vowels_idx == -1\n        return \"\"\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels.find{|x| word.include?(x)}\n    if\
    \ vowels_idx == -1\n        return \"\"\n    vowels_idx = vowels_idx + 1\n   \
    \ vowels_idx = vowels.find{|x| word.include?(x)}\n    if vowels_idx == -1\n  \
    \      return \"\"\n    vowels_idx = vowels_idx + 1\n    vowels_idx = vowels.find{|x|\
    \ word.include?(x)}\n    if vowels_idx == -1\n        return \"\"\n    vowels_idx\
    \ = vowels_idx + 1\n    vowels_idx = vowels.find{|x| word.include?(x)}\n    if\
    \ vowels_idx == -1\n        return \"\"\n    vowels_idx = ", "    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    vowels_count_left\
    \ = 0\n    vowels_count_right = 0\n    vowels_count_left_right = 0\n    vowels_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left = 0\n    vowels_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right = 0\n    vowels_count_left_right_count_left_right_count\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left = 0\n    vowels_count_left_right_count_left_right_count_right\
    \ = 0\n    vowels_count_left_right_count_left_right_count_left_right = 0\n   \
    \ vowels_count_left_right_count_left_right_count_left_right_count = 0\n    \n\
    \    for char in word:\n        if char in vowels:\n            vowels_count +=\
    \ 1\n        if char == \"a\":\n            vowels_count_left += 1\n        if\
    \ char == \"e\":\n            vowels_count_right += 1\n        if char == \"i\"\
    :\n            vowels_count_left_right += 1\n        if char == \"o\":\n     \
    \       vowels_count_left_right_count += 1\n        if char == \"u\":\n      \
    \      vowels_count_left_right_count_left += 1\n        if char == \"A\":\n  \
    \          vowels_count_left_right_count_right += 1\n        if char == \"E\"\
    :\n            vowels_count_left_right_count_left_right += 1\n        if char\
    \ == \"I\":\n            vowels_count_left_right_count_left_right_count += 1\n\
    \        if char == \"O\":\n            vowels_count_left_right_count_left_right_count_left\
    \ += 1\n        if char == \"U\":\n            vowels_count_left_right_count_left_right_count_right\
    \ += 1\n        if char == \"a\":\n            vowels_count_left_right_count_left_right_count_left\
    \ += 1\n        if char == \"e\":\n            vowels_count_left_right_count_left_right_count_right\
    \ += 1\n        if char == \"i\":\n            vowels_count_left_right_count_left_right_count_left_right\
    \ += 1\n        if char == \"o\":\n            vowels_count_left_right_count_left_right_count_left_right_count\
    \ += 1\n        if char == \"u\":\n            vowels_count_left_right_count_left_right_count_left_right_count_left\
    \ += 1\n    \n    if vowels_count == 0:\n        return \"\"\n    if vowels_count_left\
    \ == 0:\n        return \"\"\n    if vowels_count_right == 0:\n        return\
    \ \"\"\n    if vowels_count_left_right == 0:\n        return \"\"\n    if vowels_count_left_right_count\
    \ == 0:\n        return \"\"\n    if vowels_count_left_right_count_left == 0:\n\
    \        return \"\"\n    if vowels_count_left_right_count_right == 0:\n     \
    \   return \"\"\n    if vowels_count_left_right_count_left_right == 0:\n     \
    \   return ", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n\
    \    if vowels_idx.length == 0\n        return \"\"\n    vowels_idx = vowels_idx[end]\n\
    \    vowels_idx = vowels_idx[end - 1]\n    vowels_idx = vowels_idx[end - 2]\n\
    \    vowels_idx = vowels_idx[end - 3]\n    vowels_idx = vowels_idx[end - 4]\n\
    \    vowels_idx = vowels_idx[end - 5]\n    vowels_idx = vowels_idx[end - 6]\n\
    \    vowels_idx = vowels_idx[end - 7]\n    vowels_idx = vowels_idx[end - 8]\n\
    \    vowels_idx = vowels_idx[end - 9]\n    vowels_idx = vowels_idx[end - 10]\n\
    \    vowels_idx = vowels_idx[end - 11]\n    vowels_idx = vowels_idx[end - 12]\n\
    \    vowels_idx = vowels_idx[end - 13]\n    vowels_idx = vowels_idx[end - 14]\n\
    \    vowels_idx = vowels_idx[end - 15]\n    vowels_idx = vowels_idx[end - 16]\n\
    \    vowels_idx = vowels_idx[end - 17]\n    vowels_idx = vowels_idx[end - 18]\n\
    \    vowels_idx = vowels_idx[end - 19]\n    vowels_idx = vowels_idx[end - 20]\n\
    \    vowels_idx = vowels_idx[end - 21]\n    vowels_idx = vowels_idx[end - 22]\n\
    \    vowels_idx = vowels_idx[end - 23]\n    vowels_idx = vowels_idx[end - 24]\n\
    \    vowels_idx = vowels_idx[end - 25]\n    vowels_idx = vowels_idx[end - 26]\n\
    \    vowels_idx = vowels_idx[end - 27]\n    vowels_idx = vowels_idx[end - 28]\n\
    \    vowels_idx = vowels_idx[end - 29]\n    vowels_idx = vowels_idx[end - 30]\n\
    \    vowels_idx = vowels_idx[end - 31]\n    vowels_idx = vowels_idx[end - 32]\n\
    \    vowels_idx = vowels_idx[end - 33]\n    vowels_idx = vowels_idx[end - 34]\n\
    \    vowels_idx = vowels_idx[end - 35]\n    vowels_idx = vowels_idx[end - 36]\n\
    \    vowels_idx = vowels_idx[end - 37]\n    vowels_idx = vowels_idx[end - 38]\n\
    \    vowels_idx = vowels_idx[end - 39]\n    vowels_idx = vowels_idx[end - 40]\n\
    \    vowels_", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count\
    \ = length(vowels)\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    ",
  "    vowels = \"aeiouAEIOU\"\n    \n    vowels_idx = find(vowels, word)\n    \n\
    \    if vowels_idx < length(word)\n        word = word[vowels_idx..end]\n    \
    \    \n        vowels_idx = find(vowels, word)\n        \n        if vowels_idx\
    \ < length(word)\n            word = word[vowels_idx..end]\n            \n   \
    \         vowels_idx = find(vowels, word)\n            \n            if vowels_idx\
    \ < length(word)\n                word = word[vowels_idx..end]\n             \
    \   \n                vowels_idx = find(vowels, word)\n                \n    \
    \            if vowels_idx < length(word)\n                    word = word[vowels_idx..end]\n\
    \                    \n                    vowels_idx = find(vowels, word)\n \
    \                   \n                    if vowels_idx < length(word)\n     \
    \                   word = word[vowels_idx..end]\n                        \n \
    \                       vowels_idx = find(vowels, word)\n                    \
    \    \n                        if vowels_idx < length(word)\n                \
    \            word = word[vowels_idx..end]\n                            \n    \
    \                        vowels_idx = find(vowels, word)\n                   \
    \         \n                            if vowels_idx < length(word)\n       \
    \                         word = word[vowels_idx..end]\n                     \
    \           \n                                vowels_idx = find(vowels, word)\n\
    \                                \n                                if vowels_idx\
    \ < length(word)\n                                    word = word[vowels_idx..end]\n\
    \                                    \n                                    vowels_idx\
    \ = find(vowels, word)\n                                    \n               \
    \                     if vowels_idx < length(word)\n                         \
    \               word = word[vowels_idx..end]\n                               \
    \         \n                                        vowels_idx = find(vowels,\
    \ word)\n                                        \n                          \
    \              if vowels_idx < length(word)\n                                \
    \            word = word[vowels_idx..end]\n                                  \
    \          \n                                            vowels_idx = find(vowels,\
    \ word)\n                                            \n                      \
    \                      if vowels_idx < length(word)\n                        \
    \                        word = word[vowels_idx..end]\n                      \
    \                          \n                                                vowels_idx\
    \ = find(vowels, word)\n                                                \n   \
    \                                             if vowels_idx < length(word)\n \
    \                                                   word = word[vowels_idx..end]\n\
    \                                                    \n                      \
    \                              vowels_idx = find(vowels, word)\n             \
    \                                       \n                                   \
    \                 if vowels_idx < length(word)\n                             \
    \                           word = word[vowels_idx..end]\n                   \
    \                                     \n                                     \
    \                   vowels_idx = find(vowels, word)\n                        \
    \                                \n                                          \
    \              if vowels_idx < length(word)\n                                \
    \                            word = word[vowels_idx..end]\n                  \
    \                                          \n                                \
    \                            vowels_idx = find(vowels, word)\n               \
    \                                             \n                             \
    \                               if vowels_idx < length(word)\n               \
    \                                                 word = word[vowels_idx..end]\n\
    \                                                                \n          \
    \                                                      vowels_idx = find(vowels,\
    \ word)\n                                                                \n  \
    \                                                              if vowels_idx <\
    \ length(word)\n                                                             \
    \       word = word[vowels_idx..end]\n                                       \
    \                             \n                                             \
    \                       vowels_idx = find(vowels, word)\n", "    vowels = \"aeiouAEIOU\"\
    \n    vowels_idx = vowels.findLastIndex(word[end])\n    if vowels_idx == -1 \n\
    \        return \"\"\n    \n    vowels_idx = vowels_idx + 1\n    \n    if vowels[vowels_idx]\
    \ == word[end]\n        return word[end]\n    \n    if vowels[vowels_idx] == word[end\
    \ - 1]\n        return word[end - 1]\n    \n    if vowels[vowels_idx] == word[end\
    \ - 2]\n        return word[end - 2]\n    \n    if vowels[vowels_idx] == word[end\
    \ - 3]\n        return word[end - 3]\n    \n    return \"\"\nend\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    get_closest_vowel(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nget_closest_vowel(\"abracadabra\")\n</cell>\n", " \
    \   vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count = 0\n    vowels_count\
    \ = 0\n    vowels_count = 0\n    vowels_", "    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    vowels_count = count(vowels)\n    vowels_count = vowels_count\
    \ - 2\n    vowels_count = vowels_count if vowels_count > 0 else 0\n    vowels_count\
    \ = vowels_count if vowels_count < len(vowels) else len(vowels)\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count if vowels_count > 0 else\
    \ 0\n    vowels_count = vowels_count if vowels_count < len(vowels) else len(vowels)\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count if vowels_count\
    \ > 0 else 0\n    vowels_count = vowels_count if vowels_count < len(vowels) else\
    \ len(vowels)\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ if vowels_count > 0 else 0\n    vowels_count = vowels_count if vowels_count\
    \ < len(vowels) else len(vowels)\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count if vowels_count > 0 else 0\n    vowels_count = vowels_count if\
    \ vowels_count < len(vowels) else len(vowels)\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count if vowels_count > 0 else 0\n    vowels_count\
    \ = vowels_count if vowels_count < len(vowels) else len(vowels)\n    vowels_count\
    \ = vowels_count - 1\n    vowels_count = vowels_count if vowels_count > 0 else\
    \ 0\n    vowels_count = vowels_count if vowels_count < len(vowels) else len(vowels)\n\
    \    vowels_count = vowels_count - 1\n    vowels_count = vowels_count if vowels_count\
    \ > 0 else 0\n    vowels_count = vowels_count if vowels_count < len(vowels) else\
    \ len(vowels)\n    vowels_count = vowels_count - 1\n    vowels_count = vowels_count\
    \ if vowels_count > 0 else 0\n    vowels_count = vowels_count if vowels_count\
    \ < len(vowels) else len(vowels)\n    vowels_count = vowels_count - 1\n    vowels_count\
    \ = vowels_count if vowels_count > 0 else 0\n    vowels_count = vowels_count if\
    \ vowels_count < len(vowels) else len(vowels)\n    vowels_count = vowels_count\
    \ - 1\n    vowels_count = vowels_count if vowels_count > 0 else 0\n    vowels_count\
    \ = vowels_count if vowels_count < len(vowels) else len(vowels)\n    vowels_count\
    \ = vowels_", "    vowels = \"aeiouAEIOU\"\n    vowels_idx = findall(vowels, word)\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = unique(vowels_idx)\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx =\
    \ sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx = vowels_idx[1..end]\n\
    \    vowels_idx = vowels_idx[1..end]\n    vowels_idx = sort(vowels_idx)\n    vowels_idx\
    \ = vowels_idx[1..end]\n    vowels_idx = vowels_idx[1..end]\n    "]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_62_derivative
results:
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzsitq4pu.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzsitq4pu.jl:1\n\
    in expression starting at /tmp/tmpzsitq4pu.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzsitq4pu.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzsitq4pu.jl:1\n\
    in expression starting at /tmp/tmpzsitq4pu.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs)) \n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx_znnlpt.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx_znnlpt.jl:1\n\
    in expression starting at /tmp/tmpx_znnlpt.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i in 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2c9asvbo.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp2c9asvbo.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp2c9asvbo.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2c9asvbo.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2c9asvbo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2c9asvbo.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp2c9asvbo.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2c9asvbo.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i in 2:length(xs)-1\n        derivative[i] = xs[i] - xs[i-1] *\
    \ derivative[i-1]\n    end\n    \n    return derivative\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp4_uxp5sz.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp4_uxp5sz.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -8, 10, -16] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_uxp5sz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_uxp5sz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4_uxp5sz.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4_uxp5sz.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_uxp5sz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4_uxp5sz.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -7] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4_uxp5sz.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_uxp5sz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4_uxp5sz.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -7, 15, -15] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_uxp5sz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_uxp5sz.jl:21\ntest set: Error\
    \ During Test at /tmp/tmp4_uxp5sz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1]) == Vector{Int64}([])\n  Boun"
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)-1\n        derivative[i] = xs[i] - xs[i-1]\n \
    \   end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpwlixg7gw.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpwlixg7gw.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 1, 2] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwlixg7gw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlixg7gw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwlixg7gw.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwlixg7gw.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlixg7gw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwlixg7gw.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwlixg7gw.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlixg7gw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwlixg7gw.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, -1, -1] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwlixg7gw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlixg7gw.jl:21\ntest set: Error\
    \ During Test at /tmp/tmpwlixg7gw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1]) == Vector{Int64}([])\n  BoundsEr"
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i = 1:length(xs)-1\n\
    \        derivative[i] = xs[i+1] - xs[i] * xs[i+1]\n    end\n    \n    return\
    \ derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpquhvt6ra.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpquhvt6ra.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 0, -4, -15] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [0, -3] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-4, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-4, -1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i]\n    end\n    \n\
    \    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpormkosro.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpormkosro.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 1, 2, 4, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpormkosro.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpormkosro.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpormkosro.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 3] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpormkosro.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpormkosro.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpormkosro.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 2, 1] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpormkosro.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpormkosro.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpormkosro.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 2, 1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpormkosro.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpormkosro.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpormkosro.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\nSta"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    deriv = zeros(length(xs))\n    \n    deriv[1] = xs[1]\n    deriv[2]\
    \ = xs[2]\n    \n    for i in 3:length(xs)\n        deriv[i] = xs[i]\n    end\n\
    \    \n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp1oy371mz.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp1oy371mz.jl:23\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 1, 2, 4, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1oy371mz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1oy371mz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1oy371mz.jl:24\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 3] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1oy371mz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1oy371mz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1oy371mz.jl:25\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 2, 1] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1oy371mz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1oy371mz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1oy371mz.jl:26\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 2, 1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1oy371mz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1oy371mz.jl:22\ntest set: Error\
    \ During Test at /tmp/tmp1oy371mz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1]) == Vector{Int64}([])\n  B"
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    for i in\
    \ 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n    end\n   \
    \ return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy8mt_vif.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpy8mt_vif.jl:18\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8mt_vif.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8mt_vif.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy8mt_vif.jl:19\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8mt_vif.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8mt_vif.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy8mt_vif.jl:20\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8mt_vif.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8mt_vif.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy8mt_vif.jl:21\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8mt_vif.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8mt_vif.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy8mt_vif.jl:22\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzsitq4pu.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzsitq4pu.jl:1\n\
    in expression starting at /tmp/tmpzsitq4pu.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp22_rm5s3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp22_rm5s3.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzsitq4pu.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzsitq4pu.jl:1\n\
    in expression starting at /tmp/tmpzsitq4pu.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzsitq4pu.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzsitq4pu.jl:1\n\
    in expression starting at /tmp/tmpzsitq4pu.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i = 1:length(xs)-1\n\
    \        derivative[i] = xs[i+1] - xs[i] * xs[i+1]\n    end\n    \n    return\
    \ derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpquhvt6ra.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpquhvt6ra.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 0, -4, -15] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [0, -3] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-4, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-4, -1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1] \n    derivative[2]\
    \ = xs[2] * xs[1] \n    derivative[3] = xs[3] * xs[2] * xs[1] \n    derivative[4]\
    \ = xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[5] = xs[5] * xs[4] * xs[3]\
    \ * xs[2] * xs[1] \n    derivative[6] = xs[6] * xs[5] * xs[4] * xs[3] * xs[2]\
    \ * xs[1] \n    derivative[7] = xs[7] * xs[6] * xs[5] * xs[4] * xs[3] * xs[2]\
    \ * xs[1] \n    derivative[8] = xs[8] * xs[7] * xs[6] * xs[5] * xs[4] * xs[3]\
    \ * xs[2] * xs[1] \n    derivative[9] = xs[9] * xs[8] * xs[7] * xs[6] * xs[5]\
    \ * xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[10] = xs[10] * xs[9] * xs[8]\
    \ * xs[7] * xs[6] * xs[5] * xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[11]\
    \ = xs[11] * xs[10] * xs[9] * xs[8] * xs[7] * xs[6] * xs[5] * xs[4] * xs[3] *\
    \ xs[2] * xs[1] \n    derivative[12] = xs[12] * xs[11] * xs[10] * xs[9] * xs[8]\
    \ * xs[7] * xs[6] * xs[5] * xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[13]\
    \ = xs[13] * xs[12] * xs[11] * xs[10] * xs[9] * xs[8] * xs[7] * xs[6] * xs[5]\
    \ * xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[14] = xs[14] * xs[13] * xs[12]\
    \ * xs[11] * xs[10] * xs[9] * xs[8] * xs[7] * xs[6] * xs[5] * xs[4] * xs[3] *\
    \ xs[2] * xs[1] \n    derivative[15] = xs[15] * xs[14] * xs[13] * xs[12] * xs[11]\
    \ * xs[10] * xs[9] * xs[8] * xs[7] * xs[6] * xs[5] * xs[4]\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl29lfxsw.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl29lfxsw.jl:1\n\
    in expression starting at /tmp/tmpl29lfxsw.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp22_rm5s3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp22_rm5s3.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    for i in\
    \ 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n    end\n   \
    \ return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy8mt_vif.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpy8mt_vif.jl:18\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8mt_vif.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8mt_vif.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy8mt_vif.jl:19\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8mt_vif.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8mt_vif.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy8mt_vif.jl:20\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8mt_vif.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8mt_vif.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy8mt_vif.jl:21\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8mt_vif.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8mt_vif.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy8mt_vif.jl:22\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i = 2:length(xs)\n\
    \        derivative[i-1] = xs[i] - xs[i-1]\n    end\n    \n    return derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl94ok61r.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpl94ok61r.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 1, 2, 1] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl94ok61r.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl94ok61r.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl94ok61r.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl94ok61r.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl94ok61r.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl94ok61r.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-1, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl94ok61r.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl94ok61r.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl94ok61r.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-1, -1, -1, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl94ok61r.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl94ok61r.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzsitq4pu.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzsitq4pu.jl:1\n\
    in expression starting at /tmp/tmpzsitq4pu.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprhdyh5qa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprhdyh5qa.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprhdyh5qa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprhdyh5qa.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i = 1:length(xs)-1\n\
    \        derivative[i] = xs[i+1] - xs[i] * xs[i+1]\n    end\n    \n    return\
    \ derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpquhvt6ra.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpquhvt6ra.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 0, -4, -15] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [0, -3] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-4, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-4, -1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprhdyh5qa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprhdyh5qa.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)-1)\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1w5h5u2o.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1w5h5u2o.jl:1\n\
    in expression starting at /tmp/tmp1w5h5u2o.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i in 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2c9asvbo.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp2c9asvbo.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp2c9asvbo.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2c9asvbo.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2c9asvbo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2c9asvbo.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp2c9asvbo.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2c9asvbo.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)-1\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpysnc3ssw.jl:17\nin expression starting at\
    \ /tmp/tmpysnc3ssw.jl:17\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8tnz5e6y.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8tnz5e6y.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    deriv = zeros(length(xs)-1)\n    deriv[1] = xs[1]\n    for i in\
    \ 2:length(xs)\n        deriv[i] = xs[i] - deriv[i-1]\n    end\n    return deriv\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpd4ydl9c1.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpd4ydl9c1.jl:19\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  BoundsError: attempt\
    \ to access 4-element Vector{Float64} at index [5]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] derivative(xs::Vector{Int64})\n     @\
    \ Main /tmp/tmpd4ydl9c1.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd4ydl9c1.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd4ydl9c1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpd4ydl9c1.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpd4ydl9c1.jl:10\n  \
    \ [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd4ydl9c1.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd4ydl9c1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpd4ydl9c1.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 1]) == [2, 2]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpd4ydl9c1.jl:10\n  \
    \ [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd4ydl9c1.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd4ydl9c1.jl:18\ntest set:\
    \ Error Du"
  timestamp: 1659747799
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzsitq4pu.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzsitq4pu.jl:1\n\
    in expression starting at /tmp/tmpzsitq4pu.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8tnz5e6y.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8tnz5e6y.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8tnz5e6y.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8tnz5e6y.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    for i = 1:length(xs)\n\
    \        derivative[i] = xs[i]\n    end\n    \n    return derivative\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ewhe4i7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp0ewhe4i7.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 1, 2, 4, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 3] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 2, 1] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 2, 1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:24\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\nSta"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i in 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes in two vectors and returns\
    \ their dot product. \nThe dot product of two vectors $\\mathbf{x}$ and $\\mathbf{y}$\
    \ is defined as\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgc6jvanj.jl:12\nin expression starting at\
    \ /tmp/tmpgc6jvanj.jl:12\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    deriv = zeros(length(xs)-1)\n    \n    for i = 1:length(xs)-1\n\
    \        deriv[i] = xs[i+1] - xs[i] * xs[i+1]\n    end\n    \n    return deriv\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmkg__uyy.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpmkg__uyy.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 0, -4, -15] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmkg__uyy.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkg__uyy.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpmkg__uyy.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [0, -3] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmkg__uyy.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkg__uyy.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpmkg__uyy.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-4, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmkg__uyy.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkg__uyy.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpmkg__uyy.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-4, -1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmkg__uyy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkg__uyy.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzsitq4pu.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzsitq4pu.jl:1\n\
    in expression starting at /tmp/tmpzsitq4pu.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i = 1:length(xs)-1\n\
    \        derivative[i] = xs[i+1] - xs[i] * xs[i+1]\n    end\n    \n    return\
    \ derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpquhvt6ra.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpquhvt6ra.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 0, -4, -15] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [0, -3] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-4, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-4, -1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)-1)\n    derivative[1] = xs[1]\n    for i\
    \ in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n    end\n\
    \    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmps0pw0id_.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmps0pw0id_.jl:18\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  BoundsError: attempt\
    \ to access 4-element Vector{Float64} at index [5]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] derivative(xs::Vector{Int64})\n     @\
    \ Main /tmp/tmps0pw0id_.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps0pw0id_.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps0pw0id_.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps0pw0id_.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmps0pw0id_.jl:9\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps0pw0id_.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps0pw0id_.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps0pw0id_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 1]) == [2, 2]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmps0pw0id_.jl:9\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps0pw0id_.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps0pw0id_.jl:17\ntest set:\
    \ Error Durin"
  timestamp: 1659747801
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprhdyh5qa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprhdyh5qa.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    for i = 1:length(xs)\n\
    \        derivative[i] = xs[i]\n    end\n    \n    return derivative\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ewhe4i7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp0ewhe4i7.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 1, 2, 4, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 3] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 2, 1] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 2, 1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:24\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\nSta"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprhdyh5qa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprhdyh5qa.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwvpuutdh.jl:17\nin expression starting at\
    \ /tmp/tmpwvpuutdh.jl:17\n"
  stdout: ''
  timestamp: 1659747799
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    derivative[1] = xs[1]\n  \
    \  \n    for i = 2:length(xs)-1\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpsyum4bej.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpsyum4bej.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsyum4bej.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsyum4bej.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsyum4bej.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsyum4bej.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsyum4bej.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsyum4bej.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsyum4bej.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsyum4bej.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsyum4bej.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsyum4bej.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsyum4bej.jl:20\ntest set: Error\
    \ During Test at /tmp/tmpsyum4bej.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1]) == Vector{Int64}([])\n  BoundsErr"
  timestamp: 1659747801
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp22_rm5s3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp22_rm5s3.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs)) \n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx_znnlpt.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx_znnlpt.jl:1\n\
    in expression starting at /tmp/tmpx_znnlpt.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    for i in\
    \ 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n    end\n   \
    \ return derivative\nend\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpakdeh67d.jl:13\nin expression starting at\
    \ /tmp/tmpakdeh67d.jl:13\n"
  stdout: ''
  timestamp: 1659747799
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1] \n    derivative[2]\
    \ = xs[2] * xs[1] \n    derivative[3] = xs[3] * xs[2] * xs[1] \n    derivative[4]\
    \ = xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[5] = xs[5] * xs[4] * xs[3]\
    \ * xs[2] * xs[1] \n    derivative[6] = xs[6] * xs[5] * xs[4] * xs[3] * xs[2]\
    \ * xs[1] \n    derivative[7] = xs[7] * xs[6] * xs[5] * xs[4] * xs[3] * xs[2]\
    \ * xs[1] \n    derivative[8] = xs[8] * xs[7] * xs[6] * xs[5] * xs[4] * xs[3]\
    \ * xs[2] * xs[1] \n    derivative[9] = xs[9] * xs[8] * xs[7] * xs[6] * xs[5]\
    \ * xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[10] = xs[10] * xs[9] * xs[8]\
    \ * xs[7] * xs[6] * xs[5] * xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[11]\
    \ = xs[11] * xs[10] * xs[9] * xs[8] * xs[7] * xs[6] * xs[5] * xs[4] * xs[3] *\
    \ xs[2] * xs[1] \n    derivative[12] = xs[12] * xs[11] * xs[10] * xs[9] * xs[8]\
    \ * xs[7] * xs[6] * xs[5] * xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[13]\
    \ = xs[13] * xs[12] * xs[11] * xs[10] * xs[9] * xs[8] * xs[7] * xs[6] * xs[5]\
    \ * xs[4] * xs[3] * xs[2] * xs[1] \n    derivative[14] = xs[14] * xs[13] * xs[12]\
    \ * xs[11] * xs[10] * xs[9] * xs[8] * xs[7] * xs[6] * xs[5] * xs[4] * xs[3] *\
    \ xs[2] * xs[1] \n    derivative[15] = xs[15] * xs[14] * xs[13] * xs[12] * xs[11]\
    \ * xs[10] * xs[9] * xs[8] * xs[7] * xs[6] * xs[5] * xs[4]\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl29lfxsw.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl29lfxsw.jl:1\n\
    in expression starting at /tmp/tmpl29lfxsw.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i in 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyu2px7c5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyu2px7c5.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyu2px7c5.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyu2px7c5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyu2px7c5.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyu2px7c5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyu2px7c5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyu2px7c5.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyu2px7c5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyu2px7c5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyu2px7c5.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyu2px7c5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyu2px7c5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyu2px7c5.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)-1)\n    derivative[1] = xs[1]\n    for i\
    \ in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n    end\n\
    \    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmps0pw0id_.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmps0pw0id_.jl:18\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  BoundsError: attempt\
    \ to access 4-element Vector{Float64} at index [5]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] derivative(xs::Vector{Int64})\n     @\
    \ Main /tmp/tmps0pw0id_.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps0pw0id_.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps0pw0id_.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps0pw0id_.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmps0pw0id_.jl:9\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps0pw0id_.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps0pw0id_.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps0pw0id_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 1]) == [2, 2]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmps0pw0id_.jl:9\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps0pw0id_.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps0pw0id_.jl:17\ntest set:\
    \ Error Durin"
  timestamp: 1659747801
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp22_rm5s3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp22_rm5s3.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp22_rm5s3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp22_rm5s3.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<text>\nExercise 2\nWrite a function that calculates\
    \ the derivative of a polynomial given its coefficients.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfumabw9r.jl:17\nin expression starting at\
    \ /tmp/tmpfumabw9r.jl:17\n"
  stdout: ''
  timestamp: 1659747799
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8tnz5e6y.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8tnz5e6y.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp22_rm5s3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp22_rm5s3.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i = 1:length(xs)-1\n\
    \        derivative[i] = xs[i+1] - xs[i] * xs[i+1]\n    end\n    \n    return\
    \ derivative\nend\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    derivative([1,2,3])\n</cell>\n<code language=julia-1.5>\nderivative([1,2,3])\n\
    </cell>\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcogmc0nb.jl:15\nin expression starting at\
    \ /tmp/tmpcogmc0nb.jl:15\n"
  stdout: ''
  timestamp: 1659747799
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp21a7t3u1.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp21a7t3u1.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21a7t3u1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21a7t3u1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21a7t3u1.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21a7t3u1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21a7t3u1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21a7t3u1.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21a7t3u1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21a7t3u1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21a7t3u1.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21a7t3u1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21a7t3u1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21a7t3u1.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747801
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    for i = 1:length(xs)\n\
    \        derivative[i] = xs[i]\n    end\n    \n    return derivative\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ewhe4i7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp0ewhe4i7.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 1, 2, 4, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 3] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 2, 1] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 2, 1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:24\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\nSta"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprhdyh5qa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprhdyh5qa.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i in 1:(length(xs)-1)\n\
    \        derivative[i] = xs[i+1] - xs[i]\n    end\n    \n    return derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1j4f32nu.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp1j4f32nu.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 1, 2, 1] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1j4f32nu.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1j4f32nu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp1j4f32nu.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1j4f32nu.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1j4f32nu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp1j4f32nu.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-1, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1j4f32nu.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1j4f32nu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp1j4f32nu.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-1, -1, -1, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1j4f32nu.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1j4f32nu.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747801
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] =\
    \ xs[2]\n    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n  \
    \  deriv[6] = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9]\
    \ = xs[9]\n    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n\
    \    deriv[13] = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16]\
    \ = xs[16]\n    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n\
    \    deriv[20] = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23]\
    \ = xs[23]\n    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n\
    \    deriv[27] = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30]\
    \ = xs[30]\n    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n\
    \    deriv[34] = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37]\
    \ = xs[37]\n    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n\
    \    deriv[41] = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44]\
    \ = xs[44]\n    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n\
    \    deriv[48] = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51]\
    \ = xs[51]\n    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54\n\
    using Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoaryhs29.jl:1\nin expression starting at /tmp/tmpoaryhs29.jl:1\n"
  stdout: ''
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    deriv = zeros(length(xs)) \n    deriv[1] = xs[1]\n    deriv[2] =\
    \ xs[2]\n    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n  \
    \  deriv[6] = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9]\
    \ = xs[9]\n    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n\
    \    deriv[13] = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16]\
    \ = xs[16]\n    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n\
    \    deriv[20] = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23]\
    \ = xs[23]\n    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n\
    \    deriv[27] = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30]\
    \ = xs[30]\n    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n\
    \    deriv[34] = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37]\
    \ = xs[37]\n    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n\
    \    deriv[41] = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44]\
    \ = xs[44]\n    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n\
    \    deriv[48] = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51]\
    \ = xs[51]\n    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[\n\
    using Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn_mashrz.jl:1\nin expression starting at /tmp/tmpn_mashrz.jl:1\n"
  stdout: ''
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs)) \n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx_znnlpt.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx_znnlpt.jl:1\n\
    in expression starting at /tmp/tmpx_znnlpt.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i in 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2c9asvbo.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp2c9asvbo.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp2c9asvbo.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2c9asvbo.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2c9asvbo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2c9asvbo.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp2c9asvbo.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2c9asvbo.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    for i = 1:length(xs)\n\
    \        derivative[i] = xs[i]\n    end\n    \n    return derivative\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ewhe4i7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp0ewhe4i7.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 1, 2, 4, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 3] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 2, 1] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 2, 1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:24\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\nSta"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    for i = 1:length(xs)\n\
    \        derivative[i] = xs[i]\n    end\n    \n    return derivative\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ewhe4i7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp0ewhe4i7.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 1, 2, 4, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 3] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 2, 1] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 2, 1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:24\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\nSta"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i = 2:length(xs)\n\
    \        derivative[i-1] = xs[i] - xs[i-1]\n    end\n    \n    return derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl94ok61r.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpl94ok61r.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 1, 2, 1] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl94ok61r.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl94ok61r.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl94ok61r.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl94ok61r.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl94ok61r.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl94ok61r.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-1, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl94ok61r.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl94ok61r.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl94ok61r.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-1, -1, -1, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl94ok61r.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl94ok61r.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp21a7t3u1.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp21a7t3u1.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21a7t3u1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21a7t3u1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21a7t3u1.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21a7t3u1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21a7t3u1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21a7t3u1.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21a7t3u1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21a7t3u1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21a7t3u1.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21a7t3u1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21a7t3u1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21a7t3u1.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747801
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - xs[i-1]\n   \
    \ end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmplbu_o41x.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmplbu_o41x.jl:22\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  BoundsError: attempt\
    \ to access 4-element Vector{Float64} at index [5]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] derivative(xs::Vector{Int64})\n     @\
    \ Main /tmp/tmplbu_o41x.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmplbu_o41x.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmplbu_o41x.jl:21\ntest set:\
    \ Error During Test at /tmp/tmplbu_o41x.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmplbu_o41x.jl:12\n  \
    \ [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmplbu_o41x.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmplbu_o41x.jl:21\ntest set:\
    \ Error During Test at /tmp/tmplbu_o41x.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 1]) == [2, 2]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmplbu_o41x.jl:12\n  \
    \ [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmplbu_o41x.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmplbu_o41x.jl:21\ntest set:\
    \ Error Du"
  timestamp: 1659747802
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8tnz5e6y.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8tnz5e6y.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprhdyh5qa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprhdyh5qa.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    for i = 1:length(xs)\n\
    \        derivative[i] = xs[i]\n    end\n    \n    return derivative\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ewhe4i7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp0ewhe4i7.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 1, 2, 4, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 3] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 2, 1] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 2, 1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ewhe4i7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ewhe4i7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0ewhe4i7.jl:24\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\nSta"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] * derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp22_rm5s3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp22_rm5s3.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 3, 6, 24, 120] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 6] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 6, 6] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 6, 6, 0, 0] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22_rm5s3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22_rm5s3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp22_rm5s3.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i = 1:length(xs)-1\n\
    \        derivative[i] = xs[i+1] - xs[i] * xs[i+1]\n    end\n    \n    return\
    \ derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpquhvt6ra.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpquhvt6ra.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 0, -4, -15] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [0, -3] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-4, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-4, -1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgogsmctl.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpgogsmctl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgogsmctl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgogsmctl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpgogsmctl.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)) \n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprhdyh5qa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprhdyh5qa.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhdyh5qa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhdyh5qa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprhdyh5qa.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs)-1)\n    \n    for i = 1:length(xs)-1\n\
    \        derivative[i] = xs[i+1] - xs[i] * xs[i+1]\n    end\n    \n    return\
    \ derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpquhvt6ra.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpquhvt6ra.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [-2, 0, -4, -15] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:21\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [0, -3] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:22\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [-4, -1] == [2, 2]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpquhvt6ra.jl:23\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [-4, -1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquhvt6ra.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquhvt6ra.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i = 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpu68osbch.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpu68osbch.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu68osbch.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu68osbch.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmpu68osbch.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu68osbch.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i = 2:length(xs)\n        derivative[i] = xs[i]\n    end\n    \n\
    \    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpormkosro.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpormkosro.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 1, 2, 4, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpormkosro.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpormkosro.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpormkosro.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 2, 3] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpormkosro.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpormkosro.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpormkosro.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 2, 1] == [2, 2]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpormkosro.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpormkosro.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpormkosro.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 2, 1, 0, 4] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpormkosro.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpormkosro.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpormkosro.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]\nSta"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8tnz5e6y.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8tnz5e6y.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs)) \n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx_znnlpt.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx_znnlpt.jl:1\n\
    in expression starting at /tmp/tmpx_znnlpt.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = xs[1]\n    for i in 2:length(xs)\n        deriv += xs[i] * deriv\n\
    \    end\n    return deriv\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2c9asvbo.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp2c9asvbo.jl:17\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp2c9asvbo.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2c9asvbo.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2c9asvbo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2c9asvbo.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type Vector{Int64}\n  Closest candidates are:\n \
    \   convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmp2c9asvbo.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2c9asvbo.jl:18 ["
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] = xs[2]\n\
    \    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n    deriv[6]\
    \ = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9] = xs[9]\n\
    \    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n    deriv[13]\
    \ = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16] = xs[16]\n\
    \    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n    deriv[20]\
    \ = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23] = xs[23]\n\
    \    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n    deriv[27]\
    \ = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30] = xs[30]\n\
    \    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n    deriv[34]\
    \ = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37] = xs[37]\n\
    \    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n    deriv[41]\
    \ = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44] = xs[44]\n\
    \    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n    deriv[48]\
    \ = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51] = xs[51]\n\
    \    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54]\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzsitq4pu.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzsitq4pu.jl:1\n\
    in expression starting at /tmp/tmpzsitq4pu.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    derivative = zeros(length(xs))\n    \n    derivative[1] = xs[1]\n\
    \    \n    for i in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n\
    \    end\n    \n    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8tnz5e6y.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8tnz5e6y.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, -2, 4, 0, 5] == [1, 4, 12,\
    \ 20]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 1, 2] == [2, 6]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, -1, 2] == [2, 2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, -1, 2, -2, 6] == [2, 2, 0, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8tnz5e6y.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8tnz5e6y.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8tnz5e6y.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [1] == Int64[]"
  timestamp: 1659747798
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)) \n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpur5ubcr8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpur5ubcr8.jl:1\n\
    in expression starting at /tmp/tmpur5ubcr8.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    \n    deriv = zeros(length(xs))\n    deriv[1] = xs[1]\n    deriv[2] =\
    \ xs[2]\n    deriv[3] = xs[3]\n    deriv[4] = xs[4]\n    deriv[5] = xs[5]\n  \
    \  deriv[6] = xs[6]\n    deriv[7] = xs[7]\n    deriv[8] = xs[8]\n    deriv[9]\
    \ = xs[9]\n    deriv[10] = xs[10]\n    deriv[11] = xs[11]\n    deriv[12] = xs[12]\n\
    \    deriv[13] = xs[13]\n    deriv[14] = xs[14]\n    deriv[15] = xs[15]\n    deriv[16]\
    \ = xs[16]\n    deriv[17] = xs[17]\n    deriv[18] = xs[18]\n    deriv[19] = xs[19]\n\
    \    deriv[20] = xs[20]\n    deriv[21] = xs[21]\n    deriv[22] = xs[22]\n    deriv[23]\
    \ = xs[23]\n    deriv[24] = xs[24]\n    deriv[25] = xs[25]\n    deriv[26] = xs[26]\n\
    \    deriv[27] = xs[27]\n    deriv[28] = xs[28]\n    deriv[29] = xs[29]\n    deriv[30]\
    \ = xs[30]\n    deriv[31] = xs[31]\n    deriv[32] = xs[32]\n    deriv[33] = xs[33]\n\
    \    deriv[34] = xs[34]\n    deriv[35] = xs[35]\n    deriv[36] = xs[36]\n    deriv[37]\
    \ = xs[37]\n    deriv[38] = xs[38]\n    deriv[39] = xs[39]\n    deriv[40] = xs[40]\n\
    \    deriv[41] = xs[41]\n    deriv[42] = xs[42]\n    deriv[43] = xs[43]\n    deriv[44]\
    \ = xs[44]\n    deriv[45] = xs[45]\n    deriv[46] = xs[46]\n    deriv[47] = xs[47]\n\
    \    deriv[48] = xs[48]\n    deriv[49] = xs[49]\n    deriv[50] = xs[50]\n    deriv[51]\
    \ = xs[51]\n    deriv[52] = xs[52]\n    deriv[53] = xs[53]\n    deriv[54] = xs[54\n\
    using Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoaryhs29.jl:1\nin expression starting at /tmp/tmpoaryhs29.jl:1\n"
  stdout: ''
  timestamp: 1659747800
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs)-1)\n    derivative[1] = xs[1]\n    for i\
    \ in 2:length(xs)\n        derivative[i] = xs[i] - derivative[i-1]\n    end\n\
    \    return derivative\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmps0pw0id_.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmps0pw0id_.jl:18\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20]\n  BoundsError: attempt\
    \ to access 4-element Vector{Float64} at index [5]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] derivative(xs::Vector{Int64})\n     @\
    \ Main /tmp/tmps0pw0id_.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps0pw0id_.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps0pw0id_.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps0pw0id_.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3]) == [2, 6]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmps0pw0id_.jl:9\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps0pw0id_.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps0pw0id_.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps0pw0id_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 1]) == [2, 2]\n  BoundsError: attempt to access 2-element Vector{Float64}\
    \ at index [3]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] derivative(xs::Vector{Int64})\n     @ Main /tmp/tmps0pw0id_.jl:9\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps0pw0id_.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps0pw0id_.jl:17\ntest set:\
    \ Error Durin"
  timestamp: 1659747801
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797
- exit_code: 1
  program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n            \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    derivative = zeros(length(xs))\n    derivative[1] = xs[1]\n    derivative[2]\
    \ = xs[2]\n    derivative[3] = xs[3]\n    derivative[4] = xs[4]\n    derivative[5]\
    \ = xs[5]\n    derivative[6] = xs[6]\n    derivative[7] = xs[7]\n    derivative[8]\
    \ = xs[8]\n    derivative[9] = xs[9]\n    derivative[10] = xs[10]\n    derivative[11]\
    \ = xs[11]\n    derivative[12] = xs[12]\n    derivative[13] = xs[13]\n    derivative[14]\
    \ = xs[14]\n    derivative[15] = xs[15]\n    derivative[16] = xs[16]\n    derivative[17]\
    \ = xs[17]\n    derivative[18] = xs[18]\n    derivative[19] = xs[19]\n    derivative[20]\
    \ = xs[20]\n    derivative[21] = xs[21]\n    derivative[22] = xs[22]\n    derivative[23]\
    \ = xs[23]\n    derivative[24] = xs[24]\n    derivative[25] = xs[25]\n    derivative[26]\
    \ = xs[26]\n    derivative[27] = xs[27]\n    derivative[28] = xs[28]\n    derivative[29]\
    \ = xs[29]\n    derivative[30] = xs[30]\n    derivative[31] = xs[31]\n    derivative[32]\
    \ = xs[32]\n    derivative[33] = xs[33]\n    derivative[34] = xs[34]\n    derivative[35]\
    \ = xs[35]\n    derivative[36] = xs[36]\n    derivative[37] = xs[37]\n    derivative[38]\
    \ = xs[38]\n    derivative[39] = xs[39]\n    derivative[40] = xs[40]\n    derivative[41]\
    \ = xs[41]\n    derivative[42] = xs[42]\n    derivative[43] = xs[43]\n    derivative[44]\
    \ = xs[44]\n    derivative[45] = xs[45]\n    derivative[46] = xs[46]\n    derivative[47]\
    \ = xs[47]\n    derivative[48] = xs[48]\n    derivative[49] = xs[49]\n    derivative[50]\
    \ = xs[50]\n    derivative[51] = xs[51]\n    derivative[52] = xs[52]\n    derivative[53]\
    \ = xs[53]\n    derivative[54] = xs[54]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf51vyem.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf51vyem.jl:1\n\
    in expression starting at /tmp/tmpxf51vyem.jl:1\n"
  stdout: ''
  timestamp: 1659747797

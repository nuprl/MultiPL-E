language: jl
name: HumanEval_60_sum_to_n
results:
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqqfvcac2.jl:5\nin expression starting at /tmp/tmpqqfvcac2.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcmf2hlnn.jl:5\nin expression starting at /tmp/tmpcmf2hlnn.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdhnqtx2r.jl:5\nin expression starting at /tmp/tmpdhnqtx2r.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5wgcs5f7.jl:5\nin expression starting at /tmp/tmp5wgcs5f7.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg3o47ceq.jl:5\nin expression starting at /tmp/tmpg3o47ceq.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that sums numbers from 1 to n but stops when it reaches n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbbp1csvr.jl:5\nin expression starting at /tmp/tmpbbp1csvr.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5gkg355_.jl:5\nin expression starting at /tmp/tmp5gkg355_.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000001)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000002)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000003)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000004)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000005)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000006)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000007)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000008)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000009)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000010)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000011)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000012)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000013)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000014)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000015)\n</cell>\n<code language=julia-1.5>\n\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfkg4__4u.jl:5\nin expression starting at /tmp/tmpfkg4__4u.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9_oy5wii.jl:5\nin expression starting at /tmp/tmp9_oy5wii.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2c54e6vb.jl:5\nin expression starting at /tmp/tmp2c54e6vb.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy53f1u3d.jl:5\nin expression starting at /tmp/tmpy53f1u3d.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqvw0wzd0.jl:5\nin expression starting at /tmp/tmpqvw0wzd0.jl:5\n"
  stdout: ''
  timestamp: 1659746963
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq1et9ccr.jl:5\nin expression starting at /tmp/tmpq1et9ccr.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8vygl0_l.jl:5\nin expression starting at /tmp/tmp8vygl0_l.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10000000000000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100000000000000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10000000000000000)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100000000000000000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(10000000000000000000)\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(100000000000000000000)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(1000000000000000000000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(1000000000000000000000000)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10000000000000000000000000)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100000000000000000000000000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(10000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(\nusing Test\n\n@testset begin\n\n\
    candidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjnvricyq.jl:5\nin expression starting at /tmp/tmpjnvricyq.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that sums numbers from 1 to n and returns the sum.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpalyjw8l1.jl:5\nin expression starting at /tmp/tmpalyjw8l1.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplcor1svf.jl:5\nin expression starting at /tmp/tmplcor1svf.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n where n is given as a parameter. \nFor\
    \ example, sum_to_n(10) should return 55.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqpi4yhnb.jl:5\nin expression starting at /tmp/tmpqpi4yhnb.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ factorial of a given number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbty1u4g9.jl:5\nin expression starting at /tmp/tmpbty1u4g9.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n where n is given as an input argument.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxmy_3few.jl:5\nin expression starting at /tmp/tmpxmy_3few.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp01ljaufk.jl:5\nin expression starting at /tmp/tmp01ljaufk.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that sums numbers from 1 to n using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn7ziwwzc.jl:5\nin expression starting at /tmp/tmpn7ziwwzc.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe8d6p4hw.jl:5\nin expression starting at /tmp/tmpe8d6p4hw.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.3>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.3>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.3>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.3>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.3>\nsum_to_n(10000000000\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsznexa9v.jl:5\nin expression starting at /tmp/tmpsznexa9v.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa07zcwfp.jl:5\nin expression starting at /tmp/tmpa07zcwfp.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt9vpfcua.jl:5\nin expression starting at /tmp/tmpt9vpfcua.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nThe function above is\
    \ recursive, meaning that it calls itself to compute the next number. Let's see\
    \ how it works:\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3v6tfrm8.jl:5\nin expression starting at /tmp/tmp3v6tfrm8.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppw7nugd5.jl:5\nin expression starting at /tmp/tmppw7nugd5.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp82z4x0n4.jl:5\nin expression starting at /tmp/tmp82z4x0n4.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpven28i4r.jl:5\nin expression starting at /tmp/tmpven28i4r.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    sum_to_n_recursive(n::Int64)::Int64\n    \n    Recursive version of\
    \ sum_to_n\n    \n    Written by Antonio Ochi Hagi\n    \n    Sums numbers from\
    \ 1 to n\n    \n    Source: https://en.wikipedia.org/wiki/Recursion_(computer_science)\n\
    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcnxv57nh.jl:5\nin expression starting at /tmp/tmpcnxv57nh.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpulyyupkm.jl:5\nin expression starting at /tmp/tmpulyyupkm.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzpo3_obs.jl:5\nin expression starting at /tmp/tmpzpo3_obs.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<text>\nExercise 2\nWrite a function that sums numbers\
    \ from 1 to n inclusive.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm30fiihd.jl:5\nin expression starting at /tmp/tmpm30fiihd.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000017)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpabuobm54.jl:5\nin expression starting at /tmp/tmpabuobm54.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqvw0wzd0.jl:5\nin expression starting at /tmp/tmpqvw0wzd0.jl:5\n"
  stdout: ''
  timestamp: 1659746963
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf6voahv2.jl:5\nin expression starting at /tmp/tmpf6voahv2.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkyxjmzdw.jl:5\nin expression starting at /tmp/tmpkyxjmzdw.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nThe recursive function\
    \ sum_to_n is called a tail recursive function, which means that it can be easily\
    \ transformed into a loop. \nThe Julia compiler can optimize tail recursive functions\
    \ by converting them into loops. \nThe compiler will convert a tail recursive\
    \ function into a loop if it can prove that the function does not depend on the\
    \ previous values of the arguments. \nIn this case, sum_to_n does not depend on\
    \ the previous values of n. \nThe compiler can prove this by inlining the function\
    \ and removing the recursion. \nThe compiler will convert a tail recursive function\
    \ into a loop if it can prove that the function does not depend on the previous\
    \ values of the arguments. \nIn this case, sum_to_n does not depend on the previous\
    \ values of n. \nThe compiler can prove this by inlining the function and removing\
    \ the recursion. \nThe compiler will convert a tail recursive function into a\
    \ loop if it can prove that the function does not depend on the previous values\
    \ of the arguments. \nIn this case, sum_to_n does not depend on the previous values\
    \ of n. \nThe compiler can prove this by inlining the function and removing the\
    \ recursion. \nThe compiler will convert a tail recursive function into a loop\
    \ if it can prove that the function does not depend on the previous values of\
    \ the arguments. \nIn this case, sum_to_n does not depend on the previous values\
    \ of n. \nThe compiler can prove this by inlining the function and removing the\
    \ recursion. \nThe compiler will convert a tail recursive function into a loop\
    \ if it can prove that the function does not depend on the previous values of\
    \ the arguments. \nIn this case, sum_to_n does not depend on the previous values\
    \ of n. \nThe compiler can prove this by inlining the function and removing the\
    \ recursion. \nThe compiler will convert a tail recursive function into a loop\
    \ if it can prove that the function does not depend on the previous values of\
    \ the arguments. \nIn this case, sum_to_n does not depend on the previous values\
    \ of n. \nThe compiler can prove this by inlining the function and removing the\
    \ recursion. \nThe compiler will convert a tail recursive function into a loop\
    \ if it can prove that the function does not depend on the previous values of\
    \ the arguments. \nIn this case, sum_to_n does not depend on the previous values\
    \ of n. \nThe compiler can prove this by inlining the function and removing the\
    \ recursion. \nThe compiler will convert a tail recursive function into a loop\
    \ if it can prove that the function does not depend on the previous values of\
    \ the arguments. \nIn this case, sum_to_n does not depend on the previous values\
    \ of n. \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqy3ugji6.jl:5\nin expression starting at /tmp/tmpqy3ugji6.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n where n is given as an argument.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxcm1gnz4.jl:5\nin expression starting at /tmp/tmpxcm1gnz4.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp38aidprq.jl:5\nin expression starting at /tmp/tmp38aidprq.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfpuvp5zi.jl:5\nin expression starting at /tmp/tmpfpuvp5zi.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n - 1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl4v0inab.jl:5\nin expression starting at /tmp/tmpl4v0inab.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps_rseccq.jl:5\nin expression starting at /tmp/tmps_rseccq.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2bwnyofh.jl:5\nin expression starting at /tmp/tmp2bwnyofh.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000017)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9clijcyp.jl:5\nin expression starting at /tmp/tmp9clijcyp.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000000)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000001)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000002)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000003)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000004)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000005)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000006)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000007)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000008)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000009)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000010)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000011)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000012)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000013)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000014)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000015)\n</cell>\n<code language=julia-1.0>\n\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcgl0rgha.jl:5\nin expression starting at /tmp/tmpcgl0rgha.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe8d6p4hw.jl:5\nin expression starting at /tmp/tmpe8d6p4hw.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000001)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000004)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000007)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000010)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000013)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000016)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsa5scgtd.jl:5\nin expression starting at /tmp/tmpsa5scgtd.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n <= 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp8xom8vv.jl:5\nin expression starting at /tmp/tmpp8xom8vv.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0cek1vk6.jl:5\nin expression starting at /tmp/tmp0cek1vk6.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplcor1svf.jl:5\nin expression starting at /tmp/tmplcor1svf.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp880z87vj.jl:5\nin expression starting at /tmp/tmp880z87vj.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3ulmymhe.jl:5\nin expression starting at /tmp/tmp3ulmymhe.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxeiu8ca1.jl:5\nin expression starting at /tmp/tmpxeiu8ca1.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4h_oygc6.jl:5\nin expression starting at /tmp/tmp4h_oygc6.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nThe function sum_to_n\
    \ is recursive, meaning that it will call itself until it reaches the base case\
    \ where it returns 1.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9h3l8_oq.jl:5\nin expression starting at /tmp/tmp9h3l8_oq.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n <= 0\n\
    \        error(\"n must be positive\")\n    end\n    sum = 0\n    for i in 1:n\n\
    \        sum = sum + i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(0)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(1)\n</cell>\n<code language=julia-1.5>\nsum_to_n(2)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(3)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(4)\n</cell>\n<code language=julia-1.5>\nsum_to_n(5)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(6)\n</cell>\n<code language=julia-1.5>\nsum_to_n(7)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(8)\n</cell>\n<code language=julia-1.5>\nsum_to_n(9)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10)\n</cell>\n<code language=julia-1.5>\nsum_to_n(11)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(12)\n</cell>\n<code language=julia-1.5>\nsum_to_n(13)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(14)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(15)\n</cell>\n<code language=julia-1.5>\nsum_to_n(16)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(17)\n</cell>\n<code language=julia-1.5>\nsum_to_n(18)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(19)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(20)\n</cell>\n<code language=julia-1.5>\nsum_to_n(21)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(22)\n</cell>\n<code language=julia-1.5>\nsum_to_n(23)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(24)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(25)\n</cell>\n<code language=julia-1.5>\nsum_to_n(26)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(27)\n</cell>\n<code language=julia-1.5>\nsum_to_n(28)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(29)\n</cell>\n<code language=juli\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3odtz6so.jl:13\nin expression starting at\
    \ /tmp/tmp3odtz6so.jl:13\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nThe function sum_to_n\
    \ is recursive, meaning that it calls itself to compute the next number. Let's\
    \ see how it works:\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp50utqht9.jl:5\nin expression starting at /tmp/tmp50utqht9.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuxfep4tx.jl:5\nin expression starting at /tmp/tmpuxfep4tx.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprwssmdup.jl:5\nin expression starting at /tmp/tmprwssmdup.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvh4fc_co.jl:5\nin expression starting at /tmp/tmpvh4fc_co.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_4_hxqat.jl:5\nin expression starting at /tmp/tmp_4_hxqat.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<text>\nExercise\nWrite a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwohp3mri.jl:5\nin expression starting at /tmp/tmpwohp3mri.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n - 1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000017)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6qcyvn7t.jl:5\nin expression starting at /tmp/tmp6qcyvn7t.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptx2miz8n.jl:5\nin expression starting at /tmp/tmptx2miz8n.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100000000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(1000000000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000000000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100000000000000000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(\nusing Test\n\n@testset begin\n\n\
    candidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv4dwtu5u.jl:5\nin expression starting at /tmp/tmpv4dwtu5u.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyvdq6tf_.jl:5\nin expression starting at /tmp/tmpyvdq6tf_.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4qh9ik3g.jl:5\nin expression starting at /tmp/tmp4qh9ik3g.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n <= 0\n\
    \        error(\"n must be positive\")\n    else\n        sum_to_n_aux(n, 0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0e0z4vn7.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0e0z4vn7.jl:1\n\
    in expression starting at /tmp/tmp0e0z4vn7.jl:1\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an array of numbers and returns the sum of the squares of\
    \ the numbers.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9bd6844i.jl:5\nin expression starting at /tmp/tmp9bd6844i.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n but stops when the sum is greater than\
    \ n.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1v3oky6d.jl:5\nin expression starting at /tmp/tmp1v3oky6d.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nThe function sum_to_n\
    \ has type Int64 and is defined on line 3. The function body is indented with\
    \ 4 spaces. Julia allows us to write code in a more readable way by indenting\
    \ code with 4 spaces. Julia also allows us to write long lines with \\ to continue\
    \ the line on the next line. Julia also allows us to write long lines with \\\
    \ to continue the line on the next line and to write long lines with \\ to continue\
    \ the line on the next line and to write long lines with \\ to continue the line\
    \ on the next line and to write long lines with \\ to continue the line on the\
    \ next line and to write long lines with \\ to continue the line on the next line\
    \ and to write long lines with \\ to continue the line on the next line and to\
    \ write long lines with \\ to continue the line on the next line and to write\
    \ long lines with \\ to continue the line on the next line and to write long lines\
    \ with \\ to continue the line on the next line and to write long lines with \\\
    \ to continue the line on the next line and to write long lines with \\ to continue\
    \ the line on the next line and to write long lines with \\ to continue the line\
    \ on the next line and to write long lines with \\ to continue the line on the\
    \ next line and to write long lines with \\ to continue the line on the next line\
    \ and to write long lines with \\ to continue the line on the next line and to\
    \ write long lines with \\ to continue the line on the next line and to write\
    \ long lines with \\ to continue the line on the next line and to write long lines\
    \ with \\ to continue the line on the next line and to write long lines with \\\
    \ to continue the line on the next line and to write long lines with \\ to continue\
    \ the line on the next line and to write long lines with \\ to continue the line\
    \ on the next line and to write long lines with \\ to continue the line on the\
    \ next line and to write long lines with \\ to continue the line on the next line\
    \ and to write long lines with \\ to continue the line on the next line and to\
    \ write long lines with \\ to continue the line on the next line and to write\
    \ long lines with \\ to continue the line on the next line and to write long lines\
    \ with \\ to continue the line on the next line and to write long lines with \\\
    \ to continue the line on the next line and to write long lines with \\ to continue\
    \ the line on the next line and \nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp549aoil8.jl:5\nin expression starting at /tmp/tmp549aoil8.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg3o47ceq.jl:5\nin expression starting at /tmp/tmpg3o47ceq.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nThe function factorial\
    \ is a function that multiplies numbers from 1 to n.\n\"\"\"factorial is a function\
    \ that multiplies numbers from 1 to n.\n\"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8ccqj7gp.jl:5\nin expression starting at /tmp/tmp8ccqj7gp.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsi6e_wi6.jl:5\nin expression starting at /tmp/tmpsi6e_wi6.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nThe function\
    \ sum_to_n is recursive, meaning that it will call itself until it reaches some\
    \ base case. For example, if we call sum_to_n(10), it will call itself with n\
    \ = 9 and then with n = 8 and then with n = 7 and then with n = 6 and then with\
    \ n = 5 and then with n = 4 and then with n = 3 and then with n = 2 and finally\
    \ with n = 1 and then it will return 1 because n = 1 is the base case. In the\
    \ last case, the function will return n + sum_to_n(n - 1), which is n + sum_to_n(9),\
    \ which is n + sum_to_n(8) and so on. As you can see, this function is very similar\
    \ to the function sum_to_n(n::Int64)::Int64 defined earlier.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiiqqimfr.jl:5\nin expression starting at /tmp/tmpiiqqimfr.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxexampn9.jl:5\nin expression starting at /tmp/tmpxexampn9.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5wgcs5f7.jl:5\nin expression starting at /tmp/tmp5wgcs5f7.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe8d6p4hw.jl:5\nin expression starting at /tmp/tmpe8d6p4hw.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000017)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjcsoyehy.jl:5\nin expression starting at /tmp/tmpjcsoyehy.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgay_gttq.jl:5\nin expression starting at /tmp/tmpgay_gttq.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n where n is given as an input argument.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvg1ak5q2.jl:5\nin expression starting at /tmp/tmpvg1ak5q2.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000017)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjcsoyehy.jl:5\nin expression starting at /tmp/tmpjcsoyehy.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzpf8cdq4.jl:5\nin expression starting at /tmp/tmpzpf8cdq4.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5dyjr2j9.jl:5\nin expression starting at /tmp/tmp5dyjr2j9.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a given number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi541h76f.jl:5\nin expression starting at /tmp/tmpi541h76f.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxax4sunv.jl:5\nin expression starting at /tmp/tmpxax4sunv.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuxfep4tx.jl:5\nin expression starting at /tmp/tmpuxfep4tx.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbzmq4584.jl:5\nin expression starting at /tmp/tmpbzmq4584.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqqfvcac2.jl:5\nin expression starting at /tmp/tmpqqfvcac2.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplcor1svf.jl:5\nin expression starting at /tmp/tmplcor1svf.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<text>\nExercise: Write a function that returns the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoypzyifb.jl:5\nin expression starting at /tmp/tmpoypzyifb.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_p8q2gsj.jl:5\nin expression starting at /tmp/tmp_p8q2gsj.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqqfvcac2.jl:5\nin expression starting at /tmp/tmpqqfvcac2.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoih9s8fo.jl:5\nin expression starting at /tmp/tmpoih9s8fo.jl:5\n"
  stdout: ''
  timestamp: 1659746968
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that sums numbers from 1 to n but stops when it reaches n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpri6_t2fu.jl:5\nin expression starting at /tmp/tmpri6_t2fu.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpce0lon4z.jl:5\nin expression starting at /tmp/tmpce0lon4z.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n. \nThe function should take n as an argument.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptkelsay8.jl:5\nin expression starting at /tmp/tmptkelsay8.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5wgcs5f7.jl:5\nin expression starting at /tmp/tmp5wgcs5f7.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpem8gthyx.jl:5\nin expression starting at /tmp/tmpem8gthyx.jl:5\n"
  stdout: ''
  timestamp: 1659746968
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplcor1svf.jl:5\nin expression starting at /tmp/tmplcor1svf.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiwnmeg52.jl:5\nin expression starting at /tmp/tmpiwnmeg52.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that sums numbers from 1 to n but stops when the sum is greater\
    \ than n.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps8nesspg.jl:5\nin expression starting at /tmp/tmps8nesspg.jl:5\n"
  stdout: ''
  timestamp: 1659746968
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp01ljaufk.jl:5\nin expression starting at /tmp/tmp01ljaufk.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n <= 0\n\
    \        error(\"n must be positive\")\n    else\n        return n\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvt4ciqcg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvt4ciqcg.jl:1\n\
    in expression starting at /tmp/tmpvt4ciqcg.jl:1\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5dyjr2j9.jl:5\nin expression starting at /tmp/tmp5dyjr2j9.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxkb69a88.jl:5\nin expression starting at /tmp/tmpxkb69a88.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nThe function sum_to_n\
    \ is recursive. It calls itself recursively until it reaches 0. The base case\
    \ is when n is 0. The function returns the sum of 1 to n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4wcwlwsr.jl:5\nin expression starting at /tmp/tmp4wcwlwsr.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg3o47ceq.jl:5\nin expression starting at /tmp/tmpg3o47ceq.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000001)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000002)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000003)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000004)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000005)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000006)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000007)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000008)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000009)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000010)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000011)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000012)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000013)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000014)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000015)\n</cell>\n<code language=julia-1.5>\n\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd94qokfn.jl:5\nin expression starting at /tmp/tmpd94qokfn.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmi6mtnqh.jl:5\nin expression starting at /tmp/tmpmi6mtnqh.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptpoz_ix9.jl:5\nin expression starting at /tmp/tmptpoz_ix9.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nThe function sum_to_n\
    \ is recursive, meaning that it calls itself to compute the next number. Let's\
    \ see how it works:\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t\
    @test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) ==\
    \ 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphb6muz42.jl:5\nin expression starting at /tmp/tmphb6muz42.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp269gniag.jl:5\nin expression starting at /tmp/tmp269gniag.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<text>\nExercise 2\nWrite a function that sums numbers\
    \ from 1 to n (inclusive) using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp04_i5cv.jl:5\nin expression starting at /tmp/tmpp04_i5cv.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that sums numbers from 1 to n but stops when it reaches n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0l6bw00e.jl:5\nin expression starting at /tmp/tmp0l6bw00e.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpizh2_vmy.jl:5\nin expression starting at /tmp/tmpizh2_vmy.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000001)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000002)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000002)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000003)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000004)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000005)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000005)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000006)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000007)\n</cell>\n<code language=julia-1.5>\nsum\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqvsh3k3o.jl:5\nin expression starting at /tmp/tmpqvsh3k3o.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5wgcs5f7.jl:5\nin expression starting at /tmp/tmp5wgcs5f7.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that sums numbers from 1 to n and returns the sum.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwluhk25o.jl:5\nin expression starting at /tmp/tmpwluhk25o.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n <= 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\n\"\
    \"\"\n    sum_to_n_recursive is a function that sums numbers from 1 to n.\n\"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc076o721.jl:5\nin expression starting at /tmp/tmpc076o721.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n and returns the sum of the squares of\
    \ the numbers.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpajfo3__t.jl:5\nin expression starting at /tmp/tmpajfo3__t.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8wvdewyo.jl:5\nin expression starting at /tmp/tmp8wvdewyo.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpczidrz_x.jl:5\nin expression starting at /tmp/tmpczidrz_x.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg3o47ceq.jl:5\nin expression starting at /tmp/tmpg3o47ceq.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfpuvp5zi.jl:5\nin expression starting at /tmp/tmpfpuvp5zi.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp57p4t8x1.jl:5\nin expression starting at /tmp/tmp57p4t8x1.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl_90nuus.jl:5\nin expression starting at /tmp/tmpl_90nuus.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that sums numbers from 1 to n but stops when it reaches n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqthfxlg7.jl:5\nin expression starting at /tmp/tmpqthfxlg7.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbzmq4584.jl:5\nin expression starting at /tmp/tmpbzmq4584.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nThe function sum_to_n\
    \ is recursive, and it can be easily implemented using recursion.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpghx2hhk1.jl:5\nin expression starting at /tmp/tmpghx2hhk1.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        sum_to_n(n - 1) + n\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3ulmymhe.jl:5\nin expression starting at /tmp/tmp3ulmymhe.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmi6mtnqh.jl:5\nin expression starting at /tmp/tmpmi6mtnqh.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000017)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpabuobm54.jl:5\nin expression starting at /tmp/tmpabuobm54.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphujl_55p.jl:5\nin expression starting at /tmp/tmphujl_55p.jl:5\n"
  stdout: ''
  timestamp: 1659746970
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.4>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.4>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.4>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.4>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(1000000000000)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1000000000001)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1000000000002)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(1000000000003)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1000000000004)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1000000000005)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(1000000000006)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1000000000007)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1000000000008)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(1000000000009)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1000000000010)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1000000000011)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(1000000000012)\n</cell>\n<code language=julia-1.4>\nsum_to_n(1000000000013)\n\
    </cell>\n<code language=julia-1.4>\nsum_to_n(1000000000014)\n</cell>\n<code language=julia-1.4>\n\
    sum_to_n(1000000000015)\n</cell>\n<code language=julia-1.4>\nsum_to_n(10000000000\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_fuwqonp.jl:5\nin expression starting at /tmp/tmp_fuwqonp.jl:5\n"
  stdout: ''
  timestamp: 1659746970
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that sums numbers from 1 to n.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqkp2trww.jl:5\nin expression starting at /tmp/tmpqkp2trww.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as the product of all the integers up to and including\
    \ $n$:\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqdbk7vix.jl:5\nin expression starting at /tmp/tmpqdbk7vix.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100000000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(100000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(1000000000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000000000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000000000000\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpre96g872.jl:5\nin expression starting at /tmp/tmpre96g872.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppxyuq4du.jl:5\nin expression starting at /tmp/tmppxyuq4du.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplxl767em.jl:5\nin expression starting at /tmp/tmplxl767em.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp48jcq3ae.jl:5\nin expression starting at /tmp/tmp48jcq3ae.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpshqnicdq.jl:5\nin expression starting at /tmp/tmpshqnicdq.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.4>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp714_diqi.jl:5\nin expression starting at /tmp/tmp714_diqi.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n but stops when the sum exceeds 10. For\
    \ example, sum_to_n(10) should return 55.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa332g8zt.jl:5\nin expression starting at /tmp/tmpa332g8zt.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nThe function sum_to_n(n::Int64)\
    \ takes one argument, n, of type Int64, and returns the sum of the numbers from\
    \ 1 to n.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv61f_5i0.jl:5\nin expression starting at /tmp/tmpv61f_5i0.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000017)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjcsoyehy.jl:5\nin expression starting at /tmp/tmpjcsoyehy.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp269gniag.jl:5\nin expression starting at /tmp/tmp269gniag.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000017)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaslyl4b3.jl:5\nin expression starting at /tmp/tmpaslyl4b3.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp67m02h2x.jl:5\nin expression starting at /tmp/tmp67m02h2x.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8clrbi1g.jl:5\nin expression starting at /tmp/tmp8clrbi1g.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that sums numbers from 1 to n and returns the sum of the numbers from 1 to n.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpia0mfm2c.jl:5\nin expression starting at /tmp/tmpia0mfm2c.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000001)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000002)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000002)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000003)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000004)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000005)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000005)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000006)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000007)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgtxdw_58.jl:5\nin expression starting at /tmp/tmpgtxdw_58.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbzmq4584.jl:5\nin expression starting at /tmp/tmpbzmq4584.jl:5\n"
  stdout: ''
  timestamp: 1659746967
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n <= 0 \n\
    \        then return 0\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfnttl55f.jl:5\nin expression starting at /tmp/tmpfnttl55f.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpldsihcfb.jl:5\nin expression starting at /tmp/tmpldsihcfb.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a given number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpavqshhmo.jl:5\nin expression starting at /tmp/tmpavqshhmo.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg3o47ceq.jl:5\nin expression starting at /tmp/tmpg3o47ceq.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that sums numbers from 1 to n (inclusive), but stops summing after\
    \ it reaches n.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxiaiegrh.jl:5\nin expression starting at /tmp/tmpxiaiegrh.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptib5ddcx.jl:5\nin expression starting at /tmp/tmptib5ddcx.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of numbers and returns the sum of the numbers in\
    \ the array.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpovphbdmu.jl:5\nin expression starting at /tmp/tmpovphbdmu.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp269gniag.jl:5\nin expression starting at /tmp/tmp269gniag.jl:5\n"
  stdout: ''
  timestamp: 1659746969
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5wgcs5f7.jl:5\nin expression starting at /tmp/tmp5wgcs5f7.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl__94n75.jl:5\nin expression starting at /tmp/tmpl__94n75.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppw12b_6g.jl:5\nin expression starting at /tmp/tmppw12b_6g.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000001)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000002)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000003)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000004)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000005)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000006)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000007)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000008)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000009)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000010)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000011)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000012)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000013)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10000000000014)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000015)\n</cell>\n<code language=julia-1.5>\n\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4b1bqtu.jl:5\nin expression starting at /tmp/tmpw4b1bqtu.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbd8ibr3t.jl:5\nin expression starting at /tmp/tmpbd8ibr3t.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5wgcs5f7.jl:5\nin expression starting at /tmp/tmp5wgcs5f7.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwnaj_i5q.jl:5\nin expression starting at /tmp/tmpwnaj_i5q.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplcor1svf.jl:5\nin expression starting at /tmp/tmplcor1svf.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.0>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.0>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.0>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000000)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000001)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000002)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000003)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000004)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000005)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000006)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000007)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000008)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000009)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000010)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000011)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000012)\n</cell>\n<code language=julia-1.0>\nsum_to_n(10000000000013)\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10000000000014)\n</cell>\n<code language=julia-1.0>\n\
    sum_to_n(10000000000015)\n</cell>\n<code language=julia-1.0>\n\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0ep7dt_w.jl:5\nin expression starting at /tmp/tmp0ep7dt_w.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppw12b_6g.jl:5\nin expression starting at /tmp/tmppw12b_6g.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_vhhq7yb.jl:5\nin expression starting at /tmp/tmp_vhhq7yb.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxikz5yma.jl:5\nin expression starting at /tmp/tmpxikz5yma.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxeiu8ca1.jl:5\nin expression starting at /tmp/tmpxeiu8ca1.jl:5\n"
  stdout: ''
  timestamp: 1659746966
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n + sum_to_n(n - 1) \nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl6a4zyhl.jl:5\nin expression starting at /tmp/tmpl6a4zyhl.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the factorial of a given number. For example, factorial(5)\
    \ = 5 * 4 * 3 * 2 * 1 = 120\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\
    \t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11)\
    \ == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3qy6ju0h.jl:5\nin expression starting at /tmp/tmp3qy6ju0h.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n*sum_to_n(n-1)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\
    \t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8vygl0_l.jl:5\nin expression starting at /tmp/tmp8vygl0_l.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8clrbi1g.jl:5\nin expression starting at /tmp/tmp8clrbi1g.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt9vpfcua.jl:5\nin expression starting at /tmp/tmpt9vpfcua.jl:5\n"
  stdout: ''
  timestamp: 1659746964
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgooclys_.jl:5\nin expression starting at /tmp/tmpgooclys_.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0 \n        else return n + sum_to_n(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt8bqj4ce.jl:5\nin expression starting at /tmp/tmpt8bqj4ce.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    sum_to_n_recursive(n::Int64)::Int64\n\"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpncizknhx.jl:5\nin expression starting at /tmp/tmpncizknhx.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that sums numbers from 1 to n but stops when the sum is greater than\
    \ n.\nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr9v0f1bf.jl:5\nin expression starting at /tmp/tmpr9v0f1bf.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp67m02h2x.jl:5\nin expression starting at /tmp/tmp67m02h2x.jl:5\n"
  stdout: ''
  timestamp: 1659746971
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.3>\nsum_to_n(10)\n</cell>\n<code language=julia-1.3>\n\"\
    \"\"\n    factorial_to_n is a function that returns the factorial of n.\n\"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1)\
    \ == 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn97buawr.jl:5\nin expression starting at /tmp/tmpn97buawr.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1 \n        else return n*sum_to_n(n-1) \nend\n</cell>\n\
    <code language=julia-1.0>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6) == 21)\n\
    \t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplcor1svf.jl:5\nin expression starting at /tmp/tmplcor1svf.jl:5\n"
  stdout: ''
  timestamp: 1659746962
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 1 \n\
    \        then return 1\n        else return n + sum_to_n(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) == 1)\n\t@test(candidate(6)\
    \ == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30) == 465)\n\t@test(candidate(100)\
    \ == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_gmjmqge.jl:5\nin expression starting at /tmp/tmp_gmjmqge.jl:5\n"
  stdout: ''
  timestamp: 1659746972
- exit_code: 1
  program: "\"\"\"sum_to_n is a function that sums numbers from 1 to n.\n        \
    \                \"\"\"\nfunction sum_to_n(n::Int64)::Int64 \n    if n == 0 \n\
    \        then return 0\n    else \n        return n + sum_to_n(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_to_n(10)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(100)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nsum_to_n(10000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(10000000000)\n</cell>\n<code language=julia-1.5>\nsum_to_n(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000001)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000002)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000003)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000004)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000005)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000007)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000009)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000010)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000011)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000012)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000013)\n</cell>\n<code language=julia-1.5>\nsum_to_n(1000000000014)\n\
    </cell>\n<code language=julia-1.5>\nsum_to_n(1000000000015)\n</cell>\n<code language=julia-1.5>\n\
    sum_to_n(1000000000016)\n</cell>\n<code language=julia-1.5>\nsum_to_n(10000000000\n\
    using Test\n\n@testset begin\n\ncandidate = sum_to_n;\n\t@test(candidate(1) ==\
    \ 1)\n\t@test(candidate(6) == 21)\n\t@test(candidate(11) == 66)\n\t@test(candidate(30)\
    \ == 465)\n\t@test(candidate(100) == 5050)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_k_0xp54.jl:5\nin expression starting at /tmp/tmp_k_0xp54.jl:5\n"
  stdout: ''
  timestamp: 1659746972

name: HumanEval_79_decimal_to_binary
language: jl
prompt: "\"\"\"You will be given a number in decimal form and your task is to convert\
  \ it to\n    binary format. The function should return a string, with each character\
  \ representing a binary\n    number. Each character in the string will be '0' or\
  \ '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
  \ and at the end of the string.\n    The extra characters are there to help with\
  \ the format.\n\n    Examples:\n            \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
  \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
  \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
completions: ["    \n    binary = \"\"\n    \n    if decimal < 0\n        binary =\
    \ binary + \"0\"\n    else\n        binary = binary + \"1\"\n    end\n    \n \
    \   while decimal > 0\n        decimal = decimal / 2\n        binary = binary\
    \ + \"0\"\n    end\n    \n    return binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-2)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(100000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(100000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1000000000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_bin", "    binary_string = \"\"\
    \n    \n    for digit in decimal\n        binary_string += if digit == 0 then\
    \ \"0\" else \"1\"\n    end\n    \n    binary_string += \"db\"\n    binary_string\
    \ += if binary_string.ends_with(\"db\") then binary_string.sub!(/db/, \"db\")\
    \ else binary_string end\n    \n    return binary_string\nend", "    binary_string\
    \ = \"\"\n    decimal = decimal % 2\n    \n    while decimal > 0\n        binary_string\
    \ = string(binary_string, \"0\") + (decimal % 2)\n        decimal = decimal /\
    \ 2\n    end\n    \n    binary_string = string(binary_string, \"0\")\n    binary_string\
    \ = string(binary_string, \"db\")\n    return binary_string\nend\n</cell>\n<text>\n\
    Now let's test our function", "    decimal = decimal % 2\n    decimal = decimal\
    \ + 1 if decimal > 0 else decimal\n    decimal = decimal - 1 if decimal < 0 else\
    \ decimal\n    decimal = decimal + 10 if decimal > 10 else decimal\n    decimal\
    \ = decimal - 10 if decimal < 10 else decimal\n    decimal = decimal + 100 if\
    \ decimal > 100 else decimal\n    decimal = decimal - 100 if decimal < 100 else\
    \ decimal\n    decimal = decimal + 1000 if decimal > 1000 else decimal\n    decimal\
    \ = decimal - 1000 if decimal < 1000 else decimal\n    decimal = decimal + 10000\
    \ if decimal > 10000 else decimal\n    decimal = decimal - 10000 if decimal <\
    \ 10000 else decimal\n    decimal = decimal + 100000 if decimal > 100000 else\
    \ decimal\n    decimal = decimal - 100000 if decimal < 100000 else decimal\n \
    \   decimal = decimal + 1000000 if decimal > 1000000 else decimal\n    decimal\
    \ = decimal - 1000000 if decimal < 1000000 else decimal\n    decimal = decimal\
    \ + 10000000 if decimal > 10000000 else decimal\n    decimal = decimal - 10000000\
    \ if decimal < 10000000 else decimal\n    decimal = decimal + 100000000 if decimal\
    \ > 100000000 else decimal\n    decimal = decimal - 100000000 if decimal < 100000000\
    \ else decimal\n    decimal = decimal + 1000000000 if decimal > 1000000000 else\
    \ decimal\n    decimal = decimal - 1000000000 if decimal < 1000000000 else decimal\n\
    \    decimal = decimal + 10000000000 if decimal > 10000000000 else decimal\n \
    \   decimal = decimal - 10000000000 if decimal < 10000000000 else decimal\n  \
    \  decimal = decimal + 100000000000 if decimal > 100000000000 else decimal\n \
    \   decimal = decimal - 100000000000 if decimal < 100000000000 else decimal\n\
    \    decimal = decimal + 1000000000000 if decimal > 1000000000000 else decimal\n\
    \    decimal = decimal - 1000000000000 if decimal < 1000000000000 else decimal\n\
    \    decimal = decimal + 10000000000000 if decimal > 10000000000000 else decimal\n\
    \    decimal = decimal - 10000000000000 if decimal < 10000000000000 else decimal\n\
    \    decimal = decimal + 100000000000000 if decimal > 100000000000000 else decimal\n\
    \    decimal = decimal - 100000000000000 if decimal < 100000000000000 else decimal\n\
    \    decimal = decimal + 1000000000000000 if decimal > 1000000000000000 else decimal\n\
    \    decimal = decimal - 1000000000000000 if decimal < 1000000000000000 else decimal\n\
    \    decimal = decimal + 10000000000000000 if decimal > 10000000000000000 else\
    \ decimal\n    decimal = decimal - 10000000000000000 if decimal < 10000000000000000\
    \ else decimal\n    decimal = decimal + 100000000000000000 if decimal > ", " \
    \   binary_string = \"\"\n    \n    if decimal < 0\n        binary_string = \"\
    db\"\n        decimal = -decimal\n    end", "    decimal = decimal * 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal + 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ",
  "    decimal = decimal.to_i\n    binary_string = \"\"\n    \n    if decimal < 2\
    \ \n        binary_string = \"0\"\n    else \n        binary_string = \"1\"\n\
    \        \n        \n    binary_string += decimal_to_binary(decimal - 2)\n   \
    \ binary_string += \"db\"\n    binary_string += decimal_to_binary(decimal - 1)\n\
    \    \n    return binary_string\nend", "    binary = \"\"\n    \n    for digit\
    \ in decimal\n        binary = binary + string(digit, \"b\")\n    end\n    \n\
    \    return \"db\" + binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_", "    decimal = decimal % 2\n\
    \    binary = \"\"\n    while decimal != 0\n        binary = binary + \"0\"\n\
    \        decimal = decimal // 2\n    binary = binary + \"1\"\n    binary = binary\
    \ + \"db\"\n    return binary\nend\n</cell>\n<text>\nNow let's test our function",
  "    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n    while decimal\
    \ > 0\n        binary_string = decimal_to_binary(decimal - 1) + binary_string\n\
    \        decimal = decimal / 2\n    end\n    \n    binary_string = \"db\" + binary_string\n\
    \    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(1000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(1000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10000000000000000000000000)\n</cell>",
  "    binary = \"\"\n    decimal = decimal % 2\n    decimal = decimal / 2\n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n\
    \    end\n    binary = binary + \"1\"\n    return binary\nend", "    decimal =\
    \ decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    ", "    binary_string = \"\"\n    \n    if decimal > 1\n\
    \        binary_string += \"1\"\n        decimal -= 1\n    end\n    \n    while\
    \ decimal > 0\n        binary_string += \"0\"\n        decimal -= 1\n    end\n\
    \    \n    return binary_string\nend", "    binary_string = \"\"\n    \n    if\
    \ decimal < 0 \n        binary_string = \"db\"\n        decimal = -decimal\n \
    \   \n    binary_string = decimal_to_binary(decimal)\n    \n    for char in binary_string\n\
    \        binary_string += \"0\"\n    \n    return binary_string\nend", "    binary\
    \ = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n        binary =\
    \ binary + \"0\"\n        decimal = decimal / 2\n    binary = binary + \"1\"\n\
    \    binary = binary + \"b\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(25)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(27)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(28)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(29)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(30)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(31)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(33)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(34)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(35)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(36)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(37)\n</cell", "    binary_string = \"\"\n    binary_string +=\
    \ \"0\"\n    binary_string += decimal_to_binary(decimal % 2)\n    binary_string\
    \ += \"0\"\n    binary_string += decimal_to_binary(decimal / 2)\n    binary_string\
    \ += \"0\"\n    binary_string += \"db\"\n    return binary_string\nend", "   \
    \ decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    binary_string = \"\"\n    \n   \
    \ for digit in decimal\n        binary_string += if digit == 0 then \"0\" else\
    \ \"1\"\n    end\n    \n    return \"db\" + binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(123)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(123)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(12", "    binary_string\
    \ = \"\"\n    \n    if decimal < 0\n        binary_string = \"-db\"\n        decimal\
    \ = -decimal\n    end\n    \n    binary_string += string(Int64(decimal)%2, \"\
    0\") # convert decimal to binary\n    \n    while decimal != 0\n        binary_string\
    \ += string(Int64(decimal)%2, \"1\") # convert decimal to binary\n        decimal\
    \ = Int64(decimal)/2\n    end\n    \n    return binary_string\nend", "    \n \
    \   binary = \"\"\n    \n    if decimal < 0\n        error(\"Decimal cannot be\
    \ negative\")\n    end\n    \n    while decimal != 0\n        binary = string(decimal%2,\
    \ binary)\n        decimal = floor(decimal/2)\n    end\n    \n    binary = string(binary,\
    \ \"\")\n    \n    return binary\nend", "    binary_string = \"\"\n    decimal\
    \ = decimal % 2\n    while decimal > 0\n        binary_string = binary_string\
    \ + \"0\"\n        decimal = decimal / 2\n    binary_string = binary_string +\
    \ \"1\"\n    binary_string = \"db\" + binary_string\n    return binary_string\n\
    end", "    \n    binary = \"\"\n    \n    if decimal < 0\n        binary = binary\
    \ + \"0\"\n    else\n        binary = binary + \"1\"\n    end\n    \n    decimal\
    \ = decimal % 2\n    \n    while decimal != 0\n        binary = binary + \"0\"\
    \n        decimal = decimal / 2\n    end\n    \n    binary = binary + \"b\"\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-2)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_", "    decimal = decimal % 2\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal\
    \ = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal\
    \ = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal\
    \ = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal\
    \ = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal\
    \ = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal\
    \ = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal", "    binary_string = \"\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"1\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string ",
  "    \n    decimal = decimal % 2\n    \n    if decimal > 0 \n        decimal_to_binary(decimal\
    \ - 1)\n    \n    else \n        decimal_to_binary(decimal + 1)\n    \nend", " \
    \   decimal = decimal % 2\n    decimal = decimal - decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    ", "    decimal = decimal % 2\n    binary = \"\"\n\
    \    while decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ // 2\n    binary = binary + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=juli", "    binary = \"\"\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    while decimal != 0\n        binary = binary +\
    \ \"0\"\n        decimal = decimal / 2\n    end\n    binary = binary + \"1\"\n\
    \    return binary\nend", "    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ", "    decimal\
    \ = decimal % 2\n    if decimal < 0\n        decimal = decimal + 2\n    end\n\
    \    binary = \"\"\n    while decimal != 0\n        binary = string(decimal, 1)\
    \ + binary\n        decimal = decimal / 2\n    end\n    binary = string(decimal,\
    \ 1) + binary\n    binary = string(binary, length(binary)-2)\n    binary = string(binary,\
    \ length(binary)-2)\n    return binary\nend\n</cell>\n<text>\nLet's test our function",
  "    decimal = decimal % 2\n    binary = \"\"\n    while decimal > 0\n        binary\
    \ = binary + \"1\"\n        decimal = decimal - 1\n    end\n    binary = binary\
    \ + \"0\"\n    return binary\nend\n\"\"\"", "    binary = \"\"\n    decimal =\
    \ decimal % 2\n    while decimal > 0\n        binary = binary + \"1\"\n      \
    \  decimal = decimal // 2\n    binary = binary + \"0\"\n    return binary\nend",
  "    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string = \"\
    -db\"\n        decimal = -decimal\n    end", "    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ",
  "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ",
  "    binary = \"\"\n    decimal = decimal % 2\n    while decimal > 0\n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    binary = binary + \"1\"\
    \n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(5)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(100)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(1000)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(10000)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(100000)\n</cell>\n<code\
    \ language=julia-1.4>\ndecimal_to_binary(1000000)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(10000000)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(100000000)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(1000000000)\n</cell>\n<code\
    \ language=julia-1.4>\ndecimal_to_binary(10000000000)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(100000000000)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(1000000000000)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(10000000000000)\n</cell>\n\
    <code language=julia-1.4>\ndecimal_to_binary(100000000000000)\n</cell>\n<code\
    \ language=julia-1.4>\ndecimal_to_binary(1000000000000000)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(10000000000000000)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(100000000000000000)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(1000000000000000000)\n</cell>\n\
    <code language=julia-1.4>\ndecimal_to_binary(10000000000000000000)\n</cell>\n\
    <code language=julia-1.4>\ndecimal_to_binary(100000000000000000000)\n</cell>\n\
    <code language=julia-1.4>\ndecimal_to_binary(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.4>\ndecimal_to_binary(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.4>\ndecimal_to_binary(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.4>\ndecimal_to_binary(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.4>\ndecimal_to_binary(10000000000000000000000000)", " \
    \   binary_string = \"\"\n    \n    # Write your code here\n    \n    return binary_string\n\
    end\n</cell>\n<text>\nNow let's test our function", "    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    ", "    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"-db\"\n        decimal = -decimal\n    end", "    binary_string = \"\"\n\
    \    \n    if decimal < 0 \n        binary_string = \"-1db\"\n        return binary_string\n\
    \    \n    if decimal < 2 \n        binary_string = \"0db\"\n        return binary_string\n\
    \    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0 \n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal - 1\n    \n    binary_string = binary_string + \"1\"\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-5)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5", "    binary_string = \"\"\n    \n    if decimal\
    \ < 0\n        binary_string = \"-1\"\n    elseif decimal > 1\n        binary_string\
    \ = \"1\"\n    else\n        binary_string = \"0\"\n    end\n    \n    binary_string\
    \ += \"db\"\n    \n    for i in binary_string.chars\n        if i == \"0\"\n \
    \           binary_string += \"0\"\n        elseif i == \"1\"\n            binary_string\
    \ += \"1\"\n        else\n            binary_string += \"0\"\n        end\n  \
    \  end\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-2)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(6)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(9)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(23)\n</cell>\n<code language=julia-1.5", "    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    ", "    decimal = decimal % 2\n    binary = \"\"\n    while decimal\
    \ != 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n    end\n\
    \    binary = binary + \"1\"\n    return binary\nend", "    \n    binary = \"\"\
    \n    \n    if decimal < 0\n        decimal = -decimal\n        \n    decimal\
    \ = decimal % 2\n    \n    while decimal != 0\n        binary = binary + \"0\"\
    \n        decimal = decimal // 2\n    \n    binary = binary + \"1\"\n    \n  \
    \  binary = binary + \"db\"\n    \n    return binary\nend", "    binary_string\
    \ = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n        binary_string\
    \ = binary_string + \"0\"\n        decimal = decimal / 2\n    binary_string =\
    \ binary_string + \"1\"\n    binary_string = \"db\" + binary_string\n    return\
    \ binary_string\nend\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary string to a decimal number. Your function should take in a string and\
    \ return a Int64.", "    binary_string = \"\"\n    decimal = decimal % 2\n   \
    \ while decimal > 0\n        binary_string = string(binary_string, '0') + string(decimal,\
    \ '1')\n        decimal = decimal / 2\n    end\n    binary_string = string(binary_string,\
    \ '0')\n    binary_string = \"db\" + binary_string\n    return binary_string\n\
    end", "    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 1\n            \"1\"\n        else\n            \"0\"\n     \
    \   end\n    end\n    \n    binary_string += \"db\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(42)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(-10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_", "    decimal = decimal % 2\n  \
    \  decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal %\
    \ 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    ", "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    ", "    binary_string = \"\"\n\
    \    binary_string += \"0\" * (decimal % 2)\n    binary_string += \"1\" * (decimal\
    \ % 2)\n    binary_string += \"db\" * (decimal % 2)\n    binary_string += \"0\"\
    \ * (decimal % 2)\n    binary_string += \"1\" * (decimal % 2)\n    binary_string\
    \ += \"db\" * (decimal % 2)\n    binary_string += \"0\" * (decimal % 2)\n    binary_string\
    \ += \"1\" * (decimal % 2)\n    binary_string += \"db\" * (decimal % 2)\n    binary_string\
    \ += \"0\" * (decimal % 2)\n    binary_string += \"1\" * (decimal % 2)\n    binary_string\
    \ += \"db\" * (decimal % 2)\n    binary_string += \"0\" * (decimal % 2)\n    binary_string\
    \ += \"1\" * (decimal % 2)\n    binary_string += \"db\" * (decimal % 2)\n    binary_string\
    \ += \"0\" * (decimal % 2)\n    binary_string += \"1\" * (decimal % 2)\n    binary_string\
    \ += \"db\" * (decimal % 2)\n    binary_string += \"0\" * (decimal % 2)\n    binary_string\
    \ += \"1\" * (decimal % 2)\n    binary_string += \"db\" * (decimal % 2)\n    binary_string\
    \ += \"0\" * (decimal % 2)\n    binary_string += \"1\" * (decimal % 2)\n    binary_string\
    \ += \"db\" * (decimal % 2)\n    binary_string += \"0\" * (decimal % 2)\n    binary_string\
    \ += \"1\" * (decimal % 2)\n    binary_string += \"db\" * (decimal % 2)\n    binary_string\
    \ += \"0\" * (decimal % 2)\n    binary_string += \"1\" * (decimal % 2)\n    binary_string\
    \ += \"db\" * (decimal % 2)\n    binary_string += \"0\" * (decimal % 2)\n    binary_string\
    \ += \"1\" * (decimal % 2)\n    binary_string += \"db\" * (decimal % 2)\n    binary_string\
    \ += \"0\" * (decimal % 2)\n    binary_string += \"1\" * (decimal % 2)\n    binary_string\
    \ += \"db\" * (decimal % 2)\n    binary_string += \"0\" * (decimal % 2)\n    binary_string\
    \ += \"1\" * (decimal % 2)\n    binary_string += \"db\" * (decimal % 2)\n    binary_string\
    \ += \"0\" * (decimal % 2)\n    binary_string += \"1\" * (decimal % 2)\n    binary_string\
    \ += \"db\" * (decimal % 2)\n    binary_string += \"0\" * (decimal % 2)\n    binary_string\
    \ += \"1\" * (decimal % 2)\n    binary_string += \"db\" * (decimal % 2)\n    binary_string\
    \ += \"0\" * (decimal % 2)\n    binary_string += \"1\" * (decimal % 2)\n    binary_string\
    \ += \"db\" * (decimal % 2)\n    binary_string += \"0\" * (decimal % 2)\n    ",
  "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ",
  "    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend", "    \n    binary_string = \"\"\
    \n    \n    if decimal < 0\n        binary_string = \"db\" + decimal_to_binary(-decimal)\n\
    \    else\n        binary_string = \"\"\n    \n    binary_string = \"\"\n    \n\
    \    binary_string += if decimal < 10 then \"0\" + decimal else decimal end\n\
    \    \n    binary_string += if decimal < 10 then \"0\" + decimal_to_binary(10\
    \ - decimal) else decimal_to_binary(10 - decimal) end\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-10)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5", "    binary_string = \"\"\n    \n    decimal\
    \ = decimal % 2\n    \n    while decimal != 0\n        binary_string = binary_string\
    \ + \"0\"\n        decimal = decimal / 2\n    end\n    \n    binary_string = binary_string\
    \ + \"1\"\n    \n    return binary_string\nend", "    binary = \"\"\n    decimal\
    \ = decimal % 2\n    while decimal > 0\n        binary = binary + \"0\"\n    \
    \    decimal = decimal - 1\n    binary = binary + \"1\"\n    binary = binary +\
    \ \"b\"\n    return binary\nend", "    binary_string = \"\"\n    \n    if decimal\
    \ < 0\n        binary_string = \"-1\"\n    else\n        binary_string = \"0\"\
    \n        \n        for i in decimal_to_binary(decimal-1)\n            binary_string\
    \ = binary_string + \"1\"\n        end\n    end\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-", "    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ", "    \n  \
    \  binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string += \"\
    1\"\n        \n        decimal_remainder = decimal % 2\n        \n        if decimal_remainder\
    \ == 0 \n            binary_string += \"0\"\n            \n        else \n   \
    \         binary_string += \"0\"\n            \n            decimal_remainder\
    \ = decimal % 2\n            \n            while decimal_remainder == 0 \n   \
    \             binary_string += \"1\"\n                \n                decimal_remainder\
    \ = decimal % 2\n                \n            binary_string += \"0\"\n      \
    \      \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(6)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(9)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n\
    </cell>\n", "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    ", "    decimal = decimal % 2\n\
    \    if decimal < 0\n        decimal = decimal + 2\n    end\n    binary = \"\"\
    \n    while decimal > 0\n        binary = string(decimal, 2) .+ binary\n     \
    \   decimal = decimal / 2\n    end\n    binary = string(decimal, 2) .+ binary\n\
    \    binary = string(binary, 2)\n    return binary\nend", "    binary = \"\"\n\
    \    decimal = decimal % 2\n    while decimal > 0\n        binary = binary + \"\
    0\"\n        decimal = decimal - 1\n    binary = binary + \"1\"\n    return binary\n\
    end", "    decimal = decimal % 2\n    binary = \"\"\n    while decimal != 0\n\
    \        binary = binary + \"0\"\n        decimal = decimal / 2\n    binary =\
    \ binary + \"1\"\n    binary = binary + \"db\"\n    return binary\nend", "   \
    \ binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n        binary\
    \ = binary + \"0\"\n        decimal = decimal / 2\n    binary = binary + \"1\"\
    \n    binary = binary + \"b\"\n    return binary\nend", "    binary = \"\"\n \
    \   decimal = decimal % 2\n    while decimal > 0\n        binary = binary + \"\
    1\"\n        decimal = decimal / 2\n    end\n    binary = binary + \"0\"\n   \
    \ binary = binary + \"b\"\n    return binary\nend\n\"\"\"", "    decimal = decimal\
    \ % 2\n    binary = \"\"\n    while decimal != 0\n        binary = binary + \"\
    0\"\n        decimal = decimal // 2\n    binary = binary + \"1\"\n    binary =\
    \ binary + \"b\"\n    return binary\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that converts a binary number to decimal.", "    binary = \"\"\n  \
    \  decimal = decimal % 2\n    while decimal > 0\n        binary = binary + \"\
    0\"\n        decimal = decimal - 1\n    binary = binary + \"1\"\n    binary =\
    \ binary + \"b\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(25)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(27)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(28)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(29)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(30)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(31)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(33)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(34)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(35)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(36)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(37)\n</cell>\n", "    decimal = decimal % 2\n    binary = \"\
    \"\n    while decimal != 0\n        binary = binary + \"0\"\n        decimal =\
    \ decimal / 2\n    binary = binary + \"1\"\n    binary = binary + \"b\"\n    binary\
    \ = binary + \"b\"\n    return binary\nend", "    decimal = decimal % 2\n    if\
    \ decimal > 0 \n        binary_string = \"1\"\n    else\n        binary_string\
    \ = \"0\"\n    end\n    binary_string += decimal_to_binary(decimal / 2)\n    return\
    \ binary_string\nend", "    binary_string = \"\"\n    \n    for digit in decimal\n\
    \        binary_string += if digit == 0 then \"0\" else \"1\"\n    end\n    \n\
    \    binary_string += \"db\"\n    \n    return binary_string\nend", "    binary\
    \ = \"\"\n    decimal = decimal % 2\n    while decimal > 0\n        binary = binary\
    \ + \"0\"\n        decimal = decimal - 1\n    binary = binary + \"1\"\n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(10)\n</cell>\n\
    <code language=julia-1.3>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.3>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.3>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.3>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.3>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.3>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.3>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.3>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.3>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.3>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(25)\n\
    </cell>\n<code language=julia-1.3>\ndecimal_to_binary(26)\n</cell>\n<code language=julia-1.3>\n\
    decimal_to_binary(27)\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(28)\n\
    </cell>\n<code language=julia-1.3>\ndecimal_to_binary(29)\n</cell>\n<code language=julia-1.3>\n\
    decimal_to_binary(30)\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(31)\n\
    </cell>\n<code language=julia-1.3>\ndecimal_to_binary(32)\n</cell>\n<code language=julia-1.3>\n\
    decimal_to_binary(33)\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(34)\n\
    </cell>\n<code language=julia-1.3>\ndecimal_to_binary(35)\n</cell>\n<code language=julia-1.3>\n\
    decimal_to_binary(36)\n</cell>\n<code language=julia-1.3>\ndecimal_to_binary(37)\n\
    </cell>\n<code language=julia-1.3>\ndecimal_", "    binary_string = \"\"\n   \
    \ \n    if decimal < 0\n        binary_string = \"db\"\n        decimal = -decimal\n\
    \    end", "    binary = \"\"\n    decimal = decimal % 2\n    while decimal >\
    \ 0\n        decimal = decimal / 2\n        binary = binary + \"0\"\n    end\n\
    \    binary = binary + \"1\"\n    return binary\nend", "    decimal = decimal\
    \ % 2\n    binary = \"\"\n    while decimal != 0\n        binary = binary + \"\
    0\"\n        decimal = decimal / 2\n    end\n    binary = binary + \"1\"\n   \
    \ return binary\nend\n\"\"\"", "    binary_string = \"\"\n    \n    # Your code\
    \ here\n    \n    return binary_string\nend", "    decimal = decimal % 2\n   \
    \ decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal %\
    \ 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    ", "    binary_string = \"\"\n    decimal = decimal % 2\n    while\
    \ decimal != 0\n        binary_string = string(binary_string, \"0\") + (\"1\"\
    \ if decimal % 2 == 0 else \"0\")\n        decimal = decimal / 2\n    end\n  \
    \  binary_string = \"db\" + binary_string\n    return binary_string\nend", " \
    \   \n    decimal = decimal % 2\n    \n    if decimal < 0\n        decimal = decimal\
    \ + 2\n    end\n    \n    binary = \"\"\n    \n    while decimal > 0\n       \
    \ binary = string(decimal, binary)\n        decimal = decimal / 2\n    end\n \
    \   \n    binary = string(binary, \"\")\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(6)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(9)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n\
    </cell>\n", "    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"-db\"\n        decimal = -decimal\n    end\n    \n    binary_string = \"\
    db\" + binary_string\n    \n    while decimal > 0\n        binary_string = string(binary_string,\
    \ \"0\") + (\"1\" - decimal%2)\n        decimal = decimal / 2\n    end\n    \n\
    \    return binary_string\nend", "    binary_string = \"\"\n    \n    if decimal\
    \ < 0\n        binary_string = \"-db\"\n        decimal = -decimal\n    end",
  "    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string = \"\
    -db\"\n        decimal = -decimal\n    end", "    binary_string = \"\"\n    \n\
    \    decimal = decimal % 2\n    \n    while decimal != 0\n        binary_string\
    \ = decimal_to_binary(decimal - 1) + binary_string\n        decimal = decimal\
    \ / 2\n    end\n    \n    binary_string = \"db\" + binary_string\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(25)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(30)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(35)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(40)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(45)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(50)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(55)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(60)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(65)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(70)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(75)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(80)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(85)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(90)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(95)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(105)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(110)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(115)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(120)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(125)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(130)\n</cell>\n<code language=", "    decimal = decimal % 2\n\
    \    binary = \"\"\n    while decimal != 0\n        binary = binary + \"0\"\n\
    \        decimal = decimal / 2\n    binary = binary + \"1\"\n    binary = binary\
    \ + \"db\"\n    return binary\nend", "    binary_string = \"\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"1\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string ",
  "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    decimal = decimal % 2\n    if decimal\
    \ > 0 \n        binary_string = \"1\" * decimal\n    else\n        binary_string\
    \ = \"0\" * decimal\n    end\n    binary_string = \"db\" + binary_string\n   \
    \ return binary_string\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ converts a binary string to a decimal number. Your function should take in a\
    \ string and return a Int64.", "    binary_string = \"\"\n    \n    for digit\
    \ in decimal\n        binary_string += if digit == 1 then \"1\" else \"0\"\n \
    \   end\n    \n    binary_string += \"db\"\n    binary_string += binary_string[binary_string.size\
    \ - 2:binary_string.size]\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(27)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(28)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(29)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(30)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(31)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(33)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(34)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(35)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(36)\n\
    </cell>\n<code language=julia-1.5", "    decimal = decimal % 2\n    decimal =\
    \ decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ",
  "    binary_string = \"\"\n    \n    if decimal > 1\n        binary_string += \"\
    1\"\n        \n        for i in 2..decimal\n            binary_string += \"0\"\
    \n            \n            binary_string += string(decimal%2, base=2)\n     \
    \       decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"1\"\n        \n        for i in 2..decimal\n            binary_string +=\
    \ \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"0\"\n            \n            binary_string += string(decimal%2, base=2)\n\
    \            decimal /= 2\n            \n        end\n        \n        binary_string\
    \ += \"db\"\n        \n        for i in 2..decimal\n            binary_string\
    \ += \"", "    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    return \"db\" + binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n",
  "    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string = \"\
    -db\"\n        decimal = -decimal\n    end", "    binary = \"\"\n    decimal =\
    \ decimal % 2\n    while decimal > 0\n        binary = binary + \"1\"\n      \
    \  decimal = decimal / 2\n    end\n    binary = binary + \"0\"\n    binary = binary\
    \ + \"b\"\n    return binary\nend\n\"\"\"", "    binary_string = \"\"\n    \n\
    \    for digit in decimal\n        binary_string += if digit == 0 then \"0\" else\
    \ \"1\"\n    end\n    \n    binary_string += \"db\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(6)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(9)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(27)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(28", "    binary_string\
    \ = \"\"\n    \n    if decimal > 1\n        binary_string += \"1\"\n        \n\
    \        for i in 2..decimal\n            binary_string += \"0\"\n           \
    \ binary_string += string(decimal%2, base=2)\n            decimal /= 2\n     \
    \   end\n    end\n    \n    binary_string += \"0\"\n    binary_string += string(decimal%2,\
    \ base=2)\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell", "    decimal\
    \ = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n    binary\
    \ = \"\"\n    decimal = decimal / 2\n    while decimal > 0\n        binary = binary\
    \ + \"1\"\n        decimal = decimal / 2\n    end\n    binary = binary + \"0\"\
    \n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n<text>\nNow let's\
    \ test the function by passing it a random number:", "    decimal = decimal *\
    \ 2\n    decimal = decimal - decimal.floor()\n    decimal = decimal + decimal.floor()\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal +\
    \ decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    decimal = decimal + decimal.floor()\n    decimal = decimal\
    \ + decimal.floor()\n    ", "    binary_string = \"\"\n    \n    if decimal <\
    \ 0\n        binary_string = \"-db\"\n        decimal = -decimal\n    end", " \
    \   decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal %\
    \ 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    binary_string = \"\"\n    \n   \
    \ decimal = decimal % 2\n    \n    if decimal > 0 \n        binary_string = \"\
    1\" + binary_string\n    else\n        binary_string = \"0\" + binary_string\n\
    \    end\n    \n    binary_string = binary_string * 10\n    \n    while decimal\
    \ > 0 \n        binary_string = \"1\" + binary_string\n        decimal = decimal\
    \ / 2\n    end\n    \n    binary_string = \"db\" + binary_string\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(27)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(28)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(29)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(30)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(31)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(33)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(34)\n\
    </cell>\n<code language=juli", "    decimal = decimal.to_i\n    binary = \"\"\n\
    \    \n    for i in 0..(decimal.bit_length()-1)\n        binary = binary + str((decimal\
    \ >> i) & 1)\n    end\n    \n    return binary + \"db\"\nend", "    binary_string\
    \ = \"\"\n    \n    if decimal < 0\n        binary_string = \"db\"\n        decimal\
    \ = -decimal\n    end", "    binary = \"\"\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    while decimal != 0\n        binary = binary + \"0\"\n   \
    \     decimal = decimal / 2\n    end\n    binary = binary + \"1\"\n    binary\
    \ = binary + \"b\"\n    return binary\nend", "    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ",
  "    decimal = decimal % 2\n    if decimal > 0 \n        decimal_to_binary(decimal\
    \ - 1)\n    else\n        decimal_to_binary(decimal + 1)\n    end\nend\n\"\"\"",
  "    decimal = decimal % 2\n    if decimal < 0\n        decimal = decimal + 2\n\
    \    end\n    binary = \"\"\n    while decimal != 0\n        binary = string(decimal,\
    \ binary)\n        decimal = decimal / 2\n    end\n    binary = string(binary,\
    \ \"\")\n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(27)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(",
  "    binary = \"\"\n    decimal = decimal % 2\n    while decimal > 0\n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    binary = binary + \"1\"\
    \n    binary = binary + \"b\"\n    binary = binary + \"b\"\n    return binary\n\
    end", "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    binary = \"\"\n    decimal = decimal\
    \ % 2\n    while decimal > 0\n        binary = binary + \"0\"\n        decimal\
    \ = decimal - 1\n    binary = binary + \"1\"\n    return binary\nend\n\"\"\"",
  "    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n\
    \    decimal = decimal % 2\n    ", "    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ", "    binary_string\
    \ = \"\"\n    \n    if decimal < 0\n        binary_string = \"-db\"\n        decimal\
    \ = -decimal\n    end", "    binary = \"\"\n    decimal = decimal % 2\n    while\
    \ decimal > 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    binary = binary + \"1\"\n    binary = binary + \"b\"\n    return binary\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(30)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(35)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(40)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(45)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(50)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(55)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(60)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(65)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(70)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(75)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(80)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(85)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(90)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(95)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(105)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(110)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(115)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(120)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(125)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(130)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(135)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(140)\n\
    </", "    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"-1db\"\n        return binary_string\n    end", "    decimal = decimal %\
    \ 2\n    binary = \"\"\n    \n    if decimal > 0 \n        binary = binary + \"\
    1\"\n        decimal = decimal - 1 \n    else \n        binary = binary + \"0\"\
    \n        decimal = decimal + 1\n    \n    binary = binary + decimal_to_binary(decimal)\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(27)\n</cell>\n<code language=juli", "    decimal = decimal %\
    \ 2\n    decimal = decimal - decimal%2\n    decimal = decimal + decimal%2\n  \
    \  decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n\
    \    decimal = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal + decimal%2\n    decimal = decimal + decimal%2\n    decimal = decimal\
    \ + decimal%2\n    ", "    binary = \"\"\n    \n    if decimal > 0 \n        binary\
    \ = decimal_to_binary(decimal - 1)\n    end", "    decimal = decimal % 2\n   \
    \ decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal %\
    \ 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    ", "    decimal = decimal % 2\n    binary = \"\"\n    \n    while decimal\
    \ != 0\n        binary = binary + str((decimal % 2) == 0)\n        decimal = decimal\
    \ / 2\n    end\n    \n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(64)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(128)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(256)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(512)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1024)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2048)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(4096)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(8192)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(16384)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32768)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(65536)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(131072)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(262144)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(524288)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1048576)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2097152)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(4194304)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(8388608)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16777216)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(33554432)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(67108864)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(134217728)\n", "    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ", "    binary_string\
    \ = \"\"\n    binary_string += \"0\" * (decimal % 2)\n    binary_string += decimal_to_binary(decimal\
    \ / 2)\n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(30)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(40)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(50)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(60)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(70)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(80)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(90)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(110)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(120)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(130)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(140)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(150)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(160)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(170)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(180)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(190)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(200)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(210)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(220)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(230)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(240)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(250)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(260)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(270)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(280)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_bin", "    decimal = decimal %\
    \ 2\n    if decimal < 0\n        decimal = decimal + 2\n    end\n    binary =\
    \ \"\"\n    while decimal != 0\n        binary = string(decimal, binary)\n   \
    \     decimal = decimal / 2\n    end\n    binary = string(binary, \"\")\n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(6)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(9)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(27",
  "    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n        binary\
    \ = binary + \"0\"\n        decimal = decimal // 2\n    binary = binary + \"1\"\
    \n    binary = binary + \"b\"\n    return binary\nend\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(1)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(2)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(3)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(4)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(5)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(6)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(7)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(8)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(9)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(11)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(12)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(13)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(14)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(16)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(17)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(18)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(19)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(20)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(21)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(22)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(23)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(24)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(25)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(26)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(27)\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(28)\n</cell>\n<code language=julia-1.4>\n", "    binary_string\
    \ = \"\"\n    \n    if decimal < 0\n        binary_string = \"-db\"\n        decimal\
    \ = -decimal\n    end\n    \n    while decimal > 0\n        binary_string = string(binary_string,\
    \ \"0\") + (\"1\" if decimal % 2 == 0 else \"0\")\n        decimal = decimal /\
    \ 2\n    end\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-5)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(7)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n</cell>\n<code language=julia-",
  "    decimal = decimal % 2\n    binary = \"\"\n    \n    while decimal != 0\n  \
    \      binary = binary + str((decimal % 2) == 0 ? \"1\" : \"0\")\n        decimal\
    \ = decimal / 2\n    end\n    \n    binary = binary + \"db\"\n    \n    return\
    \ binary\nend", "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    ", "    \n    binary_string =\
    \ \"\"\n    \n    if decimal < 0\n        binary_string = \"db\" + decimal_to_binary(-decimal)\n\
    \        return binary_string\n    \n    binary_string = \"\"\n    \n    while\
    \ decimal > 0\n        binary_string = decimal_to_binary(decimal % 2) + binary_string\n\
    \        decimal = decimal / 2\n    \n    return binary_string", "    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    ", "    binary = \"\"\n    decimal = decimal % 2\n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal //\
    \ 2\n    binary = binary + \"1\"\n    binary = binary + \"db\"\n    return binary\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(30)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(40)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(50)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(60)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(70)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(80)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(90)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(200)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(300)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(400)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(500)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(600)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(700)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(800)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(900)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(3000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(4000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(5000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(6000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(7000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(8000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(9000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000)\n",
  "    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend", "    binary_string = \"\"\n  \
    \  \n    for digit in decimal\n        binary_string += if digit == 1\n      \
    \      \"1\"\n        else\n            \"0\"\n        end\n    end\n    \n  \
    \  return \"db\" + binary_string\nend\n</cell>\n<text>\nNow let's test our function!",
  "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    decimal = decimal % 2\n    binary\
    \ = \"\"\n    \n    if decimal > 0 \n        binary = decimal + binary\n     \
    \   \n        while decimal > 0 \n            decimal = decimal / 2\n        \
    \    binary = decimal + binary\n            \n        return binary\n    else\
    \ \n        binary = decimal + binary\n        \n        while decimal < 0 \n\
    \            decimal = decimal / 2\n            binary = decimal + binary\n  \
    \          \n        return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(7)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(7)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-10)\n\
    </cell>", "    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    \n    return binary_string\nend", " \
    \   \n    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    end\n    \n    while decimal > 0\n\
    \        binary_string = string(binary_string, \"0\") + string(decimal % 2, \"\
    1\")\n        decimal = decimal / 2\n    end\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-10)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_", "    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    ", "    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal %\
    \ 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ", "    binary_string\
    \ = \"\"\n    \n    if decimal > 0 \n        binary_string = \"1\" + decimal_to_binary(decimal\
    \ - 1)\n    else \n        binary_string = \"0\" + decimal_to_binary(-decimal)\n\
    \    \n    return binary_string\nend", "    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ",
  "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    \n    decimal = decimal % 2\n  \
    \  \n    if decimal < 0\n        decimal = decimal + 2\n    \n    binary = \"\"\
    \n    \n    while decimal > 0\n        binary = binary + \"0\"\n        decimal\
    \ = decimal - 1\n    \n    binary = binary + \"1\"\n    \n    return binary\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(-10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(4)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(7)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_to_", "   \
    \ decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    decimal = decimal % 2\n    if decimal\
    \ < 0\n        decimal = decimal + 2\n    binary = \"\"\n    i = 0\n    while\
    \ decimal != 0\n        binary = binary + str((decimal % 2)) + \"b\"\n       \
    \ decimal = decimal / 2\n        i = i + 1\n        if i > 9\n            i =\
    \ i - 9\n            binary = binary + \"db\"\n        end\n    end\n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-2)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(-3)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-4)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-5)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-6)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-7)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-8)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-9)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(25)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(27)\n</cell>", "    binary_string\
    \ = \"\"\n    \n    if decimal < 0\n        binary_string = \"-db\"\n        decimal\
    \ = -decimal\n    end", "    binary = \"\"\n    decimal = decimal % 2\n    while\
    \ decimal > 0\n        binary = binary + \"1\"\n        decimal = decimal / 2\n\
    \    binary = binary + \"0\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000000000000)\n\
    </cell>", "    decimal = decimal % 2\n    if decimal > 0 \n        decimal_to_binary(decimal\
    \ - 1)\n    else\n        decimal_to_binary(decimal + 1)\n    end\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis does not work. `decimal_to_binary(1)` returns\
    \ `1` instead of `'1'`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| a dscore=2 |>\nI like using Base.show:\n<code>\njulia>\
    \ Base.show(io::IO, a::Int) = print(io, \"$a\")\nshow (generic function with 1\
    \ method)", "    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"-db\"\n        decimal = -decimal\n    end", "    binary_string = \"\"\n\
    \    \n    for digit in decimal\n        binary_string += if digit == 0 then \"\
    0\" else \"1\"\n    end\n    \n    binary_string += \"db\"\n    \n    return binary_string\n\
    end\n</cell>\n<text>\nNow let's test our function", "    decimal = decimal % 2\n\
    \    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal\
    \ - 1 if decimal < 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal - 1 if decimal < 0 else decimal\n    decimal\
    \ = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal - 1 if decimal\
    \ < 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal - 1 if decimal < 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal\n    decimal = decimal - 1 if decimal < 0 else\
    \ decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal\
    \ = decimal - 1 if decimal < 0 else decimal\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal - 1 if decimal < 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal -\
    \ 1 if decimal < 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal - 1 if decimal < 0 else decimal\n    decimal\
    \ = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal - 1 if decimal\
    \ < 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal - 1 if decimal < 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal\n    decimal = decimal - 1 if decimal < 0 else\
    \ decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal\
    \ = decimal - 1 if decimal < 0 else decimal\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal - 1 if decimal < 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal -\
    \ 1 if decimal < 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal - 1 if decimal < 0 else decimal\n    decimal\
    \ = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal - 1 if decimal\
    \ < 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n  \
    \  decimal = decimal - 1 if decimal < 0 else decimal\n    decimal = decimal +\
    \ 1 if decimal > 0 else decimal\n    decimal = decimal - 1 if decimal < 0 else\
    \ decimal\n    decimal = decimal + 1 if decimal > 0 else decimal\n    decimal\
    \ = decimal - 1 if decimal < 0 else decimal\n    decimal = decimal + 1 if decimal\
    \ > 0 else decimal\n    decimal = decimal - 1 if decimal < 0 else decimal\n  \
    \  decimal = decimal + 1 if decimal > 0 else decimal\n    decimal = decimal -\
    \ 1 if decimal < 0 else decimal\n    decimal = decimal + 1 if decimal > 0 else\
    \ decimal\n    decimal = decimal - 1 if decimal < 0 else decimal", "    binary_string\
    \ = \"\"\n    \n    decimal = decimal % 2\n    \n    while decimal != 0\n    \
    \    binary_string = binary_string + \"0\"\n        decimal = decimal // 2\n \
    \   end\n    \n    binary_string = binary_string + \"1\"\n    \n    return binary_string\n\
    end", "    decimal = decimal % 2\n    decimal = decimal - decimal%2\n    decimal\
    \ = decimal % 2\n    decimal = decimal - decimal%2\n    decimal = decimal % 2\n\
    \    decimal = decimal - decimal%2\n    decimal = decimal % 2\n    decimal = decimal\
    \ - decimal%2\n    decimal = decimal % 2\n    decimal = decimal - decimal%2\n\
    \    decimal = decimal % 2\n    decimal = decimal - decimal%2\n    decimal = decimal\
    \ % 2\n    decimal = decimal - decimal%2\n    decimal = decimal % 2\n    decimal\
    \ = decimal - decimal%2\n    decimal = decimal % 2\n    decimal = decimal - decimal%2\n\
    \    decimal = decimal % 2\n    decimal = decimal - decimal%2\n    decimal = decimal\
    \ % 2\n    decimal = decimal - decimal%2\n    decimal = decimal % 2\n    decimal\
    \ = decimal - decimal%2\n    decimal = decimal % 2\n    decimal = decimal - decimal%2\n\
    \    decimal = decimal % 2\n    decimal = decimal - decimal%2\n    decimal = decimal\
    \ % 2\n    decimal = decimal - decimal%2\n    decimal = decimal % 2\n    decimal\
    \ = decimal - decimal%2\n    decimal = decimal % 2\n    decimal = decimal - decimal%2\n\
    \    decimal = decimal % 2\n    decimal = decimal - decimal%2\n    decimal = decimal\
    \ % 2\n    decimal = decimal - decimal%2\n    decimal = decimal % 2\n    decimal\
    \ = decimal - decimal%2\n    decimal = decimal % 2\n    decimal = decimal - decimal%2\n\
    \    decimal = decimal % 2\n    decimal = decimal - decimal%2\n    decimal = decimal\
    \ % 2\n    decimal = decimal - decimal%2\n    decimal = decimal % 2\n    decimal\
    \ = decimal - decimal%2\n    decimal = decimal % 2\n    decimal = decimal - decimal%2\n\
    \    decimal = decimal % 2\n    decimal = decimal - decimal%2\n    decimal = decimal\
    \ % 2\n    decimal = decimal - decimal%2\n    decimal = decimal % 2\n    decimal\
    \ = decimal - decimal%2\n    decimal = decimal % 2\n    decimal = decimal - decimal%2\n\
    \    decimal = decimal % 2\n    decimal = decimal - decimal%2\n    decimal = decimal\
    \ % 2\n    decimal = decimal - decimal%2\n    decimal = decimal % 2\n    decimal\
    \ = decimal - decimal%2\n", "    decimal = decimal * 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    ", "    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    ", "    \n    binary_string = \"\"\n    \n    if decimal\
    \ < 0\n        binary_string = \"-db\"\n        decimal = -decimal\n    end",
  "    binary_string = \"\"\n    \n    \n    for i in decimal:\n        binary_string\
    \ += binary_to_decimal(i)\n        \n    return binary_string\nend", "    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    ", "    binary = \"\"\n    decimal = decimal % 2\n    while\
    \ decimal > 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    binary = binary + \"1\"\n    binary = binary + \"db\"\n    return binary\n\
    end", "    binary = \"\"\n    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    while decimal > 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ - 1\n    end\n    binary = binary + \"1\"\n    return binary\nend", "    decimal\
    \ = decimal % 2\n    decimal = decimal + 1 if decimal > 0 else decimal\n    binary\
    \ = \"\"\n    decimal = decimal / 2\n    while decimal > 0\n        binary = binary\
    \ + \"0\"\n        decimal = decimal - 1\n    binary = binary + \"1\"\n    binary\
    \ = binary + \"db\"\n    return binary\nend", "    decimal = decimal % 2\n   \
    \ decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal %\
    \ 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    ", "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    ", "    binary_string = \"\"\n\
    \    \n    for digit in decimal\n        binary_string += if digit == 1\n    \
    \        \"1\"\n        else\n            \"0\"\n        end\n    end\n    \n\
    \    binary_string += \"db\"\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(", "    binary_string = \"\"\n    \n    decimal = decimal %\
    \ 2\n    \n    while decimal != 0\n        binary_string = binary_string + \"\
    0\"\n        decimal = decimal / 2\n    end\n    \n    binary_string = binary_string\
    \ + \"1\"\n    \n    return binary_string\nend", "    binary_string = \"\"\n \
    \   \n    \n    if decimal < 0\n        binary_string = \"-db\"\n        decimal\
    \ = -decimal\n    end\n    \n    \n    while decimal > 0\n        binary_string\
    \ = string(binary_string, \"0\") + string(decimal, \"1\")\n        decimal -=\
    \ 1\n    end\n    \n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-5)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(2)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(3)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(4)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(5)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(6)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(7)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(8)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(9)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(13)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(16)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(19)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(22)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(24)\n</cell>\n<code language=julia-1.5>",
  "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    binary_string = \"\"\n    \n   \
    \ if decimal < 0\n        binary_string = \"db\"\n        decimal = -decimal\n\
    \    end", "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    ", "    decimal = decimal % 2\n\
    \    binary = \"\"\n    while decimal != 0\n        binary = binary + \"0\"\n\
    \        decimal = decimal / 2\n    end\n    binary = binary + \"1\"\n    return\
    \ binary\nend", "    binary_string = \"\"\n    \n    for digit in decimal\n  \
    \      binary_string += if digit == 0 then \"0\" else \"1\"\n    end\n    \n \
    \   binary_string += \"db\"\n    \n    return binary_string\nend\n</cell>\n<text>\n\
    Now let's test our function", "    binary = \"\"\n    decimal = decimal % 2\n\
    \    while decimal > 0\n        binary = binary + \"1\"\n        decimal = decimal\
    \ / 2\n    end\n    binary = binary + \"0\"\n    return binary\nend\n</cell>\n\
    <text>\nNow let's test our function", "    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal\
    \ = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal\
    \ = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ",
  "    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    ", "    decimal = decimal % 2\n    binary\
    \ = \"\"\n    while decimal != 0\n        decimal = decimal / 2\n        binary\
    \ = binary + \"0\"\n    end\n    binary = binary + \"1\"\n    return binary\n\
    end\n\"\"\"", "    binary = \"\"\n    decimal = decimal % 2\n    while decimal\
    \ > 0\n        decimal = decimal / 2\n        binary = \"0\" + binary\n    end\n\
    \    binary = \"1\" + binary\n    return binary\nend", "    decimal = decimal.to_i\n\
    \    binary = \"\"\n    \n    if decimal < 0\n        decimal = -decimal\n   \
    \     binary = reverse binary\n    end\n    \n    while decimal > 0\n        binary\
    \ = binary + str((decimal % 2) == 0 ? \"1\" : \"0\")\n        decimal = decimal\
    \ >> 1\n    end\n    \n    binary = binary + str((decimal % 2) == 0 ? \"1\" :\
    \ \"0\")\n    binary = reverse binary\n    \n    return binary\nend", "    binary\
    \ = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n        decimal =\
    \ decimal / 2\n        binary = binary + \"0\"\n    end\n    binary = binary +\
    \ \"1\"\n    return binary\nend\n\"\"\"", "    binary_string = \"\"\n    \n  \
    \  for digit in decimal\n        binary_string += if digit == 0 then \"0\" else\
    \ \"1\"\n    end\n    \n    return binary_string + \"db\"\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that will convert a decimal number to binary and\
    \ return the string in reverse.", "    binary_string = \"\"\n    decimal = decimal\
    \ % 2\n    while decimal > 0\n        binary_string = string(binary_string, \"\
    0\") + (\"1\" if decimal % 2 == 0 else \"0\")\n        decimal = decimal / 2\n\
    \    end\n    binary_string = \"db\" + binary_string\n    return binary_string\n\
    end", "    decimal = decimal % 2\n    if decimal > 0 \n        decimal_to_binary(decimal\
    \ - 1)\n    else\n        decimal_to_binary(decimal + 1)\n    end\nend", "   \
    \ binary = \"\"\n    decimal = decimal % 2\n    decimal = decimal / 2\n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n\
    \    end\n    binary = binary + \"1\"\n    binary = binary + \"b\"\n    return\
    \ binary\nend\n</cell>\n<text>\nExercise 3\nWrite a function that converts a binary\
    \ number to a decimal number. The function should take in a string and return\
    \ a Int64.", "    binary = \"\"\n    decimal = decimal % 2\n    while decimal\
    \ > 0\n        binary = binary + \"1\"\n        decimal = decimal / 2\n    end\n\
    \    binary = binary + \"0\"\n    binary = binary + \"b\"\n    return binary\n\
    end\n\"\"\"", "    binary_string = \"\"\n    \n    decimal = decimal % 2\n   \
    \ \n    while decimal != 0\n        binary_string = binary_string + \"0\"\n  \
    \      decimal = decimal / 2\n    end\n    \n    binary_string = binary_string\
    \ + \"1\"\n    \n    return binary_string\nend", "    decimal = decimal % 2\n\
    \    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal /\
    \ 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    ", "    binary = \"\"\n    decimal = decimal % 2\n    while decimal\
    \ > 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n    binary\
    \ = binary + \"1\"\n    return binary\nend\n\"\"\"", "    binary = \"\"\n    decimal\
    \ = decimal % 2\n    while decimal != 0\n        binary = binary + \"0\"\n   \
    \     decimal = decimal / 2\n    binary = binary + \"1\"\n    binary = binary\
    \ + \"db\"\n    return binary\nend", "    binary_string = \"\"\n    \n    for\
    \ digit in decimal\n        binary_string += if digit == 0 then \"0\" else \"\
    1\"\n    end\n    \n    binary_string += \"db\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(27)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(28)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(29)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(30)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(31)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(33)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(34)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(35)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(36)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(37)\n\
    </cell>\n<code language=julia-", "    decimal = decimal % 2\n    if decimal >\
    \ 0 \n        decimal_to_binary(decimal/2)\n    else\n        decimal_to_binary(decimal/2)\n\
    \    end\nend", "    decimal = decimal % 2\n    if decimal > 0 \n        decimal_to_binary(decimal\
    \ - 1)\n    end\n    \n    binary = \"\"\n    \n    for digit in decimal_to_binary(decimal)\n\
    \        if digit == 1\n            binary += \"1\"\n        else\n          \
    \  binary += \"0\"\n        end\n    end\n    \n    return \"db\" + binary + \"\
    db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(27)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(28)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(29)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(30)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(31)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(33)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(34)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(35)\n</cell>\n<code language=julia-1.5>\n\
    decimal_", "    binary = \"\"\n    decimal = decimal % 2\n    while decimal >\
    \ 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n    binary\
    \ = binary + \"1\"\n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(25)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(30)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(35)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(40)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(45)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(50)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(55)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(60)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(65)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(70)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(75)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(80)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(85)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(90)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(95)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(105)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(110)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(115)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(120)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(125)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(130)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(135)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(140)\n", "    binary_string\
    \ = \"\"\n    \n    for digit in decimal\n        binary_string += \"0\"\n   \
    \ \n    binary_string += \"db\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"1\"\n    \n    return binary_string\nend", "    decimal = decimal % 2\n\
    \    if decimal > 0 \n        decimal_to_binary(decimal - 1)\n    else\n     \
    \   decimal_to_binary(decimal + 1)\n    end\nend\n\"\"\"", "    binary_string\
    \ = \"\"\n    \n    if decimal < 0\n        binary_string = \"db\"\n        decimal\
    \ = -decimal\n    end", "    \n    decimal = decimal % 2\n    \n    if decimal\
    \ < 0\n        decimal = decimal + 2\n    \n    binary = \"\"\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"1\"\n    \n    binary = binary + \"b\"\n    \n\
    \    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(11)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(12)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(13)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(14)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(16)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(17)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(18)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(19)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(20)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(21)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(22)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(23)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(24)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(25)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(26)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(27)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(28)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(29)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(30)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(31)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(33)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(34)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(35)\n</cell>\n<code language=julia-1.5>\n\
    decimal_", "    \n    binary_string = \"\"\n    \n    if decimal < 0\n       \
    \ binary_string = \"-db\"\n        decimal = -decimal\n    end", "    binary_string\
    \ = \"\"\n    binary_string += \"0\"\n    binary_string += \"1\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string += \"0\"\n    binary_string += \"0\"\n    binary_string\
    \ += \"0\"\n    binary_string ", "    binary = \"\"\n    decimal = decimal.to_i\n\
    \    decimal = decimal % 2\n    while decimal > 0\n        binary = binary + \"\
    1\"\n        decimal = decimal - 1\n    end\n    binary = binary + \"0\"\n   \
    \ binary = binary + \"b\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(2)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(1000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(1000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\n", "    binary_string = \"\"\n    \n    for i in decimal:\n\
    \        binary_string += str((i & 1) == 1)\n        binary_string += \"b\"\n\
    \        \n    binary_string += \"db\"\n    binary_string += binary_string[binary_string.size\
    \ - 2:binary_string.size]\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(5)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000000)\n\
    </cell>\n<code language=juli", "    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    decimal = decimal\
    \ / 2\n    decimal = decimal % 2\n    decimal = decimal / 2\n    decimal = decimal\
    \ % 2\n    decimal = decimal / 2\n    decimal = decimal % 2\n    ", "    \n  \
    \  decimal = decimal.to_i\n    \n    binary_string = \"\"\n    \n    while(decimal\
    \ > 0)\n        binary_string += ((decimal % 2) == 0) ? \"1\" : \"0\"\n      \
    \  decimal /= 2\n    end\n    \n    binary_string = \"db\" + binary_string\n \
    \   \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(1000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(1000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(100000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(10000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(1000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(10000000000000000)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(1000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(10000000000000000000000000)", " \
    \   decimal = decimal * 2\n    decimal = decimal - decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()\n    decimal = decimal + decimal.trunc()\n    decimal\
    \ = decimal + decimal.trunc()"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

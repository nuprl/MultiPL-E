language: jl
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    return join(numbers,\
    \ \" \")\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,sorting |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqhh00fsc.jl:10\nin expression starting at\
    \ /tmp/tmpqhh00fsc.jl:10\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</code>\n<|/ a tags=julia,sorting,string\
    \ |>\n<| c |>\nThis does not work. `sort` does not work on a string. `join` does\
    \ not work on a string. `sort` does not work on a string. `sort` does not work\
    \ on a string. `sort` does not work on a string. `sort` does not work on a string.\
    \ `sort` does not work on a string. `sort` does not work on a string. `sort` does\
    \ not work on a string. `sort` does not work on a string. `sort` does not work\
    \ on a string. `sort` does not work on a string. `sort` does not work on a string.\
    \ `sort` does not work on a string. `sort` does not work on a string. `sort` does\
    \ not work on a string. `sort` does not work on a string. `sort` does not work\
    \ on a string. `sort` does not work on a string. `sort` does not work on a string.\
    \ `sort` does not work on a string. `sort` does not work on a string. `sort` does\
    \ not work on a string. `sort` does not work on a string. `sort` does not work\
    \ on a string. `sort` does not work on a string. `sort` does not work on a string.\
    \ `sort` does not work on a string. `sort` does not work on a string. `sort` does\
    \ not work on a string. `sort` does not work on a string. `sort` does not work\
    \ on a string. `sort` does not work on a string. `sort` does not work on a string.\
    \ `sort` does not work on a string. `sort` does not work on a string. `sort` does\
    \ not work on a string. `sort` does not work on a string. `sort` does not work\
    \ on a string. `sort` does not work on a string. `sort` does not work on a string.\
    \ `sort` does not work on a string. `sort` does not work on a string. `sort` does\
    \ not work on a string. `sort` does not work on a string. `sort` does not work\
    \ on a string. `sort` does not work on a string. `sort` does not work on a string.\
    \ `sort` does not work on a string. `sort` does not work on a string. `sort` does\
    \ not work on a string. `sort` does not work on a string. `sort` does not work\
    \ on a string. `sort` does not work on a string. `sort` does not work on a string.\
    \ `sort` does not work on a string. `sort` does not work on a string. `sort` does\
    \ not work on a string\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpidrrqbt8.jl:11\nin expression starting at\
    \ /tmp/tmpidrrqbt8.jl:11\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = replace(numbers, \" \", \"\")\n    numbers = replace(numbers, \"\
    -\", \"\")\n    numbers = replace(numbers, \",\", \"\")\n    numbers = replace(numbers,\
    \ \"'\", \"\")\n    numbers = replace(numbers, \"\\\"\", \"\")\n    numbers =\
    \ replace(numbers, \"!\", \"\")\n    numbers = replace(numbers, \"(\", \"\")\n\
    \    numbers = replace(numbers, \")\", \"\")\n    numbers = replace(numbers, \"\
    [\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"\\\\\", \"\")\n    numbers = replace(numbers, \"%\", \"\")\n    numbers =\
    \ replace(numbers, \"*\", \"\")\n    numbers = replace(numbers, \"?\", \"\")\n\
    \    numbers = replace(numbers, \"!\", \"\")\n    numbers = replace(numbers, \"\
    =\", \"\")\n    numbers = replace(numbers, \"<\", \"\")\n    numbers = replace(numbers,\
    \ \">\", \"\")\n    numbers = replace(numbers, \"|\", \"\")\n    numbers = replace(numbers,\
    \ \"~\", \"\")\n    numbers = replace(numbers, \"^\", \"\")\n    numbers = replace(numbers,\
    \ \"&\", \"\")\n    numbers = replace(numbers, \"*\", \"\")\n    numbers = replace(numbers,\
    \ \"?\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n    numbers = replace(numbers,\
    \ \"(\", \"\")\n    numbers = replace(numbers, \")\", \"\")\n    numbers = replace(numbers,\
    \ \"[\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"\\\\\", \"\")\n    numbers = replace(numbers, \"%\", \"\")\n    numbers =\
    \ replace(numbers, \"*\", \"\")\n    numbers = replace(numbers, \"?\", \"\")\n\
    \    numbers = replace(numbers, \"!\", \"\")\n    numbers = replace(numbers, \"\
    =\", \"\")\n    numbers = replace(numbers, \"<\", \"\")\n    numbers = replace(numbers,\
    \ \">\", \"\")\n    numbers = replace(numbers, \"|\", \"\")\n    numbers = replace(numbers,\
    \ \"~\", \"\")\n    numbers = replace(numbers, \"^\", \"\")\n    numbers = replace(numbers,\
    \ \"&\", \"\")\n    numbers = replace(numbers, \"*\", \"\")\n    numbers = replace(numbers,\
    \ \"?\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n    numbers = replace(numbers,\
    \ \"(\", \"\")\n    numbers = replace(numbers, \")\", \"\")\n    numbers = replace(numbers,\
    \ \"[\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"\\\\\", \"\")\n    numbers = replace(numbers, \"%\", \"\")\n    number\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr16t1q8g.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr16t1q8g.jl:1\n\
    in expression starting at /tmp/tmpr16t1q8g.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuua095id.jl:6\nin expression\
    \ starting at /tmp/tmpuua095id.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    numbers.sort!\n    \n    return\
    \ numbers.join(\" \")\nend\n</cell>\n<code language=julia-1.5>\nsort_numbers(\"\
    one two three four five six seven eight nine\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string and returns a string with all the words capitalized.\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk5zzwm8b.jl:12\nin expression starting at\
    \ /tmp/tmpk5zzwm8b.jl:12\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    numbers.sort!\n    \n    return\
    \ numbers.join(\" \")\nend\n</cell>\n<code language=julia-1.5>\nsort_numbers(\"\
    one two three four five six seven eight nine\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the string with all\
    \ lowercase letters replaced by uppercase letters.\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcbjm5_05.jl:12\nin expression starting at\
    \ /tmp/tmpcbjm5_05.jl:12\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-3]\n\
    \    numbers = numbers[2:-4]\n    numbers = numbers[2:-5]\n    numbers = numbers[2:-6]\n\
    \    numbers = numbers[2:-7]\n    numbers = numbers[2:-8]\n    numbers = numbers[2:-9]\n\
    \    numbers = numbers[2:-10]\n    numbers = numbers[2:-11]\n    numbers = numbers[2:-12]\n\
    \    numbers = numbers[2:-13]\n    numbers = numbers[2:-14]\n    numbers = numbers[2:-15]\n\
    \    numbers = numbers[2:-16]\n    numbers = numbers[2:-17]\n    numbers = numbers[2:-18]\n\
    \    numbers = numbers[2:-19]\n    numbers = numbers[2:-20]\n    numbers = numbers[2:-21]\n\
    \    numbers = numbers[2:-22]\n    numbers = numbers[2:-23]\n    numbers = numbers[2:-24]\n\
    \    numbers = numbers[2:-25]\n    numbers = numbers[2:-26]\n    numbers = numbers[2:-27]\n\
    \    numbers = numbers[2:-28]\n    numbers = numbers[2:-29]\n    numbers = numbers[2:-30]\n\
    \    numbers = numbers[2:-31]\n    numbers = numbers[2:-32]\n    numbers = numbers[2:-33]\n\
    \    numbers = numbers[2:-34]\n    numbers = numbers[2:-35]\n    numbers = numbers[2:-36]\n\
    \    numbers = numbers[2:-37]\n    numbers = numbers[2:-38]\n    numbers = numbers[2:-39]\n\
    \    numbers = numbers[2:-40]\n    numbers = numbers[2:-41]\n    numbers = numbers[2:-42]\n\
    \    numbers = numbers[2:-43]\n    numbers = numbers[2:-44]\n    numbers = numbers[2:-45]\n\
    \    numbers = numbers[2:-46]\n    numbers = numbers[2:-47]\n    numbers = numbers[2:-48]\n\
    \    numbers = numbers[2:-49]\n    numbers = numbers[2:-50]\n    numbers = numbers[2:-51]\n\
    \    numbers = numbers[2:-52]\n    numbers = numbers[2:-53]\n    numbers = numbers[2:-54]\n\
    \    numbers = \nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbpm2ly_1.jl:6\nin expression\
    \ starting at /tmp/tmpbpm2ly_1.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</code>\n<|/ a tags=julia,sorting,string\
    \ |>\n<| c |>\nI like your solution, however I do not understand how it works.\
    \ Could you please explain how it works?\n<|/ c |>\n<| c |>\nI added some comments\
    \ to the code. Hope it helps.\n<|/ c |>\n<| a tags=julia,sorting,string |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj9eeen8s.jl:11\nin expression starting at\
    \ /tmp/tmpj9eeen8s.jl:11\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers\
    \ = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k568lia.jl:71\nin expression starting at\
    \ /tmp/tmp7k568lia.jl:71\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-3]\n\
    \    numbers = numbers[2:-4]\n    numbers = numbers[2:-5]\n    numbers = numbers[2:-6]\n\
    \    numbers = numbers[2:-7]\n    numbers = numbers[2:-8]\n    numbers = numbers[2:-9]\n\
    \    numbers = numbers[2:-10]\n    numbers = numbers[2:-11]\n    numbers = numbers[2:-12]\n\
    \    numbers = numbers[2:-13]\n    numbers = numbers[2:-14]\n    numbers = numbers[2:-15]\n\
    \    numbers = numbers[2:-16]\n    numbers = numbers[2:-17]\n    numbers = numbers[2:-18]\n\
    \    numbers = numbers[2:-19]\n    numbers = numbers[2:-20]\n    numbers = numbers[2:-21]\n\
    \    numbers = numbers[2:-22]\n    numbers = numbers[2:-23]\n    numbers = numbers[2:-24]\n\
    \    numbers = numbers[2:-25]\n    numbers = numbers[2:-26]\n    numbers = numbers[2:-27]\n\
    \    numbers = numbers[2:-28]\n    numbers = numbers[2:-29]\n    numbers = numbers[2:-30]\n\
    \    numbers = numbers[2:-31]\n    numbers = numbers[2:-32]\n    numbers = numbers[2:-33]\n\
    \    numbers = numbers[2:-34]\n    numbers = numbers[2:-35]\n    numbers = numbers[2:-36]\n\
    \    numbers = numbers[2:-37]\n    numbers = numbers[2:-38]\n    numbers = numbers[2:-39]\n\
    \    numbers = numbers[2:-40]\n    numbers = numbers[2:-41]\n    numbers = numbers[2:-42]\n\
    \    numbers = numbers[2:-43]\n    numbers = numbers[2:-44]\n    numbers = numbers[2:-45]\n\
    \    numbers = numbers[2:-46]\n    numbers = numbers[2:-47]\n    numbers = numbers[2:-48]\n\
    \    numbers = numbers[2:-49]\n    numbers = numbers[2:-50]\n    numbers = numbers[2:-51]\n\
    \    numbers = numbers[2:-52]\n    numbers = numbers[2:-53]\n    numbers = numbers[2:-54]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpe4ysk9pw.jl:7\nin expression\
    \ starting at /tmp/tmpe4ysk9pw.jl:7\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    numbers.sort!\n    \n    return\
    \ numbers.join(\" \")\nend\n</cell>\n<code language=julia-1.5>\nsort_numbers(\"\
    one two three four five six seven eight nine\")\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a string and returns a string with all the words in the\
    \ string capitalized.\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkmm_xa_h.jl:12\nin expression starting at\
    \ /tmp/tmpkmm_xa_h.jl:12\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThanks for your answer! I understand that my code is not the most efficient\
    \ one, but I wanted to see how it could be done in Julia. I'm still a beginner\
    \ in Julia, so I appreciate your help.\n<|/ c |>\n<| c |>\nI added a more efficient\
    \ version that uses `sort!` instead of `sort`.\n<|/ c |>\n<| c |>\nThank you so\
    \ much! I really appreciate your help!\n<|/ c |>\n<| a tags=julia,sorting |>\n\
    The answer by is correct, but I wanted to show how you can do this without using\
    \ any packages. \n<code>\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5o848j6o.jl:11\nin expression starting at\
    \ /tmp/tmp5o848j6o.jl:11\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-4]\n\
    \    numbers = numbers[2:-3]\n    numbers = numbers[2:-5]\n    numbers = numbers[2:-6]\n\
    \    numbers = numbers[2:-7]\n    numbers = numbers[2:-8]\n    numbers = numbers[2:-9]\n\
    \    numbers = numbers[2:-10]\n    numbers = numbers[2:-11]\n    numbers = numbers[2:-12]\n\
    \    numbers = numbers[2:-13]\n    numbers = numbers[2:-14]\n    numbers = numbers[2:-15]\n\
    \    numbers = numbers[2:-16]\n    numbers = numbers[2:-17]\n    numbers = numbers[2:-18]\n\
    \    numbers = numbers[2:-19]\n    numbers = numbers[2:-20]\n    numbers = numbers[2:-21]\n\
    \    numbers = numbers[2:-22]\n    numbers = numbers[2:-23]\n    numbers = numbers[2:-24]\n\
    \    numbers = numbers[2:-25]\n    numbers = numbers[2:-26]\n    numbers = numbers[2:-27]\n\
    \    numbers = numbers[2:-28]\n    numbers = numbers[2:-29]\n    numbers = numbers[2:-30]\n\
    \    numbers = numbers[2:-31]\n    numbers = numbers[2:-32]\n    numbers = numbers[2:-33]\n\
    \    numbers = numbers[2:-34]\n    numbers = numbers[2:-35]\n    numbers = numbers[2:-36]\n\
    \    numbers = numbers[2:-37]\n    numbers = numbers[2:-38]\n    numbers = numbers[2:-39]\n\
    \    numbers = numbers[2:-40]\n    numbers = numbers[2:-41]\n    numbers = numbers[2:-42]\n\
    \    numbers = numbers[2:-43]\n    numbers = numbers[2:-44]\n    numbers = numbers[2:-45]\n\
    \    numbers = numbers[2:-46]\n    numbers = numbers[2:-47]\n    numbers = numbers[2:-48]\n\
    \    numbers = numbers[2:-49]\n    numbers = numbers[2:-50]\n    numbers = numbers[2:-51]\n\
    \    numbers = numbers[2:-52]\n    numbers = numbers[2:-53]\n    numbers = numbers[2:-54]\n\
    \    numbers = \nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp95i_ku1m.jl:6\nin expression\
    \ starting at /tmp/tmp95i_ku1m.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers\
    \ = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k568lia.jl:71\nin expression starting at\
    \ /tmp/tmp7k568lia.jl:71\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpepuo6pl4.jl:6\nin expression\
    \ starting at /tmp/tmpepuo6pl4.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp1vjlnzfr.jl:16\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmp1vjlnzfr.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1vjlnzfr.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1vjlnzfr.jl:15\ntest set: Error
    During Test at /tmp/tmp1vjlnzfr.jl:17\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp1vjlnzfr.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1vjlnzfr.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1vjlnzfr.jl:15\ntest set: Error
    During Test at /tmp/tmp1vjlnzfr.jl:18\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmp1vjlnzfr.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1vjlnzfr.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1vjlnzfr.jl:15\ntest set: Error
    During Test at /tmp/tmp1vjlnzfr.jl:19\n  Test threw exception\n  Expression:'
  timestamp: 1659748490
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers\
    \ = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k568lia.jl:71\nin expression starting at\
    \ /tmp/tmp7k568lia.jl:71\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort\n    return join(numbers,\
    \ \" \")\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\nA simple solution:\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpib3ysalt.jl:10\nin expression starting at\
    \ /tmp/tmpib3ysalt.jl:10\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpepuo6pl4.jl:6\nin expression\
    \ starting at /tmp/tmpepuo6pl4.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    \n\
    \    return join(numbers, \" \")\nend\n</cell>\n<code language=julia-1.5>\nsort_numbers(\"\
    one two three four five six seven eight nine\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string as input and returns the string with each\
    \ word capitalized.\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7mp2c5_x.jl:12\nin expression starting at\
    \ /tmp/tmp7mp2c5_x.jl:12\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx23klk2u.jl:7\nin expression\
    \ starting at /tmp/tmpx23klk2u.jl:7\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers\
    \ = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k568lia.jl:71\nin expression starting at\
    \ /tmp/tmp7k568lia.jl:71\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers\
    \ = numbers[2:]\n    \n    numbers = numbers[2:]\n    \n    numbers = numbers[2:]\n\
    \    \n    numbers = numbers[2:]\n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxi9nhmzb.jl:7\nin expression\
    \ starting at /tmp/tmpxi9nhmzb.jl:7\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if you have a number\
    \ like \"nineteen\" because \"nineteen\" comes before \"nine\" in the alphabet.\
    \  It also doesn't work if you have a number like \"twenty-two\" because \"twenty-two\"\
    \ comes before \"twenty\" in the alphabet.\n<|/ c |>\n<| c |>\nI agree with you\
    \ that this is a very bad solution. However I believe that it is still a good\
    \ solution to the problem as stated in the question. As I understand it, OP wants\
    \ to sort numbers from smallest to largest. Hence the use of \"sort_numbers\"\
    \ function.\n<|/ c |>\n<| c |>\nI agree with you that this is a very bad solution.\
    \ However I believe that it is still a good solution to the problem as stated\
    \ in the question. As I understand it, OP wants to sort numbers from smallest\
    \ to largest. Hence the use of \"sort_numbers\" function.\n<|/ c |>\n<| c |>\n\
    I agree with you that this is a very bad solution. However I believe that it is\
    \ still a good solution to the problem as stated in the question. As I understand\
    \ it, OP wants to sort numbers from smallest to largest. Hence the use of \"sort_numbers\"\
    \ function.\n<|/ c |>\n<| c |>\nI agree with you that this is a very bad solution.\
    \ However I believe that it is still a good solution to the problem as stated\
    \ in the question. As I understand it, OP wants to sort numbers from smallest\
    \ to largest. Hence the use of \"sort_numbers\" function.\n<|/ c |>\n<| a dscore=4\
    \ |>\nThe solutions above are all good, but I thought I'd add my own.\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprnco5dh6.jl:10\nin expression starting at\
    \ /tmp/tmprnco5dh6.jl:10\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</code>\n<|/ a tags=julia |>\n\
    <| a tags=julia |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpth6lhzud.jl:11\nin expression starting at\
    \ /tmp/tmpth6lhzud.jl:11\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</cell>\n<code language=julia-1.0>\nsort_numbers(\"one two three four\
    \ five six seven eight nine\")\n</cell>\n<text>\nExercise: Write a function that\
    \ takes a string and returns the string with all the words capitalized. For example,\
    \ \"The quick brown fox jumps over the lazy dog\" should return \"The Quick Brown\
    \ Fox Jumps Over The Lazy Dog\"\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqboqu6a2.jl:10\nin expression starting at\
    \ /tmp/tmpqboqu6a2.jl:10\n"
  stdout: ''
  timestamp: 1659748490
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuua095id.jl:6\nin expression\
    \ starting at /tmp/tmpuua095id.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    \n    numbers = sort(numbers)\n\
    \    \n    numbers = join(numbers, \" \")\n    \n    return numbers\nend\n</cell>\n\
    <code language=julia-1.5>\nsort_numbers(\"one two three four five six seven eight\
    \ nine\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as\
    \ input and returns the string with all numbers in descending order.\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd4a_tr9w.jl:15\nin expression starting at\
    \ /tmp/tmpd4a_tr9w.jl:15\n"
  stdout: ''
  timestamp: 1659748490
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-3]\n\
    \    numbers = numbers[2:-4]\n    numbers = numbers[2:-5]\n    numbers = numbers[2:-6]\n\
    \    numbers = numbers[2:-7]\n    numbers = numbers[2:-8]\n    numbers = numbers[2:-9]\n\
    \    numbers = numbers[2:-10]\n    numbers = numbers[2:-11]\n    numbers = numbers[2:-12]\n\
    \    numbers = numbers[2:-13]\n    numbers = numbers[2:-14]\n    numbers = numbers[2:-15]\n\
    \    numbers = numbers[2:-16]\n    numbers = numbers[2:-17]\n    numbers = numbers[2:-18]\n\
    \    numbers = numbers[2:-19]\n    numbers = numbers[2:-20]\n    numbers = numbers[2:-21]\n\
    \    numbers = numbers[2:-22]\n    numbers = numbers[2:-23]\n    numbers = numbers[2:-24]\n\
    \    numbers = numbers[2:-25]\n    numbers = numbers[2:-26]\n    numbers = numbers[2:-27]\n\
    \    numbers = numbers[2:-28]\n    numbers = numbers[2:-29]\n    numbers = numbers[2:-30]\n\
    \    numbers = numbers[2:-31]\n    numbers = numbers[2:-32]\n    numbers = numbers[2:-33]\n\
    \    numbers = numbers[2:-34]\n    numbers = numbers[2:-35]\n    numbers = numbers[2:-36]\n\
    \    numbers = numbers[2:-37]\n    numbers = numbers[2:-38]\n    numbers = numbers[2:-39]\n\
    \    numbers = numbers[2:-40]\n    numbers = numbers[2:-41]\n    numbers = numbers[2:-42]\n\
    \    numbers = numbers[2:-43]\n    numbers = numbers[2:-44]\n    numbers = numbers[2:-45]\n\
    \    numbers = numbers[2:-46]\n    numbers = numbers[2:-47]\n    numbers = numbers[2:-48]\n\
    \    numbers = numbers[2:-49]\n    numbers = numbers[2:-50]\n    numbers = numbers[2:-51]\n\
    \    numbers = numbers[2:-52]\n    numbers = numbers[2:-53]\n    numbers = numbers[2:-54]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpe4ysk9pw.jl:7\nin expression\
    \ starting at /tmp/tmpe4ysk9pw.jl:7\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    numbers.join(\", \"\
    )\nend\n</code>\n<|/ a tags=julia,sorting,string |>\n<| c |>\n`sort!` modifies\
    \ the array in-place, so `numbers = sort(numbers)` would be more idiomatic.\n\
    <|/ c |>\n<| c |>\nThanks for the suggestion! I edited my answer to include your\
    \ suggestion.\n<|/ c |>\n<| a tags=julia,sorting,string |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxxm21stu.jl:10\nin expression starting at\
    \ /tmp/tmpxxm21stu.jl:10\n"
  stdout: ''
  timestamp: 1659748490
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = replace(numbers, ' ', '')\n    numbers = replace(numbers, '-',\
    \ '')\n    numbers = replace(numbers, '/', '')\n    numbers = replace(numbers,\
    \ '\\\\', '')\n    numbers = replace(numbers, '0', 'one')\n    numbers = replace(numbers,\
    \ '1', 'two')\n    numbers = replace(numbers, '2', 'three')\n    numbers = replace(numbers,\
    \ '3', 'four')\n    numbers = replace(numbers, '4', 'five')\n    numbers = replace(numbers,\
    \ '5', 'six')\n    numbers = replace(numbers, '6', 'seven')\n    numbers = replace(numbers,\
    \ '7', 'eight')\n    numbers = replace(numbers, '8', 'nine')\n    numbers = replace(numbers,\
    \ '9', 'ten')\n    numbers = replace(numbers, '', 'zero')\n    numbers = replace(numbers,\
    \ '-', 'hyphen')\n    numbers = replace(numbers, '/', 'slash')\n    numbers =\
    \ replace(numbers, '\\\\', 'backslash')\n    numbers = replace(numbers, '0', 'zero')\n\
    \    numbers = replace(numbers, '1', 'one')\n    numbers = replace(numbers, '2',\
    \ 'two')\n    numbers = replace(numbers, '3', 'three')\n    numbers = replace(numbers,\
    \ '4', 'four')\n    numbers = replace(numbers, '5', 'five')\n    numbers = replace(numbers,\
    \ '6', 'six')\n    numbers = replace(numbers, '7', 'seven')\n    numbers = replace(numbers,\
    \ '8', 'eight')\n    numbers = replace(numbers, '9', 'nine')\n    numbers = replace(numbers,\
    \ '', 'empty')\n    numbers = replace(numbers, '-', 'hyphen')\n    numbers = replace(numbers,\
    \ '/', 'slash')\n    numbers = replace(numbers, '\\\\', 'backslash')\n    numbers\
    \ = replace(numbers, '0', 'zero')\n    numbers = replace(numbers, '1', 'one')\n\
    \    numbers = replace(numbers, '2', 'two')\n    numbers = replace(numbers, '3',\
    \ 'three')\n    numbers = replace(numbers, '4', 'four')\n    numbers = replace(numbers,\
    \ '5', 'five')\n    numbers = replace(numbers, '6', 'six')\n    numbers = replace(numbers,\
    \ '7', 'seven')\n    numbers = replace(numbers, '8', 'eight')\n    numbers = replace(numbers,\
    \ '9', 'nine')\n    numbers = replace(numbers, '', 'empty')\n    numbers = replace(numbers,\
    \ '-', 'hyphen')\n    numbers = replace(numbers, '/', 'slash')\n    numbers =\
    \ replace(numbers, '\\\\', 'backslash')\n    numbers = replace(numbers, '0', 'zero')\n\
    \    numbers = replace(numbers, '1', 'one')\n\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpihjoxk95.jl:6\nin expression starting at /tmp/tmpihjoxk95.jl:6\n"
  stdout: ''
  timestamp: 1659748490
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuua095id.jl:6\nin expression\
    \ starting at /tmp/tmpuua095id.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</cell>\n<code language=julia-1.5>\nsort_numbers(\"one two three four\
    \ five six seven eight nine\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string as input and returns a string with all the characters in\
    \ lower case. \nFor example \"Hello World\" returns \"hello world\".\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1cm15vs3.jl:10\nin expression starting at\
    \ /tmp/tmp1cm15vs3.jl:10\n"
  stdout: ''
  timestamp: 1659748490
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    return join(numbers,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpjuiq39jz.jl:15\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpjuiq39jz.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjuiq39jz.jl:15 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjuiq39jz.jl:14\ntest set: Error
    During Test at /tmp/tmpjuiq39jz.jl:16\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpjuiq39jz.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjuiq39jz.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjuiq39jz.jl:14\ntest set: Error
    During Test at /tmp/tmpjuiq39jz.jl:17\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpjuiq39jz.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjuiq39jz.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjuiq39jz.jl:14\ntest set: Error
    During Test at /tmp/tmpjuiq39jz.jl:18\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpepuo6pl4.jl:6\nin expression\
    \ starting at /tmp/tmpepuo6pl4.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-3]\n\
    \    numbers = numbers[2:-4]\n    numbers = numbers[2:-5]\n    numbers = numbers[2:-6]\n\
    \    numbers = numbers[2:-7]\n    numbers = numbers[2:-8]\n    numbers = numbers[2:-9]\n\
    \    numbers = numbers[2:-10]\n    numbers = numbers[2:-11]\n    numbers = numbers[2:-12]\n\
    \    numbers = numbers[2:-13]\n    numbers = numbers[2:-14]\n    numbers = numbers[2:-15]\n\
    \    numbers = numbers[2:-16]\n    numbers = numbers[2:-17]\n    numbers = numbers[2:-18]\n\
    \    numbers = numbers[2:-19]\n    numbers = numbers[2:-20]\n    numbers = numbers[2:-21]\n\
    \    numbers = numbers[2:-22]\n    numbers = numbers[2:-23]\n    numbers = numbers[2:-24]\n\
    \    numbers = numbers[2:-25]\n    numbers = numbers[2:-26]\n    numbers = numbers[2:-27]\n\
    \    numbers = numbers[2:-28]\n    numbers = numbers[2:-29]\n    numbers = numbers[2:-30]\n\
    \    numbers = numbers[2:-31]\n    numbers = numbers[2:-32]\n    numbers = numbers[2:-33]\n\
    \    numbers = numbers[2:-34]\n    numbers = numbers[2:-35]\n    numbers = numbers[2:-36]\n\
    \    numbers = numbers[2:-37]\n    numbers = numbers[2:-38]\n    numbers = numbers[2:-39]\n\
    \    numbers = numbers[2:-40]\n    numbers = numbers[2:-41]\n    numbers = numbers[2:-42]\n\
    \    numbers = numbers[2:-43]\n    numbers = numbers[2:-44]\n    numbers = numbers[2:-45]\n\
    \    numbers = numbers[2:-46]\n    numbers = numbers[2:-47]\n    numbers = numbers[2:-48]\n\
    \    numbers = numbers[2:-49]\n    numbers = numbers[2:-50]\n    numbers = numbers[2:-51]\n\
    \    numbers = numbers[2:-52]\n    numbers = numbers[2:-53]\n    numbers = numbers[2:-54]\n\
    \    numbers = \nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbpm2ly_1.jl:6\nin expression\
    \ starting at /tmp/tmpbpm2ly_1.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpgitew2ch.jl:15\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:15 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:16\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpgitew2ch.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:17\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:18\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpddczjlxj.jl:11\nin expression starting at\
    \ /tmp/tmpddczjlxj.jl:11\n"
  stdout: ''
  timestamp: 1659748491
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    numbers.sort!\n    \n    return\
    \ numbers.join(\" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmprmo66omp.jl:17\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmprmo66omp.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprmo66omp.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprmo66omp.jl:16\ntest set: Error
    During Test at /tmp/tmprmo66omp.jl:18\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmprmo66omp.jl:7\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprmo66omp.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprmo66omp.jl:16\ntest set: Error
    During Test at /tmp/tmprmo66omp.jl:19\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmprmo66omp.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprmo66omp.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprmo66omp.jl:16\ntest set: Error
    During Test at /tmp/tmprmo66omp.jl:20\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpepuo6pl4.jl:6\nin expression\
    \ starting at /tmp/tmpepuo6pl4.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers\
    \ = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k568lia.jl:71\nin expression starting at\
    \ /tmp/tmp7k568lia.jl:71\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</code>\n<|/ a tags=julia,sorting,string |>\n<| c |>\nThis doesn't\
    \ work if the numbers are in descending order. `sort_numbers(\"nine eight six\
    \ five four three two one zero\")` returns `\"zero one two three four five six\
    \ seven eight\"`.\n<|/ c |>\n<| a tags=julia,sorting,string |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2melunt6.jl:10\nin expression starting at\
    \ /tmp/tmp2melunt6.jl:10\n"
  stdout: ''
  timestamp: 1659748490
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</cell>\n<code language=julia-1.4>\n\
    sort_numbers(\"one two three four five six seven eight nine\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the string with all\
    \ numbers in reverse order. For example, sort_numbers(\"one two three four five\
    \ six seven eight nine\") should return \"nine eight seven six five four three\
    \ two one\".\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0snvndbq.jl:11\nin expression starting at\
    \ /tmp/tmp0snvndbq.jl:11\n"
  stdout: ''
  timestamp: 1659748490
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    sort_numbers(\"one two three four five six seven eight nine\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string as input and returns the string\
    \ with all characters converted to uppercase.\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9a4xi6k8.jl:12\nin expression starting at\
    \ /tmp/tmp9a4xi6k8.jl:12\n"
  stdout: ''
  timestamp: 1659748491
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis doesn't work for me in\
    \ Julia 1.5.1: `ERROR: LoadError: MethodError: no method matching sort(::Array{String,1})`\n\
    <|/ c |>\n<| c |>\nI tested this on Julia 1.5.1 and it worked fine. Are you sure\
    \ you have the latest version?\n<|/ c |>\n<| c |>\nI restarted Julia and it worked.\
    \ Thanks!\n<|/ c |>\n<| c |>\nThis doesn't work for me in Julia 1.5.1: `ERROR:\
    \ LoadError: MethodError: no method matching sort(::Array{String,1})`\n<|/ c |>\n\
    <| c |>\nI tested this on Julia 1.5.1 and it worked fine. Are you sure you have\
    \ the latest version?\n<|/ c |>\n<| a dscore=3 |>\nIn Julia 1.5.1 the sort function\
    \ has been changed to sort!\n<code>\njulia> sort([\"one\", \"two\", \"three\"\
    ])\n3-element Array{String,1}:\n \"one\"\n \"two\"\n \"three\"\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ajuahpf.jl:10\nin expression starting at\
    \ /tmp/tmp_ajuahpf.jl:10\n"
  stdout: ''
  timestamp: 1659748491
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</code>\n<|/ a tags=julia,sorting,string\
    \ |>\n<| c |>\nThis doesn't work for me. `sort` doesn't work on strings. I get\
    \ the following error: `MethodError: no method matching sort(::String)`\n<|/ c\
    \ |>\n<| c |>\nI added a version that works with strings. I tested it and it works.\n\
    <|/ c |>\n<| c |>\nThanks, this works. I added a version that works with strings.\
    \ I tested it and it works.\n<|/ c |>\n<| a dscore=2 |>\nThe answer by is correct,\
    \ but I thought I'd add some explanation as to why it works.\nThe sort function\
    \ works on arrays, not strings. Strings are immutable in Julia, so you can't sort\
    \ them. Instead, you need to convert them to arrays of characters. You can do\
    \ this by using the split function which returns a vector of strings. Then you\
    \ can use the sort function on that vector. Finally, you can convert the vector\
    \ back to a string by using the join function.\n<code>\njulia> sort(\"one two\
    \ three\")\nERROR: MethodError: no method matching sort(::String)\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprucg_e5x.jl:11\nin expression starting at\
    \ /tmp/tmprucg_e5x.jl:11\n"
  stdout: ''
  timestamp: 1659748491
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.trim()\n    numbers = numbers.replace(\",\",\"\")\n   \
    \ numbers = numbers.replace(\"\\n\",\"\")\n    numbers = numbers.replace(\"\\\
    t\",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    numbers = numbers.replace(\"\
    \  \",\"\")\n    numbers = numbers.replace(\"  \",\"\")\n    number\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8mz2mog_.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8mz2mog_.jl:1\n\
    in expression starting at /tmp/tmp8mz2mog_.jl:1\n"
  stdout: ''
  timestamp: 1659748491
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-4]\n\
    \    numbers = numbers[2:-8]\n    numbers = numbers[2:-12]\n    numbers = numbers[2:-16]\n\
    \    numbers = numbers[2:-20]\n    numbers = numbers[2:-24]\n    numbers = numbers[2:-28]\n\
    \    numbers = numbers[2:-32]\n    numbers = numbers[2:-36]\n    numbers = numbers[2:-40]\n\
    \    numbers = numbers[2:-44]\n    numbers = numbers[2:-48]\n    numbers = numbers[2:-52]\
    \ \n    numbers = numbers[2:-56]\n    numbers = numbers[2:-60]\n    numbers =\
    \ numbers[2:-64]\n    numbers = numbers[2:-68]\n    numbers = numbers[2:-72] \n\
    \    numbers = numbers[2:-76]\n    numbers = numbers[2:-80]\n    numbers = numbers[2:-84]\n\
    \    numbers = numbers[2:-88]\n    numbers = numbers[2:-92]\n    numbers = numbers[2:-96]\n\
    \    numbers = numbers[2:-100]\n    numbers = numbers[2:-104]\n    numbers = numbers[2:-108]\n\
    \    numbers = numbers[2:-112]\n    numbers = numbers[2:-116]\n    numbers = numbers[2:-120]\n\
    \    numbers = numbers[2:-124]\n    numbers = numbers[2:-128]\n    numbers = numbers[2:-132]\n\
    \    numbers = numbers[2:-136]\n    numbers = numbers[2:-140]\n    numbers = numbers[2:-144]\
    \ \n    numbers = numbers[2:-148]\n    numbers = numbers[2:-152]\n    numbers\
    \ = numbers[2:-156]\n    numbers = numbers[2:-160]\n    numbers = numbers[2:-164]\
    \ \n    numbers = numbers[2:-168]\n    numbers = numbers[2:-172]\n    numbers\
    \ = numbers[2:-176]\n    numbers = numbers[2:-180]\n    numbers = numbers[2:-184]\
    \ \n    numbers = numbers[2:-188]\n    numbers = numbers[2:-192]\n    numbers\
    \ = numbers[2:-196]\n    numbers = numbers[2:-200]\n    numbers = numbers[2:-204]\
    \ \n    numbers = numbers[2:-208]\n    number\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbsvtqr87.jl:7\nin expression\
    \ starting at /tmp/tmpbsvtqr87.jl:7\n"
  stdout: ''
  timestamp: 1659748491
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpepuo6pl4.jl:6\nin expression\
    \ starting at /tmp/tmpepuo6pl4.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    return join(numbers,\
    \ \" \")\nend\n</code>\n<|/ a |>\n<| c |>\nI added a version that doesn't require\
    \ a package\n<|/ c |>\n<| c |>\nI added a version that doesn't require a package\n\
    <|/ c |>\n<| c |>\nI added a version that doesn't require a package\n<|/ c |>\n\
    <| a tags=julia |>\nHere is a version that doesn't require a package:\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgfq1ecd0.jl:10\nin expression starting at\
    \ /tmp/tmpgfq1ecd0.jl:10\n"
  stdout: ''
  timestamp: 1659748491
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    numbers = numbers.join(\"\
    \ \")\n    return numbers\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp1m_2113.jl:11\nin expression starting at\
    \ /tmp/tmpp1m_2113.jl:11\n"
  stdout: ''
  timestamp: 1659748490
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpgitew2ch.jl:15\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:15 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:16\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpgitew2ch.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:17\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:18\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    numbers = numbers.join(\"\
    \ \")\n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpx83kxt6i.jl:16\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpx83kxt6i.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx83kxt6i.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx83kxt6i.jl:15\ntest set: Error
    During Test at /tmp/tmpx83kxt6i.jl:17\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpx83kxt6i.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx83kxt6i.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx83kxt6i.jl:15\ntest set: Error
    During Test at /tmp/tmpx83kxt6i.jl:18\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpx83kxt6i.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx83kxt6i.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx83kxt6i.jl:15\ntest set: Error
    During Test at /tmp/tmpx83kxt6i.jl:19\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpgitew2ch.jl:15\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:15 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:16\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpgitew2ch.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:17\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:18\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-4]\n\
    \    numbers = numbers[2:-3]\n    numbers = numbers[2:-5]\n    numbers = numbers[2:-6]\n\
    \    numbers = numbers[2:-7]\n    numbers = numbers[2:-8]\n    numbers = numbers[2:-9]\n\
    \    numbers = numbers[2:-10]\n    numbers = numbers[2:-11]\n    numbers = numbers[2:-12]\n\
    \    numbers = numbers[2:-13]\n    numbers = numbers[2:-14]\n    numbers = numbers[2:-15]\n\
    \    numbers = numbers[2:-16]\n    numbers = numbers[2:-17]\n    numbers = numbers[2:-18]\n\
    \    numbers = numbers[2:-19]\n    numbers = numbers[2:-20]\n    numbers = numbers[2:-21]\n\
    \    numbers = numbers[2:-22]\n    numbers = numbers[2:-23]\n    numbers = numbers[2:-24]\n\
    \    numbers = numbers[2:-25]\n    numbers = numbers[2:-26]\n    numbers = numbers[2:-27]\n\
    \    numbers = numbers[2:-28]\n    numbers = numbers[2:-29]\n    numbers = numbers[2:-30]\n\
    \    numbers = numbers[2:-31]\n    numbers = numbers[2:-32]\n    numbers = numbers[2:-33]\n\
    \    numbers = numbers[2:-34]\n    numbers = numbers[2:-35]\n    numbers = numbers[2:-36]\n\
    \    numbers = numbers[2:-37]\n    numbers = numbers[2:-38]\n    numbers = numbers[2:-39]\n\
    \    numbers = numbers[2:-40]\n    numbers = numbers[2:-41]\n    numbers = numbers[2:-42]\n\
    \    numbers = numbers[2:-43]\n    numbers = numbers[2:-44]\n    numbers = numbers[2:-45]\n\
    \    numbers = numbers[2:-46]\n    numbers = numbers[2:-47]\n    numbers = numbers[2:-48]\n\
    \    numbers = numbers[2:-49]\n    numbers = numbers[2:-50]\n    numbers = numbers[2:-51]\n\
    \    numbers = numbers[2:-52]\n    numbers = numbers[2:-53]\n    numbers = numbers[2:-54]\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv57qh8wl.jl:7\nin expression\
    \ starting at /tmp/tmpv57qh8wl.jl:7\n"
  stdout: ''
  timestamp: 1659748491
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    numbers = numbers.join(\"\
    \ \")\n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpx83kxt6i.jl:16\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpx83kxt6i.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx83kxt6i.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx83kxt6i.jl:15\ntest set: Error
    During Test at /tmp/tmpx83kxt6i.jl:17\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpx83kxt6i.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx83kxt6i.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx83kxt6i.jl:15\ntest set: Error
    During Test at /tmp/tmpx83kxt6i.jl:18\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpx83kxt6i.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx83kxt6i.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx83kxt6i.jl:15\ntest set: Error
    During Test at /tmp/tmpx83kxt6i.jl:19\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers\
    \ = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k568lia.jl:71\nin expression starting at\
    \ /tmp/tmp7k568lia.jl:71\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort()\n    return numbers.join(\"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpqgl0hswe.jl:15\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpqgl0hswe.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqgl0hswe.jl:15 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqgl0hswe.jl:14\ntest set: Error
    During Test at /tmp/tmpqgl0hswe.jl:16\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpqgl0hswe.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqgl0hswe.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqgl0hswe.jl:14\ntest set: Error
    During Test at /tmp/tmpqgl0hswe.jl:17\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpqgl0hswe.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqgl0hswe.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqgl0hswe.jl:14\ntest set: Error
    During Test at /tmp/tmpqgl0hswe.jl:18\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = replace(numbers, ' ', '')\n    numbers = replace(numbers, '-',\
    \ '')\n    numbers = replace(numbers, ',', '')\n    numbers = replace(numbers,\
    \ '-', '')\n    numbers = replace(numbers, '(', '')\n    numbers = replace(numbers,\
    \ ')', '')\n    numbers = replace(numbers, '/', '')\n    numbers = replace(numbers,\
    \ '\\\\', '')\n    numbers = replace(numbers, '\\'', '')\n    numbers = replace(numbers,\
    \ '\"', '')\n    numbers = replace(numbers, '=', '')\n    numbers = replace(numbers,\
    \ '?', '')\n    numbers = replace(numbers, '!', '')\n    numbers = replace(numbers,\
    \ '%', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '&', '')\n    numbers = replace(numbers, '*', '')\n    numbers = replace(numbers,\
    \ '-', '')\n    numbers = replace(numbers, '+', '')\n    numbers = replace(numbers,\
    \ '%', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '&', '')\n    numbers = replace(numbers, '*', '')\n    numbers = replace(numbers,\
    \ '-', '')\n    numbers = replace(numbers, '+', '')\n    numbers = replace(numbers,\
    \ '%', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '&', '')\n    numbers = replace(numbers, '*', '')\n    numbers = replace(numbers,\
    \ '-', '')\n    numbers = replace(numbers, '+', '')\n    numbers = replace(numbers,\
    \ '%', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '&', '')\n    numbers = replace(numbers, '*', '')\n    numbers = replace(numbers,\
    \ '-', '')\n    numbers = replace(numbers, '+', '')\n    numbers = replace(numbers,\
    \ '%', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '&', '')\n    numbers = replace(numbers, '*', '')\n    numbers = replace(numbers,\
    \ '-', '')\n    numbers = replace(numbers, '+', '')\n    numbers = replace(numbers,\
    \ '%', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdiprfwwg.jl:6\nin expression starting at /tmp/tmpdiprfwwg.jl:6\n"
  stdout: ''
  timestamp: 1659748491
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuua095id.jl:6\nin expression\
    \ starting at /tmp/tmpuua095id.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers.split(\" \")\n    numbers\
    \ = numbers[2:]\n    numbers = numbers.sort()\n    numbers = numbers.reverse()\n\
    \    numbers = numbers.join(\" \")\n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    sort_numbers(\"one two three four five six seven eight nine\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the string with all\
    \ the words capitalized.\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptt1i8jt_.jl:7\nin expression\
    \ starting at /tmp/tmptt1i8jt_.jl:7\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</code>\n<|/ a tags=julia,sorting,string |>\n<| c |>\nThanks for your\
    \ answer! I really appreciate it! I did try the sort function but couldn't get\
    \ it to work. Your answer was very helpful!\n<|/ c |>\n<| a tags=julia,sorting,string\
    \ |>\nYou can use the function sort! to sort a vector of strings:\n<code>\njulia>\
    \ sort!(\"one two three four five six seven eight nine\")\n\"one two three four\
    \ five six seven eight nine\"\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for\
    \ your answer! I really appreciate it! I did try the sort function but couldn't\
    \ get it to work. Your answer was very helpful!\n<|/ c |>\n<| a dscore=1 |>\n\
    You can use the function sort! to sort a vector of strings:\n<code>\njulia> sort!(\"\
    one two three four five six seven eight nine\")\n\"one two three four five six\
    \ seven eight nine\"\n</code>\n<|/ a tags=julia,sorting,string |>\n<| a tags=julia,sorting,string\
    \ |>\n<code>\njulia> sort!(\"one two three four five six seven eight nine\")\n\
    \"one two three four five six seven eight nine\"\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\njulia> sort!(\"one two three four five six seven eight\
    \ nine\")\n\"one two three four five six seven eight nine\"\n</code>\n<|/ a tags=julia,sorting,string\
    \ |>\n<| a |>\n<code>\njulia> sort!(\"one two three four five six seven eight\
    \ nine\")\n\"one two three four five six seven eight nine\"\n</code>\n<|/ a tags=julia,sorting,string\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>\njulia> sort!(\"one two three four five\
    \ six seven eight nine\")\n\"one two three four five six seven eight nine\"\n\
    </code>\n<|/ a tags=julia,sorting,string \nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6a95qo8t.jl:10\nin expression starting at\
    \ /tmp/tmp6a95qo8t.jl:10\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpgitew2ch.jl:15\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:15 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:16\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpgitew2ch.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:17\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:18\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(' ')\n    numbers.sort!\n    numbers = numbers.join('\
    \ ')\n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpe0k3ntow.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpe0k3ntow.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpe0k3ntow.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpe0k3ntow.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpe0k3ntow.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpe0k3ntow.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpe0k3ntow.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpe0k3ntow.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpe0k3ntow.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpe0k3ntow.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpe0k3ntow.jl:6\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpe0k3ntow.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpe0k3ntow.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpe0k3ntow.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpepuo6pl4.jl:6\nin expression\
    \ starting at /tmp/tmpepuo6pl4.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</cell>\n<code language=julia-1.4>\n\
    sort_numbers(\"one two three four five six seven eight nine\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the string with all\
    \ the characters in lower case. For example, \"Hello World\" becomes \"hello world\"\
    .\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsaqq9t18.jl:11\nin expression starting at\
    \ /tmp/tmpsaqq9t18.jl:11\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    sort_numbers(\"one two three four five six seven eight nine\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string as input and returns a string\
    \ with all the characters in lowercase.\nFor example, sort_characters(\"one two\
    \ three four five six seven eight nine\") should return \"one two three four five\
    \ six seven eight nine\".\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpezxu8xeb.jl:12\nin expression starting at\
    \ /tmp/tmpezxu8xeb.jl:12\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = replace(numbers, ' ', '')\n    numbers = replace(numbers, '-',\
    \ '')\n    numbers = replace(numbers, ',', '')\n    numbers = replace(numbers,\
    \ '-', '')\n    numbers = replace(numbers, '/', '')\n    numbers = replace(numbers,\
    \ '\\\\', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '#', '')\n    numbers = replace(numbers, '&', '')\n    numbers = replace(numbers,\
    \ '*', '')\n    numbers = replace(numbers, '!', '')\n    numbers = replace(numbers,\
    \ '%', '')\n    numbers = replace(numbers, '^', '')\n    numbers = replace(numbers,\
    \ '~', '')\n    numbers = replace(numbers, '`', '')\n    numbers = replace(numbers,\
    \ '(', '')\n    numbers = replace(numbers, ')', '')\n    numbers = replace(numbers,\
    \ '[', '')\n    numbers = replace(numbers, ']', '')\n    numbers = replace(numbers,\
    \ '{', '')\n    numbers = replace(numbers, '}', '')\n    numbers = replace(numbers,\
    \ '<', '')\n    numbers = replace(numbers, '>', '')\n    numbers = replace(numbers,\
    \ '=', '')\n    numbers = replace(numbers, '|', '')\n    numbers = replace(numbers,\
    \ '~', '')\n    numbers = replace(numbers, '`', '')\n    numbers = replace(numbers,\
    \ '(', '')\n    numbers = replace(numbers, ')', '')\n    numbers = replace(numbers,\
    \ '[', '')\n    numbers = replace(numbers, ']', '')\n    numbers = replace(numbers,\
    \ '{', '')\n    numbers = replace(numbers, '}', '')\n    numbers = replace(numbers,\
    \ '<', '')\n    numbers = replace(numbers, '>', '')\n    numbers = replace(numbers,\
    \ '=', '')\n    numbers = replace(numbers, '|', '')\n    numbers = replace(numbers,\
    \ '~', '')\n    numbers = replace(numbers, '`', '')\n    numbers = replace(numbers,\
    \ '(', '')\n    numbers = replace(numbers, ')', '')\n    numbers = replace(numbers,\
    \ '[', '')\n    numbers = replace(numbers, ']', '')\n    numbers = replace(numbers,\
    \ '{', '')\n    numbers = replace(numbers, '}', '')\n    numbers = replace(numbers,\
    \ '<', '')\n    numbers = replace(numbers, '>', '')\n    numbers = replace(numbers,\
    \ '=', '')\n    numbers = replace(numbers, '|', '')\n    numbers = replace(numbers,\
    \ '~', '')\n    numbers = replace(numbers, '`', '')\n    numbers = replace(numbers,\
    \ '(', '')\n    numbers = replace(numbers, ')', '')\n    numbers = replace(numbers,\
    \ '[', '')\n    numbers = replace(numbers, ']', '')\n    numbers = replace(numbers,\
    \ '{', '')\n    numbers = replace(numbers, '}', '')\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprai39_ld.jl:6\nin expression starting at /tmp/tmprai39_ld.jl:6\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuua095id.jl:6\nin expression\
    \ starting at /tmp/tmpuua095id.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx23klk2u.jl:7\nin expression\
    \ starting at /tmp/tmpx23klk2u.jl:7\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</code>\n<|/ a dscore=2 |>\n\
    <| a tags=julia,sorting,string |>\nI wrote a package called StringManipulations\
    \ that has a function called sort_numbers that does exactly what you want. \n\
    <code>\nusing StringManipulations\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyrkhewez.jl:11\nin expression starting at\
    \ /tmp/tmpyrkhewez.jl:11\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7_hi600t.jl:7\nin expression\
    \ starting at /tmp/tmp7_hi600t.jl:7\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(' ')\n    numbers.sort!\n    return numbers.join('\
    \ ')\nend\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0xbi931_.jl:10\nin expression starting at\
    \ /tmp/tmp0xbi931_.jl:10\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    \n    numbers.sort!\n    \n   \
    \ return numbers.join(\" \")\nend\n</cell>\n<code language=julia-1.5>\nsort_numbers(\"\
    one two three four five six seven eight nine\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string and returns the string with all vowels replaced\
    \ by 'y'.\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppkf51zvc.jl:13\nin expression starting at\
    \ /tmp/tmppkf51zvc.jl:13\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</cell>\n<code language=julia-1.5>\nsort_numbers(\"one two three four\
    \ five six seven eight nine\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns a string with all the characters in lowercase\
    \ and with spaces replaced by underscores.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpenctdbml.jl:10\nin expression starting at\
    \ /tmp/tmpenctdbml.jl:10\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(' ')\n    numbers.sort!\n    numbers = numbers.join('\
    \ ')\n    return numbers\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb3xo9mer.jl:11\nin expression starting at\
    \ /tmp/tmpb3xo9mer.jl:11\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuua095id.jl:6\nin expression\
    \ starting at /tmp/tmpuua095id.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = replace(numbers, \" \", \"\")\n    numbers = replace(numbers, \"\
    -\", \"\")\n    numbers = replace(numbers, \",\", \"\")\n    numbers = replace(numbers,\
    \ \"'\", \"\")\n    numbers = replace(numbers, \"\\\"\", \"\")\n    numbers =\
    \ replace(numbers, \"%\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n\
    \    numbers = replace(numbers, \"(\", \"\")\n    numbers = replace(numbers, \"\
    )\", \"\")\n    numbers = replace(numbers, \"[\", \"\")\n    numbers = replace(numbers,\
    \ \"]\", \"\")\n    numbers = replace(numbers, \"{\", \"\")\n    numbers = replace(numbers,\
    \ \"}\", \"\")\n    numbers = replace(numbers, \"=\", \"\")\n    numbers = replace(numbers,\
    \ \"[\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"\\\"\", \"\")\n    numbers = replace(numbers, \"%\", \"\")\n    numbers =\
    \ replace(numbers, \"!\", \"\")\n    numbers = replace(numbers, \"(\", \"\")\n\
    \    numbers = replace(numbers, \")\", \"\")\n    numbers = replace(numbers, \"\
    [\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"'\", \"\")\n    numbers = replace(numbers, \"\\\"\", \"\")\n    numbers =\
    \ replace(numbers, \"%\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n\
    \    numbers = replace(numbers, \"(\", \"\")\n    numbers = replace(numbers, \"\
    )\", \"\")\n    numbers = replace(numbers, \"[\", \"\")\n    numbers = replace(numbers,\
    \ \"]\", \"\")\n    numbers = replace(numbers, \"{\", \"\")\n    numbers = replace(numbers,\
    \ \"}\", \"\")\n    numbers = replace(numbers, \"=\", \"\")\n    numbers = replace(numbers,\
    \ \"[\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"\\\"\", \"\")\n    numbers = replace(numbers, \"%\", \"\")\n    numbers =\
    \ replace(numbers, \"!\", \"\")\n    numbers = replace(numbers, \"(\", \"\")\n\
    \    numbers = replace(numbers, \")\", \"\")\n    numbers = replace(numbers, \"\
    [\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"'\", \"\")\n    numbers = replace(numbers, \"\\\"\", \"\")\n    numbers =\
    \ replace(numbers, \"%\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n\
    \    numbers = replace(numbers, \"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpleck6q6a.jl:67\nin expression starting at\
    \ /tmp/tmpleck6q6a.jl:67\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</code>\n<|/ a tags=julia,sorting,string |>\n<| a tags=julia,sorting,string\
    \ |>\nI came up with a solution that is more efficient than sorting the array\
    \ in place. \n<code>\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjy1kbjpc.jl:10\nin expression starting at\
    \ /tmp/tmpjy1kbjpc.jl:10\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7_hi600t.jl:7\nin expression\
    \ starting at /tmp/tmp7_hi600t.jl:7\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers\
    \ = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k568lia.jl:71\nin expression starting at\
    \ /tmp/tmp7k568lia.jl:71\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(' ')\n    numbers.sort()\n    return numbers.join('\
    \ ')\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpf5u4g1kr.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpf5u4g1kr.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpf5u4g1kr.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf5u4g1kr.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf5u4g1kr.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpf5u4g1kr.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpf5u4g1kr.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf5u4g1kr.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf5u4g1kr.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpf5u4g1kr.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpf5u4g1kr.jl:6\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf5u4g1kr.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf5u4g1kr.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpf5u4g1kr.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    numbers = numbers.join(\"\
    \ \")\n    return numbers\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ answer the question. OP wants to sort numbers in ascending order. Your function\
    \ sorts them in descending order.\n<|/ c |>\n<| a tags=sorting,julia |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjaret0x8.jl:11\nin expression starting at\
    \ /tmp/tmpjaret0x8.jl:11\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    numbers = numbers.join(\"\
    \ \")\n    return numbers\nend\n</code>\n<|/ a tags=julia,sorting,arrays |>\n\
    <| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp61rd2j92.jl:11\nin expression starting at\
    \ /tmp/tmp61rd2j92.jl:11\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzfjwm71z.jl:10\nin expression starting at\
    \ /tmp/tmpzfjwm71z.jl:10\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpgitew2ch.jl:15\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:15 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:16\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpgitew2ch.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:17\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpgitew2ch.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgitew2ch.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgitew2ch.jl:14\ntest set: Error
    During Test at /tmp/tmpgitew2ch.jl:18\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7_hi600t.jl:7\nin expression\
    \ starting at /tmp/tmp7_hi600t.jl:7\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = replace(numbers, ' ', '')\n    numbers = replace(numbers, '-',\
    \ '')\n    numbers = replace(numbers, ',', '')\n    numbers = replace(numbers,\
    \ '/', '')\n    numbers = replace(numbers, '\\\\', '')\n    numbers = replace(numbers,\
    \ '%', '')\n    numbers = replace(numbers, '&', '')\n    numbers = replace(numbers,\
    \ '=', '')\n    numbers = replace(numbers, '<', '')\n    numbers = replace(numbers,\
    \ '>', '')\n    numbers = replace(numbers, '~', '')\n    numbers = replace(numbers,\
    \ '*', '')\n    numbers = replace(numbers, '?', '')\n    numbers = replace(numbers,\
    \ '!', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '^', '')\n    numbers = replace(numbers, '&', '')\n    numbers = replace(numbers,\
    \ '*', '')\n    numbers = replace(numbers, '?', '')\n    numbers = replace(numbers,\
    \ '!', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '^', '')\n    numbers = replace(numbers, '&', '')\n    numbers = replace(numbers,\
    \ '*', '')\n    numbers = replace(numbers, '?', '')\n    numbers = replace(numbers,\
    \ '!', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '^', '')\n    numbers = replace(numbers, '&', '')\n    numbers = replace(numbers,\
    \ '*', '')\n    numbers = replace(numbers, '?', '')\n    numbers = replace(numbers,\
    \ '!', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '^', '')\n    numbers = replace(numbers, '&', '')\n    numbers = replace(numbers,\
    \ '*', '')\n    numbers = replace(numbers, '?', '')\n    numbers = replace(numbers,\
    \ '!', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\n    numbers = replace(numbers,\
    \ '^', '')\n    numbers = replace(numbers, '&', '')\n    numbers = replace(numbers,\
    \ '*', '')\n    numbers = replace(numbers, '?', '')\n    numbers = replace(numbers,\
    \ '!', '')\n    numbers = replace(numbers, '#', '')\n    numbers = replace(numbers,\
    \ '$', '')\n    numbers = replace(numbers, '%', '')\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp69y969dr.jl:6\nin expression starting at /tmp/tmp69y969dr.jl:6\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(' ')\n    numbers = sort(numbers)\n    numbers =\
    \ numbers.join(' ')\n    return numbers\nend\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThis doesn't work. `sort` returns a new array and doesn't mutate the original\
    \ array. `numbers = sort(numbers)` should be `numbers = sort(numbers)`\n<|/ c\
    \ |>\n<| c |>\nThanks for catching that. I fixed the code in the answer.\n<|/\
    \ c |>\n<| a dscore=0 |>\nI wrote a function that sorts numbers from smallest\
    \ to largest.\n<code>\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp40n_8myg.jl:11\nin expression starting at\
    \ /tmp/tmp40n_8myg.jl:11\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = replace(numbers, \" \", \"\")\n    numbers = replace(numbers, \"\
    -\", \"\")\n    numbers = replace(numbers, \",\", \"\")\n    numbers = replace(numbers,\
    \ \"'\", \"\")\n    numbers = replace(numbers, \"\\\"\", \"\")\n    numbers =\
    \ replace(numbers, \"%\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n\
    \    numbers = replace(numbers, \"#\", \"\")\n    numbers = replace(numbers, \"\
    $\", \"\")\n    numbers = replace(numbers, \"&\", \"\")\n    numbers = replace(numbers,\
    \ \"*\", \"\")\n    numbers = replace(numbers, \"(\", \"\")\n    numbers = replace(numbers,\
    \ \")\", \"\")\n    numbers = replace(numbers, \"=\", \"\")\n    numbers = replace(numbers,\
    \ \"[\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"<\", \"\")\n    numbers = replace(numbers, \">\", \"\")\n    numbers = replace(numbers,\
    \ \"?\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n    numbers = replace(numbers,\
    \ \"~\", \"\")\n    numbers = replace(numbers, \"*\", \"\")\n    numbers = replace(numbers,\
    \ \"+\", \"\")\n    numbers = replace(numbers, \"-\", \"\")\n    numbers = replace(numbers,\
    \ \".\", \"\")\n    numbers = replace(numbers, \"/\", \"\")\n    numbers = replace(numbers,\
    \ \"\\\\\", \"\")\n    numbers = replace(numbers, \"^\", \"\")\n    numbers =\
    \ replace(numbers, \"%\", \"\")\n    numbers = replace(numbers, \"*\", \"\")\n\
    \    numbers = replace(numbers, \"(\", \"\")\n    numbers = replace(numbers, \"\
    )\", \"\")\n    numbers = replace(numbers, \"=\", \"\")\n    numbers = replace(numbers,\
    \ \"[\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"<\", \"\")\n    numbers = replace(numbers, \">\", \"\")\n    numbers = replace(numbers,\
    \ \"?\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n    numbers = replace(numbers,\
    \ \"~\", \"\")\n    numbers = replace(numbers, \"*\", \"\")\n    numbers = replace(numbers,\
    \ \"+\", \"\")\n    numbers = replace(numbers, \"-\", \"\")\n    numbers = replace(numbers,\
    \ \".\", \"\")\n    numbers = replace(numbers, \"/\", \"\")\n    numbers = replace(numbers,\
    \ \"\\\\\", \"\")\n    numbers = replace(numbers, \"^\", \"\")\n    numbers =\
    \ replace(numbers, \"%\", \"\")\n    numbers = replace(numbers, \"*\", \"\")\n\
    \    numbers = replace(numbers, \"(\", \"\")\n    numbers = replace(numbers, \"\
    )\", \"\")\n    numbers = replace(numbers, \"=\", \"\")\n    \nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid interpolation syntax: \"$\"\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7kk13bp8.jl:14\nin expression starting at\
    \ /tmp/tmp7kk13bp8.jl:14\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    return join(numbers,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpjuiq39jz.jl:15\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpjuiq39jz.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjuiq39jz.jl:15 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjuiq39jz.jl:14\ntest set: Error
    During Test at /tmp/tmpjuiq39jz.jl:16\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpjuiq39jz.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjuiq39jz.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjuiq39jz.jl:14\ntest set: Error
    During Test at /tmp/tmpjuiq39jz.jl:17\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmpjuiq39jz.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjuiq39jz.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjuiq39jz.jl:14\ntest set: Error
    During Test at /tmp/tmpjuiq39jz.jl:18\n  Test threw exception\n  Expression:'
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=2 |>\nI like using sort!\
    \ for sorting arrays:\n<code>\njulia> sort!([1,2,3,4,5,6,7,8,9])\n9  8  7  6 \
    \ 5  4  3  2  1\n</code>\n<|/ a tags=julia |>\n<| a dscore=2 |>\nI like using\
    \ sort! for sorting arrays:\n<code>\njulia> sort!([1,2,3,4,5,6,7,8,9])\n9  8 \
    \ 7  6  5  4  3  2  1\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\nI like\
    \ using sort! for sorting arrays:\n<code>\njulia> sort!([1,2,3,4,5,6,7,8,9])\n\
    9  8  7  6  5  4  3  2  1\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nI like\
    \ using sort! for sorting arrays:\n<code>\njulia> sort!([1,2,3,4,5,6,7,8,9])\n\
    9  8  7  6  5  4  3  2  1\n</code>\n<|/ a tags=julia |>\n<| a dscore=2 |>\nI like\
    \ using sort! for sorting arrays:\n<code>\njulia> sort!([1,2,3,4,5,6,7,8,9])\n\
    9  8  7  6  5  4  3  2  1\n</code>\n<|/ a tags=julia |>\n<| a dscore=2 |>\nI like\
    \ using sort! for sorting arrays:\n<code>\njulia> sort!([1,2,3,4,5,6,7,8,9])\n\
    9  8  7  6  5  4  3  2  1\n</code>\n<|/ a tags=julia |>\n<| a dscore=2 |>\nI like\
    \ using sort! for sorting arrays:\n<code>\njulia> sort!([1,2,3,4,5,6,7,8,9])\n\
    9  8  7  6  5  4  3  2  1\n</code>\n<|/ a tags=julia |>\n<| a |>\nI like using\
    \ sort! for sorting arrays:\n<code>\njulia> sort!([1,2,3,4,5,6,7,8,9])\n9  8 \
    \ 7  6  5  4  3  2  1\n</code>\n<|/ a dscore=2 tags=\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph60c3aoa.jl:10\nin expression starting at\
    \ /tmp/tmph60c3aoa.jl:10\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7_hi600t.jl:7\nin expression\
    \ starting at /tmp/tmp7_hi600t.jl:7\n"
  stdout: ''
  timestamp: 1659748493
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\n</code>\n<|/ a tags=julia,sorting,string\
    \ |>\n<| a dscore=2 |>\nI like to use this simple function:\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_vo_k5pk.jl:11\nin expression starting at\
    \ /tmp/tmp_vo_k5pk.jl:11\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(' ')\n    numbers = sort(numbers)\n    return join(numbers,\
    \ ' ')\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp6x2l65o7.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp6x2l65o7.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp6x2l65o7.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6x2l65o7.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6x2l65o7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp6x2l65o7.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp6x2l65o7.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6x2l65o7.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6x2l65o7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp6x2l65o7.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp6x2l65o7.jl:6\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6x2l65o7.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6x2l65o7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp6x2l65o7.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
  timestamp: 1659748496
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers\
    \ = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k568lia.jl:71\nin expression starting at\
    \ /tmp/tmp7k568lia.jl:71\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx23klk2u.jl:7\nin expression\
    \ starting at /tmp/tmpx23klk2u.jl:7\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers\
    \ = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k568lia.jl:71\nin expression starting at\
    \ /tmp/tmp7k568lia.jl:71\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpepuo6pl4.jl:6\nin expression\
    \ starting at /tmp/tmpepuo6pl4.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.trim()\n    numbers = numbers.replace!(\",\",\"\")\n  \
    \  numbers = numbers.replace!(\"'\",\"\")\n    numbers = numbers.replace!(\"\\\
    \"\",\"\")\n    numbers = numbers.replace!(\";\",\"\")\n    numbers = numbers.replace!(\"\
    \\n\",\"\")\n    numbers = numbers.replace!(\"\\t\",\"\")\n    numbers = numbers.replace!(\"\
    \\r\",\"\")\n    numbers = numbers.replace!(\"\\t\",\"\")\n    numbers = numbers.replace!(\"\
    \\n\",\"\")\n    numbers = numbers.replace!(\"\\r\",\"\")\n    numbers = numbers.replace!(\"\
    \\t\",\"\")\n    numbers = numbers.replace!(\"\\n\",\"\")\n    numbers = numbers.replace!(\"\
    \\r\",\"\")\n    numbers = numbers.replace!(\"\\t\",\"\")\n    numbers = numbers.replace!(\"\
    \\n\",\"\")\n    numbers = numbers.replace!(\"\\r\",\"\")\n    numbers = numbers.replace!(\"\
    \\t\",\"\")\n    numbers = numbers.replace!(\"\\n\",\"\")\n    numbers = numbers.replace!(\"\
    \\r\",\"\")\n    numbers = numbers.replace!(\"\\t\",\"\")\n    numbers = numbers.replace!(\"\
    \\n\",\"\")\n    numbers = numbers.replace!(\"\\r\",\"\")\n    numbers = numbers.replace!(\"\
    \\t\",\"\")\n    numbers = numbers.replace!(\"\\n\",\"\")\n    numbers = numbers.replace!(\"\
    \\r\",\"\")\n    numbers = numbers.replace!(\"\\t\",\"\")\n    numbers = numbers.replace!(\"\
    \\n\",\"\")\n    numbers = numbers.replace!(\"\\r\",\"\")\n    numbers = numbers.replace!(\"\
    \\t\",\"\")\n    numbers = numbers.replace!(\"\\n\",\"\")\n    numbers = numbers.replace!(\"\
    \\r\",\"\")\n    numbers = numbers.replace!(\"\\t\",\"\")\n    numbers = numbers.replace!(\"\
    \\n\",\"\")\n    numbers = numbers.replace!(\"\\r\",\"\")\n    numbers = numbers.replace!(\"\
    \\t\",\"\")\n    numbers = numbers.replace!(\"\\n\",\"\")\n    numbers = numbers.replace!(\"\
    \\r\",\"\")\n    numbers = numbers.replace!(\"\\t\",\"\")\n    numbers = numbers.replace!(\"\
    \\n\",\"\")\n    numbers = numbers.replace!(\"\\r\",\"\")\n    numbers = numbers.replace!(\"\
    \\t\",\"\")\n    numbers = numbers.replace!(\"\\n\",\"\")\n    numbers = numbers.replace!(\"\
    \\r\",\"\")\n    numbers = numbers.replace!(\"\\t\",\"\")\n    numbers = numbers.replace!(\"\
    \\n\",\"\")\n    numbers = numbers.replace!(\"\\r\",\"\")\n    numbers = numbers.replace!(\"\
    \\t\",\"\")\n    numbers = \nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgd9ess5s.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgd9ess5s.jl:1\n\
    in expression starting at /tmp/tmpgd9ess5s.jl:1\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp1vjlnzfr.jl:16\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmp1vjlnzfr.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1vjlnzfr.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1vjlnzfr.jl:15\ntest set: Error
    During Test at /tmp/tmp1vjlnzfr.jl:17\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp1vjlnzfr.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1vjlnzfr.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1vjlnzfr.jl:15\ntest set: Error
    During Test at /tmp/tmp1vjlnzfr.jl:18\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmp1vjlnzfr.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1vjlnzfr.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1vjlnzfr.jl:15\ntest set: Error
    During Test at /tmp/tmp1vjlnzfr.jl:19\n  Test threw exception\n  Expression:'
  timestamp: 1659748490
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx23klk2u.jl:7\nin expression\
    \ starting at /tmp/tmpx23klk2u.jl:7\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = replace(numbers, \" \", \"\")\n    numbers = replace(numbers, \"\
    -\", \"\")\n    numbers = replace(numbers, \"0\", \"\")\n    numbers = replace(numbers,\
    \ \"1\", \"\")\n    numbers = replace(numbers, \"2\", \"\")\n    numbers = replace(numbers,\
    \ \"3\", \"\")\n    numbers = replace(numbers, \"4\", \"\")\n    numbers = replace(numbers,\
    \ \"5\", \"\")\n    numbers = replace(numbers, \"6\", \"\")\n    numbers = replace(numbers,\
    \ \"7\", \"\")\n    numbers = replace(numbers, \"8\", \"\")\n    numbers = replace(numbers,\
    \ \"9\", \"\")\n    numbers = replace(numbers, \"-\", \"\")\n    numbers = replace(numbers,\
    \ \"X\", \"\")\n    numbers = replace(numbers, \"Y\", \"\")\n    numbers = replace(numbers,\
    \ \"Z\", \"\")\n    numbers = replace(numbers, \"A\", \"\")\n    numbers = replace(numbers,\
    \ \"B\", \"\")\n    numbers = replace(numbers, \"C\", \"\")\n    numbers = replace(numbers,\
    \ \"D\", \"\")\n    numbers = replace(numbers, \"E\", \"\")\n    numbers = replace(numbers,\
    \ \"F\", \"\")\n    numbers = replace(numbers, \"G\", \"\")\n    numbers = replace(numbers,\
    \ \"H\", \"\")\n    numbers = replace(numbers, \"I\", \"\")\n    numbers = replace(numbers,\
    \ \"J\", \"\")\n    numbers = replace(numbers, \"K\", \"\")\n    numbers = replace(numbers,\
    \ \"L\", \"\")\n    numbers = replace(numbers, \"M\", \"\")\n    numbers = replace(numbers,\
    \ \"N\", \"\")\n    numbers = replace(numbers, \"O\", \"\")\n    numbers = replace(numbers,\
    \ \"P\", \"\")\n    numbers = replace(numbers, \"Q\", \"\")\n    numbers = replace(numbers,\
    \ \"R\", \"\")\n    numbers = replace(numbers, \"S\", \"\")\n    numbers = replace(numbers,\
    \ \"T\", \"\")\n    numbers = replace(numbers, \"U\", \"\")\n    numbers = replace(numbers,\
    \ \"V\", \"\")\n    numbers = replace(numbers, \"W\", \"\")\n    numbers = replace(numbers,\
    \ \"X\", \"\")\n    numbers = replace(numbers, \"Y\", \"\")\n    numbers = replace(numbers,\
    \ \"Z\", \"\")\n    numbers = replace(numbers, \"0\", \"\")\n    numbers = replace(numbers,\
    \ \"1\", \"\")\n    numbers = replace(numbers, \"2\", \"\")\n    numbers = replace(numbers,\
    \ \"3\", \"\")\n    numbers = replace(numbers, \"4\", \"\")\n    numbers = replace(numbers,\
    \ \"5\", \"\")\n    numbers = replace(numbers, \"6\", \"\")\n    numbers = replace(numbers,\
    \ \"7\", \"\")\n    numbers = replace(numbers, \"8\", \"\")\n    numbers = replace(numbers,\
    \ \"9\", \"\")\n    numbers = replace(numbers, \"-\", \"\")\n    numbers = replace(numbers,\
    \ \"X\", \"\")\n    numbers = replace(numbers, \"Y\", \"\")\n    numbers = replace(numbers,\
    \ \"Z\", \"\")\n    numbers = replace(numbers, \"A\", \"\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp86ufekz9.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp86ufekz9.jl:1\n\
    in expression starting at /tmp/tmp86ufekz9.jl:1\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n    numbers = numbers[2:end]\n\
    \    numbers = numbers[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwipd16xq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwipd16xq.jl:1\n\
    in expression starting at /tmp/tmpwipd16xq.jl:1\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n    numbers = numbers[2:-2]\n\
    \    numbers = numbers[2:-2]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuua095id.jl:6\nin expression\
    \ starting at /tmp/tmpuua095id.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    \n    numbers = numbers.split(\" \")\n    \n    numbers.sort!\n    \n   \
    \ return numbers.join(\" \")\nend\n</cell>\n<code language=julia-1.5>\nsort_numbers(\"\
    one two three four five six seven eight nine\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string and returns a string with all the words in\
    \ lower case. \nThe string may contain multiple words.\nThe function should ignore\
    \ numbers and punctuation.\nThe function should ignore words that are longer than\
    \ 10 characters.\nThe function should ignore words that are shorter than 3 characters.\n\
    The function should ignore words that are longer than 3 characters and shorter\
    \ than 10 characters.\nThe function should ignore words that are longer than 3\
    \ characters and shorter than 10 characters.\nThe function should ignore words\
    \ that are longer than 3 characters and shorter than 10 characters.\nThe function\
    \ should ignore words that are longer than 3 characters and shorter than 10 characters.\n\
    The function should ignore words that are longer than 3 characters and shorter\
    \ than 10 characters.\nThe function should ignore words that are longer than 3\
    \ characters and shorter than 10 characters.\nThe function should ignore words\
    \ that are longer than 3 characters and shorter than 10 characters.\nThe function\
    \ should ignore words that are longer than 3 characters and shorter than 10 characters.\n\
    The function should ignore words that are longer than 3 characters and shorter\
    \ than 10 characters.\nThe function should ignore words that are longer than 3\
    \ characters and shorter than 10 characters.\nThe function should ignore words\
    \ that are longer than 3 characters and shorter than 10 characters.\nThe function\
    \ should ignore words that are longer than 3 characters and shorter than 10 characters.\n\
    The function should ignore words that are longer than 3 characters and shorter\
    \ than 10 characters.\nThe function should ignore words that are longer than 3\
    \ characters and shorter than 10 characters.\nThe function should ignore words\
    \ that are longer than 3 characters and shorter than 10 characters.\nThe function\
    \ should ignore words that are longer than 3 characters and shorter than 10 characters.\n\
    The function should ignore words that are longer than 3 characters and shorter\
    \ than 10 characters.\nThe function should ignore words that are longer than 3\
    \ characters and shorter than 10 characters.\nThe function should ignore words\
    \ that are longer than 3 characters and shorter than 10 characters.\nThe function\
    \ should ignore words that are longer than 3 characters and shorter than 10 characters.\n\
    The function should ignore words that are longer than 3 characters and shorter\
    \ than 10 characters.\nThe function should ignore words that are longer than 3\
    \ characters and shorter than 10 characters.\nThe function should ignore words\
    \ that are longer than 3 characters and shorter than 10 characters.\nThe function\
    \ should ignore words that are longer than 3 characters and shorter than 10 characters.\n\
    The function should ignore words that are longer than 3 characters and \nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_j0mulip.jl:13\nin expression starting at\
    \ /tmp/tmp_j0mulip.jl:13\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers.sort!\n    return numbers.join(\"\
    \ \")\nend\n</cell>\n<code language=julia-1.5>\nsort_numbers(\"one two three four\
    \ five six seven eight nine\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns a string with all the words capitalized.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5uykyt2w.jl:10\nin expression starting at\
    \ /tmp/tmp5uykyt2w.jl:10\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = replace(numbers, \" \", \"\")\n    numbers = replace(numbers, \"\
    -\", \"\")\n    numbers = replace(numbers, \",\", \"\")\n    numbers = replace(numbers,\
    \ \"'\", \"\")\n    numbers = replace(numbers, \"\\\"\", \"\")\n    numbers =\
    \ replace(numbers, \"%\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n\
    \    numbers = replace(numbers, \"#\", \"\")\n    numbers = replace(numbers, \"\
    %\", \"\")\n    numbers = replace(numbers, \"^\", \"\")\n    numbers = replace(numbers,\
    \ \"&\", \"\")\n    numbers = replace(numbers, \"*\", \"\")\n    numbers = replace(numbers,\
    \ \"(\", \"\")\n    numbers = replace(numbers, \")\", \"\")\n    numbers = replace(numbers,\
    \ \"[\", \"\")\n    numbers = replace(numbers, \"]\", \"\")\n    numbers = replace(numbers,\
    \ \"{\", \"\")\n    numbers = replace(numbers, \"}\", \"\")\n    numbers = replace(numbers,\
    \ \"<\", \"\")\n    numbers = replace(numbers, \">\", \"\")\n    numbers = replace(numbers,\
    \ \"?\", \"\")\n    numbers = replace(numbers, \"!\", \"\")\n    numbers = replace(numbers,\
    \ \"=\", \"\")\n    numbers = replace(numbers, \"-\", \"\")\n    numbers = replace(numbers,\
    \ \"/\", \"\")\n    numbers = replace(numbers, \"\\\\\", \"\")\n    numbers =\
    \ replace(numbers, \"|\", \"\")\n    numbers = replace(numbers, \"@\", \"\")\n\
    \    numbers = replace(numbers, \"~\", \"\")\n    numbers = replace(numbers, \"\
    `\", \"\")\n    numbers = replace(numbers, \"{\", \"\")\n    numbers = replace(numbers,\
    \ \"}\", \"\")\n    numbers = replace(numbers, \"[\", \"\")\n    numbers = replace(numbers,\
    \ \"]\", \"\")\n    numbers = replace(numbers, \"(\", \"\")\n    numbers = replace(numbers,\
    \ \")\", \"\")\n    numbers = replace(numbers, \"{\", \"\")\n    numbers = replace(numbers,\
    \ \"}\", \"\")\n    numbers = replace(numbers, \"[\", \"\")\n    numbers = replace(numbers,\
    \ \"]\", \"\")\n    numbers = replace(numbers, \"{\", \"\")\n    numbers = replace(numbers,\
    \ \"}\", \"\")\n    numbers = replace(numbers, \"[\", \"\")\n    numbers = replace(numbers,\
    \ \"]\", \"\")\n    numbers = replace(numbers, \"{\", \"\")\n    numbers = replace(numbers,\
    \ \"}\", \"\")\n    numbers = replace(numbers, \"[\", \"\")\n    numbers = replace(numbers,\
    \ \"]\", \"\")\n    numbers = replace(numbers, \"{\", \"\")\n    numbers = replace(numbers,\
    \ \"}\", \"\")\n    numbers = replace(numbers, \"[\", \"\")\n    numbers = replace(numbers,\
    \ \"]\", \"\")\n    numbers = replace(numbers, \"{\", \"\")\n    numbers = replace(numbers,\
    \ \"}\", \"\")\n    numbers = replace(numbers, \"[\", \"\")\n    numbers = replace(numbers,\
    \ \"]\", \"\")\n    numbers = replace(\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw_tf8y1o.jl:65\nin expression starting at\
    \ /tmp/tmpw_tf8y1o.jl:65\n"
  stdout: ''
  timestamp: 1659748495
- exit_code: -1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers.split(\" \")\n    numbers = sort(numbers)\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp1vjlnzfr.jl:16\n  Test threw
    exception\n  Expression: candidate("") == ""\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmp1vjlnzfr.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1vjlnzfr.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1vjlnzfr.jl:15\ntest set: Error
    During Test at /tmp/tmp1vjlnzfr.jl:17\n  Test threw exception\n  Expression: candidate("three")
    == "three"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp1vjlnzfr.jl:6\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1vjlnzfr.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1vjlnzfr.jl:15\ntest set: Error
    During Test at /tmp/tmp1vjlnzfr.jl:18\n  Test threw exception\n  Expression: candidate("three
    five nine") == "three five nine"\n  type String has no field split\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n     @
    Main /tmp/tmp1vjlnzfr.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1vjlnzfr.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1vjlnzfr.jl:15\ntest set: Error
    During Test at /tmp/tmp1vjlnzfr.jl:19\n  Test threw exception\n  Expression:'
  timestamp: 1659748490
- exit_code: 1
  program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n        \"\"\"\nfunction sort_numbers(numbers::String)::String \n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n    numbers = numbers[2:]\n    numbers = numbers[2:]\n\
    \    numbers = numbers[2:]\n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpan2pcwvh.jl:6\nin expression\
    \ starting at /tmp/tmpan2pcwvh.jl:6\n"
  stdout: ''
  timestamp: 1659748488

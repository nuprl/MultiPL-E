language: jl
name: HumanEval_100_make_a_pile
results:
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        if n %\
    \ 2 == 1 \n            pile = make_a_pile(n / 2)\n            push!(pile, n /\
    \ 2)\n            return pile\n        else \n            pile = make_a_pile(n\
    \ / 2)\n            push!(pile, n / 2)\n            push!(pile, n / 2)\n     \
    \       return pile\n        end\n    end\nend\n\"\"\"\n    Given a positive integer\
    \ n, you have to make a pile of n levels of stones.\n    The first level has n\
    \ stones.\n    The number of stones in the next level is:\n        - the next\
    \ odd number if n is odd.\n        - the next even number if n is even.\n    Return\
    \ the number of stones in each level in a list, where element at index\n    i\
    \ represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpavs0_xzk.jl:28\nin expression starting at\
    \ /tmp/tmpavs0_xzk.jl:28\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}() \n    else \n        make_a_pile(n -\
    \ 1)\n        push!(make_a_pile(n / 2), n % 2)\n    end\nend\n\"\"\"\n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphnk_2nkl.jl:20\nin expression starting at\
    \ /tmp/tmphnk_2nkl.jl:20\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n == 1 \n    \
    \    return Vector{Int64}(1)\n    else \n        odd_stones = make_a_pile(n /\
    \ 2)\n        even_stones = make_a_pile(n / 2)\n        odd_stones = odd_stones\
    \ + even_stones\n        odd_stones[end] = odd_stones[end] + 1\n        return\
    \ odd_stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t\
    @test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1g836e_z.jl:15\nin expression starting at\
    \ /tmp/tmp1g836e_z.jl:15\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}() \n    else \n        pile = make_a_pile(n-1)\n\
    \        if mod(n,2)==1 \n            pile = pile:+n \n        else \n       \
    \     pile = pile:+n-1 \n        return pile \nend\n\"\"\"\n    Given a positive\
    \ integer n, you have to make a pile of n levels of stones.\n    The first level\
    \ has n stones.\n    The number of stones in the next level is:\n        - the\
    \ next odd number if n is odd.\n        - the next even number if n is even.\n\
    \    Return the number of stones in each level in a list, where element at index\n\
    \    i represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpozkfwdx4.jl:1\nin expression starting at /tmp/tmpozkfwdx4.jl:1\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_stones\
    \ = if n % 2 == 0 \n                       n \n                       else \n\
    \                       n / 2\n        even_stones = if n % 2 == 1 \n        \
    \               n \n                       else \n                       n / 2\n\
    \        pile = make_a_pile(odd_stones) + make_a_pile(even_stones)\n        return\
    \ pile\nend\n\"\"\"\n    Given a positive integer n, you have to make a pile of\
    \ n levels of stones.\n    The first level has n stones.\n    The number of stones\
    \ in the next level is:\n        - the next odd number if n is odd.\n        -\
    \ the next even number if n is even.\n    Return the number of stones in each\
    \ level in a list, where element at index\n    i represents the number of stones\
    \ in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk4dstib_.jl:1\nin expression starting at /tmp/tmpk4dstib_.jl:1\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        even=n%2==0\n        pile=make_a_pile(n/2)\n        if odd \n       \
    \     push!(pile,n+1)\n        else \n            push!(pile,n-1)\n        end\n\
    \        return pile\n    end\nend\n\"\"\"\n    Given a positive integer n, you\
    \ have to make a pile of n levels of stones.\n    The first level has n stones.\n\
    \    The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgg1x13zp.jl:27\nin expression starting at\
    \ /tmp/tmpgg1x13zp.jl:27\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(n-1)\n        even_pile\
    \ = make_a_pile(n-2)\n        odd_pile = odd_pile + odd_pile\n        even_pile\
    \ = even_pile+even_pile\n        return odd_pile + even_pile\nend\n\"\"\"\n  \
    \  \n\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpznzaqbxf.jl:15\nin expression starting at\
    \ /tmp/tmpznzaqbxf.jl:15\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}() \n    else \n        pile =\
    \ make_a_pile(n div 2) \n        push!(pile, n mod 2) \n        return pile \n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5uhq05rr.jl:16\nin expression starting at\
    \ /tmp/tmp5uhq05rr.jl:16\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==1 \n        return [1]\n    else \n        odd=make_a_pile(n-1)\n\
    \        even=make_a_pile(n-2)\n        odd=odd+even\n        odd=odd[end-1]\n\
    \        even=even[end-1]\n        odd=odd+even\n        return odd+odd\n    end\n\
    end\n\"\"\"\n    \n\"\"\"\n    Given a positive integer n, you have to make a\
    \ pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"a\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphduj7img.jl:28\nin expression starting at\
    \ /tmp/tmphduj7img.jl:28\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n == 1 \n    \
    \    return Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(n / 2)\n\
    \        even_pile = make_a_pile(n / 2)\n        odd_pile = odd_pile + odd_pile[end]\n\
    \        even_pile = even_pile + even_pile[end]\n        return odd_pile + even_pile\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpplt9b427.jl:15\nin expression starting at\
    \ /tmp/tmpplt9b427.jl:15\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    end\n    \n    pile = make_a_pile(n-1)\n\
    \    \n    if n%2 == 1\n        push!(pile, n)\n    else\n        push!(pile,\
    \ n .+ n//2)\n    end\n    \n    return pile\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp28cpa8d5.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp28cpa8d5.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28cpa8d5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28cpa8d5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp28cpa8d5.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 3, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28cpa8d5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28cpa8d5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp28cpa8d5.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 3, 6, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28cpa8d5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28cpa8d5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp28cpa8d5.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 3, 6, 5, 9] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28cpa8d5.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28cpa8d5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp28cpa8d5.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}() \n    else \n        make_a_pile(ceil(n/2))\
    \ .+ [n % 2 == 0 ? 1 : -1]\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert make_a_pile(5) == [5, 1]\n@assert make_a_pile(6) == [6, 1, 1]\n@assert\
    \ make_a_pile(7) == [7, 1, 1, 1]\n@assert make_a_pile(8) == [8, 1, 1, 2, 1]\n\
    @assert make_a_pile(9) == [9, 1, 1, 2, 2, 1]\n@assert make_a_pile(10) == [10,\
    \ 1, 1, 2, 2, 2, 1]\n@assert make_a_pile(11) == [11, 1, 1, 2, 2, 2, 2, 1]\n@assert\
    \ make_a_pile(12) == [12, 1, 1, 2, 2, 2, 2, 2, 1]\n@assert make_a_pile(13) ==\
    \ [13, 1, 1, 2, 2, 2, 2, 2, 2, 1]\n@assert make_a_pile(14) == [14, 1, 1, 2, 2,\
    \ 2, 2, 2, 2, 2, 1]\n@assert make_a_pile(15) == [15, 1, 1, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 1]\n@assert make_a_pile(16) == [16, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]\n\
    @assert make_a_pile(17) == [17, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]\n@assert\
    \ make_a_pile(18) == [18, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]\n@assert\
    \ make_a_pile(19) == [19, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]\n\
    @assert make_a_pile(20) == [20, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 1]\n@assert make_a_pile(21) == [21, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 1]\n@assert make_a_pile(22) == [22, 1, 1, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]\n@assert make_a_pile(23) == [23,\
    \ 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]\n@assert\
    \ make_a_pile(24) == [24, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 1]\n@assert make_a_pile(25) == [25, 1, 1, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]\n@assert make_a_pile(26)\
    \ == [26, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 1]\n@assert make_a_pile(27) == [27, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]\n@assert make_a_pile(28) ==\
    \ [28, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 1]\n@assert make_a_pile(29) == [29, 1, 1, 2, 2, 2, 2, \nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkhxyxbep.jl:19\nin expression starting at\
    \ /tmp/tmpkhxyxbep.jl:19\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        make_a_pile(n/2)\n    else\n        make_a_pile(n/2)\
    \ + make_a_pile(n/2 + 1)\n    end\nend\n\"\"\"\n    \n\"\"\"\n    Given a positive\
    \ integer n, you have to make a pile of n levels of stones.\n    The first level\
    \ has n stones.\n    The number of stones in the next level is:\n        - the\
    \ next odd number if n is odd.\n        - the next even number if n is even.\n\
    \    Return the number of stones in each level in a list, where element at index\n\
    \    i represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"a\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg_9u4it6.jl:22\nin expression starting at\
    \ /tmp/tmpg_9u4it6.jl:22\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        []\n    else\n        make_a_pile(n-1)+[(n%2==0)?(n-1):(n+1)]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space required before \"?\" operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcot9hp7y.jl:16\nin expression starting at\
    \ /tmp/tmpcot9hp7y.jl:16\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        pile =\
    \ make_a_pile(n div 2)\n        if n % 2 == 0 \n            push!(pile, n div\
    \ 2)\n        else \n            push!(pile, n div 2 + 1)\n        end\n     \
    \   return pile\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpov6d4yeb.jl:16\nin expression starting at\
    \ /tmp/tmpov6d4yeb.jl:16\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        return Vector{Int64}()\n    end\n    if n==1\n      \
    \  return Vector{Int64}(1)\n    end\n    if n%2==0\n        return make_a_pile(n/2)\n\
    \    end\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmplxgpy2tt.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplxgpy2tt.jl:1\n\
    in expression starting at /tmp/tmplxgpy2tt.jl:1\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        make_a_pile(n/2)\n    else\n        make_a_pile(n/2)\
    \ + make_a_pile(n/2+1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq837bf__.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpq837bf__.jl:24\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpq837bf__.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpq837bf__.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq837bf__.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq837bf__.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpq837bf__.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpq837bf__.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpq837bf__.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq837bf__.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq837bf__.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpq837bf__.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpq837bf__.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpq837bf__.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq837bf__.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq837bf__.jl:23"
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   return Vector{Int64}(undef, odds, evens)\n    else\n        odds = n / 2\n\
    \        evens = n - odds\n        return Vector{Int64}(undef, evens, odds)\n\
    \    end\nend\n\"\"\"\n    Given a positive integer n, you have to make a pile\
    \ of n levels of stones.\n    The first level has n stones.\n    The number of\
    \ stones in the next level is:\n        - the next odd number if n is odd.\n \
    \       - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp75ko5oie.jl:23\nin expression starting at\
    \ /tmp/tmp75ko5oie.jl:23\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else if n%2==0 \n        return make_a_pile(n/2)\n   \
    \ else \n        return make_a_pile(n-1)+make_a_pile(n-2)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp54r04j7s.jl:15\nin expression starting at\
    \ /tmp/tmp54r04j7s.jl:15\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: -1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd_nums\
    \ = make_a_pile(n-1)\n        even_nums = make_a_pile(n-2)\n        odd_nums =\
    \ odd_nums + even_nums\n        return odd_nums\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}()\n    elseif n==1 \n        Vector{Int64}(1)\n\
    \    elseif n==2 \n        Vector{Int64}(1,2)\n    elseif n==3 \n        Vector{Int64}(1,3,2)\n\
    \    elseif n==4 \n        Vector{Int64}(1,4,3,2)\n    elseif n==5 \n        Vector{Int64}(1,5,4,3,2)\n\
    \    elseif n==6 \n        Vector{Int64}(1,6,5,4,3,2)\n    elseif n==7 \n    \
    \    Vector{Int64}(1,7,6,5,4,3,2)\n    elseif n==8 \n        Vector{Int64}(1,8,7,6,5,4,3,2)\n\
    \    elseif n==9 \n        Vector{Int64}(1,9,8,7,6,5,4,3,2)\n    elseif n==10\
    \ \n        Vector{Int64}(1,10,9,8,7,6,5,4,3,2)\n    elseif n==11 \n        Vector{Int64}(1,11,10,9,8,7,6,5,4,3,2)\n\
    \    elseif n==12 \n        Vector{Int64}(1,12,11,10,9,8,7,6,5,4,3,2)\n    elseif\
    \ n==13 \n        Vector{Int64}(1,13,12,11,10,9,8,7,6,5,4,3,2)\n    elseif n==14\
    \ \n        Vector{Int64}(1,14,13,12,11,10,9,8,7,6,5,4,3,2)\n    elseif n==15\
    \ \n        Vector{Int64}(1,15,14,13,12,11,10,9,8,7,6,5,4,3,2)\n    elseif n==16\
    \ \n        Vector{Int64}(1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2)\n    elseif\
    \ n==17 \n        Vector{Int64}(1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2)\n \
    \   elseif n==18 \n        Vector{Int64}(1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2)\n\
    \    elseif n==19 \n        Vector{Int64}(1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2)\n\
    \    elseif n==20 \n        Vector{Int64}(1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2)\n\
    \    elseif n==21 \n        Vector{Int64}(1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj3m1n8a4.jl:59\nin expression starting at\
    \ /tmp/tmpj3m1n8a4.jl:59\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,n+1)\n        elseif even \n        \
    \    push!(pile,n-1)\n        else \n            push!(pile,n+1)\n           \
    \ push!(pile,n-1)\n        end\n        return pile\n    end\nend\n\"\"\"\n  \
    \  Given a positive integer n, you have to make a pile of n levels of stones.\n\
    \    The first level has n stones.\n    The number of stones in the next level\
    \ is:\n        - the next odd number if n is odd.\n        - the next even number\
    \ if n is even.\n    Return the number of stones in each level in a list, where\
    \ element at index\n    i represents the number of stones in the level (i+1).\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe2utkyjs.jl:15\nin expression starting at\
    \ /tmp/tmpe2utkyjs.jl:15\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        if n %\
    \ 2 == 0 \n            pile = make_a_pile(n / 2)\n            push!(pile, n /\
    \ 2)\n            return pile\n        else \n            pile = make_a_pile(n\
    \ / 2)\n            push!(pile, n / 2)\n            push!(pile, n / 2)\n     \
    \       return pile\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2vfnjaq7.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp2vfnjaq7.jl:33\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp2vfnjaq7.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp2vfnjaq7.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2vfnjaq7.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2vfnjaq7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp2vfnjaq7.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp2vfnjaq7.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp2vfnjaq7.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2vfnjaq7.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2vfnjaq7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp2vfnjaq7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp2vfnjaq7.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp2vfnjaq7.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2vfnjaq7.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2vfnjaq7.jl:32"
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}() \n    else \n        pile = make_a_pile(n-1)\
    \ \n        push!(pile,n) \n        return pile \n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp65ukwf0v.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp65ukwf0v.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65ukwf0v.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65ukwf0v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp65ukwf0v.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 2, 3, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65ukwf0v.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65ukwf0v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp65ukwf0v.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 2, 3, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65ukwf0v.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65ukwf0v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp65ukwf0v.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 2, 3, 4, 5, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65ukwf0v.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65ukwf0v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp65ukwf0v.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        even=n%2==0\n        if odd==1 \n            pile=make_a_pile(n/2)\n\
    \            push!(pile,1)\n            return pile\n        else \n         \
    \   pile=make_a_pile(n/2)\n            push!(pile,1)\n            push!(pile,1)\n\
    \            return pile\n    end\nend\n\"\"\"\n    \n\"\"\"\n    Given a positive\
    \ integer n, you have to make a pile of n levels of stones.\n    The first level\
    \ has n stones.\n    The number of stones in the next level is:\n        - the\
    \ next odd number if n is odd.\n        - the next even number if n is even.\n\
    \    Return the number of stones in each level in a list, where element at index\n\
    \    i represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmps837ic_y.jl:12 expected\
    \ \"end\", got \"a\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps837ic_y.jl:32\n\
    in expression starting at /tmp/tmps837ic_y.jl:32\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}() \n    else \n        make_a_pile(n-1)\n\
    \        push!(make_a_pile(n-1),n%2==0 ? n : n+1)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjo24b3rj.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpjo24b3rj.jl:25\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [2, 2, 4] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjo24b3rj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjo24b3rj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjo24b3rj.jl:26\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [2, 2, 4, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjo24b3rj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjo24b3rj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjo24b3rj.jl:27\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [2, 2, 4, 4, 6] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjo24b3rj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjo24b3rj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjo24b3rj.jl:28\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [2, 2, 4, 4, 6, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjo24b3rj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjo24b3rj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjo24b3rj.jl:29\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        pile = make_a_pile(n / 2)\n        push!(pile, n / 2)\n        return\
    \ pile\n    else \n        pile = make_a_pile(n / 2)\n        push!(pile, n /\
    \ 2)\n        push!(pile, n / 2)\n        return pile\nend\n\"\"\"\n    Given\
    \ a positive integer n, you have to make a pile of n levels of stones.\n    The\
    \ first level has n stones.\n    The number of stones in the next level is:\n\
    \        - the next odd number if n is odd.\n        - the next even number if\
    \ n is even.\n    Return the number of stones in each level in a list, where element\
    \ at index\n    i represents the number of stones in the level (i+1).\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl5jn4qy4.jl:15\nin expression starting at\
    \ /tmp/tmpl5jn4qy4.jl:15\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        if odd==0 \n            return make_a_pile(n/2)\n        else \n    \
    \        return make_a_pile(n-odd) + [odd]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpusl17t12.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpusl17t12.jl:1\n\
    in expression starting at /tmp/tmpusl17t12.jl:1\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd_pile\
    \ = make_a_pile(n-1)\n        even_pile = make_a_pile(n-2)\n        odd_pile =\
    \ odd_pile ++ [odd_pile[n-1]]\n        even_pile = even_pile ++ [even_pile[n-2]]\n\
    \        return odd_pile ++ even_pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpa9h0lzfk.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa9h0lzfk.jl:1\n\
    in expression starting at /tmp/tmpa9h0lzfk.jl:1\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}() \n    else \n        pile = make_a_pile(n-1)\
    \ \n        push!(pile, n) \n        return pile \n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxy2ye_tr.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpxy2ye_tr.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy2ye_tr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy2ye_tr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxy2ye_tr.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 2, 3, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy2ye_tr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy2ye_tr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxy2ye_tr.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 2, 3, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy2ye_tr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy2ye_tr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxy2ye_tr.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 2, 3, 4, 5, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy2ye_tr.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy2ye_tr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxy2ye_tr.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 1 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2] + make_a_pile(n / 2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg40nfrwz.jl:15\nin expression starting at\
    \ /tmp/tmpg40nfrwz.jl:15\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_pile\
    \ = make_a_pile(n / 2)\n        even_pile = make_a_pile(n / 2)\n        odd_pile\
    \ = odd_pile + [n mod 2]\n        even_pile = even_pile + [n mod 2]\n        return\
    \ odd_pile ++ even_pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprtjc1a5a.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprtjc1a5a.jl:1\n\
    in expression starting at /tmp/tmprtjc1a5a.jl:1\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2 + 1]\nend\n</cell>\n<code language=julia-1.5>\n@assert make_a_pile(5)\
    \ == [5, 3]\n@assert make_a_pile(10) == [10, 6, 4, 2]\n@assert make_a_pile(15)\
    \ == [15, 12, 8, 6, 4, 2]\n@assert make_a_pile(20) == [20, 16, 12, 8, 6, 4, 2]\n\
    @assert make_a_pile(25) == [25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(30)\
    \ == [30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(35) == [35, 30, 25,\
    \ 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(40) == [40, 35, 30, 25, 20, 16,\
    \ 12, 8, 6, 4, 2]\n@assert make_a_pile(45) == [45, 40, 35, 30, 25, 20, 16, 12,\
    \ 8, 6, 4, 2]\n@assert make_a_pile(50) == [50, 45, 40, 35, 30, 25, 20, 16, 12,\
    \ 8, 6, 4, 2]\n@assert make_a_pile(55) == [55, 50, 45, 40, 35, 30, 25, 20, 16,\
    \ 12, 8, 6, 4, 2]\n@assert make_a_pile(60) == [60, 55, 50, 45, 40, 35, 30, 25,\
    \ 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(65) == [65, 60, 55, 50, 45, 40,\
    \ 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(70) == [70, 65, 60,\
    \ 55, 50, 45, 40, 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(75)\
    \ == [75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert\
    \ make_a_pile(80) == [80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 16,\
    \ 12, 8, 6, 4, 2]\n@assert make_a_pile(85) == [85, 80, 75, 70, 65, 60, 55, 50,\
    \ 45, 40, 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(90) == [90,\
    \ 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n\
    @assert make_a_pile(95) == [95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35,\
    \ 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(100) == [100, 95, 90, 85,\
    \ 80, 75, 70, \nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ny_myy8.jl:15\nin expression starting at\
    \ /tmp/tmp7ny_myy8.jl:15\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        Vector{Int64}() \n    else \n        make_a_pile(n\
    \ - 1) \n        push!(make_a_pile(n / 2), n % 2 == 0 ? 1 : 2) \n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_r21r7h2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp_r21r7h2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp_r21r7h2.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_r21r7h2.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 2 times)\n     @ Main /tmp/tmp_r21r7h2.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_r21r7h2.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_r21r7h2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_r21r7h2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp_r21r7h2.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_r21r7h2.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 3 times)\n     @ Main /tmp/tmp_r21r7h2.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_r21r7h2.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_r21r7h2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_r21r7h2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp_r21r7h2.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_r21r7h2.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 4 times)\n     @ Main /tmp/tmp_r21r7h2.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Te"
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}() \n    else \n        make_a_pile(n-1)\n\
    \        push!(make_a_pile(n-2),n%2==0 ? 1 : 2)\n    end\nend\n\"\"\"\n    \n\"\
    \"\"\n    Given a positive integer n, you have to make a pile of n levels of stones.\n\
    \    The first level has n stones.\n    The number of stones in the next level\
    \ is:\n        - the next odd number if n is odd.\n        - the next even number\
    \ if n is even.\n    Return the number of stones in each level in a list, where\
    \ element at index\n    i represents the number of stones in the level (i+1).\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"a\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3c5rg368.jl:23\nin expression starting at\
    \ /tmp/tmp3c5rg368.jl:23\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==1 \n        return [1]\n    else \n        odd = n%2\n        even\
    \ = n/2\n        pile = make_a_pile(odd) + make_a_pile(even)\n        return pile\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7qd3k5cz.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7qd3k5cz.jl:1\n\
    in expression starting at /tmp/tmp7qd3k5cz.jl:1\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            pile=pile+make_a_pile(n/2)\n        end\n      \
    \  if even \n            pile=pile+make_a_pile(n/2)\n        end\n        return\
    \ pile\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt7wkl_o6.jl:15\nin expression starting at\
    \ /tmp/tmpt7wkl_o6.jl:15\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}() \n    else \n        odd_pile\
    \ = make_a_pile(n div 2) \n        even_pile = make_a_pile(n mod 2) \n       \
    \ odd_pile = odd_pile ++ even_pile\n        return odd_pile \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpstxvabwc.jl:16\nin expression starting at\
    \ /tmp/tmpstxvabwc.jl:16\n"
  stdout: ''
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,n+1)\n        else \n            push!(pile,n-1)\n\
    \        end\n        return pile\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkpyprmo_.jl:15\nin expression starting at\
    \ /tmp/tmpkpyprmo_.jl:15\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        even=n%2==0\n        \n        if odd==1 \n            pile=make_a_pile(n-1)\n\
    \            push!(pile,1)\n            return pile\n        else \n         \
    \   pile=make_a_pile(n-1)\n            push!(pile,1)\n            push!(pile,2)\n\
    \            return pile\n    end\nend\n\"\"\"\n    Given a positive integer n,\
    \ you have to make a pile of n levels of stones.\n    The first level has n stones.\n\
    \    The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbd4smtsc.jl:1\nin expression starting at /tmp/tmpbd4smtsc.jl:1\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_pile\
    \ = make_a_pile(n div 2)\n        even_pile = make_a_pile(n div 2)\n        odd_pile\
    \ = odd_pile + [n mod 2]\n        even_pile = even_pile + [n mod 2]\n        return\
    \ odd_pile ++ even_pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2jst3j7y.jl:16\nin expression starting at\
    \ /tmp/tmp2jst3j7y.jl:16\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   return make_a_pile(odds) + make_a_pile(evens)\n    else\n        odds = n\
    \ / 2\n        evens = n - odds\n        return make_a_pile(odds) + make_a_pile(evens)\n\
    \    end\nend\n\"\"\"\n    Given a positive integer n, you have to make a pile\
    \ of n levels of stones.\n    The first level has n stones.\n    The number of\
    \ stones in the next level is:\n        - the next odd number if n is odd.\n \
    \       - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmrjvvxh3.jl:23\nin expression starting at\
    \ /tmp/tmpmrjvvxh3.jl:23\n"
  stdout: ''
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==1 \n        return [1]\n    else \n        odd_pile = make_a_pile(n\
    \ div 2)\n        even_pile = make_a_pile(n div 2)\n        odd_pile = odd_pile\
    \ + [odd_pile[end-1]]\n        even_pile = even_pile + [even_pile[end-1]]\n  \
    \      return odd_pile + even_pile\nend\n\"\"\"\n    Given a positive integer\
    \ n, you have to make a pile of n levels of stones.\n    The first level has n\
    \ stones.\n    The number of stones in the next level is:\n        - the next\
    \ odd number if n is odd.\n        - the next even number if n is even.\n    Return\
    \ the number of stones in each level in a list, where element at index\n    i\
    \ represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbabqp7jt.jl:16\nin expression starting at\
    \ /tmp/tmpbabqp7jt.jl:16\n"
  stdout: ''
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,n+1)\n        elseif even \n        \
    \    push!(pile,n+1)\n            push!(pile,n+1)\n        else \n           \
    \ push!(pile,n+1)\n            push!(pile,n+1)\n            push!(pile,n+1)\n\
    \        end\n        return pile\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert make_a_pile(5) == Vector{Int64}([5, 3, 1])\n@assert make_a_pile(10) ==\
    \ Vector{Int64}([10, 6, 4, 2])\n@assert make_a_pile(15) == Vector{Int64}([15,\
    \ 9, 5, 3, 1])\n@assert make_a_pile(20) == Vector{Int64}([20, 14, 12, 8, 6, 4,\
    \ 2])\n@assert make_a_pile(25) == Vector{Int64}([25, 19, 13, 11, 7, 5, 3, 1])\n\
    @assert make_a_pile(30) == Vector{Int64}([30, 23, 17, 15, 13, 11, 7, 5, 3, 1])\n\
    @assert make_a_pile(35) == Vector{Int64}([35, 28, 22, 21, 16, 14, 12, 8, 6, 4,\
    \ 2])\n@assert make_a_pile(40) == Vector{Int64}([40, 35, 27, 23, 25, 19, 13, 11,\
    \ 7, 5, 3, 1])\n@assert make_a_pile(45) == Vector{Int64}([45, 42, 37, 31, 35,\
    \ 28, 22, 21, 16, 14, 12, 8, 6, 4, 2])\n@assert make_a_pile(50) == Vector{Int64}([50,\
    \ 45, 39, 34, 42, 37, 31, 35, 28, 22, 21, 16, 14, 12, 8, 6, 4, 2])\n@assert make_a_pile(55)\
    \ == Vector{Int64}([55, 52, 44, 47, 43, 39, 34, 42, 37, 31, 35, 28, 22, 21, 16,\
    \ 14, 12, 8, 6, 4, 2])\n@assert make_a_pile(60) == Vector{Int64}([60, 60, 60,\
    \ 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,\
    \ 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,\
    \ 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,\
    \ 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, \nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxgkvgvpi.jl:15\nin expression starting at\
    \ /tmp/tmpxgkvgvpi.jl:15\n"
  stdout: ''
  timestamp: 1659747320
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=make_a_pile(n-1)\n        even=make_a_pile(n-2)\n\
    \        odd=odd+even\n        odd=odd[end-1]\n        even=even[end-1]\n    \
    \    odd=odd+even\n        return odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp23n3ofe4.jl:15\nin expression starting at\
    \ /tmp/tmp23n3ofe4.jl:15\n"
  stdout: ''
  timestamp: 1659747320
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 1 \n        odds = n\n    else\n        odds = n-1\n    end\n\
    \    evens = n - odds\n    pile = zeros(Int, n+1)\n    pile[1] = odds\n    pile[2]\
    \ = evens\n    for i in 3:(n+1)\n        pile[i] = pile[i-1] + pile[i-2]\n   \
    \ end\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2fuop_dt.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp2fuop_dt.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 0, 3, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fuop_dt.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fuop_dt.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2fuop_dt.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [3, 1, 4, 5, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fuop_dt.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fuop_dt.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2fuop_dt.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 0, 5, 5, 10, 15] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fuop_dt.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fuop_dt.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2fuop_dt.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [5, 1, 6, 7, 13, 20, 33] == [6, 8, 10, 12, 14, 16]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fuop_dt.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fuop_dt.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2fuop_dt.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 2"
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}() \n    else \n        odd_pile\
    \ = make_a_pile(n div 2) \n        even_pile = make_a_pile(n div 2) \n       \
    \ odd_pile = odd_pile ++ [n mod 2] \n        even_pile = even_pile ++ [n mod 2]\
    \ \n        return odd_pile ++ even_pile\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp03ci77e8.jl:16\nin expression starting at\
    \ /tmp/tmp03ci77e8.jl:16\n"
  stdout: ''
  timestamp: 1659747320
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        pile=[pile,odd] ++ pile\n        pile=[pile,even] ++ pile\n        return\
    \ pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx_eh88fs.jl:15\nin expression starting at\
    \ /tmp/tmpx_eh88fs.jl:15\n"
  stdout: ''
  timestamp: 1659747320
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}()\n    else\n        make_a_pile(n div\
    \ 2)\n        push!(make_a_pile(n div 2), n mod 2)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3jjfob2c.jl:16\nin expression starting at\
    \ /tmp/tmp3jjfob2c.jl:16\n"
  stdout: ''
  timestamp: 1659747320
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=make_a_pile(n-1)\n        even=make_a_pile(n-2)\n\
    \        odd=odd+even\n        odd=odd[end-1]\n        even=even[end-1]\n    \
    \    return odd+even\n    end\nend\n\"\"\"\n    Given a positive integer n, you\
    \ have to make a pile of n levels of stones.\n    The first level has n stones.\n\
    \    The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgvxqv_lb.jl:15\nin expression starting at\
    \ /tmp/tmpgvxqv_lb.jl:15\n"
  stdout: ''
  timestamp: 1659747320
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n    else\n\
    \        odds = n / 2 + 1\n        evens = n - odds\n    end\n    pile = Vector{Int64}(undef,\
    \ odds + evens)\n    pile[1] = n\n    for i in 2:odds + evens\n        pile[i]\
    \ = pile[i-1] + pile[i-2]\n    end\n    return pile\nend\n</cell>\n<code language=julia-1.5>\n\
    @time make_a_pile(10)\n</cell>\n<code language=julia-1.5>\n@time make_a_pile(100)\n\
    </cell>\n<code language=julia-1.5>\n@time make_a_pile(1000)\n</cell>\n<code language=julia-1.5>\n\
    @time make_a_pile(10000)\n</cell>\n<code language=julia-1.5>\n@time make_a_pile(100000)\n\
    </cell>\n<code language=julia-1.5>\n@time make_a_pile(1000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time make_a_pile(10000000)\n</cell>\n<code language=julia-1.5>\n\
    @time make_a_pile(100000000)\n</cell>\n<code language=julia-1.5>\n@time make_a_pile(1000000000)\n\
    </cell>\n<code language=julia-1.5>\n@time make_a_pile(10000000000)\n</cell>\n\
    <code language=julia-1.5>\n@time make_a_pile(100000000000)\n</cell>\n<code language=julia-1.5>\n\
    @time make_a_pile(1000000000000)\n</cell>\n<code language=julia-1.5>\n@time make_a_pile(10000000000000)\n\
    </cell>\n<code language=julia-1.5>\n@time make_a_pile(100000000000000)\n</cell>\n\
    <code language=julia-1.5>\n@time make_a_pile(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time make_a_pile(10000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    @time make_a_pile(100000000000000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ make_a_pile(1000000000000000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ make_a_pile(10000000000000000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ make_a_pile(100000000000000000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ make_a_pile(1000000000000000000000)\n</cell>\n<code language=julia-1.5\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmf8oqmsq.jl:27\nin expression starting at\
    \ /tmp/tmpmf8oqmsq.jl:27\n"
  stdout: ''
  timestamp: 1659747320
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd = n\
    \ % 2 != 0\n        even = n % 2 == 0\n        if odd \n            pile = make_a_pile(n\
    \ / 2)\n            push!(pile, n / 2)\n            return pile\n        else\
    \ \n            pile = make_a_pile(n / 2)\n            push!(pile, n / 2)\n  \
    \          push!(pile, n / 2)\n            return pile\n        end\n    end\n\
    end\n\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2kpsmofw.jl:30\nin expression starting at\
    \ /tmp/tmp2kpsmofw.jl:30\n"
  stdout: ''
  timestamp: 1659747320
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   return make_a_pile(odds) + make_a_pile(evens)\n    else\n        odds = n\
    \ / 2\n        evens = n - odds\n        return make_a_pile(odds) + make_a_pile(evens)\n\
    \    end\nend\n\"\"\"\n    Given a positive integer n, you have to make a pile\
    \ of n levels of stones.\n    The first level has n stones.\n    The number of\
    \ stones in the next level is:\n        - the next odd number if n is odd.\n \
    \       - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmrjvvxh3.jl:23\nin expression starting at\
    \ /tmp/tmpmrjvvxh3.jl:23\n"
  stdout: ''
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   pile = Vector{Int64}(undef, odds + evens)\n        pile[1::2] = 1\n      \
    \  pile[2::2] = 1\n        return pile\n    else\n        evens = n / 2\n    \
    \    odds = n - evens\n        pile = Vector{Int64}(undef, odds + evens)\n   \
    \     pile[1::2] = 1\n        pile[2::2] = 1\n        return pile\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq80pn_vr.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpq80pn_vr.jl:34\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpq80pn_vr.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq80pn_vr.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq80pn_vr.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpq80pn_vr.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpq80pn_vr.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq80pn_vr.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq80pn_vr.jl:33\ntest set:\
    \ Error During Tes"
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 1 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2] + make_a_pile(n / 2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg40nfrwz.jl:15\nin expression starting at\
    \ /tmp/tmpg40nfrwz.jl:15\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: -1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}() \n    else \n        make_a_pile(n-1)\n\
    \        push!(make_a_pile(n-2),n%2==0 ? n : n+1)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        push!(pile,odd==0 ? n : n+1)\n        push!(pile,even==0 ? n : n+1)\n\
    \        return pile\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ make_a_pile(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer n and returns the number of ways to arrange the stones in a\
    \ pile of n levels. \nFor example, for n = 4, there are 4 ways to arrange the\
    \ stones in a pile of 4 levels:\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps55_5gkl.jl:15\nin expression starting at\
    \ /tmp/tmps55_5gkl.jl:15\n"
  stdout: ''
  timestamp: 1659747320
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   return [odds, evens]\n    else\n        odds = n / 2\n        evens = n -\
    \ odds\n        return [odds, evens]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmphq3ugexk.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmphq3ugexk.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  InexactError: Int64(1.5)\n  Stacktrace:\n\
    \    [1] Int64\n      @ ./float.jl:812 [inlined]\n    [2] convert\n      @ ./number.jl:7\
    \ [inlined]\n    [3] setindex!\n      @ ./array.jl:903 [inlined]\n    [4] _unsafe_copyto!(dest::Vector{Int64},\
    \ doffs::Int64, src::Vector{Float64}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n\
    \    [5] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [6] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [7] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [8] copyto!\n      @ ./array.jl:343 [inlined]\n    [9] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n   [10] Vector{Int64}(x::Vector{Float64})\n\
    \      @ Base ./array.jl:563\n   [11] make_a_pile(n::Int64)\n      @ Main /tmp/tmphq3ugexk.jl:0\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [13] macro expansion\n      @ /tmp/tmphq3ugexk.jl:28 [inlined]\n\
    \   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [15] top-level scope\n      @ /tmp/tmphq3ugexk.jl:27\ntest set:\
    \ Test Failed at /tmp/tmphq3ugexk.jl:29\n  Expression: candidate(4) == [4, 6,\
    \ 8, 10]\n   Evaluated: [2, 2] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphq3ugexk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphq3ugexk.jl:27\ntest set: Error\
    \ During Test at /tmp/tmphq3ugexk.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  InexactError: Int64(2.5)\n  Stacktrace:\n\
    \    [1] Int64\n      @ ./float.jl:812 [inlined]\n    [2] convert\n      @ ./number.jl:7\
    \ [inlined]\n    [3] setindex!\n      @ ./array.jl:903 [inlined]\n    [4] _unsafe_copyto!(dest::Vector{Int64},\
    \ doffs::Int64, src::Vecto"
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}() \n    else \n        make_a_pile(n-1)\n\
    \        push!(make_a_pile(n-1), n%2==0 ? n : n+1)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfmu3gfxn.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpfmu3gfxn.jl:25\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [2, 2, 4] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmu3gfxn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmu3gfxn.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfmu3gfxn.jl:26\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [2, 2, 4, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmu3gfxn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmu3gfxn.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfmu3gfxn.jl:27\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [2, 2, 4, 4, 6] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmu3gfxn.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmu3gfxn.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfmu3gfxn.jl:28\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [2, 2, 4, 4, 6, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmu3gfxn.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmu3gfxn.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfmu3gfxn.jl:29\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        []\n    else\n        make_a_pile(n-1)+[n mod 2 ? 1 :\
    \ 2]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsudyuoln.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpsudyuoln.jl:24\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  TypeError: non-boolean (Int64) used\
    \ in boolean context\n  Stacktrace:\n   [1] make_a_pile(n::Int64) (repeats 3 times)\n\
    \     @ Main /tmp/tmpsudyuoln.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsudyuoln.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsudyuoln.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpsudyuoln.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  TypeError: non-boolean (Int64) used in boolean\
    \ context\n  Stacktrace:\n   [1] make_a_pile(n::Int64) (repeats 4 times)\n   \
    \  @ Main /tmp/tmpsudyuoln.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsudyuoln.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsudyuoln.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpsudyuoln.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  TypeError: non-boolean (Int64) used in\
    \ boolean context\n  Stacktrace:\n   [1] make_a_pile(n::Int64) (repeats 5 times)\n\
    \     @ Main /tmp/tmpsudyuoln.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsudyuoln.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsudyuoln.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpsudyuoln.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  TypeError: non-boolean (Int64) used\
    \ in boolean context\n  Stacktra"
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2\n        pile=make_a_pile(n/2)\n\
    \        push!(pile,odd)\n        push!(pile,even)\n        return pile\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvwyy4wr3.jl:15\nin expression starting at\
    \ /tmp/tmpvwyy4wr3.jl:15\n"
  stdout: ''
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + make_a_pile((n / 2) + 1)\n    else \n   \
    \     return make_a_pile(n / 2) + make_a_pile((n / 2) + 1) + make_a_pile((n /\
    \ 2) + 2)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpai8szt3k.jl:15\nin expression starting at\
    \ /tmp/tmpai8szt3k.jl:15\n"
  stdout: ''
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2 \n\
    \        even=n%2==0\n        if odd==1 \n            pile=make_a_pile(n-1)\n\
    \            push!(pile,1)\n            return pile\n        else \n         \
    \   pile=make_a_pile(n-1)\n            push!(pile,1)\n            push!(pile,0)\n\
    \            return pile\n        end\n    end\nend\n\"\"\"\n    \n\"\"\"\n  \
    \  make_a_pile(n::Int64)\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpao_ulbkl.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpao_ulbkl.jl:39\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 1, 0, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpao_ulbkl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpao_ulbkl.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpao_ulbkl.jl:40\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 1, 0, 1, 1, 0] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpao_ulbkl.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpao_ulbkl.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpao_ulbkl.jl:41\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 1, 0, 1, 1, 0, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpao_ulbkl.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpao_ulbkl.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpao_ulbkl.jl:42\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 1, 0, 1, 1, 0, 1, 1, 0] == [6, 8, 10, 12, 14, 16]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpao_ulbkl.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpao_ulbkl.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpao_ulbkl.jl:43\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18"
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        Vector{Int64}() \n    else \n        make_a_pile(n\
    \ - 1) \n        push!(make_a_pile(n / 2), n % 2 == 0 ? 1 : 2) \n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nmake_a_pile(4)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of ways to arrange n items of different\
    \ types (for example, 3 items of type 1, 3 items of type 2, and 3 items of type\
    \ 3) in a pile of n piles.\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7mvyo7je.jl:20\nin expression starting at\
    \ /tmp/tmp7mvyo7je.jl:20\n"
  stdout: ''
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        return Vector{Int64}()\n    end\n    pile = make_a_pile(n-1)\n\
    \    if mod(n,2)==0\n        push!(pile,n+1)\n    else\n        push!(pile,n-1)\n\
    \    end\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx4xto1ik.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpx4xto1ik.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [0, 3, 2] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4xto1ik.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4xto1ik.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpx4xto1ik.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [0, 3, 2, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4xto1ik.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4xto1ik.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpx4xto1ik.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [0, 3, 2, 5, 4] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4xto1ik.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4xto1ik.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpx4xto1ik.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [0, 3, 2, 5, 4, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4xto1ik.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4xto1ik.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpx4xto1ik.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        pile = make_a_pile(n-1)\n\
    \        if mod(n,2)==1 \n            push!(pile,n+1)\n        else \n       \
    \     push!(pile,n-1)\n        end\n        return pile\n    end\nend\n\"\"\"\n\
    \    Given a positive integer n, you have to make a pile of n levels of stones.\n\
    \    The first level has n stones.\n    The number of stones in the next level\
    \ is:\n        - the next odd number if n is odd.\n        - the next even number\
    \ if n is even.\n    Return the number of stones in each level in a list, where\
    \ element at index\n    i represents the number of stones in the level (i+1).\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpswxzeusk.jl:25\nin expression starting at\
    \ /tmp/tmpswxzeusk.jl:25\n"
  stdout: ''
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(floor(n/2))\n  \
    \      even_pile = make_a_pile(n - odd_pile)\n        return odd_pile ++ even_pile\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo4yo0e75.jl:15\nin expression starting at\
    \ /tmp/tmpo4yo0e75.jl:15\n"
  stdout: ''
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        Vector{Int64}()\n    else\n        make_a_pile(n -\
    \ 1) ++ [n % 2 == 0 ? n : n + 2]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp5qsg737c.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp5qsg737c.jl:24\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: ++ not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64) (repeats 3 times)\n     @ Main /tmp/tmp5qsg737c.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5qsg737c.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5qsg737c.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5qsg737c.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: ++ not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64) (repeats 4 times)\n     @ Main /tmp/tmp5qsg737c.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5qsg737c.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5qsg737c.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5qsg737c.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: ++ not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64) (repeats 5 times)\n     @ Main /tmp/tmp5qsg737c.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5qsg737c.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5qsg737c.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5qsg737c.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: ++ not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64) (repeats 6 times)\n     @ Main /tmp/tmp5qsg737c.jl:16\n\
    \   [2] macro e"
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2] + make_a_pile(n / 2)\nend\n\"\"\"\n    \n\"\"\"\n    Given a\
    \ positive integer n, you have to make a pile of n levels of stones.\n    The\
    \ first level has n stones.\n    The number of stones in the next level is:\n\
    \        - the next odd number if n is odd.\n        - the next even number if\
    \ n is even.\n    Return the number of stones in each level in a list, where element\
    \ at index\n    i represents the number of stones in the level (i+1).\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp85peqlzw.jl:15\nin expression starting at\
    \ /tmp/tmp85peqlzw.jl:15\n"
  stdout: ''
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        push!(pile,odd)\n        push!(pile,even)\n        return pile\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkh2pk0m0.jl:15\nin expression starting at\
    \ /tmp/tmpkh2pk0m0.jl:15\n"
  stdout: ''
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd = n%2\
    \ \n        even = n/2 \n        pile = make_a_pile(even) + make_a_pile(odd) \n\
    \        return pile \nend\n\"\"\"\n    Given a positive integer n, you have to\
    \ make a pile of n levels of stones.\n    The first level has n stones.\n    The\
    \ number of stones in the next level is:\n        - the next odd number if n is\
    \ odd.\n        - the next even number if n is even.\n    Return the number of\
    \ stones in each level in a list, where element at index\n    i represents the\
    \ number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkykemnd6.jl:1\nin expression starting at /tmp/tmpkykemnd6.jl:1\n"
  stdout: ''
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        if\
    \ odd==1 \n            pile=make_a_pile(n/2)\n            push!(pile,1)\n    \
    \        return pile\n        else \n            pile=make_a_pile(n/2)\n     \
    \       push!(pile,1)\n            push!(pile,1)\n            return pile\n  \
    \      end\n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert make_a_pile(1)\
    \ == [1]\n@assert make_a_pile(2) == [1, 1]\n@assert make_a_pile(3) == [1, 1]\n\
    @assert make_a_pile(4) == [1, 1]\n@assert make_a_pile(5) == [1, 1]\n@assert make_a_pile(6)\
    \ == [1, 1]\n@assert make_a_pile(7) == [1, 1]\n@assert make_a_pile(8) == [1, 1]\n\
    @assert make_a_pile(9) == [1, 1]\n@assert make_a_pile(10) == [1, 1]\n@assert make_a_pile(11)\
    \ == [1, 1]\n@assert make_a_pile(12) == [1, 1]\n@assert make_a_pile(13) == [1,\
    \ 1]\n@assert make_a_pile(14) == [1, 1]\n@assert make_a_pile(15) == [1, 1]\n@assert\
    \ make_a_pile(16) == [1, 1]\n@assert make_a_pile(17) == [1, 1]\n@assert make_a_pile(18)\
    \ == [1, 1]\n@assert make_a_pile(19) == [1, 1]\n@assert make_a_pile(20) == [1,\
    \ 1]\n@assert make_a_pile(21) == [1, 1]\n@assert make_a_pile(22) == [1, 1]\n@assert\
    \ make_a_pile(23) == [1, 1]\n@assert make_a_pile(24) == [1, 1]\n@assert make_a_pile(25)\
    \ == [1, 1]\n@assert make_a_pile(26) == [1, 1]\n@assert make_a_pile(27) == [1,\
    \ 1]\n@assert make_a_pile(28) == [1, 1]\n@assert make_a_pile(29) == [1, 1]\n@assert\
    \ make_a_pile(30) == [1, 1]\n@assert make_a_pile(31) == [1, 1]\n@assert make_a_pile(32)\
    \ == [1, 1]\n@assert make_a_pile(33) == [1, 1]\n@assert make_a_pile(34) == [1,\
    \ 1]\n@assert make_a_pile(35) == [1, 1]\n@assert make_a_pi\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpge20cl18.jl:15\nin expression starting at\
    \ /tmp/tmpge20cl18.jl:15\n"
  stdout: ''
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=make_a_pile(n-1)\n        even=make_a_pile(n-2)\n\
    \        odd=odd+even\n        odd=odd[end-1]\n        even=even[end-1]\n    \
    \    return odd+even\nend\n\"\"\"\n    Given a positive integer n, you have to\
    \ make a pile of n levels of stones.\n    The first level has n stones.\n    The\
    \ number of stones in the next level is:\n        - the next odd number if n is\
    \ odd.\n        - the next even number if n is even.\n    Return the number of\
    \ stones in each level in a list, where element at index\n    i represents the\
    \ number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3cq1kkhi.jl:15\nin expression starting at\
    \ /tmp/tmp3cq1kkhi.jl:15\n"
  stdout: ''
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd = n%2\
    \ \n        even = n/2\n        pile = make_a_pile(even) + make_a_pile(odd)\n\
    \    end\nend\n\"\"\"\n    \n\"\"\"\n    Given a positive integer n, you have\
    \ to make a pile of n levels of stones.\n    The first level has n stones.\n \
    \   The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"a\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph_bgkqpc.jl:24\nin expression starting at\
    \ /tmp/tmph_bgkqpc.jl:24\n"
  stdout: ''
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2 + 1]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg829_54l.jl:15\nin expression starting at\
    \ /tmp/tmpg829_54l.jl:15\n"
  stdout: ''
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_or_even\
    \ = if n % 2 == 0 then \"even\" else \"odd\"\n        pile = make_a_pile(n / 2)\n\
    \        push!(pile, odd_or_even)\n        push!(pile, make_a_pile(n / 2))\n \
    \       return pile\nend\n\"\"\"\n    Given a positive integer n, you have to\
    \ make a pile of n levels of stones.\n    The first level has n stones.\n    The\
    \ number of stones in the next level is:\n        - the next odd number if n is\
    \ odd.\n        - the next even number if n is even.\n    Return the number of\
    \ stones in each level in a list, where element at index\n    i represents the\
    \ number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxmmqdn2v.jl:16\nin expression starting at /tmp/tmpxmmqdn2v.jl:16\n"
  stdout: ''
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_pile\
    \ = make_a_pile(n / 2)\n        even_pile = make_a_pile(n / 2)\n        odd_pile\
    \ = odd_pile + [n mod 2]\n        even_pile = even_pile + [n mod 2]\n        return\
    \ odd_pile ++ even_pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprtjc1a5a.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprtjc1a5a.jl:1\n\
    in expression starting at /tmp/tmprtjc1a5a.jl:1\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}() \n    else \n        make_a_pile(ceil(n/2)):push!(make_a_pile(n-floor(n/2)),n%2==0?1:0)\
    \ \n    end\nend\nmake_a_pile(5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a positive integer n and returns the number of ways to arrange the\
    \ stones in a pile of n stones.\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space required before \"?\" operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpefpipvol.jl:16\nin expression starting at\
    \ /tmp/tmpefpipvol.jl:16\n"
  stdout: ''
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2] + make_a_pile(n / 2)\nend\n\"\"\"\n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqdhdy28a.jl:15\nin expression starting at\
    \ /tmp/tmpqdhdy28a.jl:15\n"
  stdout: ''
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd_count::Int64 = make_a_pile(n-1)\n \
    \       even_count::Int64 = make_a_pile(n-2)\n        return Vector{Int64}(odd_count,\
    \ even_count)\n    end\nend\n\"\"\"\n    Given a positive integer n, you have\
    \ to make a pile of n levels of stones.\n    The first level has n stones.\n \
    \   The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptgxnahgo.jl:15\nin expression starting at\
    \ /tmp/tmptgxnahgo.jl:15\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        make_a_pile(n/2)\n    else\n        make_a_pile(n/2)\
    \ + make_a_pile(n/2 + 1)\n    end\nend\n\"\"\"\n    \n\"\"\"\n    Given a positive\
    \ integer n, you have to make a pile of n levels of stones.\n    The first level\
    \ has n stones.\n    The number of stones in the next level is:\n        - the\
    \ next odd number if n is odd.\n        - the next even number if n is even.\n\
    \    Return the number of stones in each level in a list, where element at index\n\
    \    i represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"a\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg_9u4it6.jl:22\nin expression starting at\
    \ /tmp/tmpg_9u4it6.jl:22\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else\n        odd=n%2\n        even=n%2\n        pile=make_a_pile(odd)\n\
    \        push!(pile,even)\n        return pile\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpos41ak_k.jl:15\nin expression starting at\
    \ /tmp/tmpos41ak_k.jl:15\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2\n        pile=make_a_pile(n/2)\n\
    \        push!(pile,odd)\n        push!(pile,even)\n        return pile\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvwyy4wr3.jl:15\nin expression starting at\
    \ /tmp/tmpvwyy4wr3.jl:15\n"
  stdout: ''
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,n+1)\n        elseif even \n        \
    \    push!(pile,n+1)\n            push!(pile,n+1)\n        else \n           \
    \ push!(pile,n+1)\n            push!(pile,n+1)\n            push!(pile,n+1)\n\
    \        end\n        return pile\n    end\nend\n\"\"\"\n    Given a positive\
    \ integer n, you have to make a pile of n levels of stones.\n    The first level\
    \ has n stones.\n    The number of stones in the next level is:\n        - the\
    \ next odd number if n is odd.\n        - the next even number if n is even.\n\
    \    Return the number of stones in each level in a list, where element at index\n\
    \    i represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvsmpsez1.jl:15\nin expression starting at\
    \ /tmp/tmpvsmpsez1.jl:15\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        even=n%2==0\n        if odd==1 \n            pile=make_a_pile(n-1)\n\
    \            push!(pile,1)\n            return pile\n        else \n         \
    \   pile=make_a_pile(n-1)\n            push!(pile,1)\n            if even==1 \n\
    \                push!(pile,1)\n            end\n            return pile\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>\n@assert make_a_pile(3) == [1,1,1]\n\
    @assert make_a_pile(5) == [1,1,1,1]\n@assert make_a_pile(10) == [1,1,1,1,1]\n\
    @assert make_a_pile(11) == [1,1,1,1,1,1]\n@assert make_a_pile(12) == [1,1,1,1,1,1,1]\n\
    @assert make_a_pile(13) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(14) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(15) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(16) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(17) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(18) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(19) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(20) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(21) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(22) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(23) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(24) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(25) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(26) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(27) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(28) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(29) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(30) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(31) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(32) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(33) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(34) == [1,1,1,1,1,1,1,1]\n\
    @assert make_a_pile(35) == [1,1,1,1,1,1,1,1]\n@assert make_a_pile(36) == [1,1,1,1,1,1,1,\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv_2w7zsn.jl:31\nin expression starting at\
    \ /tmp/tmpv_2w7zsn.jl:31\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        return [1]\n    \n    if n%2==0\n        odds=make_a_pile(n/2)\n\
    \        evens=make_a_pile(n/2)\n        odds=[odds[i]+evens[i+1]+odds[i+2] for\
    \ i in range(0,n-1,2)]\n        return odds\n    else\n        evens=make_a_pile(n/2)\n\
    \        odds=make_a_pile(n/2)\n        evens=[evens[i]+odds[i+1]+evens[i+2] for\
    \ i in range(0,n-1,2)]\n        return evens\nend\n\"\"\"\n    \n\"\"\"\n    make_a_pile(n)\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2s6e50fw.jl:1\nin expression starting at /tmp/tmp2s6e50fw.jl:1\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else if n%2==0 \n        odd=make_a_pile(n/2)\n      \
    \  even=make_a_pile(n/2)\n        return odd+even\n    else \n        even=make_a_pile(n/2)\n\
    \        odd=make_a_pile(n/2)\n        return odd+even\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbr12dkzn.jl:15\nin expression starting at\
    \ /tmp/tmpbr12dkzn.jl:15\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==1 \n        return [1]\n    else \n        odd=make_a_pile(n/2)\n\
    \        even=make_a_pile(n-odd)\n        return odd+even\nend\n\"\"\"\n    Given\
    \ a positive integer n, you have to make a pile of n levels of stones.\n    The\
    \ first level has n stones.\n    The number of stones in the next level is:\n\
    \        - the next odd number if n is odd.\n        - the next even number if\
    \ n is even.\n    Return the number of stones in each level in a list, where element\
    \ at index\n    i represents the number of stones in the level (i+1).\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp19fog0ma.jl:1\nin expression starting at /tmp/tmp19fog0ma.jl:1\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        pile = make_a_pile(n-1)\n\
    \        if mod(n,2)==0 \n            pile = pile:+n\n        else \n        \
    \    pile = pile:+n+1\n        end\n        return pile\n    end\nend\n\"\"\"\n\
    \    Given a positive integer n, you have to make a pile of n levels of stones.\n\
    \    The first level has n stones.\n    The number of stones in the next level\
    \ is:\n        - the next odd number if n is odd.\n        - the next even number\
    \ if n is even.\n    Return the number of stones in each level in a list, where\
    \ element at index\n    i represents the number of stones in the level (i+1).\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeol4_g9f.jl:25\nin expression starting at\
    \ /tmp/tmpeol4_g9f.jl:25\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_pile\
    \ = make_a_pile(n div 2)\n        even_pile = make_a_pile(n div 2)\n        odd_pile\
    \ = odd_pile ++ even_pile\n        return odd_pile\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqgl5vhq1.jl:16\nin expression starting at\
    \ /tmp/tmpqgl5vhq1.jl:16\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}() \n    else \n        odd_or_even\
    \ = if n % 2 == 0 \n            \"even\" \n            \"odd\" \n        else\
    \ \n            \"even\" \n            \"odd\" \n        pile = make_a_pile(n\
    \ / 2) \n        push!(pile, odd_or_even) \n        return pile \nend \nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpjjslrh70.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjjslrh70.jl:1\n\
    in expression starting at /tmp/tmpjjslrh70.jl:1\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2] + make_a_pile(n / 2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsav9693h.jl:15\nin expression starting at\
    \ /tmp/tmpsav9693h.jl:15\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        if n %\
    \ 2 == 0 \n            odd = make_a_pile(n / 2)\n            even = make_a_pile(n\
    \ / 2)\n            even = even + odd\n            return even\n        else \n\
    \            even = make_a_pile(n / 2)\n            odd = make_a_pile(n / 2)\n\
    \            odd = odd + even\n            return odd\n    end\nend\n\"\"\"\n\
    \    Given a positive integer n, you have to make a pile of n levels of stones.\n\
    \    The first level has n stones.\n    The number of stones in the next level\
    \ is:\n        - the next odd number if n is odd.\n        - the next even number\
    \ if n is even.\n    Return the number of stones in each level in a list, where\
    \ element at index\n    i represents the number of stones in the level (i+1).\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9me1f274.jl:1\nin expression starting at /tmp/tmp9me1f274.jl:1\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        [1]\n    else\n        make_a_pile(n-1)+[n % 2 == 0 ?\
    \ 2 : 1]\n    end\nend\n\"\"\"\n    \n\"\"\"\n    Given a positive integer n,\
    \ you have to make a pile of n levels of stones.\n    The first level has n stones.\n\
    \    The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"a\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuf4kstjm.jl:22\nin expression starting at\
    \ /tmp/tmpuf4kstjm.jl:22\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 1 \n        pile = Vector{Int64}(undef, n, 0)\n    else\n\
    \        pile = Vector{Int64}(undef, n, 0)\n    end\n    pile[1] = n\n    for\
    \ i in 2:n\n        pile[i] = pile[i-1] + 2\n    end\n    return pile\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpvt3hbmcz.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpvt3hbmcz.jl:29\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    Array{T, N}(::UndefInitializer,\
    \ ::Int64...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:463\n\
    \    Array{T, N}(::UndefInitializer, ::Integer...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:25\n\
    \    Array{T, N}(!Matched::Nothing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpvt3hbmcz.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvt3hbmcz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvt3hbmcz.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpvt3hbmcz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    Array{T, N}(::UndefInitializer,\
    \ ::Int64...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:463\n\
    \    Array{T, N}(::UndefInitializer, ::Integer...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:25\n\
    \    Array{T, N}(!Matched::Nothing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpvt3hbmcz.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvt3hbmcz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvt3hbmcz.jl:2"
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        push!(pile,odd==1 ? n+1 : n) \n        push!(pile,even==1 ? n+2 : n)\
    \ \n        return pile\nend\n\"\"\"\n    Given a positive integer n, you have\
    \ to make a pile of n levels of stones.\n    The first level has n stones.\n \
    \   The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps9att0cm.jl:15\nin expression starting at\
    \ /tmp/tmps9att0cm.jl:15\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu9xq7s28.jl:15\nin expression starting at\
    \ /tmp/tmpu9xq7s28.jl:15\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2]\nend\n\"\"\"\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp532pro9m.jl:15\nin expression starting at\
    \ /tmp/tmp532pro9m.jl:15\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(ceil(n/2))\n   \
    \     even_pile = make_a_pile(floor(n/2))\n        odd_pile = odd_pile + odd_pile\n\
    \        even_pile = even_pile + even_pile\n        return odd_pile + even_pile\n\
    end\n\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4uyld8fc.jl:15\nin expression starting at\
    \ /tmp/tmp4uyld8fc.jl:15\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    elseif n%2 == 0 \n        return make_a_pile(n/2)\n  \
    \  else\n        return make_a_pile(n/2) + make_a_pile(n-1)\nend\n\"\"\"\n   \
    \ Given a positive integer n, you have to make a pile of n levels of stones.\n\
    \    The first level has n stones.\n    The number of stones in the next level\
    \ is:\n        - the next odd number if n is odd.\n        - the next even number\
    \ if n is even.\n    Return the number of stones in each level in a list, where\
    \ element at index\n    i represents the number of stones in the level (i+1).\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_mfz7qk2.jl:15\nin expression starting at\
    \ /tmp/tmp_mfz7qk2.jl:15\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        if odd==0 \n            even=n/2\n            pile=make_a_pile(even)+make_a_pile(odd)\n\
    \        else \n            even=n-1\n            pile=make_a_pile(even)+make_a_pile(n-odd)\n\
    \        end\n        return pile\n    end\nend\n\"\"\"\n    Given a positive\
    \ integer n, you have to make a pile of n levels of stones.\n    The first level\
    \ has n stones.\n    The number of stones in the next level is:\n        - the\
    \ next odd number if n is odd.\n        - the next even number if n is even.\n\
    \    Return the number of stones in each level in a list, where element at index\n\
    \    i represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyxmrl5he.jl:27\nin expression starting at\
    \ /tmp/tmpyxmrl5he.jl:27\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n-1)\n\
    \        if odd \n            push!(pile,odd)\n        elseif even \n        \
    \    push!(pile,even)\n        else \n            push!(pile,odd+even)\n     \
    \   end\n        return pile\n    end\nend\n\"\"\"\n    Given a positive integer\
    \ n, you have to make a pile of n levels of stones.\n    The first level has n\
    \ stones.\n    The number of stones in the next level is:\n        - the next\
    \ odd number if n is odd.\n        - the next even number if n is even.\n    Return\
    \ the number of stones in each level in a list, where element at index\n    i\
    \ represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps1dn_x9g.jl:15\nin expression starting at\
    \ /tmp/tmps1dn_x9g.jl:15\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n == 1 \n    \
    \    return Vector{Int64}(1)\n    else \n        odds = make_a_pile(n / 2)\n \
    \       evens = make_a_pile(n / 2)\n        evens = append(evens, odds)\n    \
    \    return odds\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxyy0f7kn.jl:15\nin expression starting at\
    \ /tmp/tmpxyy0f7kn.jl:15\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        even=n%2==0\n        if odd==1 \n            pile=make_a_pile(n-1)\n\
    \            push!(pile,1)\n            return pile\n        else \n         \
    \   pile=make_a_pile(n-1)\n            push!(pile,1)\n            push!(pile,0)\n\
    \            return pile\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0rgropeu.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0rgropeu.jl:1\n\
    in expression starting at /tmp/tmp0rgropeu.jl:1\n"
  stdout: ''
  timestamp: 1659747325
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        make_a_pile(n/2)\n    else\n        make_a_pile(n/2)\
    \ + make_a_pile(n/2) + make_a_pile(n/2)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmprr2k0sz1.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmprr2k0sz1.jl:24\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmprr2k0sz1.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmprr2k0sz1.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprr2k0sz1.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprr2k0sz1.jl:23\ntest set:\
    \ Error During Test at /tmp/tmprr2k0sz1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmprr2k0sz1.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmprr2k0sz1.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprr2k0sz1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprr2k0sz1.jl:23\ntest set:\
    \ Error During Test at /tmp/tmprr2k0sz1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmprr2k0sz1.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmprr2k0sz1.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprr2k0sz1.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprr2k0sz1.jl:23"
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==1 \n        return [1]\n    else \n        odd=make_a_pile(n/2)\n\
    \        even=make_a_pile(n-odd)\n        odd[end-1]+=odd[end]\n        even[end-1]+=even[end]\n\
    \        return odd+even\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp53z0caw8.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp53z0caw8.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp53z0caw8.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp53z0caw8.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp53z0caw8.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp53z0caw8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp53z0caw8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp53z0caw8.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp53z0caw8.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp53z0caw8.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp53z0caw8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp53z0caw8.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp53z0caw8.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp53z0caw8.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp53z0caw8.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp53z0caw8.jl"
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}() \n    else \n        odd_or_even\
    \ = if n % 2 == 0 \n                        :odd \n                    else \n\
    \                        :even \n        pile = make_a_pile(n / 2) \n        push!(pile,\
    \ odd_or_even) \n        push!(pile, make_a_pile(n / 2)) \n        return pile\
    \ \nend \nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmppav9pn54.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppav9pn54.jl:1\n\
    in expression starting at /tmp/tmppav9pn54.jl:1\n"
  stdout: ''
  timestamp: 1659747325
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        if n %\
    \ 2 == 1 \n            pile = make_a_pile(n / 2)\n            push!(pile, n /\
    \ 2)\n            return pile\n        else \n            pile = make_a_pile(n\
    \ / 2)\n            push!(pile, n / 2)\n            push!(pile, n / 2)\n     \
    \       return pile\n        end\n    end\nend\n\"\"\"\n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj4gfoifo.jl:28\nin expression starting at\
    \ /tmp/tmpj4gfoifo.jl:28\n"
  stdout: ''
  timestamp: 1659747325
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n\n        evens = n - odds\n        pile\
    \ = [odds, evens]\n    else\n        odds = n - 1\n        evens = n\n       \
    \ pile = [odds, evens]\n    end\n    return pile\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_8lgkzvn.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp_8lgkzvn.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8lgkzvn.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8lgkzvn.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_8lgkzvn.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 0] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_8lgkzvn.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8lgkzvn.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_8lgkzvn.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8lgkzvn.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8lgkzvn.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_8lgkzvn.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 0] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8lgkzvn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8lgkzvn.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_8lgkzvn.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 0] == [8, 10, 12, 14, 16, "
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   pile = Vector{Int64}(undef, odds + evens)\n        pile[1] = odds\n      \
    \  pile[2] = evens\n    else\n        odds = n / 2\n        evens = n - odds\n\
    \        pile = Vector{Int64}(undef, odds + evens)\n        pile[1] = odds\n \
    \       pile[2] = evens\n    end\n    return pile\nend\n</cell>\n<code language=julia-1.0>\n\
    @assert make_a_pile(3) == [3, 3, 3]\n@assert make_a_pile(4) == [4, 4, 4]\n@assert\
    \ make_a_pile(5) == [5, 5, 5]\n@assert make_a_pile(6) == [6, 6, 6, 6]\n@assert\
    \ make_a_pile(7) == [7, 7, 7, 7, 7]\n@assert make_a_pile(8) == [8, 8, 8, 8, 8,\
    \ 8]\n@assert make_a_pile(9) == [9, 9, 9, 9, 9, 9, 9]\n@assert make_a_pile(10)\
    \ == [10, 10, 10, 10, 10, 10, 10, 10]\n@assert make_a_pile(11) == [11, 11, 11,\
    \ 11, 11, 11, 11, 11, 11]\n@assert make_a_pile(12) == [12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12]\n@assert make_a_pile(13) == [13, 13, 13, 13, 13, 13, 13, 13,\
    \ 13, 13, 13]\n@assert make_a_pile(14) == [14, 14, 14, 14, 14, 14, 14, 14, 14,\
    \ 14, 14, 14]\n@assert make_a_pile(15) == [15, 15, 15, 15, 15, 15, 15, 15, 15,\
    \ 15, 15, 15]\n@assert make_a_pile(16) == [16, 16, 16, 16, 16, 16, 16, 16, 16,\
    \ 16, 16, 16]\n@assert make_a_pile(17) == [17, 17, 17, 17, 17, 17, 17, 17, 17,\
    \ 17, 17, 17]\n@assert make_a_pile(18) == [18, 18, 18, 18, 18, 18, 18, 18, 18,\
    \ 18, 18, 18, 18]\n@assert make_a_pile(19) == [19, 19, 19, 19, 19, 19, 19, 19,\
    \ 19, 19, 19, 19, 19]\n@assert make_a_pile(20) == [20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20]\n@assert make_a_pile(21) == [21, 21, 21, 21, 21, 21,\
    \ 21, 21, 21, 21, 21, 21, 21, 21]\n@assert make_a_pile(22) == [22, 22, 22, 22,\
    \ 22, 22, 22, 22, 22, 22, 22, 22, 22]\n@assert make_a_pi\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp42ibeq_3.jl:28\nin expression starting at\
    \ /tmp/tmp42ibeq_3.jl:28\n"
  stdout: ''
  timestamp: 1659747325
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        pile = make_a_pile(n / 2)\n        push!(pile, n / 2)\n        return\
    \ pile\n    else \n        pile = make_a_pile(n / 2)\n        push!(pile, n /\
    \ 2)\n        push!(pile, n / 2)\n        return pile\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe499l16h.jl:15\nin expression starting at\
    \ /tmp/tmpe499l16h.jl:15\n"
  stdout: ''
  timestamp: 1659747325
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_pile\
    \ = make_a_pile(n / 2)\n        even_pile = make_a_pile(n / 2)\n        odd_pile\
    \ = odd_pile + [n mod 2]\n        even_pile = even_pile + [n mod 2]\n        return\
    \ odd_pile ++ even_pile\n    end\nend\n\"\"\"\n    Given a positive integer n,\
    \ you have to make a pile of n levels of stones.\n    The first level has n stones.\n\
    \    The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1xg4x2jl.jl:23\nin expression starting at\
    \ /tmp/tmp1xg4x2jl.jl:23\n"
  stdout: ''
  timestamp: 1659747325
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==1 \n        return [1]\n    else \n        odd=make_a_pile(n/2)\n\
    \        even=make_a_pile(n-odd)\n        odd[end]=odd[end-1]+even[end-1]\n  \
    \      odd\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpujqcpubg.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpujqcpubg.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpujqcpubg.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpujqcpubg.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpujqcpubg.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpujqcpubg.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpujqcpubg.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpujqcpubg.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpujqcpubg.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpujqcpubg.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpujqcpubg.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpujqcpubg.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpujqcpubg.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpujqcpubg.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpujqcpubg.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpujqcpubg.jl"
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=make_a_pile(n-1)\n        even=make_a_pile(n-2)\n\
    \        odd=odd+even\n        odd=odd[end-1]\n        even=even[end-1]\n    \
    \    odd=odd+even\n        return odd+odd\n    end\nend\n\"\"\"\n    \n\"\"\"\n\
    \    Given a positive integer n, you have to make a pile of n levels of stones.\n\
    \    The first level has n stones.\n    The number of stones in the next level\
    \ is:\n        - the next odd number if n is odd.\n        - the next even number\
    \ if n is even.\n    Return the number of stones in each level in a list, where\
    \ element at index\n    i represents the number of stones in the level (i+1).\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbfp5uzct.jl:15\nin expression starting at\
    \ /tmp/tmpbfp5uzct.jl:15\n"
  stdout: ''
  timestamp: 1659747325
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        even=n%2==0\n        if odd \n            pile=make_a_pile(n/2)\n   \
    \         push!(pile,n//2)\n            return pile\n        else \n         \
    \   pile=make_a_pile(n/2)\n            push!(pile,n//2)\n            push!(pile,n//2)\n\
    \            return pile\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert make_a_pile(5) == [5, 3, 1]\n@assert make_a_pile(10) == [10, 6, 4, 2]\n\
    @assert make_a_pile(15) == [15, 12, 8, 6, 4, 2]\n@assert make_a_pile(20) == [20,\
    \ 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(25) == [25, 20, 16, 12, 8, 6, 4, 2]\n\
    @assert make_a_pile(30) == [30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(35)\
    \ == [35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(40) == [40, 35,\
    \ 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(45) == [45, 40, 35, 30,\
    \ 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(50) == [50, 45, 40, 35, 30,\
    \ 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(55) == [55, 50, 45, 40, 35,\
    \ 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(60) == [60, 55, 50, 45,\
    \ 40, 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(65) == [65, 60,\
    \ 55, 50, 45, 40, 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(70)\
    \ == [70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert\
    \ make_a_pile(75) == [75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 16, 12,\
    \ 8, 6, 4, 2]\n@assert make_a_pile(80) == [80, 75, 70, 65, 60, 55, 50, 45, 40,\
    \ 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(85) == [85, 80, 75,\
    \ 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 16, 12, 8, 6, 4, 2]\n@assert make_a_pile(90)\
    \ == [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 16, 12, 8, \n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ozbgacu.jl:30\nin expression starting at\
    \ /tmp/tmp2ozbgacu.jl:30\n"
  stdout: ''
  timestamp: 1659747325
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,n-1)\n        end\n        if even \n\
    \            push!(pile,n-1)\n        end\n        return pile\n    end\nend\n\
    \"\"\"\n    Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptym46yji.jl:15\nin expression starting at\
    \ /tmp/tmptym46yji.jl:15\n"
  stdout: ''
  timestamp: 1659747325
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu9xq7s28.jl:15\nin expression starting at\
    \ /tmp/tmpu9xq7s28.jl:15\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 1 \n\
    \        return make_a_pile(n / 2) + 1\n    else \n        return make_a_pile(n\
    \ / 2) + 0\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t\
    @test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp02e3qoh_.jl:15\nin expression starting at\
    \ /tmp/tmp02e3qoh_.jl:15\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=make_a_pile(n/2)\n        even=make_a_pile(n-odd)\n\
    \        odd[end-1]=odd[end-1]+even[end-1]\n        even[end-1]=even[end-1]+odd[end-1]\n\
    \        return odd+even\nend\n\"\"\"\n    Given a positive integer n, you have\
    \ to make a pile of n levels of stones.\n    The first level has n stones.\n \
    \   The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp846n0x2h.jl:15\nin expression starting at\
    \ /tmp/tmp846n0x2h.jl:15\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd = n%2\n        even = n/2\n       \
    \ pile = make_a_pile(odd)\n        push!(pile,even)\n        return pile\n   \
    \ end\nend\n\"\"\"\n    Given a positive integer n, you have to make a pile of\
    \ n levels of stones.\n    The first level has n stones.\n    The number of stones\
    \ in the next level is:\n        - the next odd number if n is odd.\n        -\
    \ the next even number if n is even.\n    Return the number of stones in each\
    \ level in a list, where element at index\n    i represents the number of stones\
    \ in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplsxw076y.jl:15\nin expression starting at\
    \ /tmp/tmplsxw076y.jl:15\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            pile=[pile,odd]\n        else \n            pile=[even,pile]\n\
    \        return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp18cxb638.jl:15\nin expression starting at\
    \ /tmp/tmp18cxb638.jl:15\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}()\n    else\n        make_a_pile(n div\
    \ 2)\n        push!(make_a_pile(n-(n%2)),n%2)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb03si2bc.jl:16\nin expression starting at\
    \ /tmp/tmpb03si2bc.jl:16\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}() \n    else \n        pile = make_a_pile(n-1)\n\
    \        if mod(n,2)==1 \n            pile = pile:+n\n        else \n        \
    \    pile = pile:+n+1\n        end\n        return pile\n    end\nend\n\"\"\"\n\
    \    \n\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"a\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpag45k3u0.jl:28\nin expression starting at\
    \ /tmp/tmpag45k3u0.jl:28\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==1 \n        return [1]\n    else \n        odd=make_a_pile(n/2)\n\
    \        even=make_a_pile(n-odd)\n        odd[end]=(odd[end]+even[end])/2\n  \
    \      return odd\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdqsqr5td.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdqsqr5td.jl:1\n\
    in expression starting at /tmp/tmpdqsqr5td.jl:1\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n\n        evens = n - odds\n    else\n\
    \        odds = n - 1\n        evens = n\n    end\n    pile = zeros(Int, n + 1)\n\
    \    pile[1] = odds\n    pile[2] = evens\n    for i = 3:n\n        pile[i] = pile[i\
    \ - 1] + pile[i - 2]\n    end\n    return pile\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptcm1m7eg.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmptcm1m7eg.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [2, 3, 5, 0] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptcm1m7eg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptcm1m7eg.jl:32\ntest set: Test\
    \ Failed at /tmp/tmptcm1m7eg.jl:34\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 0, 4, 4, 0] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptcm1m7eg.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptcm1m7eg.jl:32\ntest set: Test\
    \ Failed at /tmp/tmptcm1m7eg.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [4, 5, 9, 14, 23, 0] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptcm1m7eg.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptcm1m7eg.jl:32\ntest set: Test\
    \ Failed at /tmp/tmptcm1m7eg.jl:36\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 0, 6, 6, 12, 18, 0] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptcm1m7eg.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptcm1m7eg.jl:32\ntest set: Test\
    \ Failed at /tmp/tmptcm1m7eg.jl:37\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22"
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        even=n%2==0\n        pile=make_a_pile(n/2)\n        if odd \n       \
    \     push!(pile,n+1)\n        else \n            push!(pile,n-1)\n        end\n\
    \        return pile\n    end\nend\n\"\"\"\n    Given a positive integer n, you\
    \ have to make a pile of n levels of stones.\n    The first level has n stones.\n\
    \    The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgg1x13zp.jl:27\nin expression starting at\
    \ /tmp/tmpgg1x13zp.jl:27\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}() \n    else \n        odd_or_even\
    \ = if n%2 == 0 then \"even\" else \"odd\" \n        pile = make_a_pile(n-1) \n\
    \        push!(pile, odd_or_even) \n        return pile \n    end\nend\n\"\"\"\
    \n    \n\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb1sybs50.jl:16\nin expression starting at /tmp/tmpb1sybs50.jl:16\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}() \n    else \n        make_a_pile(n-1)\n\
    \        push!(make_a_pile(n-1),n%2==0?1:0)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space required before \"?\" operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpznslv0mc.jl:17\nin expression starting at\
    \ /tmp/tmpznslv0mc.jl:17\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   return [odds, evens]\n    else\n        odds = n / 2\n        evens = n -\
    \ odds\n        return [odds, evens]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmphq3ugexk.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmphq3ugexk.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  InexactError: Int64(1.5)\n  Stacktrace:\n\
    \    [1] Int64\n      @ ./float.jl:812 [inlined]\n    [2] convert\n      @ ./number.jl:7\
    \ [inlined]\n    [3] setindex!\n      @ ./array.jl:903 [inlined]\n    [4] _unsafe_copyto!(dest::Vector{Int64},\
    \ doffs::Int64, src::Vector{Float64}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n\
    \    [5] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [6] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [7] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [8] copyto!\n      @ ./array.jl:343 [inlined]\n    [9] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n   [10] Vector{Int64}(x::Vector{Float64})\n\
    \      @ Base ./array.jl:563\n   [11] make_a_pile(n::Int64)\n      @ Main /tmp/tmphq3ugexk.jl:0\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [13] macro expansion\n      @ /tmp/tmphq3ugexk.jl:28 [inlined]\n\
    \   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [15] top-level scope\n      @ /tmp/tmphq3ugexk.jl:27\ntest set:\
    \ Test Failed at /tmp/tmphq3ugexk.jl:29\n  Expression: candidate(4) == [4, 6,\
    \ 8, 10]\n   Evaluated: [2, 2] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphq3ugexk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphq3ugexk.jl:27\ntest set: Error\
    \ During Test at /tmp/tmphq3ugexk.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  InexactError: Int64(2.5)\n  Stacktrace:\n\
    \    [1] Int64\n      @ ./float.jl:812 [inlined]\n    [2] convert\n      @ ./number.jl:7\
    \ [inlined]\n    [3] setindex!\n      @ ./array.jl:903 [inlined]\n    [4] _unsafe_copyto!(dest::Vector{Int64},\
    \ doffs::Int64, src::Vecto"
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   pile = Vector{Int64}(undef, odds + evens)\n        pile[1] = odds\n      \
    \  pile[2] = evens\n        return pile\n    else\n        odds = n / 2\n    \
    \    evens = n - odds\n        pile = Vector{Int64}(undef, odds + evens)\n   \
    \     pile[1] = odds\n        pile[2] = evens\n        return pile\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpm5h8pz5r.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpm5h8pz5r.jl:34\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpm5h8pz5r.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm5h8pz5r.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm5h8pz5r.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpm5h8pz5r.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpm5h8pz5r.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm5h8pz5r.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm5h8pz5r.jl:33\ntest set:\
    \ Error During Tes"
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_pile\
    \ = make_a_pile(n / 2)\n        even_pile = make_a_pile(n / 2)\n        odd_pile\
    \ = odd_pile + [n mod 2]\n        even_pile = even_pile + [n mod 2]\n        return\
    \ odd_pile ++ even_pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprtjc1a5a.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprtjc1a5a.jl:1\n\
    in expression starting at /tmp/tmprtjc1a5a.jl:1\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n-1)\n\
    \        if odd \n            push!(pile,odd+1)\n        elseif even \n      \
    \      push!(pile,even+1)\n        else \n            push!(pile,1)\n        end\n\
    \        return pile\n    end\nend\n\"\"\"\n    \n    \n\"\"\"\n    make_a_pile(n::Int64)::Vector{Int64}\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzvhht49i.jl:15\nin expression starting at\
    \ /tmp/tmpzvhht49i.jl:15\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        Vector{Int64}() \n    else \n        make_a_pile(n\
    \ - 1) \n        push!(make_a_pile(n / 2), n % 2 == 0 ? 1 : 2) \n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_r21r7h2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp_r21r7h2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp_r21r7h2.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_r21r7h2.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 2 times)\n     @ Main /tmp/tmp_r21r7h2.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_r21r7h2.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_r21r7h2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_r21r7h2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp_r21r7h2.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_r21r7h2.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 3 times)\n     @ Main /tmp/tmp_r21r7h2.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_r21r7h2.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_r21r7h2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_r21r7h2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp_r21r7h2.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_r21r7h2.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 4 times)\n     @ Main /tmp/tmp_r21r7h2.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Te"
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2 + 1]\nend\n\"\"\"\n    Given a positive integer n, you have to\
    \ make a pile of n levels of stones.\n    The first level has n stones.\n    The\
    \ number of stones in the next level is:\n        - the next odd number if n is\
    \ odd.\n        - the next even number if n is even.\n    Return the number of\
    \ stones in each level in a list, where element at index\n    i represents the\
    \ number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppe75_ign.jl:15\nin expression starting at\
    \ /tmp/tmppe75_ign.jl:15\n"
  stdout: ''
  timestamp: 1659747326
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        push!(pile,odd==0 ? n : n+1)\n        push!(pile,even==0 ? n : n+1)\n\
    \        return pile\n    end\nend\n\"\"\"\n    Given a positive integer n, you\
    \ have to make a pile of n levels of stones.\n    The first level has n stones.\n\
    \    The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd1_4vbgk.jl:15\nin expression starting at\
    \ /tmp/tmpd1_4vbgk.jl:15\n"
  stdout: ''
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2 + 1]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg829_54l.jl:15\nin expression starting at\
    \ /tmp/tmpg829_54l.jl:15\n"
  stdout: ''
  timestamp: 1659747322
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   return make_a_pile(odds) + make_a_pile(evens)\n    else\n        odds = n\
    \ / 2\n        evens = n - odds\n        return make_a_pile(odds) + make_a_pile(evens)\n\
    \    end\nend\n\"\"\"\n    Given a positive integer n, you have to make a pile\
    \ of n levels of stones.\n    The first level has n stones.\n    The number of\
    \ stones in the next level is:\n        - the next odd number if n is odd.\n \
    \       - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmrjvvxh3.jl:23\nin expression starting at\
    \ /tmp/tmpmrjvvxh3.jl:23\n"
  stdout: ''
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   pile = Vector{Int64}(undef, odds + evens)\n        pile[1] = odds\n      \
    \  pile[2] = evens\n        return pile\n    else\n        odds = n / 2\n    \
    \    evens = n - odds\n        pile = Vector{Int64}(undef, odds + evens)\n   \
    \     pile[1] = odds\n        pile[2] = evens\n        return pile\n    end\n\
    end\n\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpifi260mf.jl:29\nin expression starting at\
    \ /tmp/tmpifi260mf.jl:29\n"
  stdout: ''
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=make_a_pile(n/2)\n        even=make_a_pile(n-odd)\n\
    \        odd[end]+=even[end]\n        even[end]+=odd[end]\n        return odd+even\n\
    end\n\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppabm5gth.jl:15\nin expression starting at\
    \ /tmp/tmppabm5gth.jl:15\n"
  stdout: ''
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_or_even\
    \ = if n % 2 == 0 then \"even\" else \"odd\"\n        pile = make_a_pile(n / 2)\n\
    \        push!(pile, odd_or_even)\n        push!(pile, make_a_pile(n / 2))\n \
    \       return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7lt1lrk_.jl:16\nin expression starting at /tmp/tmp7lt1lrk_.jl:16\n"
  stdout: ''
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        pile = make_a_pile(n / 2)\n        push!(pile,\
    \ n / 2)\n        push!(pile, n / 2)\n        return pile\n    else \n       \
    \ pile = make_a_pile(n / 2)\n        push!(pile, n / 2)\n        push!(pile, n\
    \ / 2)\n        push!(pile, n / 2)\n        push!(pile, n / 2)\n        push!(pile,\
    \ n / 2)\n        return pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpku94r3zg.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpku94r3zg.jl:1\n\
    in expression starting at /tmp/tmpku94r3zg.jl:1\n"
  stdout: ''
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n == 1 \n    \
    \    return Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(n div\
    \ 2)\n        even_pile = make_a_pile(n div 2)\n        odd_pile = odd_pile +\
    \ odd_pile\n        even_pile = even_pile + even_pile\n        return odd_pile\
    \ + even_pile\nend\n\"\"\"\n    Given a positive integer n, you have to make a\
    \ pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpibdb_zbh.jl:15\nin expression starting at\
    \ /tmp/tmpibdb_zbh.jl:15\n"
  stdout: ''
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   return [odds, evens]\n    else\n        odds = n / 2\n        evens = n -\
    \ odds\n        return [odds, evens]\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(4)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(5)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(6)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(7)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(8)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(9)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(10)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(11)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(12)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(13)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(14)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(15)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(16)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(17)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(18)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(19)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(20)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(21)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(22)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(23)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(24)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(25)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(26)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(27)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(28)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(29)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(30)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(31)\n</cell>\n<code language=juli\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf8ud3ch2.jl:23\nin expression starting at\
    \ /tmp/tmpf8ud3ch2.jl:23\n"
  stdout: ''
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=make_a_pile(n-1)\n        even=make_a_pile(n-2)\n\
    \        odd=odd+even\n        odd=odd[end-1]\n        even=even[end-1]\n    \
    \    odd=odd+even\n        return odd\nend\n\"\"\"\n    Given a positive integer\
    \ n, you have to make a pile of n levels of stones.\n    The first level has n\
    \ stones.\n    The number of stones in the next level is:\n        - the next\
    \ odd number if n is odd.\n        - the next even number if n is even.\n    Return\
    \ the number of stones in each level in a list, where element at index\n    i\
    \ represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoz6wlu8e.jl:15\nin expression starting at\
    \ /tmp/tmpoz6wlu8e.jl:15\n"
  stdout: ''
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else\n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,n+1)\n        else\n            push!(pile,n-1)\n\
    \        end\n        return pile\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb2gflozc.jl:15\nin expression starting at\
    \ /tmp/tmpb2gflozc.jl:15\n"
  stdout: ''
  timestamp: 1659747328
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        \n\
    \        if odd \n            pile=make_a_pile(n-1)\n            push!(pile,1)\n\
    \            return pile\n        else \n            pile=make_a_pile(n-1)\n \
    \           push!(pile,1)\n            push!(pile,2)\n            return pile\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfqxcrw8i.jl:15\nin expression starting at\
    \ /tmp/tmpfqxcrw8i.jl:15\n"
  stdout: ''
  timestamp: 1659747327
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(n div 2)\n     \
    \   even_pile = make_a_pile(n div 2)\n        odd_pile = odd_pile + odd_pile\n\
    \        even_pile = even_pile + even_pile\n        return odd_pile + even_pile\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6_rnim2c.jl:15\nin expression starting at\
    \ /tmp/tmp6_rnim2c.jl:15\n"
  stdout: ''
  timestamp: 1659747328
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        Vector{Int64}() \n    else \n        make_a_pile(n\
    \ - 1) \n        push!(make_a_pile(n / 2), n % 2 == 0 ? 1 : 2) \n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_r21r7h2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp_r21r7h2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp_r21r7h2.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_r21r7h2.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 2 times)\n     @ Main /tmp/tmp_r21r7h2.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_r21r7h2.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_r21r7h2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_r21r7h2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp_r21r7h2.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_r21r7h2.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 3 times)\n     @ Main /tmp/tmp_r21r7h2.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_r21r7h2.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_r21r7h2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_r21r7h2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp_r21r7h2.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_r21r7h2.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 4 times)\n     @ Main /tmp/tmp_r21r7h2.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Te"
  timestamp: 1659747321
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        return Vector{Int64}()\n    end\n    \n    pile = make_a_pile(n-1)\n\
    \    \n    if mod(n,2)==1\n        push!(pile,n+1)\n    else\n        push!(pile,n-1)\n\
    \    end\n    \n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp372irfw7.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp372irfw7.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [2, 1, 4] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp372irfw7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp372irfw7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp372irfw7.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [2, 1, 4, 3] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp372irfw7.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp372irfw7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp372irfw7.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [2, 1, 4, 3, 6] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp372irfw7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp372irfw7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp372irfw7.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [2, 1, 4, 3, 6, 5] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp372irfw7.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp372irfw7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp372irfw7.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n\n        evens = n - odds\n    else\n\
    \        odds = n - 1\n        evens = n\n    end\n    pile = zeros(Int64, evens\
    \ + odds)\n    pile[evens:end] = odds\n    pile[1:evens] = evens\n    return pile\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsoqod2yv.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpsoqod2yv.jl:30\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::UnitRange{Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] make_a_pile(n::Int64)\n    \
    \ @ Main /tmp/tmpsoqod2yv.jl:21\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpsoqod2yv.jl:30 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpsoqod2yv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsoqod2yv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0:4]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64}, I::Tuple{UnitRange{Int64}})\n\
    \     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n     @ ./abstractarray.jl:656\
    \ [inlined]\n   [3] _setindex!\n     @ ./multidimensional.jl:893 [inlined]\n \
    \  [4] setindex!\n     @ ./abstractarray.jl:1315 [inlined]\n   [5] make_a_pile(n::Int64)\n\
    \     @ Main /tmp/tmpsoqod2yv.jl:21\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpsoqod2yv.jl:31 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpsoqod2yv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsoqod2yv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  ArgumentError: i"
  timestamp: 1659747330
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}() \n    else \n        odd_pile\
    \ = make_a_pile(n div 2)\n        even_pile = make_a_pile(n div 2)\n        odd_pile\
    \ = odd_pile + [n mod 2]\n        even_pile = even_pile + [n mod 2]\n        return\
    \ odd_pile ++ even_pile\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2bg5ckwi.jl:16\nin expression starting at\
    \ /tmp/tmp2bg5ckwi.jl:16\n"
  stdout: ''
  timestamp: 1659747328
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        return Vector{Int64}()\n    \n    pile = make_a_pile(n-1)\n\
    \    \n    if mod(n,2)==1\n        push!(pile,n+1)\n    else\n        push!(pile,n-1)\n\
    \    end\n    \n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaen3735h.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaen3735h.jl:1\n\
    in expression starting at /tmp/tmpaen3735h.jl:1\n"
  stdout: ''
  timestamp: 1659747328
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n\n        evens = n - odds\n        pile\
    \ = Vector{Int64}(undef, odds + evens)\n        pile[1] = odds\n        pile[2]\
    \ = evens\n    else\n        odds = n - 1\n        evens = n - 2\n        pile\
    \ = Vector{Int64}(undef, odds + evens)\n        pile[1] = odds\n        pile[2]\
    \ = evens\n    end\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqitkjo9c.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpqitkjo9c.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [2, 1, 0] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqitkjo9c.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqitkjo9c.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpqitkjo9c.jl:34\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 0, 46983826174416, 46983826174448] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqitkjo9c.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqitkjo9c.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpqitkjo9c.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [4, 3, 0, 145, 71, 1, 0] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqitkjo9c.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqitkjo9c.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpqitkjo9c.jl:36\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 0, 46983835806384, 46983835806416, 46983835806448,\
    \ 46983830665760] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqitkjo9c.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqitkjo9c.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpqitk"
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_count\
    \ = make_a_pile(n / 2)\n        even_count = make_a_pile(n / 2)\n        odd_count\
    \ = odd_count + even_count\n        if n % 2 == 1 \n            odd_count = odd_count\
    \ + 1\n        end\n        return odd_count\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpg88k_kng.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpg88k_kng.jl:30\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpg88k_kng.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpg88k_kng.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg88k_kng.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg88k_kng.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpg88k_kng.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpg88k_kng.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpg88k_kng.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg88k_kng.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg88k_kng.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpg88k_kng.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpg88k_kng.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpg88k_kng.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg88k_kng.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg88k_kng.jl"
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        return Vector{Int64}()\n    else if n==1\n        return\
    \ Vector{Int64}(1)\n    else\n        odd_pile = make_a_pile(n-1)\n        even_pile\
    \ = make_a_pile(n-2)\n        odd_pile = odd_pile + odd_pile\n        even_pile\
    \ = even_pile+even_pile\n        return odd_pile + even_pile\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx37x6b5s.jl:15\nin expression starting at\
    \ /tmp/tmpx37x6b5s.jl:15\n"
  stdout: ''
  timestamp: 1659747328
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}() \n    else \n        odd_pile\
    \ = make_a_pile(n-1) \n        even_pile = make_a_pile(n) \n        odd_pile =\
    \ odd_pile ++ [odd_pile[end-1]+2] \n        even_pile = even_pile ++ [even_pile[end-1]+2]\
    \ \n        return odd_pile ++ even_pile\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdbbktsc1.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdbbktsc1.jl:1\n\
    in expression starting at /tmp/tmpdbbktsc1.jl:1\n"
  stdout: ''
  timestamp: 1659747328
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        if n %\
    \ 2 == 1 \n            pile = make_a_pile(n / 2)\n            push!(pile, n /\
    \ 2)\n            return pile\n        else \n            pile = make_a_pile(n\
    \ / 2)\n            push!(pile, n / 2)\n            push!(pile, n / 2)\n     \
    \       return pile\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp5gd_n05k.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp5gd_n05k.jl:33\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp5gd_n05k.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp5gd_n05k.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5gd_n05k.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5gd_n05k.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5gd_n05k.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp5gd_n05k.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp5gd_n05k.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5gd_n05k.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5gd_n05k.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5gd_n05k.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp5gd_n05k.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp5gd_n05k.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5gd_n05k.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5gd_n05k.jl:32"
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   pile = Vector{Int64}(undef, odds + evens)\n        pile[1::2] = odds\n   \
    \     pile[2::2] = evens\n        return pile\n    else\n        odds = n / 2\n\
    \        evens = n - odds\n        pile = Vector{Int64}(undef, odds + evens)\n\
    \        pile[1::2] = odds\n        pile[2::2] = evens\n        return pile\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpb0m_074_.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpb0m_074_.jl:34\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpb0m_074_.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb0m_074_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb0m_074_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpb0m_074_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpb0m_074_.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb0m_074_.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb0m_074_.jl:33\ntest set:\
    \ Error During Tes"
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}() \n    else \n        odd_or_even\
    \ = if n % 2 == 0 then \"even\" else \"odd\" \n        pile = make_a_pile(n /\
    \ 2) \n        push!(pile, odd_or_even) \n        push!(pile, make_a_pile(n /\
    \ 2)) \n        return pile \nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4,\
    \ 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt_63yh8v.jl:16\nin expression starting at /tmp/tmpt_63yh8v.jl:16\n"
  stdout: ''
  timestamp: 1659747328
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else if n%2==0 \n        return make_a_pile(n/2)+make_a_pile(n/2+1)\
    \ \n    else \n        return make_a_pile(n/2) + make_a_pile(n/2+1) + make_a_pile(n/2+2)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxlufekh0.jl:15\nin expression starting at\
    \ /tmp/tmpxlufekh0.jl:15\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        if n %\
    \ 2 == 0 \n            pile = make_a_pile(n / 2)\n            push!(pile, n /\
    \ 2)\n            return pile\n        else \n            pile = make_a_pile(n\
    \ / 2)\n            push!(pile, n / 2)\n            push!(pile, n / 2)\n     \
    \       return pile\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2vfnjaq7.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp2vfnjaq7.jl:33\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp2vfnjaq7.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp2vfnjaq7.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2vfnjaq7.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2vfnjaq7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp2vfnjaq7.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp2vfnjaq7.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp2vfnjaq7.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2vfnjaq7.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2vfnjaq7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp2vfnjaq7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp2vfnjaq7.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp2vfnjaq7.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2vfnjaq7.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2vfnjaq7.jl:32"
  timestamp: 1659747319
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,n+1)\n        else \n            push!(pile,n+1)\n\
    \            push!(pile,n+1)\n        end\n        return pile\n    end\nend\n\
    \"\"\"\n    Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4vd2mca8.jl:15\nin expression starting at\
    \ /tmp/tmp4vd2mca8.jl:15\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}() \n    else \n        make_a_pile(n div\
    \ 2) + [n mod 2] \n    end\nend\n</cell>\n<code language=julia-1.3>\nmake_a_pile(10)\n\
    </cell>\n<text>\nExercise\nWrite a function that takes a positive integer n and\
    \ returns the number of levels of stones needed to make n piles.\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbox8nnae.jl:16\nin expression starting at\
    \ /tmp/tmpbox8nnae.jl:16\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(n-1)\n        even_pile\
    \ = make_a_pile(n-2)\n        odd_pile = odd_pile + odd_pile\n        even_pile\
    \ = even_pile+even_pile\n        return odd_pile + even_pile\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptc7f0jv_.jl:15\nin expression starting at\
    \ /tmp/tmptc7f0jv_.jl:15\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}() \n    else \n        pile =\
    \ make_a_pile(n div 2) \n        push!(pile, n mod 2) \n        return pile \n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5uhq05rr.jl:16\nin expression starting at\
    \ /tmp/tmp5uhq05rr.jl:16\n"
  stdout: ''
  timestamp: 1659747317
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        \n\
    \        if odd \n            pile=make_a_pile(n/2)\n            push!(pile,n//2)\n\
    \            return pile\n        else \n            pile=make_a_pile(n/2)\n \
    \           push!(pile,n//2)\n            push!(pile,n//2)\n            return\
    \ pile\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4,\
    \ 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphmurk7c2.jl:15\nin expression starting at\
    \ /tmp/tmphmurk7c2.jl:15\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,odd+1)\n        else \n            push!(pile,even+1)\n\
    \        end\n        return pile\n    end\nend\n\"\"\"\n    \n\"\"\"\n    Given\
    \ a positive integer n, you have to make a pile of n levels of stones.\n    The\
    \ first level has n stones.\n    The number of stones in the next level is:\n\
    \        - the next odd number if n is odd.\n        - the next even number if\
    \ n is even.\n    Return the number of stones in each level in a list, where element\
    \ at index\n    i represents the number of stones in the level (i+1).\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphj3m1rzm.jl:15\nin expression starting at\
    \ /tmp/tmphj3m1rzm.jl:15\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        Vector{Int64}()\n    else\n        make_a_pile(n div\
    \ 2) + [n mod 2]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwyq65w0h.jl:16\nin expression starting at\
    \ /tmp/tmpwyq65w0h.jl:16\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else if n%2==0\n        odds = make_a_pile(n/2)\n    \
    \    evens = make_a_pile(n-2)\n        return odds + evens\n    else\n       \
    \ evens = make_a_pile(n/2)\n        odds = make_a_pile(n-2)\n        return odds\
    \ + evens\n    end\nend\n\"\"\"\n    \n    \n\"\"\"\n    Given a positive integer\
    \ n, you have to make a pile of n levels of stones.\n    The first level has n\
    \ stones.\n    The number of stones in the next level is:\n        - the next\
    \ odd number if n is odd.\n        - the next even number if n is even.\n    Return\
    \ the number of stones in each level in a list, where element at index\n    i\
    \ represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5q2y9plu.jl:15\nin expression starting at\
    \ /tmp/tmp5q2y9plu.jl:15\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        pile = make_a_pile(n-1)\n\
    \        if mod(n,2)==0 \n            pile = pile:+n\n        else \n        \
    \    pile = pile:+n+1\n        end\n        return pile\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_53mdwmj.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp_53mdwmj.jl:30\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching (::Colon)(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    (::Colon)(::T, ::Any, !Matched::T)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:40\n    (::Colon)(!Matched::T,\
    \ ::Real, !Matched::T) where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:18\n\
    \    (::Colon)(!Matched::T, ::T) where T<:Real at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:5\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_53mdwmj.jl:20\n\
    \   [2] make_a_pile(n::Int64) (repeats 2 times)\n     @ Main /tmp/tmp_53mdwmj.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_53mdwmj.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_53mdwmj.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_53mdwmj.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching (::Colon)(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    (::Colon)(::T, ::Any, !Matched::T)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:40\n    (::Colon)(!Matched::T,\
    \ ::Real, !Matched::T) where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:18\n\
    \    (::Colon)(!Matched::T, ::T) where T<:Real at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:5\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp_53mdwmj.jl:20\n\
    \   [2] make_a_pile(n::Int64) (repeats 3 times)\n     @ Main /tmp/tmp_53mdwmj.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_53mdwmj.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        if n%2 ==\
    \ 0 \n            pile = make_a_pile(n/2)\n            push!(pile,n%2)\n     \
    \       return pile\n        else \n            pile = make_a_pile(n/2)\n    \
    \        push!(pile,n%2)\n            push!(pile,n%2)\n            return pile\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpwjf1vvgg.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpwjf1vvgg.jl:33\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpwjf1vvgg.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpwjf1vvgg.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwjf1vvgg.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwjf1vvgg.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwjf1vvgg.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpwjf1vvgg.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpwjf1vvgg.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwjf1vvgg.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwjf1vvgg.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwjf1vvgg.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpwjf1vvgg.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpwjf1vvgg.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwjf1vvgg.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwjf1vvgg.jl:32"
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=make_a_pile(n-1)\n        even=make_a_pile(n-2)\n\
    \        odd=odd+even\n        return odd\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw623ud2r.jl:15\nin expression starting at\
    \ /tmp/tmpw623ud2r.jl:15\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==1 \n        return [1]\n    else \n        odd=make_a_pile(n-1)\n\
    \        even=make_a_pile(n-2)\n        odd=odd+even\n        return odd\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpomfnkroe.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpomfnkroe.jl:1\n\
    in expression starting at /tmp/tmpomfnkroe.jl:1\n"
  stdout: ''
  timestamp: 1659747330
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        pile = make_a_pile(n-1)\n\
    \        if mod(n,2)==0 \n            pile = pile:+n\n        else \n        \
    \    pile = pile:+n+1\n        end\n        return pile\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert make_a_pile(5) == Vector{Int64}([5])\n@assert\
    \ make_a_pile(4) == Vector{Int64}([4])\n@assert make_a_pile(3) == Vector{Int64}([3])\n\
    @assert make_a_pile(2) == Vector{Int64}([2])\n@assert make_a_pile(1) == Vector{Int64}([1])\n\
    @assert make_a_pile(0) == Vector{Int64}([0])\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps8kitx1g.jl:25\nin expression starting at\
    \ /tmp/tmps8kitx1g.jl:25\n"
  stdout: ''
  timestamp: 1659747330
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(n-1)\n        even_pile\
    \ = make_a_pile(n-2)\n        odd_pile = odd_pile + odd_pile\n        even_pile\
    \ = even_pile  + even_pile\n        return odd_pile + even_pile\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplrtm_c4p.jl:15\nin expression starting at\
    \ /tmp/tmplrtm_c4p.jl:15\n"
  stdout: ''
  timestamp: 1659747330
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return Vector{Int64}()\n    else if n % 2 == 1\n  \
    \      return make_a_pile(n / 2) + [n / 2]\n    else\n        return make_a_pile(n\
    \ / 2) + [n / 2] + make_a_pile(n / 2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoeubie8b.jl:15\nin expression starting at\
    \ /tmp/tmpoeubie8b.jl:15\n"
  stdout: ''
  timestamp: 1659747330
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        pile = make_a_pile(n / 2)\n        push!(pile, n / 2)\n        return\
    \ pile\n    else \n        pile = make_a_pile(n / 2)\n        push!(pile, n /\
    \ 2)\n        push!(pile, n / 2)\n        return pile\nend\n\"\"\"\n    Given\
    \ a positive integer n, you have to make a pile of n levels of stones.\n    The\
    \ first level has n stones.\n    The number of stones in the next level is:\n\
    \        - the next odd number if n is odd.\n        - the next even number if\
    \ n is even.\n    Return the number of stones in each level in a list, where element\
    \ at index\n    i represents the number of stones in the level (i+1).\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl5jn4qy4.jl:15\nin expression starting at\
    \ /tmp/tmpl5jn4qy4.jl:15\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        Vector{Int64}() \n    else \n        make_a_pile(n\
    \ - 1) \n        push!(make_a_pile(n / 2), n % 2 == 0 ? 1 : 2) \n    end\nend\n\
    \"\"\"\n    \n\"\"\"\n    make_a_pile(n)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp74tokx5l.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp74tokx5l.jl:29\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp74tokx5l.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp74tokx5l.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 2 times)\n     @ Main /tmp/tmp74tokx5l.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp74tokx5l.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp74tokx5l.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp74tokx5l.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp74tokx5l.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp74tokx5l.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 3 times)\n     @ Main /tmp/tmp74tokx5l.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp74tokx5l.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp74tokx5l.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp74tokx5l.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmp74tokx5l.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp74tokx5l.jl:17\n\
    \   [2] make_a_pile(n::Int64) (repeats 4 times)\n     @ Main /tmp/tmp74tokx5l.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Te"
  timestamp: 1659747332
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else \n        odd=n%2\n\
    \        even=n%2==0\n        if odd==0 \n            pile=make_a_pile(n/2)\n\
    \            push!(pile,n+1)\n            return pile\n        else \n       \
    \     pile=make_a_pile(n/2)\n            push!(pile,n+1)\n            push!(pile,n+1)\n\
    \            return pile\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptgq6_q2v.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmptgq6_q2v.jl:35\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmptgq6_q2v.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmptgq6_q2v.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptgq6_q2v.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptgq6_q2v.jl:34\ntest set:\
    \ Error During Test at /tmp/tmptgq6_q2v.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmptgq6_q2v.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmptgq6_q2v.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptgq6_q2v.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptgq6_q2v.jl:34\ntest set:\
    \ Error During Test at /tmp/tmptgq6_q2v.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmptgq6_q2v.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmptgq6_q2v.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptgq6_q2v.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptgq6_q2v.jl:34"
  timestamp: 1659747332
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 1 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2] + make_a_pile(n / 2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg40nfrwz.jl:15\nin expression starting at\
    \ /tmp/tmpg40nfrwz.jl:15\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        pile =\
    \ make_a_pile(n div 2)\n        if n % 2 == 0 \n            push!(pile, n div\
    \ 2)\n        else\n            push!(pile, n div 2 + 1)\n        end\n      \
    \  return pile\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3xy8d2yt.jl:16\nin expression starting at\
    \ /tmp/tmp3xy8d2yt.jl:16\n"
  stdout: ''
  timestamp: 1659747330
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}() \n    else \n        pile = make_a_pile(n-1)\
    \ \n        pile = pile:append(n%2) \n        return pile \nend\n\"\"\"\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptk11wsxe.jl:1\nin expression starting at /tmp/tmptk11wsxe.jl:1\n"
  stdout: ''
  timestamp: 1659747330
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        stones=make_a_pile(n-1)\n\
    \        if odd \n            stones=[stones[1],stones[2]]\n        elseif even\
    \ \n            stones=[stones[2],stones[1]]\n        else \n            stones=[stones[1],stones[2]]\n\
    \    end\n    return stones\nend\n\"\"\"\n    \n\"\"\"\n    make_a_pile(n::Int64)\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeqxgjtmx.jl:15\nin expression starting at\
    \ /tmp/tmpeqxgjtmx.jl:15\n"
  stdout: ''
  timestamp: 1659747330
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return Vector{Int64}()\n    \n    odd_pile = make_a_pile(n\
    \ / 2)\n    even_pile = make_a_pile(n / 2)\n    \n    if n % 2 == 1\n        even_pile\
    \ = even_pile + [n / 2]\n    end\n    \n    odd_pile = odd_pile + [n / 2]\n  \
    \  \n    return odd_pile ++ even_pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkovjo1ba.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkovjo1ba.jl:1\n\
    in expression starting at /tmp/tmpkovjo1ba.jl:1\n"
  stdout: ''
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(n-1)\n        even_pile\
    \ = make_a_pile(n-2)\n        odd_pile = odd_pile + odd_pile\n        even_pile\
    \ = even_pile  + even_pile\n        return odd_pile + even_pile\nend\n</cell>\n\
    <code language=julia-1.5>\n@time make_a_pile(10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a positive integer n and returns the number of ways\
    \ to arrange n piles of stones.\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvr08dccg.jl:15\nin expression starting at\
    \ /tmp/tmpvr08dccg.jl:15\n"
  stdout: ''
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        make_a_pile(n/2)\n    else\n        make_a_pile(n/2)\
    \ + make_a_pile(n/2+1) \n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpoddndao7.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpoddndao7.jl:24\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpoddndao7.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpoddndao7.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoddndao7.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoddndao7.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpoddndao7.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpoddndao7.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpoddndao7.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoddndao7.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoddndao7.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpoddndao7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpoddndao7.jl:12\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpoddndao7.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoddndao7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoddndao7.jl:23"
  timestamp: 1659747332
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   return [odds, evens]\n    else\n        odds = n / 2\n        evens = n -\
    \ odds\n        return [odds, evens]\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(5)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(10)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(20)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(30)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(40)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(50)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(60)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(70)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(80)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(90)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(100)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(110)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(120)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(130)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(140)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(150)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(160)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(170)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(180)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(190)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(200)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(210)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(220)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(230)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pile(240)\n</cell>\n<code language=julia-1.5>\nmake_a_pile(250)\n</cell>\n\
    <code language=julia-1.5>\nmake_a_pile(260)\n</cell>\n<code language=julia-1.5>\n\
    make_a_pi\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbpx703s8.jl:23\nin expression starting at\
    \ /tmp/tmpbpx703s8.jl:23\n"
  stdout: ''
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        pile = make_a_pile(n / 2)\n        push!(pile, n / 2)\n        return\
    \ pile\n    else \n        pile = make_a_pile(n / 2)\n        push!(pile, n /\
    \ 2)\n        push!(pile, n / 2)\n        return pile\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi6n50_yr.jl:15\nin expression starting at\
    \ /tmp/tmpi6n50_yr.jl:15\n"
  stdout: ''
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 1 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2] + make_a_pile(n / 2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg40nfrwz.jl:15\nin expression starting at\
    \ /tmp/tmpg40nfrwz.jl:15\n"
  stdout: ''
  timestamp: 1659747318
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}() \n    else \n        odd=make_a_pile(n-1)\n\
    \        even=make_a_pile(n-2)\n        odd=odd+even\n        odd=odd[end-1:end]\n\
    \        even=even[end-1:end]\n        odd=odd+even\n        return odd\nend\n\
    \"\"\"\n    Given a positive integer n, you have to make a pile of n levels of\
    \ stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp29tlmj5r.jl:1\nin expression starting at /tmp/tmp29tlmj5r.jl:1\n"
  stdout: ''
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n % 2 == 0 \n        odds = n / 2\n        evens = n - odds\n     \
    \   pile = Vector{Int64}(undef, odds + evens)\n        pile[1] = odds\n      \
    \  pile[2] = evens\n        return pile\n    else\n        odds = n / 2\n    \
    \    evens = n - odds\n        pile = Vector{Int64}(undef, odds + evens)\n   \
    \     pile[1] = odds\n        pile[2] = evens\n        return pile\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpm5h8pz5r.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpm5h8pz5r.jl:34\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpm5h8pz5r.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm5h8pz5r.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm5h8pz5r.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpm5h8pz5r.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::UndefInitializer,\
    \ ::Float64)\n  Closest candidates are:\n    Array{T, N}(!Matched::Nothing, ::Any...)\
    \ where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:42\n\
    \    Array{T, N}(!Matched::Missing, ::Any...) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:43\n\
    \    Vector{T}(::UndefInitializer, !Matched::Int64) where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:457\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpm5h8pz5r.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm5h8pz5r.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm5h8pz5r.jl:33\ntest set:\
    \ Error During Tes"
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else if n % 2 == 0 \n\
    \        return make_a_pile(n / 2) + [n / 2]\n    else \n        return make_a_pile(n\
    \ / 2) + [n / 2]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu9xq7s28.jl:15\nin expression starting at\
    \ /tmp/tmpu9xq7s28.jl:15\n"
  stdout: ''
  timestamp: 1659747324
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        \n\
    \        if odd==1 \n            pile=make_a_pile(n-1)\n            push!(pile,n)\n\
    \            return pile\n        else \n            pile=make_a_pile(n-1)\n \
    \           push!(pile,n)\n            push!(pile,even)\n            return pile\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa4fjjkpy.jl:15\nin expression starting at\
    \ /tmp/tmpa4fjjkpy.jl:15\n"
  stdout: ''
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd_pile = make_a_pile(n-1)\n        even_pile\
    \ = make_a_pile(n-2)\n        odd_pile = odd_pile + odd_pile\n        even_pile\
    \ = even_pile+even_pile\n        return odd_pile + even_pile\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptc7f0jv_.jl:15\nin expression starting at\
    \ /tmp/tmptc7f0jv_.jl:15\n"
  stdout: ''
  timestamp: 1659747329
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        Vector{Int64}() \n    else \n        make_a_pile(n\
    \ - 1) \n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp03hq2qqy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp03hq2qqy.jl:24\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: Int64[] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03hq2qqy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03hq2qqy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp03hq2qqy.jl:25\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: Int64[] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03hq2qqy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03hq2qqy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp03hq2qqy.jl:26\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: Int64[] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03hq2qqy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03hq2qqy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp03hq2qqy.jl:27\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: Int64[] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03hq2qqy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03hq2qqy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp03hq2qqy.jl:28\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: Int64[] == [8, 10, 12, 14,"
  timestamp: 1659747332
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0\n        return Vector{Int64}()\n    \n    odd_pile = make_a_pile(n-1)\n\
    \    even_pile = make_a_pile(n-2)\n    \n    odd_pile = odd_pile ++ even_pile\n\
    \    \n    if mod(n,2)==0\n        odd_pile = odd_pile ++ even_pile\n    end\n\
    \    \n    return odd_pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3znqazin.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3znqazin.jl:1\n\
    in expression starting at /tmp/tmp3znqazin.jl:1\n"
  stdout: ''
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else \n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,n+1)\n        elseif even \n        \
    \    push!(pile,n+1)\n            push!(pile,n+1)\n        else \n           \
    \ push!(pile,n+1)\n            push!(pile,n+1)\n            push!(pile,n+1)\n\
    \        end\n        return pile\n    end\nend\n\"\"\"\n    Given a positive\
    \ integer n, you have to make a pile of n levels of stones.\n    The first level\
    \ has n stones.\n    The number of stones in the next level is:\n        - the\
    \ next odd number if n is odd.\n        - the next even number if n is even.\n\
    \    Return the number of stones in each level in a list, where element at index\n\
    \    i represents the number of stones in the level (i+1).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvsmpsez1.jl:15\nin expression starting at\
    \ /tmp/tmpvsmpsez1.jl:15\n"
  stdout: ''
  timestamp: 1659747323
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n == 0 \n        return Vector{Int64}()\n    else \n        odd_or_even\
    \ = if n % 2 == 0 then \"even\" else \"odd\"\n        pile = make_a_pile(n / 2)\n\
    \        push!(pile, odd_or_even)\n        push!(pile, make_a_pile(n / 2))\n \
    \       return pile\n    end\nend\n\"\"\"\n    Given a positive integer n, you\
    \ have to make a pile of n levels of stones.\n    The first level has n stones.\n\
    \    The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in a list, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk_2epeuw.jl:16\nin expression starting at /tmp/tmpk_2epeuw.jl:16\n"
  stdout: ''
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}()\n    else if n==1 \n        return\
    \ Vector{Int64}(1)\n    else\n        odd=n%2\n        even=n%2==0\n        pile=make_a_pile(n/2)\n\
    \        if odd \n            push!(pile,n+1)\n        elseif even \n        \
    \    push!(pile,n+1)\n            push!(pile,n+1)\n        else\n            push!(pile,n+1)\n\
    \            push!(pile,n+1)\n            push!(pile,n+1)\n        end\n     \
    \   return pile\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa0f7mlt2.jl:15\nin expression starting at\
    \ /tmp/tmpa0f7mlt2.jl:15\n"
  stdout: ''
  timestamp: 1659747331
- exit_code: 1
  program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n        \"\"\"\nfunction make_a_pile(n::Int64)::Vector{Int64}\
    \ \n    if n==0 \n        return Vector{Int64}() \n    else \n        pile = make_a_pile(n-1)\
    \ \n        push!(pile, n) \n        return pile \n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxy2ye_tr.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpxy2ye_tr.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy2ye_tr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy2ye_tr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxy2ye_tr.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 2, 3, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy2ye_tr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy2ye_tr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxy2ye_tr.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 2, 3, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy2ye_tr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy2ye_tr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxy2ye_tr.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 2, 3, 4, 5, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxy2ye_tr.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxy2ye_tr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxy2ye_tr.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  timestamp: 1659747319

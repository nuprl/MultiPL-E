name: HumanEval_61_correct_bracketing
language: jl
prompt: "\"\"\" brackets is a string of \"(\" and \")\".\n    return True if every\
  \ opening bracket has a corresponding closing bracket.\n\n                    \"\
  \"\"\nfunction correct_bracketing(brackets::String)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
  ()\") == true)\n\t@test(candidate(\"(()())\") == true)\n\t@test(candidate(\"()()(()())()\"\
  ) == true)\n\t@test(candidate(\"()()((()()())())(()()(()))\") == true)\n\t@test(candidate(\"\
  ((()())))\") == false)\n\t@test(candidate(\")(()\") == false)\n\t@test(candidate(\"\
  (\") == false)\n\t@test(candidate(\"((((\") == false)\n\t@test(candidate(\")\")\
  \ == false)\n\t@test(candidate(\"(()\") == false)\n\t@test(candidate(\"()()(()())())(()\"\
  ) == false)\n\t@test(candidate(\"()()(()())()))()\") == false)\nend\n"
completions: ["    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    \\\"\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    \\\"\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    \\\"\", \"\")\n    brackets = brackets.replace(\"", "    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.", "    \n    \"\"\"\n    \n    \n    \n \
    \   \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    bracket_stack = Stack()\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(bra", "    \n    brackets\
    \ = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\")\", \"\"\
    )\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\\"\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\") \n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets =\
    \ brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n\
    \    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\") \n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets =\
    \ brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n\
    \    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\") \n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")", "    \n    correct_bracketing::Bool = brackets == \"()\"\n    \n\
    \    return correct_bracketing\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you\
    \ for your answer! I tried to implement your code, but I got an error message\
    \ saying \"Undefined function or method 'brackets'\". Do you know what could be\
    \ causing this?\n<|/ c |>\n<| c |>\nI edited my answer to include the function\
    \ definition. Make sure you copy and paste it exactly as I wrote it.\n<|/ c |>\n\
    <| c |>\nThank you for your answer! I tried to implement your code, but I got\
    \ an error message saying \"Undefined function or method 'brackets'\". Do you\
    \ know what could be causing this?\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ the function definition. Make sure you copy and paste it exactly as I wrote\
    \ it.\n<|/ c |>\n<| c |>\nThank you for your answer! I tried to implement your\
    \ code, but I got an error message saying \"Undefined function or method 'brackets'\"\
    . Do you know what could be causing this?\n<|/ c |>\n<| a |>\n<code>", "    \n\
    \    correct_bracketing::Bool = false \n    \n    if brackets == \"\" \n     \
    \   correct_bracketing = true\n    else \n        correct_bracketing = false\n\
    \        for bracket in brackets \n            if bracket==\"(\" \n          \
    \      correct_bracketing = correct_bracketing && true\n            else \n  \
    \              correct_bracketing = correct_bracketing && false\n        end\n\
    \    end\n    return correct_bracketing\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")", "    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.", "    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = bracket", "    \n    correct_bracketing::Bool = brackets\
    \ == \"()\"\n    \n    return correct_bracketing\n    \nend\n</cell>\n<code language=julia-1.5>",
  "    \"\"\"\n    correct_bracketing is a function that takes a string of brackets\
    \ and returns True if every opening bracket has a corresponding closing bracket.\n\
    \    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\(|\\\\)\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"\\\\[|\\\\]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"\\\\{|\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\(|\\\\)\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\[|\\\\\
    ]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\{|\\\\}\", \"\"\
    )\n    brackets = brackets |> String.replaceAll(\"\\\\(|\\\\)\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"\\\\[|\\\\]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"\\\\{|\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\(|\\\\)\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\[|\\\\\
    ]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\{|\\\\}\", \"\"\
    )\n    brackets = brackets |> String.replaceAll(\"\\\\(|\\\\)\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"\\\\[|\\\\]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"\\\\{|\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\(|\\\\)\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\[|\\\\\
    ]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\{|\\\\}\", \"\"\
    )\n    brackets = brackets |> String.replaceAll(\"\\\\(|\\\\)\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"\\\\[|\\\\]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"\\\\{|\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\(|\\\\)\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\[|\\\\\
    ]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\{|\\\\}\", \"\"\
    )\n    brackets = brackets |> String.replaceAll(\"\\\\(|\\\\)\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"\\\\[|\\\\]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"\\\\{|\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\(|\\\\)\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\[|\\\\\
    ]\", \"\")\n    brackets = brackets |> String.", "    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"_\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"=\", \"\")\n    brackets = brackets.replace(\"\
    <=\", \"\")\n    brackets = brackets.replace(\">=\", \"\")\n    brackets = brackets.replace(\"\
    ==\", \"\")\n    brackets = brackets.replace(\"!=\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    brackets = brackets.replace(\"<=>\", \"\")\n    brackets = brackets.replace(\"\
    <=>\", \"\")\n    ", "    brackets = brackets.replace(\"(\", \"\")\n    brackets\
    \ = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"[\", \"\"\
    )\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r", "    \"\"\"\n    correct_bracketing is a helper function that checks whether\
    \ brackets are correctly \n    paired.\n    \n    brackets is a string of \"(\"\
    \ and \")\".\n    return True if every opening bracket has a corresponding closing\
    \ bracket.", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    correct_bracketing = true\n    \n    for bracket in brackets\n      \
    \  if bracket == \"(\"\n            correct_bracketing = correct_bracketing &&\
    \ false\n        elseif bracket == \")\"\n            correct_bracketing = correct_bracketing\
    \ && false\n        elseif bracket == \"[\"\n            correct_bracketing =\
    \ correct_bracketing && false\n        elseif bracket == \"]\"\n            correct_bracketing\
    \ = correct_bracketing && false\n        elseif bracket == \"{\"\n           \
    \ correct_bracketing = correct_bracketing && false\n        elseif bracket ==\
    \ \"}\"\n            correct_bracketing = correct_bracketing && false\n      \
    \  else\n            correct_bracketing = correct_bracketing && true\n       \
    \ end\n    end\n    \n    return correct_bracketing\nend", "    \n    correct_bracketing::Bool\
    \ = false \n    \n    brackets = brackets \n    \n    for bracket in brackets\
    \ \n        \n        if bracket == \"(\" \n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \")\" \n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \"{\" \n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \"}\" \n          \
    \  correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"[\" \n            correct_bracketing = correct_bracketing || true\n      \
    \  else if bracket == \"]\" \n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \"<\" \n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \">\" \n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \"=\" \n          \
    \  correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"!\" \n            correct_bracketing = correct_bracketing || true\n      \
    \  else if bracket == \"?\" \n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \".\" \n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \"-\" \n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \"+\" \n          \
    \  correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"*\" \n            correct_bracketing = correct_bracketing || true\n      \
    \  else if bracket == \"/\" \n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \"%\" \n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \"^\" \n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \"&\" \n          \
    \  correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"|\" \n            correct_bracketing = correct_bracketing || true\n      \
    \  else if bracket == \"~\" \n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \"(\" \n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \")\" \n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \"{\" \n          \
    \  correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"}\" \n            correct_bracketing = correct_bracketing || true\n      \
    \  else if bracket == \"[\" \n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \"]\" \n            correct_bracketing =\
    \ correct_bracketing || true\n        else ", "    \n    \"\"\"\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    brackets = brackets.replace(\"(\",\"\"\
    )\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    \\\"\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"~", "    \n    correct_bracketing::Bool\
    \ = false \n    \n    for bracket in brackets \n        if bracket == \"(\" \n\
    \            correct_bracketing = correct_bracketing || correct_bracketing(brackets[bracket+1:end])\n\
    \        else if bracket == \")\" \n            correct_bracketing = correct_bracketing\
    \ || correct_bracketing(brackets[bracket+1:end])\n        else \n            correct_bracketing\
    \ = correct_bracketing || correct_bracketing(brackets[bracket+1:end])\n    end\n\
    \    return correct_bracketing\nend\n</cell>\n<code language=julia-1.5>", "  \
    \  \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \"\"\"\n\
    \    brackets is a string of \"(\" and \")\".\n    return True if every opening\
    \ bracket has a corresponding closing bracket.", "    brackets = brackets.replace(\"\
    (\", \"[\")\n    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"",
  "    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"|\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    |\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"|\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    ", "    \n    \"\
    \"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    brackets = brackets |>\
    \ String.toLower\n    brackets = brackets |> String.trim\n    brackets = brackets\
    \ |> String.toUpper\n    brackets = brackets |> String.replaceAll(\"\\\\(|\\\\\
    )\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\[|\\\\]\", \"\"\
    )\n    brackets = brackets |> String.replaceAll(\"\\\\{|\\\\}\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"\\\\+|\\\\-\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"\\\\*|\\\\/\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\%\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\^\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\~\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\!\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\?\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\:\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\;\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\,\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\{\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\}\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\[\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\+\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\-\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\*\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\/\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\%\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\^\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\~\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\!\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\?\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\:\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\;\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\,\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\{\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\}\", \"\")\n\
    \    brackets = brackets ", "    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \"\"\"\n    \n    brackets = brackets.replace(\"(\",\"\")\n    brackets =\
    \ brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n\
    \    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    bracket", "    bracket_stack = Stack()\n    bracket_stack.push(brackets)\n\
    \    correct_bracketing_brackets = 0\n    while !bracket_stack.isEmpty()\n   \
    \     bracket = bracket_stack.pop()\n        if bracket == \"(\"\n           \
    \ bracket_stack.push(bracket)\n        elseif bracket == \")\"\n            if\
    \ bracket_stack.isEmpty()\n                correct_bracketing_brackets += 1\n\
    \            else\n                bracket_stack.pop()\n        else\n       \
    \     bracket_stack.push(bracket)\n    end\n    return correct_bracketing_brackets\
    \ == 0\nend", "    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    bracket", "    \"\"\
    \"\n    correct_bracketing is a helper function that checks brackets for correctness.\n\
    \    brackets is a string of \"(\" and \")\".\n    return True if every opening\
    \ bracket has a corresponding closing bracket.", "    bracket_stack = Stack()\n\
    \    bracket_stack.push(brackets)\n    correct_bracketing = True\n    while bracket_stack.size\
    \ > 0\n        brackets = bracket_stack.pop()\n        if brackets == \"(\"\n\
    \            bracket_stack.push(brackets)\n        elseif brackets == \")\"\n\
    \            if bracket_stack.size == 0\n                correct_bracketing =\
    \ False\n            else\n                bracket_stack.pop()\n        end\n\
    \    end\n    return correct_bracketing\nend", "    \"\"\"\n    correct_bracketing\
    \ returns True if brackets has all correct brackets.\n    brackets is a string\
    \ of \"(\" and \")\".\n    \"\"\"\n    brackets = brackets.replace(\"(\", \"[\"\
    )\n    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"(\")\n    brackets = brackets.replace(\"}\", \"(\")\n    brackets = brackets.replace(\"\
    (\", \"[\")\n    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"(\")\n    brackets = brackets.replace(\"}\", \"(\")\n    brackets = brackets.replace(\"\
    (\", \"[\")\n    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"(\")\n    brackets = brackets.replace(\"}\", \"(\")\n    brackets = brackets.replace(\"\
    (\", \"[\")\n    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"(\")\n    brackets = brackets.replace(\"}\", \"(\")\n    brackets = brackets.replace(\"\
    (\", \"[\")\n    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"(\")\n    brackets = brackets.replace(\"}\", \"(\")\n    brackets = brackets.replace(\"\
    (\", \"[\")\n    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"(\")\n    brackets = brackets.replace(\"}\", \"(\")\n    brackets = brackets.replace(\"\
    (\", \"[\")\n    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {", "    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets\
    \ = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n", "    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = ", " \
    \   brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"@\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"@\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"@\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n", "    \n    correct_bracketing::Bool\
    \ = false \n    \n    if brackets == \"\" \n        correct_bracketing = true\
    \ \n    else \n        for bracket in brackets \n            if bracket==\"(\"\
    \ \n                correct_bracketing = correct_bracketing || is_correct_bracket(bracket)\
    \ \n            else \n                if bracket==\")\" \n                  \
    \  correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n \
    \               else \n                    correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n    end \n    return correct_bracketing \n\
    end ", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   brackets = brackets |> String.toLower\n    brackets = brackets |> String.trim\n\
    \    brackets = brackets |> String.toUpper\n    brackets = brackets |> String.replaceAll(\"\
    \\\\(\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\)\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\{\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\[\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\{\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\[\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\{\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\[\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\{\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\[\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\{\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\[\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\{\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\[\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\{\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\}\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    \\\\[\", \"\")\n    brackets = brackets |> String.replaceAll(\"\\\\]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"\\\\{\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"\\\\}\", \"\")", "    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    bracket", "    brackets = brackets.replace(\"(\", \"\")\n    brackets\
    \ = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"[\", \"\"\
    )\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r", "    bracket_stack = Stack()\n    bracket_stack.push(brackets)\n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_stack.pop() \n    bracket_stack.pop() \n    bracket_stack.pop()\
    \ \n    bracket_", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    correct_bracketing::Bool = false \n    \n    for bracket\
    \ in brackets \n        if bracket==\"(\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket, \")\") \n        else \n            correct_bracketing\
    \ = correct_bracketing || is_correct_bracket(bracket, \"(\") \n    \n    return\
    \ correct_bracketing\n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n \
    \   \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"",
  "    \n    brackets = brackets.replace(\"(\", \"[\")\n    brackets = brackets.replace(\"\
    )\", \"]\")\n    brackets = brackets.replace(\"[\", \"(\")\n    brackets = brackets.replace(\"\
    ]\", \")\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"[\", \"(\")\n    brackets = brackets.replace(\"\
    ]\", \")\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = bracket", "    brackets = brackets.replace(\"(\",\
    \ \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", ", "    \n    correct_bracketing::Bool = false \n    \n    for bracket in\
    \ brackets \n        if bracket==\"(\" \n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket==\")\" \n            correct_bracketing = correct_bracketing\
    \ || true\n        else \n            correct_bracketing = correct_bracketing\
    \ || false\n    \n    return correct_bracketing\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThis solution doesn't work if brackets are nested. For example, `[([([])])]`\
    \ returns `true` instead of `false`\n<|/ c |>\n<| a tags=string,haskell |>\nI\
    \ came up with this solution:\n<code>\nimport Data.List", "    \n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |> String.toLower\n    brackets = brackets |> String.trim\n    brackets\
    \ = brackets |>", "    \n    brackets = brackets[2:]\n    \n    for bracket in\
    \ brackets\n        if bracket==\"(\"\n            brackets = brackets[2:]\n \
    \       elseif bracket==\")\"\n            brackets = brackets[1:] \n        else\n\
    \            return false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\
    correct_bracketing(\"(()())\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of characters in the string that\
    \ are not letters.", "    \n    brackets = brackets |> String.toLower\n    brackets\
    \ = brackets |> String.trim\n    brackets = brackets |> String.toUpper\n    brackets\
    \ = brackets |> String.replaceAll(\"[()]\", \"\")\n    brackets = brackets |>\
    \ String.replaceAll(\"[\\\\[\\\\]]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\
    \\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{]\", \"\"\
    )\n    brackets = brackets |> String.replaceAll(\"[\\\\}]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\]\\\\]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\]\\\\]\\\\]\", \"\")\n    brackets = brackets |>\
    \ String.replaceAll(\"[\\\\]\\\\]\\\\]\\\\]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\]\\\\]\\\\]\\\\]\\\\]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\", \"\
    \")\n    brackets = brackets |> String.replaceAll(\"[\\\\]\\\\]\\\\]\\\\]\\\\\
    ]\\\\]\\\\]\\\\]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\\
    ]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\", \"\")\n    brackets = brackets |>\
    \ String.replaceAll(\"[\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\", \"\
    \")\n    brackets = brackets |> String.replaceAll(\"[\\\\]\\\\]\\\\]\\\\]\\\\\
    ]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\
    \\]\\\\]\\\\]\\\\]\\\\]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]\\\\]", "    \n    correct_bracketing(brackets,\
    \ 0)\nend", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    correct_bracketing(brackets, 0)\nend", "    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = bracket",
  "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    brackets\
    \ = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\")\", \"\"\
    )\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.",
  "    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    -\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"_\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    |\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    -\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"_\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    |\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+", "    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   brackets = brackets.replace(\"(\", \" ( \")\n    brackets = brackets.replace(\"\
    )\", \" ) \")\n    brackets = brackets.replace(\"{\", \" { \")\n    brackets =\
    \ brackets.replace(\"}\", \" } \")\n    brackets = brackets.replace(\"[\", \"\
    \ [ \")\n    brackets = brackets.replace(\"]\", \" ] \")\n    brackets = brackets.replace(\"\
    ,\", \" , \")\n    brackets = brackets.replace(\";\", \" ; \")\n    brackets =\
    \ brackets.replace(\":\", \" : \")\n    brackets = brackets.replace(\"!\", \"\
    \ ! \")\n    brackets = brackets.replace(\"?\", \" ? \")\n    brackets = brackets.replace(\"\
    %\", \" %\")\n    brackets = brackets.replace(\"$\", \" $ \")\n    brackets =\
    \ brackets.replace(\"%\", \" %\")\n    brackets = brackets.replace(\"&\", \" &\
    \ \")\n    brackets = brackets.replace(\"*\", \" * \")\n    brackets = brackets.replace(\"\
    +\", \" + \")\n    brackets = brackets.replace(\",\", \" , \")\n    brackets =\
    \ brackets.replace(\";\", \" ; \")\n    brackets = brackets.replace(\":\", \"\
    \ : \")\n    brackets = brackets.replace(\"!\", \" ! \")\n    brackets = brackets.replace(\"\
    ?\", \" ? \")\n    brackets = brackets.replace(\"%\", \" %\")\n    brackets =\
    \ brackets.replace(\"$\", \" $ \")\n    brackets = brackets.replace(\"%\", \"\
    \ %\")\n    brackets = brackets.replace(\"&\", \" & \")\n    brackets = brackets.replace(\"\
    *\", \" * \")\n    brackets = brackets.replace(\"+\", \" + \")\n    brackets =\
    \ brackets.replace(\",\", \" , \")\n    brackets = brackets.replace(\";\", \"\
    \ ; \")\n    brackets = brackets.replace(\":\", \" : \")\n    brackets = brackets.replace(\"\
    !\", \" ! \")\n    brackets = brackets.replace(\"?\", \" ? \")\n    brackets =\
    \ brackets.replace(\"%\", \" %\")\n    brackets = brackets.replace(\"$\", \" $\
    \ \")\n    brackets = brackets.replace(\"%\", \" %\")\n    brackets = brackets.replace(\"\
    &\", \" & \")\n    brackets = brackets.replace(\"*\", \" * \")\n    brackets =\
    \ brackets.replace(\"+\", \" + \")\n    brackets = brackets.replace(\",\", \"\
    \ , \")\n    brackets = brackets.replace(\";\", \" ; \")\n    brackets = brackets.replace(\"\
    :\", \" : \")\n    brackets = brackets.replace(\"!\", \" ! \")\n    brackets =\
    \ brackets.replace(\"?\", \" ? \")\n    brackets = brackets.replace(\"%\", \"\
    \ %", "    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    bracket", "    \n\
    \    correct_bracketing::Bool = false \n    \n    if brackets == \"\"\n      \
    \  return correct_bracketing\n    \n    brackets = brackets \n    \n    for bracket\
    \ in brackets\n        if bracket == \"(\"\n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \")\"\n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \"[\"\n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \"]\"\n           \
    \ correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"{\"\n            correct_bracketing = correct_bracketing || true\n       \
    \ else if bracket == \"}\"\n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \"<\"\n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \">\"\n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \"=\"\n           \
    \ correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"+\"\n            correct_bracketing = correct_bracketing || true\n       \
    \ else if bracket == \"-\"\n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \"*\"\n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \"/\"\n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \"%\"\n           \
    \ correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"^\"\n            correct_bracketing = correct_bracketing || true\n       \
    \ else if bracket == \"~\"\n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \"(\"\n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \")\"\n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \"[\"\n           \
    \ correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"]\"\n            correct_bracketing = correct_bracketing || true\n       \
    \ else if bracket == \"{\"\n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \"}\"\n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bracket == \"<\"\n            correct_bracketing\
    \ = correct_bracketing || true\n        else if bracket == \">\"\n           \
    \ correct_bracketing = correct_bracketing || true\n        else if bracket ==\
    \ \"=\"\n            correct_bracketing = correct_bracketing || true\n       \
    \ else if bracket == \"+\"\n            correct_bracketing = correct_bracketing\
    \ || true\n        else if bracket == \"-\"\n            correct_bracketing =\
    \ correct_bracketing || true\n        else if bra", "    \n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end", "    \n    brackets = brackets.replace(\"(\", \"\")\n   \
    \ brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    |\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"\\\\\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    |\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"|\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    \\\\\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"|\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,", "    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    \\\"\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"_\", \"\")\n    brackets = brackets.replace(\"\
    \\\\\", \"\")\n    brackets = brackets.replace(\"|\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"\\\"\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    _\", \"\")\n    brackets = brackets.replace(\"\\\\\", \"\")\n    brackets = brackets.replace(\"\
    |\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.", "    brackets = brackets.replace(\"(\"\
    ,\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    bracket", "    \n    correct_bracketing = false\n    \n    for\
    \ bracket in brackets\n        if bracket == \"(\"\n            correct_bracketing\
    \ = true\n        elseif bracket == \")\"\n            correct_bracketing = false\n\
    \        end\n    end\n    \n    return correct_bracketing\nend", "    \"\"\"\n\
    \    correct_bracketing is a function that takes a string of brackets and returns\
    \ True if every opening bracket has a corresponding closing bracket.\n    \"\"\
    \"\n    \n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"<\",\"\")\n    brackets = brackets.replace(\"\
    >\",\"\")\n    brackets = brackets.replace(\"+\",\"\")\n    brackets = brackets.replace(\"\
    -\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    /\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"=\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    =\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"=\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    =\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"=\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    =\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"=\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"",
  "    \n    correct_bracketing::Bool = brackets == \"()\"\n    \n    return correct_bracketing\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    brackets\
    \ = brackets[2:]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n", "    \n    \"\"\"\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \"\"\"\n    correct_bracketing is a helper function\
    \ that checks if brackets are correctly \n    nested. \n    \n    brackets is\
    \ a string of \"(\" and \")\".\n    return True if every opening bracket has a\
    \ corresponding closing bracket.", "    \n    \"\"\"\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    brackets = brackets.replace(\"(\", \" ( \")\n    brackets\
    \ = brackets.replace(\")\", \" ) \")\n    brackets = brackets.replace(\"{\", \"\
    \ { \")\n    brackets = brackets.replace(\"}\", \" } \")\n    brackets = brackets.replace(\"\
    [\", \" [ \")\n    brackets = brackets.replace(\"]\", \" ] \")\n    brackets =\
    \ brackets.replace(\",\", \" , \")\n    brackets = brackets.replace(\";\", \"\
    \ ; \")\n    brackets = brackets.replace(\":\", \" : \")\n    brackets = brackets.replace(\"\
    !\", \" ! \")\n    brackets = brackets.replace(\"?\", \" ? \")\n    brackets =\
    \ brackets.replace(\"<\", \" < \")\n    brackets = brackets.replace(\">\", \"\
    \ > \")\n    brackets = brackets.replace(\"=\", \" == \")\n    brackets = brackets.replace(\"\
    !=\", \" != \")\n    brackets = brackets.replace(\"<=\", \" <= \")\n    brackets\
    \ = brackets.replace(\">=\", \" >= \")\n    brackets = brackets.replace(\"!=\"\
    , \" != \")\n    brackets = brackets.replace(\"==\", \" == \")\n    brackets =\
    \ brackets.replace(\"!=\", \" != \")\n    brackets = brackets.replace(\"<=\",\
    \ \" <= \")\n    brackets = brackets.replace(\">=\", \" >= \")\n    brackets =\
    \ brackets.replace(\"!=\", \" != \")\n    brackets = brackets.replace(\"==\",\
    \ \" == \")\n    brackets = brackets.replace(\"!=\", \" != \")\n    brackets =\
    \ brackets.replace(\"<=\", \" <= \")\n    brackets = brackets.replace(\">=\",\
    \ \" >= \")\n    brackets = brackets.replace(\"!=\", \" != \")\n    brackets =\
    \ brackets.replace(\"==\", \" == \")\n    brackets = brackets.replace(\"!=\",\
    \ \" != \")\n    brackets = brackets.replace(\"<=\", \" <= \")\n    brackets =\
    \ brackets.replace(\">=\", \" >= \")\n    brackets = brackets.replace(\"!=\",\
    \ \" != \")\n    brackets = brackets.replace(\"==\", \" == \")\n    brackets =\
    \ brackets.replace(\"!=\", \" != \")\n    brackets = brackets.replace(\"<=\",\
    \ \" <= \")\n    brackets = brackets.replace(\">=\", \" >= \")\n    brackets =\
    \ brackets.replace(\"!=\", \" != \")\n    brackets = brackets.replace(\"==\",\
    \ \" == \")\n    brackets = brackets.replace(\"!=\", \" != \")\n    brackets =\
    \ brackets.replace(\"<=\", \" <= \")\n    brackets = ", "    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n", "    \n    brackets = brackets.replace(\"(\",\"\")\n    brackets\
    \ = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n\
    \    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"\\\"\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"@\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    \\\"\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    @\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"\\\"\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"@\",\"\")\n    brackets = brackets.replace(\"\
    $\",", "    bracket_stack = Stack()\n    bracket_stack.push(brackets)\n    \n\
    \    correct_bracketing = true\n    while bracket_stack.size > 0\n        bracket\
    \ = bracket_stack.pop()\n        if bracket == \"(\"\n            bracket_stack.push(bracket)\n\
    \        elseif bracket == \")\"\n            if bracket_stack.size == 0\n   \
    \             correct_bracketing = false\n            else\n                bracket_stack.pop()\n\
    \        end\n    end\n    return correct_bracketing\nend\n</cell>\n<code language=julia-1.0>\n\
    correct_bracketing(\"()\")\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"\
    (()\")\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"(()[]\")\n</cell>\n\
    <code language=julia-1.0>\ncorrect_bracketing(\"(()[]{})\")\n</cell>\n<code language=julia-1.0>\n\
    correct_bracketing(\"(()[]{}\")\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"\
    (()[]{}\")\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"(()[]{}\"\
    )\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"(()[]{}\")\n</cell>\n\
    <code language=julia-1.0>\ncorrect_bracketing(\"(()[]{}\")\n</cell>\n<code language=julia-1.0>\n\
    correct_bracketing(\"(()[]{}\")\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"\
    (()[]{}\")\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"(()[]{}\"\
    )\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"(()[]{}\")\n</cell>\n\
    <code language=julia-1.0>\ncorrect_bracketing(\"(()[]{}\")\n</cell>\n<code language=julia-1.0>\n\
    correct_bracketing(\"(()[]{}\")\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"\
    (()[]{}\")\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"(()[]{}\"\
    )\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing(\"(()[]{}\")\n</cell>\n\
    <code language=julia-1.0>\ncorrect_bracketing(\"(()[]{}\")\n</cell>\n<code language=julia-1.0>\n\
    correct_bracketing(\"(()[]{}\")\n</cell>\n<code language=julia-1.0>\ncorrect_bracketing",
  "    \"\"\"\n    correct_bracketing is a function that takes a string and checks\
    \ to see if it has correct bracketing.\n    brackets is a string of \"(\" and\
    \ \")\".\n    return True if every opening bracket has a corresponding closing\
    \ bracket.", "    \n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:", "    \n    brackets\
    \ = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\")\", \"\"\
    )\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    bracket", "    \n    correct_bracketing = true\n    \n    for\
    \ bracket in brackets\n        if bracket == \"(\"\n            correct_bracketing\
    \ = correct_bracketing && false\n        elseif bracket == \")\"\n           \
    \ correct_bracketing = correct_bracketing && false\n        elseif bracket ==\
    \ \"[\"\n            correct_bracketing = correct_bracketing && false\n      \
    \  elseif bracket == \"]\"\n            correct_bracketing = correct_bracketing\
    \ && false\n        elseif bracket == \"{\"\n            correct_bracketing =\
    \ correct_bracketing && false\n        elseif bracket == \"}\"\n            correct_bracketing\
    \ = correct_bracketing && false\n        else\n            correct_bracketing\
    \ = correct_bracketing && true\n        end\n    end\n    \n    return correct_bracketing\n\
    end", "    \n    correct_bracketing::Bool = brackets == \"\"\n    \n    if correct_bracketing\n\
    \        correct_bracketing = false\n    else\n        correct_bracketing = true\n\
    \    end\n    \n    return correct_bracketing\nend", "    \n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"@\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    -\", \"\")\n    brackets = brackets.replace(\"=\", \"\")\n    brackets = brackets.replace(\"\
    |\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"@\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    -\", \"\")\n    brackets = brackets.replace(\"=\", \"\")\n    brackets = brackets.replace(\"\
    |\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = ", " \
    \   bracket_stack = Stack()\n    bracket_stack.push(brackets)\n    bracket_stack.pop()\
    \ \n    for bracket in brackets\n        if bracket == \"(\"\n            bracket_stack.push(bracket)\n\
    \        else if bracket == \")\"\n            bracket_stack.pop()\n        else\
    \ if bracket == \"[\"\n            bracket_stack.push(bracket)\n        else if\
    \ bracket == \"]\"\n            bracket_stack.pop()\n        else if bracket ==\
    \ \"{\"\n            bracket_stack.push(bracket)\n        else if bracket == \"\
    }\"\n            bracket_stack.pop()\n        else if bracket == \"<\"\n     \
    \       bracket_stack.push(bracket)\n        else if bracket == \">\"\n      \
    \      bracket_stack.pop()\n        else if bracket == \"=\"\n            bracket_stack.push(bracket)\n\
    \        else if bracket == \"+\"\n            bracket_stack.push(bracket)\n \
    \       else if bracket == \"-\"\n            bracket_stack.push(bracket)\n  \
    \      else if bracket == \"*\"\n            bracket_stack.push(bracket)\n   \
    \     else if bracket == \"/\"\n            bracket_stack.push(bracket)\n    \
    \    else if bracket == \"%\"\n            bracket_stack.push(bracket)\n     \
    \   else if bracket == \"^\"\n            bracket_stack.push(bracket)\n      \
    \  else if bracket == \"~\"\n            bracket_stack.push(bracket)\n       \
    \ else if bracket == \"(\"\n            bracket_stack.push(bracket)\n        else\
    \ if bracket == \")\"\n            bracket_stack.pop()\n        else if bracket\
    \ == \"[\"\n            bracket_stack.push(bracket)\n        else if bracket ==\
    \ \"]\"\n            bracket_stack.pop()\n        else if bracket == \"{\"\n \
    \           bracket_stack.push(bracket)\n        else if bracket == \"}\"\n  \
    \          bracket_stack.pop()\n        else if bracket == \"<\"\n           \
    \ bracket_stack.push(bracket)\n        else if bracket == \">\"\n            bracket_stack.pop()\n\
    \        else if bracket == \"=\"\n            bracket_stack.push(bracket)\n \
    \       else if bracket == \"+\"\n            bracket_stack.push(bracket)\n  \
    \      else if bracket == \"-\"\n            bracket_stack.push(bracket)\n   \
    \     else if bracket == \"*\"\n            bracket_stack.push", "    \n    brackets\
    \ = brackets[2:]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:", "    \"\"\"\n    correct_bracketing is a helper\
    \ function that checks brackets for correctness.\n    brackets is a string of\
    \ \"(\" and \")\".\n    return True if every opening bracket has a corresponding\
    \ closing bracket.", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    brackets = brackets |> String.replace(\" \", \"\") |> String.split(\"\
    (\")\n    for bracket in brackets\n        if bracket.endsWith(\")\")\n      \
    \      return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    correct_bracketing(\"(())\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"\
    (()\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()()\")\n</cell>\n\
    <code language=julia-1.5>\ncorrect_bracketing(\"(()())\")\n</cell>\n<code language=julia-1.5>\n\
    correct_bracketing(\"(()())()\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"\
    (()())()()\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()())()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()",
  "    bracket_stack = Stack()\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(bra", "    \n    brackets\
    \ = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\")\", \"\"\
    )\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = ", "    \n    \"\"\"\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    ", "    brackets\
    \ = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\")\", \"\"\
    )\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.",
  "    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n    \"\"\"\n    \n\
    \    brackets = brackets.replace(\"(\", \"[\")\n    brackets = brackets.replace(\"\
    )\", \"]\")\n    brackets = brackets.replace(\"[\", \"(\")\n    brackets = brackets.replace(\"\
    ]\", \")\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"[\", \"{\")\n    brackets = brackets.replace(\"\
    ]\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{", "    brackets = brackets[2:]\n\
    \    for bracket in brackets\n        if bracket == \"(\"\n            bracket\
    \ = \")\"\n            break\n    end\n    return brackets == \"()\"\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    \"\"\"\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    brackets = brackets |> String.toLower\n    brackets = brackets |> String.replaceAll(\"\
    [()]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\[\\\\]]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\{]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\]\\\\]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\]\\\\\
    )\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\)\\\\]\", \"\"\
    )\n    brackets = brackets |> String.replaceAll(\"[\\\\)\\\\)\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\)\\\\)\\\\)\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"[\\\\)\\\\)\\\\)\\\\)\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\)\\\\)\\\\)\\\\)\\\\)\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\)\\\\)\\\\)\\\\)\\\\)\\\\\
    )\\\\)\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\)\\\\)\\\\\
    )\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\
    \\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\\
    )\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\
    \\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\\
    )\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\
    \\)\\\\)\\\\)\\\\)\\\\)\\\\", "    bracket_stack = Stack()\n    bracket_stack.push(brackets)\n\
    \    correct_bracket = false\n    while !bracket_stack.isEmpty()\n        bracket\
    \ = bracket_stack.pop()\n        if bracket == \"(\"\n            bracket_stack.push(bracket)\n\
    \        elseif bracket == \")\"\n            if bracket_stack.isEmpty()\n   \
    \             correct_bracket = false\n            else\n                bracket_stack.push(bracket)\n\
    \        else\n            correct_bracket = true\n    end\n    return correct_bracket\n\
    end", "    brackets = brackets[2:]\n    for bracket in brackets\n        if bracket\
    \ == \"(\"\n            bracket = \")\"\n            break\n    end\n    return\
    \ brackets == bracket\nend", "    brackets = brackets[2:]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n", "    \n    brackets\
    \ = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets =\
    \ brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n\
    \    \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n  \
    \  \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n\
    \    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n  \
    \  brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets\
    \ = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets =\
    \ brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n\
    \    \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n  \
    \  \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n\
    \    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n  \
    \  brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets\
    \ = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets =\
    \ brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n\
    \    \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n  \
    \  \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n\
    \    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n  \
    \  brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets\
    \ = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets =\
    \ brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n\
    \    \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n  \
    \  \n    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n\
    \    brackets = brackets[2:-2]\n    \n    brackets = brackets[2:-2]\n    \n  \
    \  brackets = brackets[2:-2]\n    \n", "    \"\"\"\n    correct_bracketing is\
    \ a helper function that checks if brackets are correctly \n    formed.\n    \"\
    \"\"\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    '\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = bracket", "    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.replaceAll(\"[()]\", \"\")\n    brackets =\
    \ brackets |> String.replaceAll(\"[\\\\[\\\\]]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\{\\\\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\
    \\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\{\\\\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\
    \\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\{\\\\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\
    \\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\{\\\\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\
    \\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets\
    \ = brackets |> String.replace", "    \n    brackets = brackets.replace(\"(\"\
    , \"\\(\")\n    brackets = brackets.replace(\")\", \"\\)\")\n    brackets = brackets.replace(\"\
    {\", \"\\(\")\n    brackets = brackets.replace(\"}\", \"\\)\")\n    brackets =\
    \ brackets.replace(\"[\", \"\\[\")\n    brackets = brackets.replace(\"]\", \"\\\
    ]\")\n    brackets = brackets.replace(\",\", \"\\,\")\n    brackets = brackets.replace(\"\
    ;\", \"\\;\")\n    brackets = brackets.replace(\":\", \"\\:\")\n    brackets =\
    \ brackets.replace(\"=\", \"\\=\")\n    brackets = brackets.replace(\"!\", \"\\\
    !\")\n    brackets = brackets.replace(\"~\", \"\\~\")\n    brackets = brackets.replace(\"\
    \\\"\", \"\\\"\")\n    brackets = brackets.replace(\"'\", \"\\'\")\n    brackets\
    \ = brackets.replace(\"\\(\", \"\\(\")\n    brackets = brackets.replace(\"\\)\"\
    , \"\\)\")\n    brackets = brackets.replace(\"\\[\", \"\\[\")\n    brackets =\
    \ brackets.replace(\"\\]\", \"\\]\")\n    brackets = brackets.replace(\"\\,\"\
    , \"\\,\")\n    brackets = brackets.replace(\"\\;\", \"\\;\")\n    brackets =\
    \ brackets.replace(\"\\:\", \"\\:\")\n    brackets = brackets.replace(\"\\=\"\
    , \"\\=\")\n    brackets = brackets.replace(\"\\!\", \"\\!\")\n    brackets =\
    \ brackets.replace(\"\\~\", \"\\~\")\n    brackets = brackets.replace(\"\\\"\"\
    , \"\\\"\")\n    brackets = brackets.replace(\"\\'\", \"\\'\")\n    brackets =\
    \ brackets.replace(\"\\\\\", \"\\\\\")\n    brackets = brackets.replace(\"\\(\"\
    , \"\\(\")\n    brackets = brackets.replace(\"\\)\", \"\\)\")\n    brackets =\
    \ brackets.replace(\"\\[\", \"\\[\")\n    brackets = brackets.replace(\"\\]\"\
    , \"\\]\")\n    brackets = brackets.replace(\"\\,\", \"\\,\")\n    brackets =\
    \ brackets.replace(\"\\;\", \"\\;\")\n    brackets = brackets.replace(\"\\:\"\
    , \"\\:\")\n    brackets = brackets.replace(\"\\=\", \"\\=\")\n    brackets =\
    \ brackets.replace(\"\\!\", \"\\!\")\n    brackets = brackets.replace(\"\\~\"\
    , \"\\~\")\n    brackets = brackets.replace(\"\\\"\", \"\\\"\")\n    brackets\
    \ = brackets.replace(\"\\'\", \"\\'\")\n    brackets = brackets.replace(\"\\\\\
    \", \"\\\\\")\n    brackets = brackets.replace(\"\\(\", \"\\(\")\n    brackets\
    \ = brackets.replace(\"\\)\", \"\\)\")\n    brackets = brackets.replace(\"\\[\"\
    , \"\\[\")\n    brackets = brackets.replace(\"\\]\", \"\\]\")", "    \n    correct_bracketing::Bool\
    \ = false \n    \n    if brackets == \"\" \n        correct_bracketing = true\
    \ \n    else \n        correct_bracketing = false \n        for bracket in brackets\
    \ \n            if bracket == \"(\" \n                correct_bracketing = correct_bracketing\
    \ || correct_bracketing_bracket(bracket) \n            else if bracket == \")\"\
    \ \n                correct_bracketing = correct_bracketing || correct_bracketing_bracket(bracket)\
    \ \n            else \n                correct_bracketing = correct_bracketing\
    \ || correct_bracketing_bracket(bracket) \n    end \n    return correct_bracketing\
    \ \nend ", "    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n", "    \n    correct_bracketing::Bool\
    \ = brackets == \"()\"\n    \n    return correct_bracketing", "    brackets =\
    \ brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n\
    \    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    @\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"@\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    @\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",", "    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"/\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"|\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"/\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"|\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    *", "    \n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"\\\"\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    \\\"\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"\\\"\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")", "    bracket_stack =\
    \ Stack()\n    bracket_stack.push(brackets)\n    \n    while !bracket_stack.isEmpty()\n\
    \        bracket = bracket_stack.pop()\n        if bracket == \"(\"\n        \
    \    bracket_stack.push(bracket)\n        elseif bracket == \")\"\n          \
    \  if bracket_stack.isEmpty()\n                true\n            else\n      \
    \          bracket_stack.pop()\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    brackets = brackets.replace(\"(\", \"[\")\n    brackets = brackets.replace(\"\
    )\", \"]\")\n    brackets = brackets.replace(\"[\", \"(\")\n    brackets = brackets.replace(\"\
    ]\", \")\")\n    brackets = brackets.replace(\"{\", \"[\")\n    brackets = brackets.replace(\"\
    }\", \"]\")\n    brackets = brackets.replace(\"[\", \"{\")\n    brackets = brackets.replace(\"\
    ]\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.replace(\"{\", \"{\")\n    brackets = brackets.replace(\"\
    }\", \"}\")\n    brackets = brackets.", "    brackets = brackets[2:]\n    brackets\
    \ = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n",
  "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    bracket_stack\
    \ = Stack()\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    \n    while bracket_stack.count > 0 do\n        bracket = bracket_stack.pop()\n\
    \        if bracket == \"(\" then\n            bracket_stack.push(bracket)\n \
    \       elseif bracket == \")\" then\n            if bracket_stack.count > 0 then\n\
    \                bracket = bracket_stack.pop()\n                if bracket ==\
    \ \"(\" then\n                    bracket_stack.push(bracket)\n              \
    \  elseif bracket == \")\" then\n                    bracket_stack.push(bracket)\n\
    \                else\n                    bracket_stack.push(bracket)\n     \
    \           end\n            else\n                bracket_stack.push(bracket)\n\
    \            end\n        else\n            bracket_stack.push(bracket)\n    \
    \    end\n    end\n    return bracket_stack.count == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    correct_bracketing(\"()\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"\
    (()\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()())\")\n</cell>\n\
    <code language=julia-1.5>\ncorrect_bracketing(\"(()())(())\")\n</cell>\n<code\
    \ language=julia-1.5>\ncorrect_bracketing(\"(()())(())(())\")\n</cell>\n<code\
    \ language=julia-1.5>\ncorrect_bracketing(\"(()())(())(())(())\")\n</cell>\n<code\
    \ language=julia-1.5>\ncorrect_bracketing(\"(()())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())",
  "    brackets = brackets |> String.toLower\n    brackets = brackets |> String.replaceAll(\"\
    [()]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\[\\\\]]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replace", "    \n    correct_bracketing\
    \ = True\n    \n    for bracket in brackets\n        if bracket == \"(\"\n   \
    \         correct_bracketing = correct_bracketing && false\n        elseif bracket\
    \ == \")\"\n            correct_bracketing = correct_bracketing && false\n   \
    \     else\n            correct_bracketing = correct_bracketing && true\n    end\n\
    \    \n    return correct_bracketing\nend", "    bracket_opens = brackets.count(\"\
    (\")\n    bracket_closes = brackets.count(\")\")\n    if bracket_opens == bracket_closes:\n\
    \        return true\n    else\n        return false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\ncorrect_bracketing(\"()\")\n</cell>\n<code language=julia-1.5>\n\
    correct_bracketing(\"(()\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"\
    (()())\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()())()\"\
    )\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()())()()\")\n</cell>\n\
    <code language=julia-1.5>\ncorrect_bracketing(\"(()())()()()\")\n</cell>\n<code\
    \ language=julia-1.5>\ncorrect_bracketing
  "    \n    brackets = brackets |> String.replace(\" \", \"\") |> String.split(\"\
    (\") |> Array.filter (fun x -> x <> \"\")\n    brackets = brackets |> Array.filter\
    \ (fun x -> x <> \")\")\n    brackets = brackets |> Array.filter (fun x -> x <>\
    \ \"()\")\n    brackets = brackets |> Array.filter (fun x -> x <> \"[]\")\n  \
    \  brackets = brackets |> Array.filter (fun x -> x <> \"{}\")\n    brackets =\
    \ brackets |> Array.filter (fun x -> x <> \"<>\")\n    brackets = brackets |>\
    \ Array.filter (fun x -> x <> \"=\")\n    brackets = brackets |> Array.filter\
    \ (fun x -> x <> \"==\")\n    brackets = brackets |> Array.filter (fun x -> x\
    \ <> \"!=\")\n    brackets = brackets |> Array.filter (fun x -> x <> \"||\")\n\
    \    brackets = brackets |> Array.filter (fun x -> x <> \"&&\")\n    brackets\
    \ = brackets |> Array.filter (fun x -> x <> \"|\")\n    brackets = brackets |>\
    \ Array.filter (fun x -> x <> \"&\")\n    brackets = brackets |> Array.filter\
    \ (fun x -> x <> \"=\")\n    brackets = brackets |> Array.filter (fun x -> x <>\
    \ \"==\")\n    brackets = brackets |> Array.filter (fun x -> x <> \"!=\")\n  \
    \  brackets = brackets |> Array.filter (fun x -> x <> \"||\")\n    brackets =\
    \ brackets |> Array.filter (fun x -> x <> \"&&\")\n    brackets = brackets |>\
    \ Array.filter (fun x -> x <> \"|\")\n    brackets = brackets |> Array.filter\
    \ (fun x -> x <> \"&\")\n    brackets = brackets |> Array.filter (fun x -> x <>\
    \ \"=\")\n    brackets = brackets |> Array.filter (fun x -> x <> \"==\")\n   \
    \ brackets = brackets |> Array.filter (fun x -> x <> \"!=\")\n    brackets = brackets\
    \ |> Array.filter (fun x -> x <> \"||\")\n    brackets = brackets |> Array.filter\
    \ (fun x -> x <> \"&&\")\n    brackets = ", "    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    ", "    \n    brackets = brackets.replace(\"(\", \"( \")\n    brackets\
    \ = brackets.replace(\")\", \" )\")\n    brackets = brackets.replace(\"[\", \"\
    ( [\")\n    brackets = brackets.replace(\"]\", \" ] )\")\n    brackets = brackets.replace(\"\
    {\", \"( {\")\n    brackets = brackets.replace(\"}\", \"} )\")\n    brackets =\
    \ brackets.replace(\",\", \" , \")\n    brackets = brackets.replace(\";\", \"\
    \ ; \")\n    brackets = brackets.replace(\":\", \" : \")\n    brackets = brackets.replace(\"\
    !\", \" ! \")\n    brackets = brackets.replace(\"?\", \" ? \")\n    brackets =\
    \ brackets.replace(\"<\", \" < \")\n    brackets = brackets.replace(\">\", \"\
    \ > \")\n    brackets = brackets.replace(\"+\", \" + \")\n    brackets = brackets.replace(\"\
    -\", \" - \")\n    brackets = brackets.replace(\"*\", \" * \")\n    brackets =\
    \ brackets.replace(\"%\", \" % \")\n    brackets = brackets.replace(\"^\", \"\
    \ ^ \")\n    brackets = brackets.replace(\"~\", \" ~ \")\n    brackets = brackets.replace(\"\
    (\", \" ( \")\n    brackets = brackets.replace(\")\", \" ) \")\n    brackets =\
    \ brackets.replace(\"[\", \" [ \")\n    brackets = brackets.replace(\"]\", \"\
    \ ] \")\n    brackets = brackets.replace(\"{\", \" { \")\n    brackets = brackets.replace(\"\
    }\", \" } \")\n    brackets = brackets.replace(\",\", \" , \")\n    brackets =\
    \ brackets.replace(\";\", \" ; \")\n    brackets = brackets.replace(\":\", \"\
    \ : \")\n    brackets = brackets.replace(\"!\", \" ! \")\n    brackets = brackets.replace(\"\
    ?\", \" ? \")\n    brackets = brackets.replace(\"<\", \" < \")\n    brackets =\
    \ brackets.replace(\">\", \" > \")\n    brackets = brackets.replace(\"+\", \"\
    \ + \")\n    brackets = brackets.replace(\"-\", \" - \")\n    brackets = brackets.replace(\"\
    *\", \" * \")\n    brackets = brackets.replace(\"%\", \" % \")\n    brackets =\
    \ brackets.replace(\"^\", \" ^ \")\n    brackets = brackets.replace(\"~\", \"\
    \ ~ \")\n    brackets = brackets.replace(\"(\", \" ( \")\n    brackets = brackets.replace(\"\
    )\", \" ) \")\n    brackets = brackets.replace(\"[\", \" [ \")\n    brackets =\
    \ brackets.replace(\"]\", \" ] \")\n    brackets = brackets.replace(\"{\", \"\
    \ { \")\n    brackets = brackets.replace(\"}\", \" } \")\n    ", "    bracket_stack\
    \ = Stack()\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n    bracket_stack.push(brackets)\n\
    \    bracket_stack.push(brackets)\n    bracket_stack.push(bra", "    brackets\
    \ = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n\
    \    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"\\\"\",\"\")\n    brackets = brackets.replace(\"\
    <\",\"\")\n    brackets = brackets.replace(\">\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    \\\"\",\"\")\n    brackets = brackets.replace(\"<\",\"\")\n    brackets = brackets.replace(\"\
    >\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"\\\"\",\"\")\n    brackets = brackets.replace(\"\
    <\",\"\")\n    brackets = brackets.replace(\">\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n", "    \n    \"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    correct_bracketing =\
    \ true\n    for bracket in brackets\n        if bracket == \"(\"\n           \
    \ correct_bracketing = correct_bracketing && false\n        elseif bracket ==\
    \ \")\"\n            correct_bracketing = correct_bracketing && true\n       \
    \ else\n            correct_bracketing = correct_bracketing && false\n       \
    \ end\n    end\n    return correct_bracketing\nend\n</cell>\n<code language=julia-1.4>\n\
    correct_bracketing(\"(()())\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of times the character \"a\" appears\
    \ in the string. \nFor example, if the string were \"abcabc\", the function should\
    \ return 3.", "    brackets = brackets.replace(\"(\", \"\\(\")\n    brackets =\
    \ brackets.replace(\")\", \"\\)\")\n    brackets = brackets.replace(\"[\", \"\\\
    [\")\n    brackets = brackets.replace(\"]\", \"\\]\")\n    brackets = brackets.replace(\"\
    {\", \"\\{\")\n    brackets = brackets.replace(\"}\", \"\\}\")\n    brackets =\
    \ brackets.replace(\",\", \"\\,\")\n    brackets = brackets.replace(\";\", \"\\\
    ;\")\n    brackets = brackets.replace(\":\", \"\\:\")\n    brackets = brackets.replace(\"\
    =\", \"\\=\")\n    brackets = brackets.replace(\"!\", \"\\!\")\n    brackets =\
    \ brackets.replace(\"?\", \"\\?\")\n    brackets = brackets.replace(\"\\(\", \"\
    \\(\")\n    brackets = brackets.replace(\"\\)\", \"\\)\")\n    brackets = brackets.replace(\"\
    \\[\", \"\\[\")\n    brackets = brackets.replace(\"\\]\", \"\\]\")\n    brackets\
    \ = brackets.replace(\"\\{\", \"\\{\")\n    brackets = brackets.replace(\"\\}\"\
    , \"\\}\")\n    brackets = brackets.replace(\"\\,\", \"\\,\")\n    brackets =\
    \ brackets.replace(\"\\;\", \"\\;\")\n    brackets = brackets.replace(\"\\:\"\
    , \"\\:\")\n    brackets = brackets.replace(\"\\=\", \"\\=\")\n    brackets =\
    \ brackets.replace(\"\\!\", \"\\!\")\n    brackets = brackets.replace(\"\\?\"\
    , \"\\?\")\n    brackets = brackets.replace(\"\\(\", \"\\(\")\n    brackets =\
    \ brackets.replace(\"\\)\", \"\\)\")\n    brackets = brackets.replace(\"\\[\"\
    , \"\\[\")\n    brackets = brackets.replace(\"\\]\", \"\\]\")\n    brackets =\
    \ brackets.replace(\"\\{\", \"\\{\")\n    brackets = brackets.replace(\"\\}\"\
    , \"\\}\")\n    brackets = brackets.replace(\"\\,\", \"\\,\")\n    brackets =\
    \ brackets.replace(\"\\;\", \"\\;\")\n    brackets = brackets.replace(\"\\:\"\
    , \"\\:\")\n    brackets = brackets.replace(\"\\=\", \"\\=\")\n    brackets =\
    \ brackets.replace(\"\\!\", \"\\!\")\n    brackets = brackets.replace(\"\\?\"\
    , \"\\?\")\n    brackets = brackets.replace(\"\\(\", \"\\(\")\n    brackets =\
    \ brackets.replace(\"\\)\", \"\\)\")\n    brackets = brackets.replace(\"\\[\"\
    , \"\\[\")\n    brackets = brackets.replace(\"\\]\", \"\\]\")\n    brackets =\
    \ brackets.replace(\"\\{\", \"\\{\")\n    brackets = brackets.replace(\"\\}\"\
    , \"\\}\")\n    brackets = brackets.replace(\"\\,\", \"\\,\")\n    brackets =\
    \ brackets.replace(\"\\;\", \"\\", "    bracket_stack = Stack()\n    bracket_stack.push(brackets)\n\
    \    correct_bracket = bracket_stack.top()\n    while bracket_stack.top() != \"\
    ()\"\n        bracket_stack.pop()\n        if bracket_stack.top() != \"()\"\n\
    \            correct_bracket = false\n        end\n    end\n    return correct_bracket\n\
    end\n</cell>\n<code language=julia-1.0>", "    brackets = brackets |> String.replace(\"\
    \ \", \"\") |> String.split(\"(\") |> Array.map((x) -> String.replace(\")\", \"\
    \", x)) |> Array.filter((x) -> x != \"\")\n    brackets = brackets |> Array.sort\n\
    \    for bracket in brackets\n        if bracket.head != bracket.tail\n      \
    \      return false\n    return true\nend", "    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = bracket",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    correct_bracketing::Bool\
    \ = false \n    \n    brackets = brackets \n    \n    for bracket in brackets\
    \ \n        \n        if bracket==\"(\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else \n            if bracket==\")\"\
    \ \n                correct_bracketing = correct_bracketing || is_correct_bracket(bracket)\
    \ \n            else \n                correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n                \n    return correct_bracketing\
    \ \n    \n    \n\"\"\"\n    \n    correct_bracketing(brackets)", "    \n    correct_bracketing::Bool\
    \ = false \n    \n    if brackets == \"\" \n        correct_bracketing = true\
    \ \n    else \n        correct_bracketing = false \n        for bracket in brackets\
    \ \n            if bracket==\"(\" \n                correct_bracketing = correct_bracketing\
    \ || correct_bracketing_bracket(bracket) \n            else \n               \
    \ if bracket==\")\" \n                    correct_bracketing = correct_bracketing\
    \ || correct_bracketing_bracket(bracket) \n                else \n           \
    \         correct_bracketing = correct_bracketing || correct_bracketing_bracket(bracket)\
    \ \n    return correct_bracketing \nend ", "    \n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"@\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    @\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"@\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.",
  "    \"\"\"\n    correct_bracketing is a function that takes a string of brackets\
    \ and returns True if every opening bracket has a corresponding closing bracket.\n\
    \    \"\"\"\n    \n    brackets = brackets.replace(\"(\", \"\")\n    brackets\
    \ = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"[\", \"\"\
    )\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = bracket", "    brackets = brackets.replace(\"(\", \"\
    \")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"=\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"=\", \"\")\n    brackets = brackets.replace(\"",
  "    \"\"\"\n    correct_bracketing is a function that takes a string and checks\
    \ if it \n    has correct bracketing. It returns True if bracketing is correct.\n\
    \    \n    brackets is a string of \"(\" and \")\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.", "    brackets = brackets\
    \ |> String.replace(\" \", \"\") |> String.split(\"(\") |> Array.filter(fun x\
    \ -> x <> \"\") |> Array.map(fun x -> x |> String.split(\")\")) |> Array.filter(fun\
    \ x -> x <> \"\") |> Array.map(fun x -> x |> String.split(\")\")) |> Array.filter(fun\
    \ x -> x <> \"\") |> Array.map(fun x -> x |> String.split(\"(\")) |> Array.filter(fun\
    \ x -> x <> \"\") |> Array.map(fun x -> x |> String.split(\"(\"))\n    \n    for\
    \ bracket in brackets\n        if bracket.Length > 1\n            if bracket.Length\
    \ > 2\n                if bracket.Length > 3\n                    if bracket.Length\
    \ > 4\n                        if bracket.Length > 5\n                       \
    \     if bracket.Length > 6\n                                if bracket.Length\
    \ > 7\n                                    if bracket.Length > 8\n           \
    \                             if bracket.Length > 9\n                        \
    \                    if bracket.Length > 10\n                                \
    \                if bracket.Length > 11\n                                    \
    \                if bracket.Length > 12\n                                    \
    \                    if bracket.Length > 13\n                                \
    \                            if bracket.Length > 14\n                        \
    \                                        if bracket.Length > 15\n            \
    \                                                        if bracket.Length > 16\n\
    \                                                                        if bracket.Length\
    \ > 17\n                                                            if bracket.Length\
    \ > 18\n                                                if bracket.Length > 19\n\
    \                                                    if bracket.Length > 20\n\
    \                                                        if bracket.Length > 21\n\
    \                                                            if bracket.Length\
    \ > 22\n                                                                if bracket.Length\
    \ > 23\n                                                    if bracket.Length\
    \ > 24\n                                                        if bracket.Length\
    \ > 25\n                                                            if bracket.Length\
    \ > 26\n                                                if bracket.Length > 27\n\
    \                                                    if bracket.Length > 28\n\
    \                                                        if bracket.Length > 29\n\
    \                                                            if bracket.Length\
    \ > 30\n                                                if bracket.Length > 31\n\
    \                                                    if bracket.Length > 32\n\
    \                                                        if bracket.Length > 33\n\
    \                                                            if bracket.Length\
    \ > 34\n                                                if bracket.Length > 35\n\
    \                                                    if bracket.Length > 36\n\
    \                                                        if bracket.Length > 37\n\
    \                                                            if bracket.Length\
    \ > 38\n                                                if bracket.Length > 39\n\
    \                                                    if bracket.Length > 40\n\
    \                                                        if bracket.Length > 41\n\
    \                                                            if bracket.Length\
    \ > 42\n                                                if bracket.Length > 43\n\
    \                                                    if bracket.Length > 44\n\
    \                                                        if bracket.Length > 45\n\
    \                                                            if bracket.Length\
    \ > 46\n                                                if bracket.Length > 47\n\
    \                                                    if bracket.Length > 48\n\
    \                                ", "    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n", "    brackets = brackets.replace(\"(\", \" ( \")\n    brackets = brackets.replace(\"\
    )\", \" ) \")\n    brackets = brackets.replace(\"{\", \" { \")\n    brackets =\
    \ brackets.replace(\"}\", \" } \")\n    brackets = brackets.replace(\"[\", \"\
    \ [ \")\n    brackets = brackets.replace(\"]\", \" ] \")\n    brackets = brackets.replace(\"\
    ,\", \" , \")\n    brackets = brackets.replace(\";\", \" ; \")\n    brackets =\
    \ brackets.replace(\":\", \" : \")\n    brackets = brackets.replace(\"!\", \"\
    \ ! \")\n    brackets = brackets.replace(\"?\", \" ? \")\n    brackets = brackets.replace(\"\
    <\", \" < \")\n    brackets = brackets.replace(\">\", \" > \")\n    brackets =\
    \ brackets.replace(\"+\", \" + \")\n    brackets = brackets.replace(\"-\", \"\
    \ - \")\n    brackets = brackets.replace(\"*\", \" * \")\n    brackets = brackets.replace(\"\
    %\", \" % \")\n    brackets = brackets.replace(\"^\", \" ^ \")\n    brackets =\
    \ brackets.replace(\"~\", \" ~ \")\n    brackets = brackets.replace(\"(\", \"\
    \ ( \")\n    brackets = brackets.replace(\")\", \" ) \")\n    brackets = brackets.replace(\"\
    {\", \" { \")\n    brackets = brackets.replace(\"}\", \" } \")\n    brackets =\
    \ brackets.replace(\"[\", \" [ \")\n    brackets = brackets.replace(\"]\", \"\
    \ ] \")\n    brackets = brackets.replace(\",\", \" , \")\n    brackets = brackets.replace(\"\
    ;\", \" ; \")\n    brackets = brackets.replace(\":\", \" : \")\n    brackets =\
    \ brackets.replace(\"!\", \" ! \")\n    brackets = brackets.replace(\"?\", \"\
    \ ? \")\n    brackets = brackets.replace(\"<\", \" < \")\n    brackets = brackets.replace(\"\
    >\", \" > \")\n    brackets = brackets.replace(\"+\", \" + \")\n    brackets =\
    \ brackets.replace(\"-\", \" - \")\n    brackets = brackets.replace(\"*\", \"\
    \ * \")\n    brackets = brackets.replace(\"%\", \" % \")\n    brackets = brackets.replace(\"\
    ^\", \" ^ \")\n    brackets = brackets.replace(\"~\", \" ~ \")\n    brackets =\
    \ brackets.replace(\"(\", \" ( \")\n    brackets = brackets.replace(\")\", \"\
    \ ) \")\n    brackets = brackets.replace(\"{\", \" { \")\n    brackets = brackets.replace(\"\
    }\", \" } \")\n    brackets = brackets.replace(\"[\", \" [ \")\n    brackets =\
    \ brackets.replace(\"]\", \" ] \")\n    ", "    \n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.",
  "    \n    correct_bracketing = True\n    \n    for bracket in brackets\n      \
    \  if bracket == \"(\"\n            correct_bracketing = correct_bracketing &&\
    \ false\n        elseif bracket == \")\"\n            correct_bracketing = correct_bracketing\
    \ && false\n        elseif bracket == \"[\"\n            correct_bracketing =\
    \ correct_bracketing && false\n        elseif bracket == \"]\"\n            correct_bracketing\
    \ = correct_bracketing && false\n        elseif bracket == \"{\"\n           \
    \ correct_bracketing = correct_bracketing && false\n        elseif bracket ==\
    \ \"}\"\n            correct_bracketing = correct_bracketing && false\n      \
    \  else\n            correct_bracketing = correct_bracketing && true\n       \
    \ end\n    end\n    \n    return correct_bracketing\nend", "    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"+\",\"\")\n    brackets = brackets.replace(\"\
    /\",\"\")\n    brackets = brackets.replace(\"\\\"\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"<\",\"\")\n    brackets = brackets.replace(\"\
    >\",\"\")\n    brackets = brackets.replace(\"|\",\"\")\n    brackets = brackets.replace(\"\
    ?\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"+\",\"\")\n    brackets = brackets.replace(\"\
    /\",\"\")\n    brackets = brackets.replace(\"\\\"\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"<\",\"\")\n    brackets = brackets.replace(\"\
    >\",\"\")\n    brackets = brackets.replace(\"|\",\"\")\n    brackets = brackets.replace(\"\
    ?\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"+\",\"\")\n    brackets = brackets.replace(\"\
    /\",\"\")\n    brackets = brackets.replace(\"\\\"\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\"<\",\"\")\n    brackets = brackets.replace(\"\
    >\",\"\")\n    brackets = brackets.replace(\"|\",\"\")\n    brackets = brackets.replace(\"\
    ?\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"",
  "    brackets = brackets[2:]\n    for bracket in brackets\n        if bracket ==\
    \ \"(\"\n            return false\n    return true\n</code>\n<|/ a tags=string,haskell,brackets\
    \ |>\n<| a tags=string,haskell,brackets |>\n<code>\nimport Data.List\nimport Data.Char",
  "    brackets = brackets[2:]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n", "    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \"\"\"\n    \n    brackets = brackets.replace(\"(\", \"{\")\n    brackets\
    \ = brackets.replace(\")\", \"}\")\n    brackets = brackets.replace(\"{\", \"\
    (\")\n    brackets = brackets.replace(\"}\", \")\")\n    brackets = brackets.replace(\"\
    ,\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    :\", \":\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\";\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    ", "    \n    correct_bracketing::Bool = false \n    \n    for\
    \ bracket in brackets \n        if bracket==\"(\" \n            correct_bracketing\
    \ = correct_bracketing || is_correct_bracket(bracket) \n        else \n      \
    \      correct_bracketing = correct_bracketing || is_correct_bracket(bracket)\
    \ \n    return correct_bracketing \n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis\
    \ doesn't work. `correct_bracketing(\"()\")` returns `true`, but `correct_bracketing(\"\
    ()[]\")` returns `false`.\n<|/ c |>\n<| c |>\nYes, I see that now. Thanks for\
    \ pointing that out. I've updated my answer.\n<|/ c |>\n<| a dscore=2 |>\nThis\
    \ is not an answer to the question, but a solution to the problem of determining\
    \ whether a string is valid or not. \nThe function is_valid_string returns true\
    \ if the string contains only characters that are valid in a string literal. \n\
    <code>", "    brackets = brackets |> String.replace(\" \", \"\") |> String.split(\"\
    (\")\n    for bracket in brackets\n        if bracket.endsWith(\")\")\n      \
    \      bracket = bracket.[0..-2]\n            if bracket.endsWith(\")\")\n   \
    \             bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.endsWith(\")\"\
    )\n                bracket = bracket.[0..-2]\n            bracket = bracket.split(\"\
    )\")\n            bracket = bracket[1]\n            if bracket.end", "    \n \
    \   \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \"\"\"\n    correct_bracketing\
    \ is a helper function that checks whether brackets are correctly \n    paired.\n\
    \    \n    brackets is a string of \"(\" and \")\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.", "    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \"\"\"\n    correct_bracketing is\
    \ a function that takes a string and checks if it \n    has correct bracketing.\
    \ It returns True if bracketing is correct, \n    otherwise it returns False.",
  "    brackets = brackets[2:]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets =\
    \ brackets[2:-2]\n    brackets = brackets[2:-2]\n    brackets = brackets[2:-2]\n\
    \    brackets = brackets[2:-2]\n", "    \n    brackets = brackets.replace(\"(\"\
    ,\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    \\\"\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.", "    \n    correct_bracketing::Bool = false\
    \ \n    \n    for bracket in brackets \n        \n        if bracket == \"(\"\
    \ \n            correct_bracketing = correct_bracketing || is_correct_bracket(bracket)\
    \ \n        else if bracket == \")\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"{\" \n       \
    \     correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n\
    \        else if bracket == \"}\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"[\" \n       \
    \     correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n\
    \        else if bracket == \"]\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"<\" \n       \
    \     correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n\
    \        else if bracket == \">\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"#\" \n       \
    \     correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n\
    \        else if bracket == \"%\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"$\" \n       \
    \     correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n\
    \        else if bracket == \"@\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"~\" \n       \
    \     correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n\
    \        else if bracket == \"^\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"&\" \n       \
    \     correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n\
    \        else if bracket == \"*\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"=\" \n       \
    \     correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n\
    \        else if bracket == \"-\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"+\" \n       \
    \     correct_bracketing = correct_bracketing || is_correct_bracket(bracket) \n\
    \        else if bracket == \"/\" \n            correct_bracketing = correct_bracketing\
    \ || is_correct_bracket(bracket) \n        else if bracket == \"?\" \n       \
    \     correct_bracketing = correct_bracket", "    \"\"\"\n    brackets is a string\
    \ of \"(\" and \")\".\n    return True if every opening bracket has a corresponding\
    \ closing bracket.", "    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"$\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    $\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    ", "    bracket_stack\
    \ = Stack()\n    bracket_stack.push(brackets)\n    correct_bracket = bracket_stack.top()\n\
    \    while bracket_stack.top() !~ \"(\"\n        bracket_stack.pop()\n    end\n\
    \    bracket_stack.pop()\n    return correct_bracket\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    correct_bracketing::Bool = false \n    \n    if brackets == \"\" \n \
    \       correct_bracketing = true\n    else \n        for bracket in brackets\
    \ \n            if bracket == \"(\" \n                correct_bracketing = correct_bracketing\
    \ && is_correct_bracket(bracket)\n            else if bracket == \")\" \n    \
    \            correct_bracketing = correct_bracketing && !is_correct_bracket(bracket)\n\
    \            else \n                correct_bracketing = correct_bracketing &&\
    \ !is_correct_bracket(bracket)\n                \n    return correct_bracketing\n\
    \    \n    \n\"\"\"\n    \n    correct_bracketing(brackets::String)", "    brackets\
    \ = brackets |> String.replace(\" \", \"\") |> String.split(\"(\") |> Array.filter\
    \ (fun x -> x <> \"\")\n    brackets = brackets |> Array.filter (fun x -> x <>\
    \ \")\")\n    brackets = brackets |> Array.filter (fun x -> x <> \"()\")\n   \
    \ brackets = brackets |> Array.filter (fun x -> x <> \"[]\")\n    brackets = brackets\
    \ |> Array.filter (fun x -> x <> \"{}\")\n    brackets = brackets |> Array.filter\
    \ (fun x -> x <> \"<>\")\n    brackets = brackets |> Array.filter (fun x -> x\
    \ <> \"=\")\n    brackets = brackets |> Array.filter (fun x -> x <> \"==\")\n\
    \    brackets = brackets |> Array.filter (fun x -> x <> \"!=\")\n    brackets\
    \ = brackets |> Array.filter (fun x -> x <> \"<=\")\n    brackets = brackets |>\
    \ Array.filter (fun x -> x <> \">=\")\n    brackets = brackets |> Array.filter\
    \ (fun x -> x <> \"<>\")\n    brackets = brackets |> Array.filter (fun x -> x\
    \ <> \"~=\")\n    brackets = brackets |> Array.filter (fun x -> x <> \"~\")\n\
    \    brackets = brackets |> Array.filter (fun x -> x <> \"~>\")\n    brackets\
    \ = brackets |> Array.filter (fun x -> x <> \"~<\")\n    brackets = brackets |>\
    \ Array.filter (fun x -> x <> \"~<=\")\n    brackets = brackets |> Array.filter\
    \ (fun x -> x <> \"~>\")\n    brackets = brackets |> Array.filter (fun x -> x\
    \ <> \"~>\")\n    brackets = brackets |> Array.filter (fun x -> x <> \"~<\")\n\
    \    brackets = brackets |> Array.filter (fun x -> x <> \"~<=\")\n    brackets\
    \ = brackets |> Array.filter (fun x -> x <> \"~>\")\n    brackets = brackets |>\
    \ Array.filter (fun x -> x <> \"~>\")\n    brackets = brackets |> Array.filter\
    \ (fun x -> x <> \"~<\")\n    brackets = brackets |> Array.filter (fun x -> x\
    \ <> \"~<=\")", "    \n    brackets = brackets.replace(\"(\", \"\")\n    brackets\
    \ = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"[\", \"\"\
    )\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    \\\"\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    \\\"\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    \\\"\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = ", " \
    \   \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    brackets\
    \ = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\")\", \"\"\
    )\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"|\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    -\", \"\")\n    brackets = brackets.replace(\"=\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    |\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    bracket", "    \n    \"\"\"\n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    brackets = brackets.replace(\"(\", \"\")\n    brackets =\
    \ brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n\
    \    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"@\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"$\", \"\")\n    brackets = brackets.replace(\"\
    @\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    &\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    $\", \"\")\n    brackets = brackets.replace(\"@\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = bracket",
  "    brackets = brackets |> String.toLower\n    brackets = brackets |> String.trim\n\
    \    brackets = brackets |> String.toUpper\n    brackets = brackets |> String.replaceAll(\"\
    [()]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\[\\\\]]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets ", "    \n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n", "    \n    brackets = brackets.replace(\"(\", \"\")\n    brackets\
    \ = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"[\", \"\"\
    )\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"'\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.",
  "    \n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    !\", \"\")\n    brackets = brackets.replace(\"?\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.", "    \n    correct_bracketing::Bool = false\
    \ \n    \n    for bracket in brackets\n        if bracket == \"(\"\n         \
    \   correct_bracketing = true\n        else if bracket == \")\"\n            correct_bracketing\
    \ = false\n        end\n    end\n    \n    return correct_bracketing\nend", " \
    \   brackets = brackets |> String.toLower\n    brackets = brackets |> String.trim\n\
    \    brackets = brackets |> String.toUpper\n    brackets = brackets |> String.replaceAll(\"\
    [()]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\[\\\\]]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\{\\\\}]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\{\\\\}]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\
    \\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\",\
    \ \"\")\n    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n\
    \    brackets = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets\
    \ = brackets |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets\
    \ |> String.replaceAll(\"[\\\\(\\\\)]\", \"\")\n    brackets = brackets |> String.replaceAll(\"\
    [\\\\(\\\\)]\", \"\")\n    brackets = brackets ", "    bracket_stack = Stack()\n\
    \    bracket_stack.push(brackets)\n    correct_bracket = bracket_stack.top()\n\
    \    while bracket_stack.size() > 0 do\n        brackets = bracket_stack.top()\n\
    \        if brackets == \"(\" then\n            bracket_stack.pop()\n        elseif\
    \ brackets == \")\" then\n            correct_bracket = brackets\n           \
    \ bracket_stack.pop()\n        else\n            correct_bracket = false\n   \
    \     end\n    end\n    return correct_bracket\nend\n</cell>\n<code language=julia-1.5>\n\
    correct_bracketing(\"(())\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"\
    (()\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()())\")\n</cell>\n\
    <code language=julia-1.5>\ncorrect_bracketing(\"(()())()\")\n</cell>\n<code language=julia-1.5>\n\
    correct_bracketing(\"(()())()()\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"\
    (()())()()()\")\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()())()()()()\"\
    )\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()())()()()()()\"\
    )\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()())()()()()()()()\"\
    )\n</cell>\n<code language=julia-1.5>\ncorrect_bracketing(\"(()())()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()",
  "    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |> String.toLower\n    brackets = brackets |> String.toLower\n\
    \    brackets = brackets |>", "    \n    brackets = brackets.replace(\"(\",\"\"\
    )\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n    brackets = brackets.replace(\"}\",\"\")\n    brackets = brackets.replace(\"\
    '\",\"\")\n    brackets = brackets.replace(\",\",\"\")\n    brackets = brackets.replace(\"\
    ;\",\"\")\n    brackets = brackets.replace(\":\",\"\")\n    brackets = brackets.replace(\"\
    !\",\"\")\n    brackets = brackets.replace(\"~\",\"\")\n    brackets = brackets.replace(\"\
    %\",\"\")\n    brackets = brackets.replace(\"^\",\"\")\n    brackets = brackets.replace(\"\
    &\",\"\")\n    brackets = brackets.replace(\"*\",\"\")\n    brackets = brackets.replace(\"\
    (\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n    brackets = brackets.replace(\"\
    [\",\"\")\n    brackets = brackets.replace(\"]\",\"\")\n    brackets = brackets.replace(\"\
    {\",\"\")\n", "    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    brackets = brackets.replace(\"[\", \"\")\n    brackets = brackets.replace(\"\
    ]\", \"\")\n    brackets = brackets.replace(\"{\", \"\")\n    brackets = brackets.replace(\"\
    }\", \"\")\n    brackets = brackets.replace(\",\", \"\")\n    brackets = brackets.replace(\"\
    ;\", \"\")\n    brackets = brackets.replace(\":\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r\", \"\")\n    brackets = brackets.replace(\"\
    \\t\", \"\")\n    brackets = brackets.replace(\"\\n\", \"\")\n    brackets = brackets.replace(\"\
    \\r\", \"\")\n    brackets = brackets.replace(\"\\t\", \"\")\n    brackets = brackets.replace(\"\
    \\n\", \"\")\n    brackets = brackets.replace(\"\\r", "    \"\"\"\n    correct_bracketing\
    \ returns True if brackets has correct bracketing.\n    brackets is a string of\
    \ \"(\" and \")\".\n    \"\"\"\n    brackets = brackets.replace(\"(\", \"[\")\n\
    \    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"{\")\n    brackets = brackets.replace(\"]\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    ,\", \"|\")\n    brackets = brackets.replace(\":\", \"|\")\n    brackets = brackets.replace(\"\
    ;\", \"|\")\n    brackets = brackets.replace(\"!\", \"|\")\n    brackets = brackets.replace(\"\
    ?\", \"|\")\n    brackets = brackets.replace(\"|\", \";\")\n    brackets = brackets.replace(\"\
    ,\", \";\")\n    brackets = brackets.replace(\":\", \";\")\n    brackets = brackets.replace(\"\
    ;\", \";\")\n    brackets = brackets.replace(\"!\", \";\")\n    brackets = brackets.replace(\"\
    ?\", \";\")\n    brackets = brackets.replace(\"|\", \"?\")\n    brackets = brackets.replace(\"\
    ,\", \"?\")\n    brackets = brackets.replace(\":\", \"?\")\n    brackets = brackets.replace(\"\
    ;\", \"?\")\n    brackets = brackets.replace(\"!\", \"?\")\n    brackets = brackets.replace(\"\
    ?\", \"?\")\n    brackets = brackets.replace(\"|\", \"!\")\n    brackets = brackets.replace(\"\
    ,\", \"!\")\n    brackets = brackets.replace(\":\", \"!\")\n    brackets = brackets.replace(\"\
    ;\", \"!\")\n    brackets = brackets.replace(\"!\", \"!\")\n    brackets = brackets.replace(\"\
    ?\", \"!\")\n    brackets = brackets.replace(\"|\", \",\")\n    brackets = brackets.replace(\"\
    ,\", \",\")\n    brackets = brackets.replace(\":\", \",\")\n    brackets = brackets.replace(\"\
    ;\", \",\")\n    brackets = brackets.replace(\"!\", \",\")\n    brackets = brackets.replace(\"\
    ?\", \",\")\n    brackets = brackets.replace(\"|\", \":\")\n    brackets = brackets.replace(\"\
    ,\", \":\")\n    brackets = brackets.replace(\":\", \":\")\n    brackets = brackets.replace(\"\
    ;\", \":\")\n    brackets = brackets.replace(\"!\", \":\")\n    brackets = brackets.replace(\"\
    ?\", \":\")\n    brackets = brackets.replace(\"|\", \";\")\n", "    brackets =\
    \ brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\")\",\"\")\n\
    \    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    brackets = brackets.replace(\"\
    }\",\"\")\n    brackets = brackets.replace(\"'\",\"\")\n    brackets = brackets.replace(\"\
    ,\",\"\")\n    brackets = brackets.replace(\";\",\"\")\n    brackets = brackets.replace(\"\
    :\",\"\")\n    brackets = brackets.replace(\"!\",\"\")\n    brackets = brackets.replace(\"\
    ~\",\"\")\n    brackets = brackets.replace(\"%\",\"\")\n    brackets = brackets.replace(\"\
    ^\",\"\")\n    brackets = brackets.replace(\"&\",\"\")\n    brackets = brackets.replace(\"\
    *\",\"\")\n    brackets = brackets.replace(\"(\",\"\")\n    brackets = brackets.replace(\"\
    )\",\"\")\n    brackets = brackets.replace(\"[\",\"\")\n    brackets = brackets.replace(\"\
    ]\",\"\")\n    brackets = brackets.replace(\"{\",\"\")\n    bracket", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    bracket_stack = Stack()\n\
    \    bracket_stack.push(brackets)\n    \n    while !bracket_stack.isEmpty()\n\
    \        bracket = bracket_stack.pop()\n        if bracket == \"(\"\n        \
    \    bracket_stack.push(bracket)\n        elseif bracket == \")\"\n          \
    \  if bracket_stack.isEmpty()\n                true\n            else\n      \
    \          bracket_stack.pop()\n        end\n    end\nend\n</code>\n<|/ a |>\n\
    <| c |>\nThanks for your answer. I'm still trying to understand your code. Could\
    \ you please explain how you got to the solution? I'm still trying to understand\
    \ how you got to the solution. Thanks again.\n<|/ c |>\n<| c |>\nI added some\
    \ comments to the code. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your help.\
    \ I understand it now. I'm still trying to understand your code. Could you please\
    \ explain how you got to the solution? I'm still trying to understand how you\
    \ got to the solution. Thanks again.\n<|/ c |>\n<| c |>\nI added some comments\
    \ to the code. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your help. I understand\
    \ it now. I'm still trying to understand your code. Could you please explain how\
    \ you got to the solution? I'm still trying to understand how you got to the solution.\
    \ Thanks again.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    brackets = brackets[2:-2]\n    \n\
    \    for bracket in brackets\n        if bracket == \"(\"\n            bracket\
    \ = \")\"\n        end\n    end\n    \n    return brackets == bracket\nend", " \
    \   \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n\
    \    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n\
    \    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n\
    \    \n    \n    \"\"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n", "    bracket_stack = Stack()\n\
    \    bracket_stack.push(brackets)\n    correct_brackets = true\n    while bracket_stack.len()\
    \ > 0 do\n        bracket = bracket_stack.pop()\n        if bracket == \"(\" then\n\
    \            bracket_stack.push(bracket)\n        elseif bracket == \")\" then\n\
    \            if bracket_stack.len() == 0 then\n                correct_brackets\
    \ = false\n            else\n                bracket_stack.pop()\n           \
    \ end\n        else\n            bracket_stack.push(bracket)\n        end\n  \
    \  end\n    return correct_brackets\nend", "    brackets = brackets.replace(\"\
    (\", \"[\")\n    brackets = brackets.replace(\")\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"(\")\n    brackets = brackets.replace(\"]\", \")\")\n    brackets = brackets.replace(\"\
    {\", \"[\")\n    brackets = brackets.replace(\"}\", \"]\")\n    brackets = brackets.replace(\"\
    [\", \"{\")\n    brackets = brackets.replace(\"]\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {\", \"{\")\n    brackets = brackets.replace(\"}\", \"}\")\n    brackets = brackets.replace(\"\
    {", "    bracket_stack = Stack()\n    bracket_stack.push(brackets)\n    bracket_stack.pop()\
    \ \n    \n    for bracket in brackets\n        if bracket == \"(\"\n         \
    \   bracket_stack.push(bracket)\n        elseif bracket == \")\"\n           \
    \ bracket_stack.pop()\n        else\n            error(\"Bracketing error\")\n\
    \    end\n    return bracket_stack.size == 0\nend", "    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n",
  "    \n    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets =\
    \ brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n   \
    \ brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:]\n    brackets = brackets[2:]\n\
    \    brackets = brackets[2:]\n    brackets = brackets[2:", "    \n    correct_bracketing::Bool\
    \ = false \n    \n    if brackets == \"\"\n        return correct_bracketing\n\
    \    \n    brackets = brackets.replace(\"(\", \"\")\n    brackets = brackets.replace(\"\
    )\", \"\")\n    \n    if brackets == \"()\"\n        correct_bracketing = true\n\
    \    \n    return correct_bracketing\n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    brackets = brackets.replace(\"\
    (\", \" ( \")\n    brackets = brackets.replace(\")\", \" ) \")\n    brackets =\
    \ brackets.replace(\"[\", \" [ \")\n    brackets = brackets.replace(\"]\", \"\
    \ ] \")\n    brackets = brackets.replace(\"{\", \" { \")\n    brackets = brackets.replace(\"\
    }\", \" } \")\n    brackets = brackets.replace(\",\", \" , \")\n    brackets =\
    \ brackets.replace(\";\", \" ; \")\n    brackets = brackets.replace(\":\", \"\
    \ : \")\n    brackets = brackets.replace(\"!\", \" ! \")\n    brackets = brackets.replace(\"\
    ?\", \" ? \")\n    brackets = brackets.replace(\"<\", \" < \")\n    brackets =\
    \ brackets.replace(\">\", \" > \")\n    brackets = brackets.replace(\",\", \"\
    \ , \")\n    brackets = brackets.replace(\";\", \" ; \")\n    brackets = brackets.replace(\"\
    :\", \" : \")\n    brackets = brackets.replace(\"!\", \" ! \")\n    brackets =\
    \ brackets.replace(\"?\", \" ? \")\n    brackets = brackets.replace(\"<\", \"\
    \ < \")\n    brackets = brackets.replace(\">\", \" > \")\n    brackets = brackets.replace(\"\
    ,\", \" , \")\n    brackets = brackets.replace(\";\", \" ; \")\n    brackets =\
    \ brackets.replace(\":\", \" : \")\n    brackets = brackets.replace(\"!\", \"\
    \ ! \")\n    brackets = brackets.replace(\"?\", \" ? \")\n    brackets = brackets.replace(\"\
    <\", \" < \")\n    brackets = brackets.replace(\">\", \" > \")\n    brackets =\
    \ brackets.replace(\",\", \" , \")\n    brackets = brackets.replace(\";\", \"\
    \ ; \")\n    brackets = brackets.replace(\":\", \" : \")\n    brackets = brackets.replace(\"\
    !\", \" ! \")\n    brackets = brackets.replace(\"?\", \" ? \")\n    brackets =\
    \ brackets.replace(\"<\", \" < \")\n    brackets = brackets.replace(\">\", \"\
    \ > \")\n    brackets = brackets.replace(\",\", \" , \")\n    brackets = brackets.replace(\"\
    ;\", \" ; \")\n    brackets = brackets.replace(\":\", \" : \")\n    brackets =\
    \ brackets.replace(\"!\", \" ! \")\n    brackets = brackets.replace(\"?\", \"\
    \ ? \")\n    brackets = brackets.replace(\"<\", \" < \")\n    brackets = brackets.replace(\"\
    >\", \" > \")\n    brackets = brackets.replace(\",\", \" , \")\n    brackets =\
    \ brackets.replace(\";\", \" ; \")\n    brackets = brackets.replace(\":\", \"\
    \ : \")\n    brackets = brackets.replace(\"!", "    brackets = brackets.replace(\"\
    (\", \"\")\n    brackets = brackets.replace(\")\", \"\")\n    brackets = brackets.replace(\"\
    [\", \"\")\n    brackets = brackets.replace(\"]\", \"\")\n    brackets = brackets.replace(\"\
    {\", \"\")\n    brackets = brackets.replace(\"}\", \"\")\n    brackets = brackets.replace(\"\
    ,\", \"\")\n    brackets = brackets.replace(\";\", \"\")\n    brackets = brackets.replace(\"\
    :\", \"\")\n    brackets = brackets.replace(\"!\", \"\")\n    brackets = brackets.replace(\"\
    ?\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    >\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"&\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    -\", \"\")\n    brackets = brackets.replace(\"=\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    -\", \"\")\n    brackets = brackets.replace(\"=\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    brackets = brackets.replace(\"\
    ^\", \"\")\n    brackets = brackets.replace(\"%\", \"\")\n    brackets = brackets.replace(\"\
    *\", \"\")\n    brackets = brackets.replace(\"+\", \"\")\n    brackets = brackets.replace(\"\
    -\", \"\")\n    brackets = brackets.replace(\"=\", \"\")\n    brackets = brackets.replace(\"\
    ~\", \"\")\n    brackets = brackets.replace(\"^\", \"\")\n    brackets = brackets.replace(\"\
    %\", \"\")\n    brackets = brackets.replace(\"*\", \"\")\n    brackets = brackets.replace(\"\
    +\", \"\")\n    brackets = brackets.replace(\"-\", \"\")\n    brackets = brackets.replace(\"\
    =\", \"\")\n    brackets = brackets.replace(\"~\", \"\")\n    bracket", "    \"\
    \"\"\n    correct_bracketing is a function that checks if brackets are correctly\
    \ nested.\n    brackets is a string of \"(\" and \")\".\n    return True if every\
    \ opening bracket has a corresponding closing bracket.", "    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n\
    \    brackets = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets\
    \ = brackets[2:end]\n    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n\
    \    brackets = brackets[1:end-1]\n    brackets = brackets[2:end]\n    brackets\
    \ = brackets[1:end-1]\n", "    \n    correct_bracketing = false\n    \n    for\
    \ bracket in brackets\n        if bracket == \"(\"\n            correct_bracketing\
    \ = true\n        elseif bracket == \")\"\n            correct_bracketing = false\n\
    \        else\n            correct_bracketing = false\n        end\n    end\n\
    \    \n    return correct_bracketing\nend\n</cell>\n<code language=julia-1.5>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

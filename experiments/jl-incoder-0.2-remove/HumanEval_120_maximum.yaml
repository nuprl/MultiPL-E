name: HumanEval_120_maximum
language: jl
prompt: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
  \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
  \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n      \
  \  1. The length of the array will be in the range of [1, 1000].\n        2. The\
  \ elements in the array will be in the range of [-1000, 1000].\n        3. 0 <=\
  \ k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
  \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
  \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
  \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2,\
  \ 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5,\
  \ 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
  \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
  \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\n\
  end\n"
completions: ["    maximum = maximum([arr[k]]; k=k)\n    maximum = maximum([arr[k]];\
    \ k=k+1)\n    maximum = maximum([arr[k]]; k=k+2)\n    maximum = maximum([arr[k]];\
    \ k=k+3)\n    maximum = maximum([arr[k]]; k=k+4)\n    maximum = maximum([arr[k]];\
    \ k=k+5)\n    maximum = maximum([arr[k]]; k=k+6)\n    maximum = maximum([arr[k]];\
    \ k=k+7)\n    maximum = maximum([arr[k]]; k=k+8)\n    maximum = maximum([arr[k]];\
    \ k=k+9)\n    maximum = maximum([arr[k]]; k=k+10)\n    maximum = maximum([arr[k]];\
    \ k=k+11)\n    maximum = maximum([arr[k]]; k=k+12)\n    maximum = maximum([arr[k]];\
    \ k=k+13)\n    maximum = maximum([arr[k]]; k=k+14)\n    maximum = maximum([arr[k]];\
    \ k=k+15)\n    maximum = maximum([arr[k]]; k=k+16)\n    maximum = maximum([arr[k]];\
    \ k=k+17)\n    maximum = maximum([arr[k]]; k=k+18)\n    maximum = maximum([arr[k]];\
    \ k=k+19)\n    maximum = maximum([arr[k]]; k=k+20)\n    maximum = maximum([arr[k]];\
    \ k=k+21)\n    maximum = maximum([arr[k]]; k=k+22)\n    maximum = maximum([arr[k]];\
    \ k=k+23)\n    maximum = maximum([arr[k]]; k=k+24)\n    maximum = maximum([arr[k]];\
    \ k=k+25)\n    maximum = maximum([arr[k]]; k=k+26)\n    maximum = maximum([arr[k]];\
    \ k=k+27)\n    maximum = maximum([arr[k]]; k=k+28)\n    maximum = maximum([arr[k]];\
    \ k=k+29)\n    maximum = maximum([arr[k]]; k=k+30)\n    maximum = maximum([arr[k]];\
    \ k=k+31)\n    maximum = maximum([arr[k]]; k=k+32)\n    maximum = maximum([arr[k]];\
    \ k=k+33)\n    maximum = maximum([arr[k]]; k=k+34)\n    maximum = maximum([arr[k]];\
    \ k=k+35)\n    ", "    maximum = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), arr[i+1])\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k > length(arr) \n        return [] \n    else \n        maximum = arr[k]\
    \ \n        for i in k+1:length(arr) \n            if maximum < arr[i] \n    \
    \            maximum = arr[i] \n            else \n                break \n  \
    \      end \n        return arr[k:k+k+1] \n    end \nend \n\"\"\"\n    Given an\
    \ array arr of integers and a positive integer k, return a sorted list \n    of\
    \ length k with the minimum k numbers in arr.", "    if k > length(arr) \n   \
    \     return [] \n    else \n        maximum = arr \n        for i = k+1:length(arr)\
    \ \n            maximum[i] = maximum(maximum, arr[i]) \n        end\n        return\
    \ maximum \n    end\nend\n\"\"\"\n    Given an array arr of integers and a positive\
    \ integer k, return a sorted list \n    of length k with the minimum k numbers\
    \ in arr.", "    if k > length(arr)\n        return arr\n    end\n    maximum\
    \ = arr[k-1]\n    for i in k+1:length(arr)\n        if arr[i] > maximum\n    \
    \        maximum = arr[i]\n        end\n    end\n    return maximum\nend", " \
    \   if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n        maximum[end] = maximum(arr[end], k-1)\n        return maximum\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k == 0 \n        return arr\n    end\n    \n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(", "    maximum = maximum(k,length(arr))\n\
    \    maximum = maximum.(arr)\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, k)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ minimum number in a given array of integers. \nThe function should take in a\
    \ vector of integers and a positive integer k. \nThe function should return a\
    \ sorted vector of length k with the minimum k numbers in arr. \nThe function\
    \ should return an empty vector if k is less than or equal to 0.", "    maximum\
    \ = arr\n    for i = k+1:length(arr)\n        maximum[i] = maximum(maximum, arr[i])\n\
    \    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\nmaximum(arr,\
    \ 3)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the minimum number\
    \ in a given array.", "    \n    maximum = zeros(k)\n    maximum[1] = arr[1]\n\
    \    for i = 2:k\n        maximum[i] = maximum(maximum(arr[i-1:end], arr[i-1:end-1]),\
    \ maximum[i-1])\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = maximum([arr[i]+1 for i in 1:k])\n    maximum = maximum + maximum[k:]\n\
    \    return maximum\nend\n\"\"\"\n    Given an array arr of integers and a positive\
    \ integer k, return a sorted list \n    of length k with the minimum k numbers\
    \ in arr.", "    if k == 0 \n        return arr\n    else \n        maximum =\
    \ maximum(maximum(arr, k-1), k-1)\n        maximum[end] = maximum(arr[end], k-1)\n\
    \        return maximum\nend\n\"\"\"\n    Given an array arr of integers and a\
    \ positive integer k, return a sorted list \n    of length k with the minimum\
    \ k numbers in arr.", "    maximum = arr\n    for i = k+1:length(arr)\n      \
    \  maximum = maximum(maximum(maximum, arr[i]), maximum)\n    end\n    return maximum\n\
    end\n</cell>\n<code language=julia-1.5>\nmaximum(arr, k)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, k)\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k > length(arr) \n        error(\"k must be less than or equal to length(arr)\"\
    ) \n    else \n        maximum = arr \n        for i = k+1:length(arr) \n    \
    \        maximum[i] = maximum(maximum, arr[i]) \n        end\n        return maximum\
    \ \n    end\nend", "    if k == 0 \n        return arr\n    else \n        maximum\
    \ = maximum(maximum(arr,k-1),k-1)\n        maximum[end] = maximum(maximum(arr,k-1),k-1)[end]\n\
    \        return maximum\n    end\nend", "    maximums = zeros(Int, k)\n    for\
    \ i = 1:k\n        maximums[i] = maximum(arr) - arr[i]\n    end\n    return maximums\n\
    end", "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum[end] = maximum(arr,k-1)[end]\n        return maximum\n    end\n\
    end", "    if k == 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,k-1),k)\
    \ \n        maximum[end] = maximum(arr,k-1) \n        return maximum \n    end\n\
    end\n\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the minimum k numbers in arr.", "    maximum\
    \ = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum, arr[i]),\
    \ arr[i+1])\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\nmaximum(arr,\
    \ 3)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the minimum number\
    \ in a given array.", "    if k > length(arr)\n        return arr\n    else\n\
    \        maximum = arr\n        for i = k+1:length(arr)\n            if maximum[i]\
    \ > maximum[i-1]\n                maximum = maximum[i-1:end]\n            else\n\
    \                break\n        end\n        return maximum\n    end\nend\n\"\"\
    \"\n    Given an array arr of integers and a positive integer k, return a sorted\
    \ list \n    of length k with the minimum k numbers in arr.", "    if k > length(arr)\
    \ \n        return Vector{Int64}() \n    else \n        maximum = arr[k] \n  \
    \      for i in k+1:length(arr) \n            if maximum < arr[i] \n         \
    \       maximum = arr[i] \n            end \n        end \n        return Vector{Int64}([maximum])\
    \ \n    end \nend \n</cell>\n<code language=julia-1.5>\nmaximum(arr, 3)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 4)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 5)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 6)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 7)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 8)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 9)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 10)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 11)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 12)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 13)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 14)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 15)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 16)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 17)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 18)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 19)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 20)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 21)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 22)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 23)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 24)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 25)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 26)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 27)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 28)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 29)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 30)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 31)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 32)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 33)\n</cell>\n",
  "    maximum = arr\n    for i = k+1:length(arr)\n        maximum[i] = maximum(maximum,\
    \ arr[i])\n    end\n    return maximum\nend", "    maximum = arr\n    for i =\
    \ k+1:length(arr)\n        if maximum[i] > maximum[i-1]\n            maximum =\
    \ maximum[i-1:end]\n        else\n            maximum = maximum[i-1:end]\n   \
    \     end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that accepts a\
    \ positive integer k and returns the first k numbers of the Fibonacci sequence.",
  "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum[end] = maximum(arr,k-1)[end]\n        return maximum\n    end\n\
    end", "    if k == 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,k-1),k)\
    \ \n        maximum[end] = maximum(arr[end],k) \n        return maximum \n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)", "    maximum = arr\n\
    \    for i = 2:k\n        maximum = maximum(maximum(maximum, arr), arr[i])\n \
    \   end\n    maximum\nend\n</cell>\n<code language=julia-1.0>\nmaximum(arr, 3)\n\
    </cell>\n<text>\nExercise 3", "    if k == 0 \n        return arr \n    else \n\
    \        maximum = maximum(maximum(arr,k-1),k) \n        maximum[end] = maximum(arr,k-1)\
    \ \n        return maximum \n    end\nend", "    maximum = zeros(Int64, k)\n \
    \   for i = 1:k\n        maximum[i] = maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = maximum(k,length(arr))\n    maximum = maximum.(arr)\n    return maximum\n\
    end\n\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the minimum k numbers in arr.", "    maximums\
    \ = zeros(Int, k)\n    for i = 1:k\n        maximums[i] = maximum(arr) - arr[i]\n\
    \    end\n    return maximums\nend", "    if k == 0 \n        return arr\n   \
    \ else \n        maximum = maximum(maximum(arr, k-1), k-1)\n        maximum =\
    \ maximum(maximum, arr)\n        return maximum\n    end\nend", "    if k == 0\
    \ \n        return arr \n    else \n        maximum = maximum(maximum(arr, k-1),\
    \ k) \n        maximum[end] = maximum(arr[end], k) \n        return maximum \n\
    \    end\nend", "    maximum = maximum(k,length(arr))\n    maximum = maximum.(arr)\n\
    \    return maximum\nend", "    maximum = zeros(Int64, k)\n    for i = 1:k\n \
    \       maximum[i] = maximum(maximum(arr, i), arr[i])\n    end\n    return maximum\n\
    end", "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum[end] = maximum(arr,k-1)[end]\n        return maximum\nend\n\"\
    \"\"\n    Given an array arr of integers and a positive integer k, return a sorted\
    \ list \n    of length k with the minimum k numbers in arr.", "    if k > length(arr)\
    \ \n        throw(ArgumentError(\"k must be less than or equal to length(arr)\"\
    ))\n    end\n    maximum = arr\n    for i = k+1:length(arr) \n        maximum[i]\
    \ = maximum(maximum(maximum, arr[i]), arr[i])\n    end\n    return maximum\nend",
  "    maximums = Vector{Int64}()\n    for x in arr\n        if x > maximums[k]\n\
    \            maximums[k] = x\n        end\n    end\n    return maximums\nend",
  "    maximum = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), arr[i+1])\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ minimum number in a given array.", "    if k == 0 \n        return arr\n   \
    \ else \n        maximum = maximum(maximum(arr, k-1), k-1)\n        maximum[end]\
    \ = maximum(arr[end], k-1)\n        return maximum\n    end\nend", "    if k ==\
    \ 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr, k-1),\
    \ k-1)\n        maximum[end] = maximum(arr[end], k-1)\n        return maximum\n\
    \    end\nend", "    if k == 0 \n        return arr\n    else \n        maximum\
    \ = maximum(maximum(arr,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \        maximum = maximum(maximum(maximum,k-1),k-1)\n        maximum = maximum(maximum(maximum,k-1),",
  "    \n    maximum = zeros(Int64, k)\n    maximum[1] = arr[1]\n    maximum[2] =\
    \ maximum(maximum(maximum(maximum, arr[2:end]), arr[2:end-1]), arr[3:end])\n \
    \   maximum[3] = maximum(maximum(maximum(maximum, arr[4:end]), arr[5:end-1]),\
    \ arr[6])\n    maximum[4] = maximum(maximum(maximum(maximum, arr[7:end]), arr[7:end-1]),\
    \ arr[8])\n    maximum[5] = maximum(maximum(maximum(maximum, arr[9:end]), arr[9:end-1]),\
    \ arr[10])\n    maximum[6] = maximum(maximum(maximum(maximum, arr[11:end]), arr[11:end-1]),\
    \ arr[12])\n    maximum[7] = maximum(maximum(maximum(maximum, arr[13:end]), arr[13:end-1]),\
    \ arr[14])\n    maximum[8] = maximum(maximum(maximum(maximum, arr[15:end]), arr[15:end-1]),\
    \ arr[16])\n    maximum[9] = maximum(maximum(maximum(maximum, arr[17:end]), arr[17:end-1]),\
    \ arr[18])\n    maximum[10] = maximum(maximum(maximum(maximum, arr[19:end]), arr[19:end-1]),\
    \ arr[20])\n    maximum[11] = maximum(maximum(maximum(maximum, arr[21:end]), arr[21:end-1]),\
    \ arr[21])\n    maximum[12] = maximum(maximum(maximum(maximum, arr[23:end]), arr[23:end-1]),\
    \ arr[24])\n    maximum[13] = maximum(maximum(maximum(maximum, arr[25:end]), arr[25:end-1]),\
    \ arr[26])\n    maximum[14] = maximum(maximum(maximum(maximum, arr[27:end]), arr[27:end-1]),\
    \ arr[28])\n    maximum[15] = maximum(maximum(maximum(maximum, arr[29:end]), arr[29:end-1]),\
    \ arr[30])\n    maximum[16] = maximum(maximum(maximum(maximum, arr[31:end]), arr[31:end-1]),\
    \ arr[31])\n    maximum[17] = maximum(maximum(maximum(maximum, arr[33:end]), arr[33:end-1]),\
    \ arr[34])\n    maximum[18] = maximum(maximum(maximum(maximum, arr[35:end]), arr[35:end-1]),\
    \ arr[36])\n    maximum[19] = maximum(maximum(maximum(maximum, arr[37:end]), arr[37:end-1]),\
    \ arr[38])\n    maximum[20] = maximum(maximum(maximum(maximum, arr[39:end]), arr[39:end-1]),\
    \ arr[40])\n    maximum[21] = maximum(maximum(maximum(maximum, arr[41:end]), arr[41:end-1]),\
    \ arr[42])\n    maximum[22] = maximum(maximum(maximum(maximum, arr[43:end]), arr[43:end-1]), ",
  "    maximum = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum,\
    \ arr), arr)\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k == 0 \n        return arr\n    end\n    \n    maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum\
    \ = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)", "    maximum = arr\n \
    \   for i = 2:k\n        maximum = maximum(maximum(maximum, arr), i)\n    end\n\
    \    maximum\nend\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 3)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 4)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 5)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 6)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 7)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 8)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 9)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 10)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 11)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 12)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 13)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 14)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 15)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 16)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 17)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 18)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 19)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 20)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 21)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 22)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 23)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 24)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 25)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 26)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 27)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 28)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 29)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 30)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 31)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 32)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 33)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 34)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 35)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, ", "    if\
    \ k == 0 \n        return arr\n    elseif k == 1 \n        return arr\n    elseif\
    \ k == length(arr) \n        return arr\n    end\n    \n    maximum = maximum(maximum(arr,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-2),k-1)\n    maximum = maximum(maximum(maximum,k-3),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-4),k-1)\n    maximum = maximum(maximum(maximum,k-5),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-6),k-1)\n    maximum = maximum(maximum(maximum,k-7),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-8),k-1)\n    maximum = maximum(maximum(maximum,k-9),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-10),k-1)\n    maximum = maximum(maximum(maximum,k-11),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-12),k-1)\n    maximum = maximum(maximum(maximum,k-13),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-14),k-1)\n    maximum = maximum(maximum(maximum,k-15),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-16),k-1)\n    maximum = maximum(maximum(maximum,k-17),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-18),k-1)\n    maximum = maximum(maximum(maximum,k-19),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-20),k-1)\n    maximum = maximum(maximum(maximum,k-21),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-22),k-1)\n    maximum = maximum(maximum(maximum,k-23),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-24),k-1)\n    maximum = maximum(maximum(maximum,k-25),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-26),k-1)\n    maximum = maximum(maximum(maximum,k-27),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-28),k-1)\n    maximum = maximum(maximum(maximum,k-29),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-30),k-1)\n    maximum = maximum(maximum(maximum,k-31),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-32),k-1)\n    maximum = maximum(maximum(maximum,k-33),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-34),k-1)\n    maximum = maximum(maximum(maximum,k-35),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-36),k-1)\n    maximum = maximum(maximum(maximum,k-37),k-1)\n\
    \    maximum", "    if k == 0 \n        return arr\n    else \n        maximum\
    \ = maximum(maximum(arr,k-1),k-1)\n        maximum[end] = maximum(arr[end],k-1)\n\
    \        return maximum\n    end\nend\n\"\"\"\n    Given an array arr of integers\
    \ and a positive integer k, return a sorted list \n    of length k with the minimum\
    \ k numbers in arr.", "    if k == 0 \n        return arr \n    else \n      \
    \  maximum = maximum(maximum(arr, k-1), k) \n        maximum[end] = maximum(arr[end],\
    \ k) \n        return maximum \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = arr\n    for i = 1:k\n        maximum[i] = maximum(maximum, arr[i])\n\
    \    end\n    return maximum\nend", "    if k == 0 \n        return arr\n    else\
    \ \n        maximum = maximum(maximum(arr, k-1), k-1)\n        maximum[end] =\
    \ maximum(maximum, k)\n        return maximum\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end\n    maximum = arr\n    for i = k+1:length(arr)\n\
    \        if maximum[i] > maximum[i-1]\n            maximum = maximum[i-1:end]\n\
    \        else\n            maximum = maximum[i-1:end]\n        end\n    end\n\
    \    return maximum\nend", "    maximums = Vector{Int64}(undef, k)\n    maximums[1]\
    \ = arr[1]\n    for i = 2:k\n        maximums[i] = maximum(maximum(arr, i-1),\
    \ i-1)\n    end\n    return maximums\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k > length(arr) \n        error(\"k should be less than or equal to length(arr)\"\
    ) \n    else \n        maximum = arr \n        for i in k+1:length(arr) \n   \
    \         maximum[i] = maximum(maximum, arr[i]) \n        end\n        return\
    \ maximum \n    end\nend\n\"\"\"\n    Given an array arr of integers and a positive\
    \ integer k, return a sorted list \n    of length k with the minimum k numbers\
    \ in arr.", "    if k == 0 \n        return arr\n    else \n        maximum =\
    \ maximum(maximum(arr, k-1), k-1)\n        maximum[end] = maximum(arr[end], k-1)\n\
    \        return maximum\nend", "    if k > length(arr) \n        throw(ArgumentError(\"\
    k must be less than or equal to the length of arr\"))\n    end\n    maximum =\
    \ arr\n    for i = k+1:length(arr) \n        maximum = maximum(maximum(maximum,\
    \ arr[i]), arr[i+1])\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ minimum number in the given array.", "    if k == 0 \n        return arr\n \
    \   end\n    \n    maximum = maximum(maximum(arr, k-1), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-1]), k-1)", " \
    \   maximum = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), arr[i+1])\n    end\n    return maximum\nend", "    maximum = maximum.(arr,\
    \ k)\n    return maximum\nend", "    if k > length(arr)\n        throw(ArgumentError(\"\
    k should be less than or equal to the length of arr\"))\n    end\n    maximum\
    \ = arr\n    for i = k+1:length(arr)\n        maximum = max(maximum, arr[i])\n\
    \    end\n    return maximum\nend", "    maximum = maximum(k,length(arr))\n  \
    \  maximum = maximum.(arr)\n    return maximum\nend", "    if k == 0 \n      \
    \  return arr\n    else \n        maximum = maximum(maximum(arr, k-1), k-1)\n\
    \        maximum[end] = maximum(arr[end], k-1)\n        return maximum\n    end\n\
    end", "    maximum = arr\n    for i = k+1:length(arr)\n        if maximum[i] >\
    \ maximum[i-1]\n            maximum[i] = maximum[i-1]\n        end\n    end\n\
    \    return maximum\nend", "    if k == 0 \n        return arr\n    end\n    \n\
    \    if k == 1 \n        return arr\n    end\n    \n    if k == length(arr) \n\
    \        return arr\n    end\n    \n    maximum = maximum(maximum(arr), k-1)\n\
    \    maximum = maximum(maximum(maximum, arr[k]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-1]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-2]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-3]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-4]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-5]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-6]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-7]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-8]), k-1)\n  \
    \  maximum = maximum(maximum(maximum, arr[k-9]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-10]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-11]), k-1)\n\
    \    maximum = maximum(maximum(maximum, arr[k-12]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-13]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-14]), k-1)\n\
    \    maximum = maximum(maximum(maximum, arr[k-15]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-16]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-17]), k-1)\n\
    \    maximum = maximum(maximum(maximum, arr[k-18]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-19]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-20]), k-1)\n\
    \    maximum = maximum(maximum(maximum, arr[k-21]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-22]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-23]), k-1)\n\
    \    maximum = maximum(maximum(maximum, arr[k-24]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-25]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-26]), k-1)\n\
    \    maximum = maximum(maximum(maximum, arr[k-27]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-28]), k-1)\n    maximum = maximum(maximum(maximum, arr[k-29]), k-1)\n\
    \    maximum = maximum(maximum(maximum, arr[k-30]), k-1)\n    maximum = maximum(maximum(maximum,\
    \ arr[k-31]), k-1)\n    maximum = maximum(", "    if k == 0 \n        return arr\n\
    \    else \n        maximum = maximum(maximum(arr, k-1), k-1)\n        maximum[end]\
    \ = maximum(arr[end], k-1)\n        return maximum\n    end\nend", "    maximum\
    \ = zeros(Int, k)\n    for i = 1:k\n        maximum[i] = maximum(maximum(arr,\
    \ i), i)\n    end\n    return maximum\nend", "    if k == 0 \n        return arr\n\
    \    elseif k == 1 \n        return arr[1]\n    else\n        maximum = maximum(arr[1:end-1],\
    \ k-1)\n        maximum[1] = maximum(maximum(arr[1:end-1], k-1), arr[1])\n   \
    \     return maximum\n    end\nend", "    if k == 0 \n        return arr \n  \
    \  else \n        maximum = maximum(maximum(arr,k-1),k) \n        maximum[end]\
    \ = maximum(arr[end],k) \n        return maximum \nend\n\"\"\"\n    Given an array\
    \ arr of integers and a positive integer k, return a sorted list \n    of length\
    \ k with the minimum k numbers in arr.", "    if k == 0 \n        return arr\n\
    \    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n        maximum[end]\
    \ = maximum(maximum(arr,k-1),k-1)[end]\n        return maximum\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = maximum([arr[i]+1 for i in 1:length(arr)], k)\n    return maximum\n\
    end", "    maximum = maximum([arr[k]]; k+1)\n    return maximum\nend", "    maximum\
    \ = maximum([arr[k]]; k=k)\n    for i = k+1:length(arr)\n        maximum = maximum(maximum(arr[i],\
    \ arr[i+1:k]), maximum)\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, k)\n</cell>\n<text>\nFind the second largest number in an array",
  "    if k > length(arr)\n        error(\"k must be less than or equal to the length\
    \ of arr\")\n    end\n    maximum = arr\n    for i = k+1:length(arr)\n       \
    \ maximum[i] = maximum(maximum(maximum, arr[i]), maximum[i])\n    end\n    return\
    \ maximum\nend\n\"\"\"\n    Given an array arr of integers and a positive integer\
    \ k, return a sorted list \n    of length k with the minimum k numbers in arr.",
  "    if k == 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,\
    \ k-1), k) \n        maximum[end] = maximum(maximum(arr, k-1), k) \n        return\
    \ maximum \n    end\nend", "    maximum = arr\n    for i = 1:k\n        maximum\
    \ = maximum(maximum(maximum, arr[i]), arr[i+1])\n    end\n    return maximum\n\
    end", "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n        maximum = maximum(maximum, k)\n        return maximum\n\
    \    end\nend", "    \n    maximum = zeros(Int64, k)\n    maximum[1] = maximum(arr,\
    \ 1)\n    for i = 2:k\n        maximum[i] = maximum(maximum(arr, i), 1)\n    end\n\
    \    return maximum\nend", "    if k > length(arr) \n        throw(ArgumentError(\"\
    k must be less than or equal to length(arr)\"))\n    else \n        maximum =\
    \ arr\n        for i = k+1:length(arr) \n            if maximum[i] > maximum[i-1]\
    \ \n                maximum = maximum[i-1:end]\n            else\n           \
    \     break\n        end\n        return maximum\n    end\nend", "    if k ==\
    \ 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum[end] = maximum(maximum(maximum(arr,k-1),k-1),k-1)[end]\n    \
    \    return maximum\n    end\nend\n\"\"\"\n    Given an array arr of integers\
    \ and a positive integer k, return a sorted list \n    of length k with the minimum\
    \ k numbers in arr.", "    if k == 0 \n        return arr \n    else \n      \
    \  maximum = maximum(maximum(arr, k-1), k) \n        maximum[end] = maximum(maximum(arr,\
    \ k-1), k) \n        return maximum \nend", "    maximum = zeros(Int64, k)\n \
    \   for i = 1:k\n        maximum[i] = maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n        return maximum(maximum, k)\n    end\nend\n</cell>\n<text>\n\
    maximum([1,2,3,4,5,6,7,8,9], 3)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 4)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 5)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 6)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 7)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 8)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 9)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 10)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 11)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 12)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 13)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 14)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 15)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 16)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 17)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 18)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 19)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 20)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 21)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 22)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 23)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 24)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 25)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 26)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9], 27)\n</cell>\n<text>\nmaximum([1,2,3,4,5,6,7,8,9],\
    \ 28)\n</cell>\n<text>\nmaximum", "    if k > length(arr) \n        error(\"k\
    \ should be less than or equal to the length of arr\")\n    end\n    maximum =\
    \ arr\n    for i = k+1:length(arr) \n        maximum[i] = maximum(maximum, arr[i])\n\
    \    end\n    return maximum\nend", "    maximum = arr\n    for i = 1:k\n    \
    \    maximum = maximum(maximum(maximum, arr[i]), arr[i+1])\n    end\n    return\
    \ maximum\nend", "    if k == 0 \n        return arr \n    else \n        maximum\
    \ = maximum(maximum(arr, k-1), k) \n        maximum[end] = maximum(arr[end], k)\
    \ \n        return maximum \nend", "    maximum = arr\n    for i = 2:k\n     \
    \   maximum = maximum(maximum(maximum, arr), i)\n    end\n    maximum\nend\n</cell>\n\
    <code language=julia-1.4>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = arr\n    for i = k+1:length(arr)\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), maximum)\n    end\n    return maximum\nend\n\"\"\"\n    Given an array\
    \ arr of integers and a positive integer k, return a sorted list \n    of length\
    \ k with the minimum k numbers in arr.", "    if k == 0 \n        return arr \n\
    \    else \n        maximum = maximum(maximum(arr, k-1), k) \n        maximum[end]\
    \ = maximum(arr[end], k) \n        return maximum \n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum[end] = maximum(arr,k-1)[end]\n        return maximum\n    end\n\
    end\n\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the minimum k numbers in arr.", "    if\
    \ k == 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,\
    \ k-1), k) \n        maximum[end] = maximum(arr[end], k) \n        return maximum\
    \ \n    end\nend", "    maximum = arr\n    for i = k+1:length(arr)\n        maximum[i]\
    \ = maximum(maximum, arr[i])\n    end\n    return maximum\nend", "    if k ==\
    \ 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-2),k-1)\n        maximum = maximum(maximum,maximum(arr,k-3),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-4),k-1)\n        maximum = maximum(maximum,maximum(arr,k-5),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-6),k-1)\n        maximum = maximum(maximum,maximum(arr,k-7),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-8),k-1)\n        maximum = maximum(maximum,maximum(arr,k-9),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-10),k-1)\n        maximum = maximum(maximum,maximum(arr,k-11),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-12),k-1)\n        maximum = maximum(maximum,maximum(arr,k-13),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-14),k-1)\n        maximum = maximum(maximum,maximum(arr,k-15),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-16),k-1)\n        maximum = maximum(maximum,maximum(arr,k-17),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-18),k-1)\n        maximum = maximum(maximum,maximum(arr,k-19),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-20),k-1)\n        maximum = maximum(maximum,maximum(arr,k-21),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-22),k-1)\n        maximum = maximum(maximum,maximum(arr,k-23),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-24),k-1)\n        maximum = maximum(maximum,maximum(arr,k-25),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-26),k-1)\n        maximum = maximum(maximum,maximum(arr,k-27),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-28),k-1)\n        maximum = maximum(maximum,maximum(arr,k-29),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-30),k-1)\n        maximum = maximum(maximum,maximum(arr,k-31),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-32),k-1)\n        maximum = maximum(maximum,maximum(arr,k-33),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-", "    maximum = arr\n    for\
    \ i = 2:k\n        maximum = maximum(maximum(maximum, arr), i)\n    end\n    maximum\n\
    end\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = maximum(k,length(arr))\n    maximum = maximum.(arr)\n    return maximum\n\
    end", "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum[end] = maximum(arr[end],k-1)\n        return maximum\n    end\n\
    end", "    if k > length(arr) \n        error(\"k should be less than or equal\
    \ to length(arr)\")\n    end\n    maximum = arr\n    for i = k+1:length(arr)\n\
    \        maximum = maximum(maximum(maximum, arr[i]), arr[i])\n    end\n    return\
    \ maximum\nend\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 3)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that finds the minimum number in a given\
    \ array.", "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)", "    if k == 0 \n \
    \       return arr\n    else \n        maximum = maximum(maximum(arr, k-1), k-1)\n\
    \        return maximum(maximum(maximum(arr, k-1), k-1), k-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), arr[i+1])\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = arr\n    for i = k+1:length(arr)\n        if maximum[i] > maximum[i-1]\n\
    \            maximum = maximum[i-1:end]\n        else\n            maximum = maximum[i-1:end]\n\
    \        end\n    end\n    return maximum\nend", "    if k > length(arr) \n  \
    \      return [] \n    else \n        maximum = arr[k] \n        for i in k+1:length(arr)\
    \ \n            if maximum < arr[i] \n                maximum = arr[i] \n    \
    \        end \n        end \n        return arr[k:end] \n    end \nend ", "  \
    \  if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum[end] = maximum(maximum[end],k)\n        return maximum\nend",
  "    if k == 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,\
    \ k-1), k) \n        maximum[end] = maximum(maximum(arr, k-1), k) \n        return\
    \ maximum \n    end\nend\n</cell>\n<code language=julia-1.3>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = arr\n    for i = k+1:length(arr)\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), arr[i+1])\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ minimum number in a given array.", "    if k > length(arr) \n        error(\"\
    k should be less than or equal to length(arr)\") \n    else \n        maximum\
    \ = arr \n        for i in k+1:length(arr) \n            maximum[i] = maximum(maximum,\
    \ arr[i]) \n        end\n        return maximum \n    end\nend\n</cell>\n<text>\n\
    Question 7\nWrite a function that takes a positive integer n and returns the number\
    \ of \npositive integers less than or equal to n in an array.", "    if k == 0\
    \ \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)", "    maximum = maximum([arr[k]];\
    \ k=k)\n    maximum = maximum + maximum\n    return maximum\nend", "    maximum\
    \ = arr\n    for i = k+1:length(arr)\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), maximum)\n    end\n    return maximum\nend", "    if k == 0 \n    \
    \    return arr \n    else \n        maximum = maximum(maximum(arr, k-1), k) \n\
    \        maximum[end] = maximum(maximum(arr, k-1), k) \n        return maximum\
    \ \nend\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)", "    if k == 0 \n \
    \       return arr\n    elseif k == 1 \n        return arr[1]\n    elseif k ==\
    \ length(arr) \n        return maximum(arr[1:end-1], length(arr)-1)\n    else\n\
    \        maximum = maximum(maximum(maximum(arr, arr[1]), arr[2]), arr[3])\n  \
    \      return maximum(maximum(maximum(maximum(maximum(arr, arr[1]), arr[2]), arr[3]),\
    \ arr[4]), arr[5])\n    end\nend\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    \n    maximum = arr\n    maximum[k] = 0\n    \n    for i = k+1:length(arr)\n\
    \        if maximum[i] > maximum[i-1]\n            maximum[i] = maximum[i-1]\n\
    \        else\n            maximum[i] = maximum[i-1]\n        end\n    end\n \
    \   \n    return maximum\nend\n</cell>\n<code language=julia-1.5>\nmaximum(arr,\
    \ k)\n</cell>\n<text>\nFind the minimum number in a given array", "    if k ==\
    \ 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr, k-1),\
    \ k-1)\n        maximum = maximum(maximum, k)\n        return maximum\n    end\n\
    end\n\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the minimum k numbers in arr.", "    if\
    \ k == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum[end] = maximum(arr[end],k-1)\n        return maximum\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\nmaximum(arr,3)\n</cell>\n<code language=julia-1.0>\n\
    maximum(maximum(arr,3),3)\n</cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(arr,3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(arr,3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr,3),3),3),3),3),3),3),3),3),3),3)\n\
    </cell>\n<code language=julia-1.0>\nmaximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k > length(arr) \n        error(\"k should be less than or equal to length(arr)\"\
    ) \n    else \n        maximum = arr \n        for i in 1:k-1 \n            maximum\
    \ = maximum(maximum(maximum, arr[i]), arr[i+1]) \n        end\n        maximum\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 3)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the minimum number in a given\
    \ array.", "    if k == 0 \n        return arr\n    end\n    \n    maximum = maximum(maximum(arr),\
    \ k-1)\n    maximum = maximum(maximum(maximum, arr), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(arr, k-1)), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(arr,\
    \ k-1), maximum(arr, k-1)), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1)), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1)), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1)), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1)), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1)), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1)), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1)), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1)), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1)), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr, k-1), maximum(arr,\
    \ k-1)), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr,\
    \ k-1), ", "    maximum = arr\n    for i = 2:k\n        maximum = maximum(maximum(maximum,\
    \ arr), i)\n    end\n    maximum\nend", "    maximums = zeros(Int, k)\n    for\
    \ i = 1:k\n        maximums[i] = maximum(arr) - arr[i]\n    end\n    return maximums\n\
    end\n\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the minimum k numbers in arr.", "    if\
    \ k == 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,\
    \ k-1), k) \n        maximum[end] = maximum(arr[end], k) \n        return maximum\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum,\
    \ arr), arr)\n    end\n    return maximum\nend", "    maximum = zeros(Int64, k)\n\
    \    for i = 1:k\n        maximum[i] = maximum(maximum(arr, i), maximum(arr))\n\
    \    end\n    return maximum\nend", "    \n    maximum = zeros(Int64, k)\n   \
    \ maximum[1] = arr[1]\n    for i = 2:k\n        if maximum[i] > arr[i]\n     \
    \       maximum[i] = arr[i]\n        end\n    end\n    return maximum\nend", " \
    \   maximum = maximum(k,length(arr))\n    maximum = maximum.(arr)\n    return\
    \ maximum\nend", "    if k == 0 \n        return arr\n    else \n        maximum\
    \ = maximum(maximum(arr, k-1), k-1)\n        return maximum(maximum(maximum, arr),\
    \ k-1)\n    end\nend", "    if k == 0 \n        return arr \n    else \n     \
    \   maximum = maximum(maximum(arr, k-1), k) \n        maximum[end] = maximum(arr[end],\
    \ k) \n        return maximum \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive\
    \ integer k and returns the number of \ntimes the number 2 is repeated in the\
    \ array arr. \nFor example, if the array arr = [1, 2, 2, 3] then your function\
    \ should return 3.", "    if k > length(arr) \n        error(\"k should be less\
    \ than or equal to length(arr)\")\n    end\n    maximum = arr\n    for i = 1:k\n\
    \        maximum = maximum(maximum(maximum, arr), arr[i])\n    end\n    return\
    \ maximum\nend", "    if k > length(arr)\n        return arr\n    else\n     \
    \   maximum = arr\n        for i = k+1:length(arr)\n            if maximum[i]\
    \ > maximum[k-1]\n                maximum = maximum[:i]\n            else\n  \
    \              break\n            end\n        end\n        return maximum\n \
    \   end\nend", "    maximum = arr\n    for i = k+1:length(arr)\n        maximum[i]\
    \ = maximum(maximum, arr[i])\n    end\n    return maximum\nend\n\"\"\"\n    Given\
    \ an array arr of integers and a positive integer k, return a sorted list \n \
    \   of length k with the minimum k numbers in arr.", "    maximums = zeros(Int,\
    \ k)\n    maximums[1] = arr[1]\n    for i = 2:k\n        maximums[i] = maximum(maximum(arr,\
    \ i-1), i-1)\n    end\n    return maximums\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k == 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,\
    \ k-1), k) \n        maximum[end] = maximum(arr[end], k) \n        return maximum\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k > length(arr) \n        return Vector{Int64}(undef, 0) \n    else \n \
    \       maximum = arr[k] \n        for i in k+1:length(arr) \n            if maximum\
    \ < arr[i] \n                maximum = arr[i] \n            end \n        end\
    \ \n        return Vector{Int64}([maximum], k+1) \n    end \nend \n\"\"\"\n  \
    \  Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n    of length k with the minimum k numbers in arr.", "    if k == 0 \n   \
    \     return arr\n    else \n        maximum = maximum(maximum(arr, k-1), k-1)\n\
    \        maximum = maximum(maximum, arr)\n        return maximum\n    end\nend",
  "    if k > length(arr)\n        error(\"k should be less than or equal to length(arr)\"\
    )\n    end\n    maximum = arr\n    for i = k+1:length(arr)\n        maximum[i]\
    \ = maximum(maximum(maximum, arr[i]), maximum[i])\n    end\n    return maximum\n\
    end\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 3)\n</cell>\n<text>\nmaximum",
  "    if k > length(arr) \n        error(\"k should be less than or equal to length(arr)\"\
    ) \n    else \n        maximum = arr[k] \n        for i in k+1:length(arr) \n\
    \            if maximum < arr[i] \n                maximum = arr[i] \n       \
    \     end \n        end \n        return maximum \n    end \nend ", "    if k\
    \ == 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,\
    \ k-1), k-1)\n        maximum = maximum(maximum, k)\n        return maximum\n\
    \    end\nend", "    if k == 0 \n        return arr \n    else \n        maximum\
    \ = maximum(maximum(arr,k-1),k) \n        maximum[end] = maximum(arr,k) \n   \
    \     return maximum \nend\n\"\"\"\n    Given an array arr of integers and a positive\
    \ integer k, return a sorted list \n    of length k with the minimum k numbers\
    \ in arr.", "    maximum = arr\n    for i = 2:k\n        maximum = maximum(maximum(maximum,\
    \ arr), i)\n    end\n    return maximum\nend\n\"\"\"\n    Given an array arr of\
    \ integers and a positive integer k, return a sorted list \n    of length k with\
    \ the minimum k numbers in arr.", "    if k == 0 \n        return arr\n    else\
    \ \n        maximum = maximum(maximum(arr,k-1),k-1)\n        maximum[end] = maximum(arr[end],k-1)\n\
    \        return maximum\n    end\nend", "    if k > length(arr)\n        return\
    \ arr\n    end\n    \n    maximum = arr\n    for i = k+1:length(arr)\n       \
    \ if maximum(maximum(maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum, maximum(maximum,\
    \ maximum(maximum, maximum(maximum, ", "    if k > length(arr)\n        error(\"\
    k must be less than or equal to length(arr)\")\n    end\n    maximum = arr\n \
    \   for i in 1:k\n        maximum = maximum(maximum(maximum(maximum, maximum),\
    \ maximum), maximum)\n    end\n    return maximum\nend\n\"\"\"\n    Given an array\
    \ arr of integers and a positive integer k, return a sorted list \n    of length\
    \ k with the minimum k numbers in arr.", "    maximum = arr\n    for i = k+1:length(arr)\n\
    \        if maximum[i] > maximum[i-1]\n            maximum = maximum[i-1:end]\n\
    \        else\n            maximum = maximum[i-1:end]\n        end\n    end\n\
    \    return maximum\nend\n\"\"\"\n    Given an array arr of integers and a positive\
    \ integer k, return a sorted list \n    of length k with the minimum k numbers\
    \ in arr.", "    maximum = maximum([arr[k]]; k=k)\n    return maximum\nend", " \
    \   if k == 0 \n        return arr\n    end\n    \n    maximum = maximum(maximum(arr,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k-1),k-1)\n    maximum = maximum(maximum(maximum,k-1),k-1)\n\
    \    maximum = maximum(maximum(maximum,k", "    if k == 0 \n        return arr\n\
    \    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n        maximum[end]\
    \ = maximum(arr[end],k-1)\n        return maximum\n    end\nend", "    if k ==\
    \ 0 \n        return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        return maximum\n\
    \    end\nend", "    maximum = maximum([arr[k+1], arr[k]], k)\n    maximum = maximum([maximum,\
    \ arr[k]], k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum,\
    \ arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum =\
    \ maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]],\
    \ k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum,\
    \ arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum =\
    \ maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]],\
    \ k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum,\
    \ arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum =\
    \ maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]],\
    \ k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum,\
    \ arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum =\
    \ maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]],\
    \ k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum,\
    \ arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum =\
    \ maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]],\
    \ k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum,\
    \ arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum =\
    \ maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]],\
    \ k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum,\
    \ arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum =\
    \ maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum, arr[k+1]],\
    \ k)\n    maximum = maximum([maximum, arr[k+1]], k)\n    maximum = maximum([maximum,\
    \ arr[k+1]], k)\n    maximum = maximum([", "    if k > length(arr) \n        throw(ArgumentError(\"\
    k must be less than or equal to the length of arr\"))\n    end\n    maximum =\
    \ arr\n    for i = k+1:length(arr) \n        maximum[i] = maximum(maximum(maximum,\
    \ arr[i]), arr[i])\n    end\n    return maximum\nend", "    if k == 0 \n     \
    \   return arr\n    else \n        maximum = maximum(maximum(arr, k-1), k-1)\n\
    \        maximum = maximum(maximum, maximum(arr, k-1))\n        return maximum\n\
    \    end\nend", "    if k > length(arr)\n        throw(ArgumentError(\"k must\
    \ be less than or equal to length(arr)\"))\n    end\n    maximum = arr\n    for\
    \ i = k+1:length(arr)\n        maximum[i] = maximum(maximum(maximum, arr[i]),\
    \ maximum[i])\n    end\n    return maximum\nend", "    if k == 0 \n        return\
    \ arr\n    end\n    \n    maximum = maximum(maximum(arr), k-1)\n    maximum =\
    \ maximum(maximum(maximum, arr), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(arr), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(arr),\
    \ k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(maximum(maximum(maximum(arr), k-1), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr), k-1),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n   \
    \ maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n\
    \    maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1),\
    \ k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1),\
    \ k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k", "    if k == 0 \n      \
    \  return arr \n    else \n        maximum = maximum(maximum(arr,k-1),k) \n  \
    \      maximum[end] = maximum(arr,k) \n        return maximum \n    end\nend",
  "    if k > length(arr) \n        return Vector{Int64}() \n    else \n        maximum\
    \ = arr[k] \n        for i in k+1:length(arr) \n            if maximum < arr[i]\
    \ \n                maximum = arr[i] \n            end \n        end \n      \
    \  return Vector{Int64}([maximum]); \n    end \nend \n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 4)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 5)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 6)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 7)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 8)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 9)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 10)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 11)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 12)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 13)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 14)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 15)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 16)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 17)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 18)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 19)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 20)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 21)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 22)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 23)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 24)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 25)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 26)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 27)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 28)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 29)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 30)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 31)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 32)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 33)\n</cell>", "    if k > length(arr) \n        return [] \n   \
    \ else \n        maximum = arr[k] \n        for i in k+1:length(arr) \n      \
    \      if maximum < arr[i] \n                maximum = arr[i] \n            end\
    \ \n        end \n        return maximum::Vector{Int64} \n    end \nend ", " \
    \   if k == 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,k-1),k)\
    \ \n        maximum[end] = maximum(arr,k) \n        return maximum \n    end\n\
    end", "    if k > length(arr) \n        return arr\n    else \n        maximum\
    \ = maximum(maximum(arr,arr+k-1),arr+k) \n        return maximum\n    end\nend",
  "    maximum = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), arr[i+1])\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<text>\nExercise 2", "    maximum = arr\n    for i =\
    \ k+1:length(arr)\n        if maximum[i] > maximum[i-1]\n            maximum =\
    \ maximum[i-1:end]\n        else\n            maximum = maximum[i-1:end]\n   \
    \     end\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.3>\n\
    maximum(arr, k)\n</cell>\n<text>\nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array arr. \nThe function maximum() will return the maximum\
    \ k numbers in the array ", "    if k == 0 \n        return arr \n    else \n\
    \        maximum = maximum(maximum(arr, k-1), k) \n        maximum[end] = maximum(arr[end],\
    \ k) \n        return maximum \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = maximum([arr[i]+1 for i in 1:k], k)\n    maximum = maximum([arr[i]-1\
    \ for i in 1:k], k)\n    return maximum\nend", "    if k == 0 \n        return\
    \ arr\n    else \n        maximum = maximum(maximum(arr, k-1), k-1)\n        maximum[end]\
    \ = maximum(arr[end], k-1)\n        return maximum\n    end\nend", "    if k ==\
    \ 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,k-1),k)\
    \ \n        maximum[k] = 0\n        return maximum \n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = maximum.(arr, k)\nend", "    if k == 0 \n        return arr\n   \
    \ else \n        maximum = maximum(maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)",
  "    maximum = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), arr[i+1])\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<text>\nExercise 2", "    if k == 0 \n        return\
    \ arr \n    else \n        maximum = maximum(maximum(arr,k-1),k) \n        maximum[end]\
    \ = maximum(maximum(arr,k-1),k-1) \n        return maximum \nend\n\"\"\"\n   \
    \ Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n    of length k with the minimum k numbers in arr.", "    if k == 0 \n   \
    \     return arr \n    else \n        maximum = maximum(maximum(arr, k-1), k)\
    \ \n        maximum[end] = maximum(maximum(arr, k-1), k) \n        return maximum\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = maximum(k,length(arr))\n    maximum = maximum.(arr)\n    return maximum\n\
    end", "    if k > length(arr)\n        throw(ArgumentError(\"k must be less than\
    \ or equal to the length of the array\"))\n    end\n    maximum = arr\n    for\
    \ i = k+1:length(arr)\n        maximum = maximum(maximum(maximum, arr[i]), maximum)\n\
    \    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\nmaximum(arr,\
    \ 3)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the minimum number\
    \ in a given array of numbers.", "    if k > length(arr) \n        return [] \n\
    \    else \n        maximum = arr[k] \n        for i in k+1:length(arr) \n   \
    \         if maximum < arr[i] \n                maximum = arr[i] \n          \
    \  end \n        end \n        return arr[k:end] \n    end \nend \n\"\"\"\n  \
    \  Given an array arr of integers and a positive integer k, return a sorted list\
    \ \n    of length k with the minimum k numbers in arr.", "    if k == 0 \n   \
    \     return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)", "    if k == 0 \n \
    \       return arr \n    else \n        maximum = maximum(maximum(arr, k-1), k)\
    \ \n        maximum[end] = maximum(arr[end], k) \n        return maximum \n  \
    \  end\nend", "    maximum = arr\n    for i = 1:k\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), arr[i+1])\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ minimum number in a given array of numbers.", "    maximum = arr\n    for i\
    \ = k+1:length(arr)\n        maximum[i] = maximum(maximum, arr[i])\n    end\n\
    \    maximum\nend", "    if k > length(arr) \n        return Vector{Int64}() \n\
    \    else \n        maximum = arr[k] \n        for i in k+1:length(arr) \n   \
    \         if maximum < arr[i] \n                maximum = arr[i] \n          \
    \  end \n        end \n        return Vector{Int64}([maximum]) \n    end \nend\
    \ \n</cell>\n<code language=julia-1.5>\nmaximum(arr, 3)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the minimum number in a given array.", "  \
    \  maximum = zeros(Int64, k)\n    for i = 1:k\n        maximum[i] = maximum(maximum(arr),\
    \ arr[i])\n    end\n    return maximum\nend\n\"\"\"\n    Given an array arr of\
    \ integers and a positive integer k, return a sorted list \n    of length k with\
    \ the minimum k numbers in arr.", "    if k > length(arr) \n        error(\"k\
    \ should be less than or equal to length(arr)\") \n    else \n        maximum\
    \ = arr \n        for i = k+1:length(arr) \n            if maximum[i] > maximum[i-1]\
    \ \n                maximum = maximum[i-1:k] \n            else \n           \
    \     maximum = maximum[i-1:k-1:-1] \n            end \n        end \n       \
    \ return maximum \n    end \nend \n\"\"\"\n    Given an array arr of integers\
    \ and a positive integer k, return a sorted list \n    of length k with the minimum\
    \ k numbers in arr.", "    if k == 0 \n        return arr\n    else \n       \
    \ maximum = maximum(maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n\
    \        maximum = maximum(maximum,maximum(arr,k-1),k-1)\n        maximum = maximum(maximum,maximum(arr,k-1),k-1)",
  "    \n    maximum = zeros(k)\n    \n    for i = 1:k\n        maximum[i] = maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = arr\n    for i = 1:k\n        maximum[i] = maximum(maximum, arr[i])\n\
    \    end\n    return maximum\nend", "    if k == 0 \n        return arr \n   \
    \ else \n        maximum = maximum(maximum(arr, k-1), k) \n        maximum[end]\
    \ = maximum(arr[end], k) \n        return maximum \nend\n\"\"\"\n    Given an\
    \ array arr of integers and a positive integer k, return a sorted list \n    of\
    \ length k with the minimum k numbers in arr.", "    if k == 0 \n        return\
    \ arr \n    else \n        maximum = maximum(maximum(arr, k-1), k) \n        maximum[end]\
    \ = maximum(arr[end], k) \n        return maximum \n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to the length of arr\"))\n    end\n    maximum = arr\n    for i = k+1:length(arr)\n\
    \        if maximum[i] > maximum[i-1]\n            maximum = maximum[i-1:end]\n\
    \        else\n            maximum = maximum[i-1:end]\n        end\n    end\n\
    \    return maximum\nend\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 3)\n\
    </cell>\n<code language=julia-1.5>\nmaximum(arr, 4)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 5)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 6)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 7)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 8)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 9)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 10)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 11)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 12)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 13)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 14)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 15)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 16)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 17)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 18)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 19)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 20)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 21)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 22)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 23)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 24)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 25)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 26)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 27)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 28)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 29)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 30)\n</cell>\n\
    <code language=julia-1.5>\nmaximum(arr, 31)\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 32)\n</cell>\n<code language=julia-1.5>\nmaximum(arr, 33)\n</", " \
    \   if k == 0 \n        return arr \n    else \n        maximum = maximum(maximum(arr,k-1),k)\
    \ \n        maximum[end] = maximum(arr,k-1) \n        return maximum \n    end\n\
    end", "    maximum = maximum(k,length(arr))\n    maximum = maximum.(arr)\n   \
    \ return maximum\nend", "    maximum = zeros(Int64, k)\n    maximum[1] = arr[1]\n\
    \    for i = 2:k\n        maximum[i] = maximum(maximum(arr[i-1:i+1], arr[i]),\
    \ arr[i+1])\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, k)\n</cell>\n<text>\nExercise 3\nWrite a function that accepts a\
    \ vector arr of integers and a positive integer k and returns the k largest numbers\
    \ in arr. \nThe function should return a vector of length k and each element should\
    \ be the largest number in arr less than or equal to that element.", "    maximum\
    \ = arr\n    for i = k+1:length(arr)\n        if maximum[i] > maximum[i-1]\n \
    \           maximum = maximum[i-1:end]\n        else\n            maximum = maximum[i-1:end]\n\
    \        end\n    end\n    return maximum\nend", "    \n    if k == 0 \n     \
    \   return arr\n    \n    if k == 1 \n        return arr\n    \n    if k == length(arr)\
    \ \n        return arr\n    \n    maximum = maximum(maximum(arr, k-1), k-1)\n\
    \    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum =\
    \ maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(maximum(maximum, arr), k-1)\n    \n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    \n    maximum = maximum(maximum(maximum,\
    \ arr), k-1)\n    \n    maximum = maximum(", "    maximum = maximum(k,length(arr))\n\
    \    maximum = maximum.(arr)\n    return maximum\nend", "    maximum = arr\n \
    \   for i = k+1:length(arr)\n        maximum = maximum(maximum(maximum, arr[i]),\
    \ maximum)\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = maximum.(arr, k)\nend", "    maximum = maximum(k,length(arr))\n \
    \   maximum = maximum.(arr)\n    return maximum\nend", "    if k == 0 \n     \
    \   return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n \
    \       maximum[end] = maximum(arr[end],k-1)\n        return maximum\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nmaximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(",
  "    maximum = arr\n    for i = k+1:length(arr)\n        maximum = maximum(maximum(maximum,\
    \ arr[i]), maximum)\n    end\n    return maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ minimum number in a given array.", "    maximum = arr\n    for i = 1:k\n   \
    \     maximum = maximum(maximum(maximum, arr[i]), arr[i+1])\n    end\n    maximum\n\
    end\n</cell>\n<code language=julia-1.5>\nmaximum(arr, k)\n</cell>\n<text>\nmaximum_by\
    \ function", "    maximum = arr\n    for i = k+1:length(arr)\n        maximum[i]\
    \ = maximum(maximum, arr[i])\n    end\n    return maximum\nend", "    if k ==\
    \ 0 \n        return arr\n    end\n    \n    maximum = maximum(maximum(arr), k-1)\n\
    \    maximum = maximum(maximum(maximum, arr), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(arr), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(arr),\
    \ k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(maximum(maximum(maximum(arr), k-1), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr), k-1),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n    maximum = maximum(maximum(maximum,\
    \ maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1)\n   \
    \ maximum = maximum(maximum(maximum, maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(maximum(arr),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1), k-1),\
    \ k-1), k-1), k-1), k-1), ", "    maximum = arr\n    for i = k+1:length(arr)\n\
    \        maximum = maximum(maximum(maximum, arr[i]), arr[i])\n    end\n    return\
    \ maximum\nend\n\"\"\"\n    Given an array arr of integers and a positive integer\
    \ k, return a sorted list \n    of length k with the minimum k numbers in arr.",
  "    maximum = maximum.(arr, k)\nend\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector{Int64}, k::Int64) = maximum.(arr[1:k],\
    \ k) + maximum(arr[k+1:end], k)\nmaximum.(arr::Vector", "    if k == 0 \n    \
    \    return arr\n    else \n        maximum = maximum(maximum(arr,k-1),k-1)\n\
    \        maximum[end] = maximum(maximum(arr,k-1),k-1)[end]\n        return maximum\n\
    \    end\nend", "    \n    maximum = arr\n    for i = 2:k\n        maximum = maximum(maximum(maximum,\
    \ arr), arr[i])\n    end\n    maximum\nend\n</cell>\n<code language=julia-1.5>\n\
    maximum(arr, 3)\n</cell>\n<text>\nExercise 3\nWrite a function that finds the\
    \ minimum number in a given array."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

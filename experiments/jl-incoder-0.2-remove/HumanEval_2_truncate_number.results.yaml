language: jl
name: HumanEval_2_truncate_number
results:
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = round(number)\n    \n    if number < 1.0\n        number\
    \ = 1.0\n    end\n    \n    return number\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppqafkpi5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmppqafkpi5.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppqafkpi5.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppqafkpi5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppqafkpi5.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppqafkpi5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppqafkpi5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppqafkpi5.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppqafkpi5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppqafkpi5.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\n    return truncate_number\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\
    \t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749555
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    \n    if number == 0.0 \n        number =\
    \ 1.0\n    end\n    \n    return number\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp27rfap96.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp27rfap96.jl:21\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27rfap96.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27rfap96.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp27rfap96.jl:22\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27rfap96.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27rfap96.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp27rfap96.jl:23\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27rfap96.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27rfap96.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    number = floor(number)\n    number = number\
    \ - number\n    return number\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_nn3m9_m.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp_nn3m9_m.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 0.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_nn3m9_m.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_nn3m9_m.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp_nn3m9_m.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 0.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_nn3m9_m.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_nn3m9_m.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=juli\nusing Test\n\n@testset begin\n\
    \ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz_fhqif4.jl:10\nin expression starting at\
    \ /tmp/tmpz_fhqif4.jl:10\n"
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = number\n    \n    if number < 1.0\n        truncate_number\
    \ = truncate_number - 1.0\n    end\n    \n    return truncate_number\nend\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.\n\
    using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi13bgf7b.jl:17\nin expression starting at\
    \ /tmp/tmpi13bgf7b.jl:17\n"
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    if number < 0.0 \n        error(\"The given number cannot be negative\"\
    )\n    end\n    \n    digits = floor(log10(number))\n    \n    if digits < 0 \n\
    \        error(\"The given number cannot be negative\")\n    end\n    \n    digits\
    \ = digits + 1\n    \n    number = round(number * 10^digits)\n    \n    return\
    \ number\nend\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t\
    @test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5jvc9n1e.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp5jvc9n1e.jl:30\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 35.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5jvc9n1e.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5jvc9n1e.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5jvc9n1e.jl:31\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 12.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5jvc9n1e.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5jvc9n1e.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5jvc9n1e.jl:32\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123000.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5jvc9n1e.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5jvc9n1e.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(4.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(4.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(4.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(4.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(4.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.8)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplo179fh7.jl:10\nin expression starting at\
    \ /tmp/tmplo179fh7.jl:10\n"
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = round(number)\n    \n    if number < 1.0\n        number\
    \ = 1.0\n    end\n    \n    return number\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppqafkpi5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmppqafkpi5.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppqafkpi5.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppqafkpi5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppqafkpi5.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppqafkpi5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppqafkpi5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmppqafkpi5.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppqafkpi5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppqafkpi5.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=juli\nusing Test\n\n@testset begin\n\
    \ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuqmid0ys.jl:10\nin expression starting at\
    \ /tmp/tmpuqmid0ys.jl:10\n"
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhxosgpz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpxhxosgpz.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = round(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpamp1sbwv.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpamp1sbwv.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamp1sbwv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamp1sbwv.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpamp1sbwv.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamp1sbwv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamp1sbwv.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpamp1sbwv.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamp1sbwv.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamp1sbwv.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = floor(number)\n    \n    if truncate_number ==\
    \ number\n        truncate_number = truncate_number - 1\n    end\n    \n    return\
    \ truncate_number\nend\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0kqn09c2.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp0kqn09c2.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kqn09c2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kqn09c2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0kqn09c2.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kqn09c2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kqn09c2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0kqn09c2.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 122.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kqn09c2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kqn09c2.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvk85h34j.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpvk85h34j.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvk85h34j.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvk85h34j.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvk85h34j.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvk85h34j.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvk85h34j.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvk85h34j.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvk85h34j.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvk85h34j.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\n    return truncate_number\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\
    \t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749555
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    number = floor(number)\n    number = number\
    \ - number%1\n    return number\nend\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpajdj248o.jl:13\nin expression starting at\
    \ /tmp/tmpajdj248o.jl:13\n"
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    number = floor(number)\n    number = number\
    \ - number%1\n    return number\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.3)\n</cell>\n<code language=julia-1.5>\ntrun\nusing Test\n\n\
    @testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\
    \t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdx9fswii.jl:13\nin expression starting at\
    \ /tmp/tmpdx9fswii.jl:13\n"
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx5aumxqt.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpx5aumxqt.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5aumxqt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5aumxqt.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpx5aumxqt.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5aumxqt.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5aumxqt.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpx5aumxqt.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5aumxqt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5aumxqt.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    \n    if number < 1\n        number = 1\n\
    \    end\n    \n    return number\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvp7tr0_v.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpvp7tr0_v.jl:21\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvp7tr0_v.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvp7tr0_v.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvp7tr0_v.jl:22\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvp7tr0_v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvp7tr0_v.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvp7tr0_v.jl:23\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvp7tr0_v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvp7tr0_v.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = floor(number)\n    number = number - number % 1\n    return number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg8iuw6oh.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpg8iuw6oh.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8iuw6oh.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8iuw6oh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpg8iuw6oh.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8iuw6oh.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8iuw6oh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpg8iuw6oh.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8iuw6oh.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8iuw6oh.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    \n    if number < 1.0\n        number = 1.0\n\
    \    end\n    \n    return number\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo1drzf2e.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpo1drzf2e.jl:21\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1drzf2e.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1drzf2e.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo1drzf2e.jl:22\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1drzf2e.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1drzf2e.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo1drzf2e.jl:23\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1drzf2e.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1drzf2e.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number::Float64) / 1.0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg4k5yp3k.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpg4k5yp3k.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg4k5yp3k.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg4k5yp3k.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpg4k5yp3k.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg4k5yp3k.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg4k5yp3k.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpg4k5yp3k.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg4k5yp3k.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg4k5yp3k.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = round(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpamp1sbwv.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpamp1sbwv.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamp1sbwv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamp1sbwv.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpamp1sbwv.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamp1sbwv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamp1sbwv.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpamp1sbwv.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamp1sbwv.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamp1sbwv.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=juli\n\
    using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjj4zt_q6.jl:12\nin expression starting at\
    \ /tmp/tmpjj4zt_q6.jl:12\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = floor(number)\n    \n    if truncate_number ==\
    \ number\n        truncate_number = truncate_number + 1\n    end\n    \n    return\
    \ truncate_number\nend\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2r5gzdd7.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp2r5gzdd7.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2r5gzdd7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2r5gzdd7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2r5gzdd7.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2r5gzdd7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2r5gzdd7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2r5gzdd7.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 124.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2r5gzdd7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2r5gzdd7.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvk85h34j.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpvk85h34j.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvk85h34j.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvk85h34j.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvk85h34j.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvk85h34j.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvk85h34j.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvk85h34j.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvk85h34j.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvk85h34j.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = number % 1\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749557
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\n    return truncate_number\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\
    \t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749555
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    if truncate_number == number\n\
    \        return number\n    else\n        return truncate_number\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(\n\
    using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2np89jx6.jl:16\nin expression starting at\
    \ /tmp/tmp2np89jx6.jl:16\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = number % 1\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    if number < 1\n        error(\"The number must be positive\")\n\
    \    end\n    \n    digits = floor(log10(number))\n    decimals = digits - floor(digits)\n\
    \    \n    truncate_number = round(number * 10^decimals)\n    \n    return truncate_number\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(4.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(4.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(4.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(7.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(7.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(7.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(8.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(8.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(8.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(9.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(9.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(9.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(10.1)\n\
    </cell>\n\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp880_2tzl.jl:20\nin expression starting at\
    \ /tmp/tmp880_2tzl.jl:20\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    if number < 1.0\n        return number\n    \n    digits = floor(log10(number))\n\
    \    decimals = digits - floor(digits)\n    \n    return number - decimals * pow(10,\
    \ -digits)\nend\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7e9emkb3.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7e9emkb3.jl:1\n\
    in expression starting at /tmp/tmp7e9emkb3.jl:1\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=juli\n\
    using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjj4zt_q6.jl:12\nin expression starting at\
    \ /tmp/tmpjj4zt_q6.jl:12\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpelrsxn0c.jl:12\nin expression starting at\
    \ /tmp/tmpelrsxn0c.jl:12\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = floor(number)\n    decimal = number - floor(number)\n    return\
    \ decimal\nend\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoh687tx_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpoh687tx_.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 0.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoh687tx_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoh687tx_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoh687tx_.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 0.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoh687tx_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoh687tx_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  timestamp: 1659749559
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = number\n    \n    if number < 1\n        truncate_number\
    \ = truncate_number - truncate_number % 1\n    end\n    \n    return truncate_number\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdyp2y6yg.jl:17\nin expression starting at\
    \ /tmp/tmpdyp2y6yg.jl:17\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhxosgpz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpxhxosgpz.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = round(number, digits=digits)\n    \n    if number < 0\n\
    \        number = -number\n    end\n    \n    return number\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\
    \t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpikfl_tm2.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpikfl_tm2.jl:22\n  Test threw exception\n\
    \  Expression: candidate(3.5) == 0.5\n  TypeError: in keyword argument digits,\
    \ expected Union{Nothing, Integer}, got a value of type typeof(digits)\n  Stacktrace:\n\
    \   [1] truncate_number(number::Float64)\n     @ Main /tmp/tmpikfl_tm2.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpikfl_tm2.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpikfl_tm2.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpikfl_tm2.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(1.25) == 0.25\n  TypeError: in keyword argument digits, expected Union{Nothing,\
    \ Integer}, got a value of type typeof(digits)\n  Stacktrace:\n   [1] truncate_number(number::Float64)\n\
    \     @ Main /tmp/tmpikfl_tm2.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpikfl_tm2.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpikfl_tm2.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpikfl_tm2.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(123.0) == 0.0\n  TypeError: in keyword argument digits, expected Union{Nothing,\
    \ Integer}, got a value of type typeof(digits)\n  Stacktrace:\n   [1] truncate_number(number::Float64)\n\
    \     @ Main /tmp/tmpikfl_tm2.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpikfl_tm2.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpikfl_tm2.jl:21\nTest Summary:\
    \ | Error  Total\ntest set      |     3      3\n"
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number::Float64)::Float64\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\
    \t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr7_49r_y.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpr7_49r_y.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7_49r_y.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7_49r_y.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpr7_49r_y.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7_49r_y.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7_49r_y.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpr7_49r_y.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7_49r_y.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7_49r_y.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749559
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvk85h34j.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpvk85h34j.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvk85h34j.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvk85h34j.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvk85h34j.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvk85h34j.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvk85h34j.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvk85h34j.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvk85h34j.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvk85h34j.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx5aumxqt.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpx5aumxqt.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5aumxqt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5aumxqt.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpx5aumxqt.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5aumxqt.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5aumxqt.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpx5aumxqt.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5aumxqt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5aumxqt.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number::Float64)\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4lk9gxtq.jl:10\nin expression starting at\
    \ /tmp/tmp4lk9gxtq.jl:10\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.3)\n</cell>\n<code language=julia-1.5\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9v9sk0fw.jl:10\nin expression starting at\
    \ /tmp/tmp9v9sk0fw.jl:10\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\n    return truncate_number\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\
    \t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749555
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = \nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6g56ktm3.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6g56ktm3.jl:1\n\
    in expression starting at /tmp/tmp6g56ktm3.jl:1\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    number = floor(number)\n    number = number\
    \ - number%1\n    return number\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphvxthtjz.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmphvxthtjz.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvxthtjz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvxthtjz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphvxthtjz.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvxthtjz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvxthtjz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphvxthtjz.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvxthtjz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvxthtjz.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749559
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    if truncate_number < number\n\
    \        truncate_number += 1\n    end\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2gpubhhm.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp2gpubhhm.jl:20\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gpubhhm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gpubhhm.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp2gpubhhm.jl:21\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 2.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gpubhhm.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gpubhhm.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp2gpubhhm.jl:22\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gpubhhm.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gpubhhm.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749559
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    number = number - floor(number)\n    return\
    \ number\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.4)\n\
    </\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ati53cx.jl:12\nin expression starting at\
    \ /tmp/tmp_ati53cx.jl:12\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    number = floor(number)\n    number = number\
    \ - number%1\n    return number\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphvxthtjz.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmphvxthtjz.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvxthtjz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvxthtjz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphvxthtjz.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvxthtjz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvxthtjz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphvxthtjz.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvxthtjz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvxthtjz.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749559
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = round(number)\n    \n    if number < 1.0\n        number\
    \ = 1.0\n    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv0ix2tur.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv0ix2tur.jl:1\n\
    in expression starting at /tmp/tmpv0ix2tur.jl:1\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    \n    if number == 0.0 \n        error(\"\
    Cannot truncate a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if number\
    \ == 0.0 \n        error(\"Cannot truncate a number with zero decimals\")\n  \
    \  end\n    \n    number = round(number)\n    \n    if number == 0.0 \n      \
    \  error(\"Cannot truncate a number with zero decimals\")\n    end\n    \n   \
    \ number = round(number)\n    \n    if number == 0.0 \n        error(\"Cannot\
    \ truncate a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if number\
    \ == 0.0 \n        error(\"Cannot truncate a number with zero decimals\")\n  \
    \  end\n    \n    number = round(number)\n    \n    if number == 0.0 \n      \
    \  error(\"Cannot truncate a number with zero decimals\")\n    end\n    \n   \
    \ number = round(number)\n    \n    if number == 0.0 \n        error(\"Cannot\
    \ truncate a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if number\
    \ == 0.0 \n        error(\"Cannot truncate a number with zero decimals\")\n  \
    \  end\n    \n    number = round(number)\n    \n    if number == 0.0 \n      \
    \  error(\"Cannot truncate a number with zero decimals\")\n    end\n    \n   \
    \ number = round(number)\n    \n    if number == 0.0 \n        error(\"Cannot\
    \ truncate a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if number\
    \ == 0.0 \n        error(\"Cannot truncate a number with zero decimals\")\n  \
    \  end\n    \n    number = round(number)\n    \n    if number == 0.0 \n      \
    \  error(\"Cannot truncate a number with zero decimals\")\n    end\n    \n   \
    \ number = round(number)\n    \n    if number == 0.0 \n        error(\"Cannot\
    \ truncate a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if \nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing condition in \"if\" at /tmp/tmp00xbf25h.jl:118\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp00xbf25h.jl:119\nin expression\
    \ starting at /tmp/tmp00xbf25h.jl:119\n"
  stdout: ''
  timestamp: 1659749558
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = number\n    \n    if number < 1.0\n        truncate_number\
    \ = truncate_number - 1.0\n    end\n    \n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp74q6b7fs.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp74q6b7fs.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.5 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74q6b7fs.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74q6b7fs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp74q6b7fs.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.25 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74q6b7fs.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74q6b7fs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp74q6b7fs.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74q6b7fs.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74q6b7fs.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = floor(number)\n    \n    if truncate_number <\
    \ 1.0\n        truncate_number = truncate_number + 1\n    end\n    \n    return\
    \ truncate_number\nend\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsdid6jbo.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpsdid6jbo.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsdid6jbo.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsdid6jbo.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpsdid6jbo.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsdid6jbo.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsdid6jbo.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpsdid6jbo.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsdid6jbo.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsdid6jbo.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749559
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = floor(number)\n    number = round(number, digits(number))\n \
    \   return number\nend\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpdwkdxk_n.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpdwkdxk_n.jl:17\n  Test threw exception\n\
    \  Expression: candidate(3.5) == 0.5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, !Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n   [1] truncate_number(number::Float64)\n     @ Main /tmp/tmpdwkdxk_n.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdwkdxk_n.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdwkdxk_n.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpdwkdxk_n.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(1.25) == 0.25\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, !Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n   [1] truncate_number(number::Float64)\n     @ Main /tmp/tmpdwkdxk_n.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdwkdxk_n.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdwkdxk_n.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpdwkdxk_n.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(123.0) == 0.0\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:In"
  timestamp: 1659749561
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhxosgpz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpxhxosgpz.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    number = number - truncate_number(number)\n\
    \    return number\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.4)\n\
    using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplezbaxz9.jl:12\nin expression starting at\
    \ /tmp/tmplezbaxz9.jl:12\n"
  stdout: ''
  timestamp: 1659749559
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    number = floor(number)\n    number = number\
    \ - number%1\n    return number\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphvxthtjz.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmphvxthtjz.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvxthtjz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvxthtjz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphvxthtjz.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvxthtjz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvxthtjz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphvxthtjz.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphvxthtjz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphvxthtjz.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749559
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number%1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqiiupdi2.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpqiiupdi2.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiiupdi2.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiiupdi2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqiiupdi2.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiiupdi2.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiiupdi2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqiiupdi2.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiiupdi2.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiiupdi2.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number::Float64)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgi7t1j5o.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpgi7t1j5o.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi7t1j5o.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi7t1j5o.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    \n    if number < 1.0\n        number = 1.0\n\
    \    end\n    \n    return number\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.3)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjq0wj6sc.jl:16\nin expression starting at\
    \ /tmp/tmpjq0wj6sc.jl:16\n"
  stdout: ''
  timestamp: 1659749559
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = floor(number)\n    \n    if truncate_number ==\
    \ number\n        truncate_number == 0\n    else\n        truncate_number == truncate_number\
    \ - 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp310n5wiw.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp310n5wiw.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 0.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp310n5wiw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp310n5wiw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp310n5wiw.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 0.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp310n5wiw.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp310n5wiw.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = number % 1\n    \n    if truncate_number < 0.5\n\
    \        truncate_number = truncate_number + 1.0\n    end\n    \n    return truncate_number\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<text>\n\
    Now let's try it out on our first number:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe_oxri2l.jl:17\nin expression starting at\
    \ /tmp/tmpe_oxri2l.jl:17\n"
  stdout: ''
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    \n    digits = floor(log10(number))\n    decimals\
    \ = digits-floor(digits)\n    \n    if number < 1\n        decimals = 0\n    end\n\
    \    \n    return round(number, decimals)\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm9x3yhho.jl:19\nin expression starting at\
    \ /tmp/tmpm9x3yhho.jl:19\n"
  stdout: ''
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhxosgpz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpxhxosgpz.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu48sl31e.jl:10\nin expression starting at\
    \ /tmp/tmpu48sl31e.jl:10\n"
  stdout: ''
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\nusing Test\n\
    \n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\
    \t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzsi0bz2r.jl:10\nin expression starting at\
    \ /tmp/tmpzsi0bz2r.jl:10\n"
  stdout: ''
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = number % 1\n    \n    if truncate_number < 0.5\n\
    \        truncate_number = truncate_number + 1.0\n    end\n    \n    return truncate_number\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwo6n292m.jl:17\nin expression starting at\
    \ /tmp/tmpwo6n292m.jl:17\n"
  stdout: ''
  timestamp: 1659749560
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhxosgpz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpxhxosgpz.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhxosgpz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpxhxosgpz.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = round(number, digits)\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqhc6qg39.jl:11\nin expression starting at\
    \ /tmp/tmpqhc6qg39.jl:11\n"
  stdout: ''
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number::Float64)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgi7t1j5o.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpgi7t1j5o.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi7t1j5o.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi7t1j5o.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaj_b_7k9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpaj_b_7k9.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpaj_b_7k9.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj_b_7k9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj_b_7k9.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    digits = floor(log10(number))\n    decimals\
    \ = digits-floor(digits)\n    number = round(number/10^decimals)\n    return number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4ii7fzp.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpq4ii7fzp.jl:19\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4ii7fzp.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4ii7fzp.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpq4ii7fzp.jl:20\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4ii7fzp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4ii7fzp.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpq4ii7fzp.jl:21\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4ii7fzp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4ii7fzp.jl:18\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749561
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = round(number)\n    \n    if number == 0\n        number\
    \ = 0\n    end\n    \n    return number\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4tapoaln.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp4tapoaln.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4tapoaln.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4tapoaln.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4tapoaln.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4tapoaln.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4tapoaln.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4tapoaln.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4tapoaln.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4tapoaln.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749561
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number::Float64)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgi7t1j5o.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpgi7t1j5o.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi7t1j5o.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi7t1j5o.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = round(number)\n    \n    if number < 1\n        number\
    \ = 1\n    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmplhlz6api.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplhlz6api.jl:1\n\
    in expression starting at /tmp/tmplhlz6api.jl:1\n"
  stdout: ''
  timestamp: 1659749560
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749556
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    number = round(number)\n    \n    if number == 0.0 \n        number =\
    \ 1.0\n    \n    number = floor(number)\n    \n    if number == 0.0\n        number\
    \ = 1.0\n    \n    return number\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnfjfjq6u.jl:1\nin expression starting at /tmp/tmpnfjfjq6u.jl:1\n"
  stdout: ''
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = floor(number)\n    \n    if number == 0\n        number\
    \ = 0\n    end\n    \n    return number\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo6nws3w3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpo6nws3w3.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6nws3w3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6nws3w3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo6nws3w3.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6nws3w3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6nws3w3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo6nws3w3.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6nws3w3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6nws3w3.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749561
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    if truncate_number == number\n  \
    \      truncate_number = truncate_number + 1\n    end\n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0mby4krj.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp0mby4krj.jl:19\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mby4krj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mby4krj.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0mby4krj.jl:20\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mby4krj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mby4krj.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0mby4krj.jl:21\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 124.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mby4krj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mby4krj.jl:18\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749562
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(4.5)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(4.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(4.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(4.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(4.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(7.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(7.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(7.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(7.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(7.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcq0wi2ug.jl:13\nin expression starting at\
    \ /tmp/tmpcq0wi2ug.jl:13\n"
  stdout: ''
  timestamp: 1659749561
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = round(number)\n    \n    if number < 1.0\n        number\
    \ = 1.0\n    end\n    \n    return number\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-\n\
    using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk7wdvma0.jl:17\nin expression starting at\
    \ /tmp/tmpk7wdvma0.jl:17\n"
  stdout: ''
  timestamp: 1659749561
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = round(number)\n    \n    digits = floor(log10(number))\n\
    \    \n    digits = digits - digits_left(number)\n    \n    number = round(number\
    \ * 10^digits)\n    \n    return number\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpe2u97ek2.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpe2u97ek2.jl:24\n  Test threw exception\n\
    \  Expression: candidate(3.5) == 0.5\n  UndefVarError: digits_left not defined\n\
    \  Stacktrace:\n   [1] truncate_number(number::Float64)\n     @ Main /tmp/tmpe2u97ek2.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe2u97ek2.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe2u97ek2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpe2u97ek2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(1.25) == 0.25\n  UndefVarError: digits_left not defined\n  Stacktrace:\n\
    \   [1] truncate_number(number::Float64)\n     @ Main /tmp/tmpe2u97ek2.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe2u97ek2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe2u97ek2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpe2u97ek2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(123.0) == 0.0\n  UndefVarError: digits_left not defined\n  Stacktrace:\n\
    \   [1] truncate_number(number::Float64)\n     @ Main /tmp/tmpe2u97ek2.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe2u97ek2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe2u97ek2.jl:23\nTest Summary:\
    \ | Error  Total\ntest set      |     3      3\n"
  timestamp: 1659749562
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhxosgpz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpxhxosgpz.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhxosgpz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpxhxosgpz.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    if truncate_number ==\
    \ 0.0\n        truncate_number = 1.0\n    end\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6v0r9dvq.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp6v0r9dvq.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v0r9dvq.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v0r9dvq.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6v0r9dvq.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v0r9dvq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v0r9dvq.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6v0r9dvq.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v0r9dvq.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v0r9dvq.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749562
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = round(number::Float64)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgi7t1j5o.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpgi7t1j5o.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi7t1j5o.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi7t1j5o.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi7t1j5o.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi7t1j5o.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749560
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = floor(number)\n    \n    if truncate_number ==\
    \ number\n        truncate_number = truncate_number - 1\n    end\n    \n    return\
    \ truncate_number\nend\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\
    \t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0)\
    \ == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0kqn09c2.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp0kqn09c2.jl:22\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kqn09c2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kqn09c2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0kqn09c2.jl:23\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kqn09c2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kqn09c2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp0kqn09c2.jl:24\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 122.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kqn09c2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kqn09c2.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 0
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = number % 1\n    return truncate_number\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\
    \t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659749555
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    if truncate_number < number\n\
    \        truncate_number = truncate_number + 1\n    end\n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb538wslb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpb538wslb.jl:20\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 4.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb538wslb.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb538wslb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb538wslb.jl:21\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 2.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb538wslb.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb538wslb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb538wslb.jl:22\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb538wslb.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb538wslb.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749562
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    number = round(number)\n    \n    if number == 0.0 \n        \n\
    \        return 0.0\n    \n    number = floor(number)\n    \n    number = number\
    \ - number\n    \n    number = number / 10\n    \n    return number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnwvwhlbd.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnwvwhlbd.jl:1\n\
    in expression starting at /tmp/tmpnwvwhlbd.jl:1\n"
  stdout: ''
  timestamp: 1659749561
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = round(number)\n    \n    return truncate_number\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.2)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n\
    </\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkuug8u6x.jl:13\nin expression starting at\
    \ /tmp/tmpkuug8u6x.jl:13\n"
  stdout: ''
  timestamp: 1659749561
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhxosgpz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpxhxosgpz.jl:17\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:18\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxhxosgpz.jl:19\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhxosgpz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhxosgpz.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.141592)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.141593)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(3.1415926)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.1415927)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.141592652)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(3.141592653)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.141592654)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.141592655)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.1415926552)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(3.1415926553)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.1415926554)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265542)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265543)\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(3.14159265544)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159265545)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265546)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265547)\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(3.14159265548)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159265548)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265548)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265548)\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(3.14159265548)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159265548)\n</cell>\n<code language=julia-1.5>\ntruncate_number(\n\
    using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc8y9r6_n.jl:10\nin expression starting at\
    \ /tmp/tmpc8y9r6_n.jl:10\n"
  stdout: ''
  timestamp: 1659749561
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\n    return truncate_number\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgouz0jkp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgouz0jkp.jl:16\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:17\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgouz0jkp.jl:18\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgouz0jkp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgouz0jkp.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
    \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpefh5yx9q.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpefh5yx9q.jl:18\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:19\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpefh5yx9q.jl:20\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefh5yx9q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefh5yx9q.jl:17\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557
- exit_code: 1
  program: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
    \    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\n\n    Return the decimal part of\
    \ the number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64\
    \ \n    truncate_number = trunc(number)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = truncate_number;\n\t@test(candidate(3.5) == 0.5)\n\t@test(candidate(1.25)\
    \ == 0.25)\n\t@test(candidate(123.0) == 0.0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp880wz5zr.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp880wz5zr.jl:15\n  Expression: candidate(3.5)\
    \ == 0.5\n   Evaluated: 3.0 == 0.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:16\n  Expression: candidate(1.25) == 0.25\n  \
    \ Evaluated: 1.0 == 0.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp880wz5zr.jl:17\n  Expression: candidate(123.0) == 0.0\n  \
    \ Evaluated: 123.0 == 0.0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp880wz5zr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp880wz5zr.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659749557

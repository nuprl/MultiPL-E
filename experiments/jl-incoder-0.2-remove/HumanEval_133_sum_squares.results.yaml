language: jl
name: HumanEval_133_sum_squares
results:
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a given list of numbers.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuhg0yqob.jl:15\nin expression starting at\
    \ /tmp/tmpuhg0yqob.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the product of numbers in a given list.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplh35xhow.jl:15\nin expression starting at\
    \ /tmp/tmplh35xhow.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum = sum + x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a given list of numbers.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqu71ibde.jl:15\nin expression starting at\
    \ /tmp/tmpqu71ibde.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of numbers in a given list.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpft62394j.jl:15\nin expression starting at\
    \ /tmp/tmpft62394j.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the product of all the numbers in a\
    \ given list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphh4qsuqb.jl:15\nin expression starting at\
    \ /tmp/tmphh4qsuqb.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwojcli66.jl:15\nin expression starting at\
    \ /tmp/tmpwojcli66.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpovnsq299.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpovnsq299.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpovnsq299.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpovnsq299.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpovnsq299.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpovnsq299.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpovnsq299.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum = sum + x^2\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpre614123.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpre614123.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpre614123.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpre614123.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpre614123.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpre614123.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpre614123.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpre614123.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpre614123.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpre614123.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpre614123.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpre614123.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpre614123.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mohvqaw.jl:15\nin expression starting at\
    \ /tmp/tmp1mohvqaw.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of numbers in a given list.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsx1ih53b.jl:15\nin expression starting at\
    \ /tmp/tmpsx1ih53b.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpovnsq299.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpovnsq299.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpovnsq299.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpovnsq299.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpovnsq299.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpovnsq299.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpovnsq299.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of elements in a list that satisfy\
    \ a given condition. For example, a list with positive integers has only positive\
    \ elements. Write a function that takes in a list and a condition as arguments\
    \ and returns the number of elements in the list that satisfy the condition.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo4cjo0_t.jl:15\nin expression starting at\
    \ /tmp/tmpo4cjo0_t.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_squares([1,2,3,4,5])\n</cell>\n<code language=julia-1.4>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.4>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.4>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.4>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.4>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwdejkj9d.jl:15\nin expression starting at\
    \ /tmp/tmpwdejkj9d.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of numbers in a given list.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptf0liusp.jl:15\nin expression starting at\
    \ /tmp/tmptf0liusp.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsewpj05r.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsewpj05r.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsewpj05r.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of numbers in a given list.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphjctlyhb.jl:15\nin expression starting at\
    \ /tmp/tmphjctlyhb.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the maximum of a given list. \nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9u18qdyz.jl:15\nin expression starting at\
    \ /tmp/tmp9u18qdyz.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3u7iz14o.jl:15\nin expression starting at\
    \ /tmp/tmp3u7iz14o.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpffv4jsb_.jl:15\nin expression starting at\
    \ /tmp/tmpffv4jsb_.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=juli\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5dqjykj5.jl:15\nin expression starting at\
    \ /tmp/tmp5dqjykj5.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a vector. \nThe function should\
    \ take one argument, a list of numbers.\nThe function should return the maximum\
    \ value of the list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwby2anfs.jl:15\nin expression starting at\
    \ /tmp/tmpwby2anfs.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, \nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyl8owucw.jl:15\nin expression starting at\
    \ /tmp/tmpyl8owucw.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of elements in a list that satisfy\
    \ a certain condition.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3pmtq7q7.jl:15\nin expression starting at\
    \ /tmp/tmp3pmtq7q7.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of numbers and returns the product of\
    \ all the numbers in the list.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqqxmfcf3.jl:15\nin expression starting at\
    \ /tmp/tmpqqxmfcf3.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsjg5_1lh.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsjg5_1lh.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsjg5_1lh.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsjg5_1lh.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsjg5_1lh.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsjg5_1lh.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsjg5_1lh.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector and returns the product of the elements\
    \ in the vector. \nThe function should work for both real and complex numbers.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq7uaas5f.jl:15\nin expression starting at\
    \ /tmp/tmpq7uaas5f.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the maximum of a vector. \nThe function\
    \ should take in a vector and return the maximum element of the vector.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjkumu81k.jl:15\nin expression starting at\
    \ /tmp/tmpjkumu81k.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppow922u9.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppow922u9.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmppow922u9.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx4asnv6h.jl:15\nin expression starting at\
    \ /tmp/tmpx4asnv6h.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiyfbwxol.jl:15\nin expression starting at\
    \ /tmp/tmpiyfbwxol.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5, 6.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5, 6.6, 7.7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9,\
    \ 10.0, 11.1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.0, 11.1, 12.2])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.0, 11.1, 12.2, 13.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6,\
    \ 7.7, 8.8, 9.9, 10.0, 11.1, 12.2, 13.3, 14.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.0, 11.1, 12.2, 13.3,\
    \ 14.4, 15.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.0, 11.1, 12.2, 13.3, 14.4, 15.5, 16.6])\n</\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9iylf8ef.jl:15\nin expression starting at\
    \ /tmp/tmp9iylf8ef.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of numbers and returns the product of\
    \ the numbers in the list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu3qmk299.jl:15\nin expression starting at\
    \ /tmp/tmpu3qmk299.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsewpj05r.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsewpj05r.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsewpj05r.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([2.3, 4.5, 6.7])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument, x, and return the square root of x.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5oeblbi9.jl:15\nin expression starting at\
    \ /tmp/tmp5oeblbi9.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsewpj05r.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsewpj05r.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsewpj05r.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp67f6mf1d.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp67f6mf1d.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp67f6mf1d.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp67f6mf1d.jl:19\ntest set: Test Failed at /tmp/tmp67f6mf1d.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp67f6mf1d.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp67f6mf1d.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp67f6mf1d.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp67f6mf1d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp67f6mf1d.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp67f6mf1d.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp67f6mf1d.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp67f6mf1d.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiyfbwxol.jl:15\nin expression starting at\
    \ /tmp/tmpiyfbwxol.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of numbers and returns the product of\
    \ all the numbers in the list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5hvx5yvp.jl:15\nin expression starting at\
    \ /tmp/tmp5hvx5yvp.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppow922u9.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppow922u9.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmppow922u9.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum = sum + x^2\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpre614123.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpre614123.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpre614123.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpre614123.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpre614123.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpre614123.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpre614123.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpre614123.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpre614123.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpre614123.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpre614123.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpre614123.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpre614123.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5mejxyl4.jl:15\nin expression starting at\
    \ /tmp/tmp5mejxyl4.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of all the numbers in a given list.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3h9vnotd.jl:15\nin expression starting at\
    \ /tmp/tmp3h9vnotd.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the square root of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphgjwjw53.jl:15\nin expression starting at\
    \ /tmp/tmphgjwjw53.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of all the numbers in a given list.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcfqvy_c5.jl:15\nin expression starting at\
    \ /tmp/tmpcfqvy_c5.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the maximum of a given list of numbers.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7iyh80th.jl:15\nin expression starting at\
    \ /tmp/tmp7iyh80th.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsjg5_1lh.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsjg5_1lh.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsjg5_1lh.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsjg5_1lh.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsjg5_1lh.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsjg5_1lh.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsjg5_1lh.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpffv4jsb_.jl:15\nin expression starting at\
    \ /tmp/tmpffv4jsb_.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the first element of a list. \nFor example:\
    \ \n    \n    first([1,2,3]) should return 1\n    first([1,2,3]) should return\
    \ 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n\
    \    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n    first([1,2,3])\
    \ should return 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should\
    \ return 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should return\
    \ 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n\
    \    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n    first([1,2,3])\
    \ should return 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should\
    \ return 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should return\
    \ 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n\
    \    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n    first([1,2,3])\
    \ should return 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should\
    \ return 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should return\
    \ 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n\
    \    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n    first([1,2,3])\
    \ should return 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should\
    \ return 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should return\
    \ 1\n    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n\
    \    first([1,2,3]) should return 1\n    first([1,2,3]) should return 1\n    first([1,2,3])\
    \ should return 1\n    first([1,2,3]) should return 1\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi9x8my7i.jl:15\nin expression starting at\
    \ /tmp/tmpi9x8my7i.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsewpj05r.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsewpj05r.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsewpj05r.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of elements in the given list.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpba03pmqe.jl:15\nin expression starting at\
    \ /tmp/tmpba03pmqe.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsjg5_1lh.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsjg5_1lh.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsjg5_1lh.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsjg5_1lh.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsjg5_1lh.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsjg5_1lh.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsjg5_1lh.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyndsoreu.jl:15\nin expression starting at\
    \ /tmp/tmpyndsoreu.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw97yvp02.jl:15\nin expression starting at\
    \ /tmp/tmpw97yvp02.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the sum of the squares of the numbers in the given list.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpddf3yw31.jl:15\nin expression starting at\
    \ /tmp/tmpddf3yw31.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiyfbwxol.jl:15\nin expression starting at\
    \ /tmp/tmpiyfbwxol.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.5,2.5,3.5])\n</cell>\n<code language=julia-1.5>\n\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphg5e1vy3.jl:15\nin expression starting at\
    \ /tmp/tmphg5e1vy3.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([2.3, 3.4, 4.5])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of all the numbers in a given list.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1b96j0m6.jl:15\nin expression starting at\
    \ /tmp/tmp1b96j0m6.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe7_iq5c0.jl:15\nin expression starting at\
    \ /tmp/tmpe7_iq5c0.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument, x, and return the square root of x.\nExamples:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps29jmt7k.jl:15\nin expression starting at\
    \ /tmp/tmps29jmt7k.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum = sum + x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument, x, and return the square root of x.\nExamples:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmiczur0m.jl:15\nin expression starting at\
    \ /tmp/tmpmiczur0m.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpffv4jsb_.jl:15\nin expression starting at\
    \ /tmp/tmpffv4jsb_.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the maximum of a given list of numbers.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpluzzpeyl.jl:15\nin expression starting at\
    \ /tmp/tmpluzzpeyl.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoq7z1ky9.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpoq7z1ky9.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpoq7z1ky9.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpoq7z1ky9.jl:19\ntest set: Test Failed at /tmp/tmpoq7z1ky9.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoq7z1ky9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoq7z1ky9.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpoq7z1ky9.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoq7z1ky9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoq7z1ky9.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpoq7z1ky9.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpoq7z1ky9.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpoq7z1ky9.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015397
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpovnsq299.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpovnsq299.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpovnsq299.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpovnsq299.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpovnsq299.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpovnsq299.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpovnsq299.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppow922u9.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppow922u9.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmppow922u9.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5,6,7,8,9])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the product of all the numbers in a\
    \ given vector.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp69ehx6un.jl:15\nin expression starting at\
    \ /tmp/tmp69ehx6un.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the squares of the first\
    \ N integers in the given list.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprbb98q6u.jl:15\nin expression starting at\
    \ /tmp/tmprbb98q6u.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes in a vector of numbers and returns the mean of\
    \ the numbers in the vector.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr1pql_zw.jl:15\nin expression starting at\
    \ /tmp/tmpr1pql_zw.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=juli\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5dqjykj5.jl:15\nin expression starting at\
    \ /tmp/tmp5dqjykj5.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the product of all the numbers in a\
    \ given vector.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp29mz7jfs.jl:15\nin expression starting at\
    \ /tmp/tmp29mz7jfs.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5n48695x.jl:15\nin expression starting at\
    \ /tmp/tmp5n48695x.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiyfbwxol.jl:15\nin expression starting at\
    \ /tmp/tmpiyfbwxol.jl:15\n"
  stdout: ''
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpffv4jsb_.jl:15\nin expression starting at\
    \ /tmp/tmpffv4jsb_.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of numbers and returns the product\
    \ of the numbers in the list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp565soln4.jl:15\nin expression starting at\
    \ /tmp/tmp565soln4.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the squares of the numbers in the\
    \ given list.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfk8zfhqx.jl:15\nin expression starting at\
    \ /tmp/tmpfk8zfhqx.jl:15\n"
  stdout: ''
  timestamp: 1660015397
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mohvqaw.jl:15\nin expression starting at\
    \ /tmp/tmp1mohvqaw.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmputzwm5qv.jl:15\nin expression starting at\
    \ /tmp/tmputzwm5qv.jl:15\n"
  stdout: ''
  timestamp: 1660015397
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of numbers and returns the sum of the squares of the numbers in the list.\
    \ \nExamples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4vij4cs2.jl:15\nin expression starting at\
    \ /tmp/tmp4vij4cs2.jl:15\n"
  stdout: ''
  timestamp: 1660015397
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppow922u9.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppow922u9.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmppow922u9.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkrf39hhj.jl:15\nin expression starting at\
    \ /tmp/tmpkrf39hhj.jl:15\n"
  stdout: ''
  timestamp: 1660015397
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector and returns a new vector where each\
    \ element is the sum of the squares of the original vector's elements.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxcnj6x_1.jl:15\nin expression starting at\
    \ /tmp/tmpxcnj6x_1.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in the\
    \ given list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0qpw5owm.jl:15\nin expression starting at\
    \ /tmp/tmp0qpw5owm.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3,4.4,5.5])\n</cell>\n\
    <code language=juli\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcni79paq.jl:15\nin expression starting at\
    \ /tmp/tmpcni79paq.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of numbers and returns the product of\
    \ all the numbers in the list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp5al8rvo.jl:15\nin expression starting at\
    \ /tmp/tmpp5al8rvo.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of all the numbers in a given vector.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxpv1ex0l.jl:15\nin expression starting at\
    \ /tmp/tmpxpv1ex0l.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppow922u9.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppow922u9.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmppow922u9.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([2.5,\
    \ 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([2.5,\
    \ 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([2.5,\
    \ 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([2.5,\
    \ 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([2.5, 3.5, 4.5])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqsh6qelb.jl:15\nin expression starting at\
    \ /tmp/tmpqsh6qelb.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of all the numbers in a given list.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7y5gd5l2.jl:15\nin expression starting at\
    \ /tmp/tmp7y5gd5l2.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the product of numbers in a given list.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqvqavhee.jl:15\nin expression starting at\
    \ /tmp/tmpqvqavhee.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector and returns the product of the elements\
    \ in the vector. \nThe function should work for both real and complex numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphy__ed_e.jl:15\nin expression starting at\
    \ /tmp/tmphy__ed_e.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([2.3, 3.4, 4.5])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the square root of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx_jfv_ng.jl:15\nin expression starting at\
    \ /tmp/tmpx_jfv_ng.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the maximum of a vector. \nThe function\
    \ should take in a vector and return the maximum element of the vector.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpim3g4fwv.jl:15\nin expression starting at\
    \ /tmp/tmpim3g4fwv.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppow922u9.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppow922u9.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmppow922u9.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.1, 2.3, 3.4, 4.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of numbers and returns the product\
    \ of all the numbers in the list.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbzb6xtla.jl:15\nin expression starting at\
    \ /tmp/tmpbzb6xtla.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsewpj05r.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsewpj05r.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsewpj05r.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in the\
    \ given list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprr9_p_xu.jl:15\nin expression starting at\
    \ /tmp/tmprr9_p_xu.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector and returns a vector where each\
    \ element is the product of the corresponding elements in the original vector.\
    \ For example, given [1,2,3], return [1,2,3].\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmuldzwu6.jl:15\nin expression starting at\
    \ /tmp/tmpmuldzwu6.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpovnsq299.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpovnsq299.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpovnsq299.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpovnsq299.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpovnsq299.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpovnsq299.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpovnsq299.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpovnsq299.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpovnsq299.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015394
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsewpj05r.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsewpj05r.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsewpj05r.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsewpj05r.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsewpj05r.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsewpj05r.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsewpj05r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsewpj05r.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsewpj05r.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsewpj05r.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a list of numbers.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmgew4t0r.jl:15\nin expression starting at\
    \ /tmp/tmpmgew4t0r.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of all the numbers in a given list.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgswl4ang.jl:15\nin expression starting at\
    \ /tmp/tmpgswl4ang.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsjg5_1lh.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsjg5_1lh.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsjg5_1lh.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsjg5_1lh.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsjg5_1lh.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsjg5_1lh.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsjg5_1lh.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsjg5_1lh.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsjg5_1lh.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the maximum of a given list of numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0hx0kfyc.jl:15\nin expression starting at\
    \ /tmp/tmp0hx0kfyc.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5, 6.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])\n</cell>\n<text>\nExercise\nWrite a\
    \ function that returns the sum of the squares of the first N integers in the\
    \ given list.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5leo00m2.jl:15\nin expression starting at\
    \ /tmp/tmp5leo00m2.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnkm9chx_.jl:15\nin expression starting at\
    \ /tmp/tmpnkm9chx_.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument, x, and return a Float64 number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiqmvecs7.jl:15\nin expression starting at\
    \ /tmp/tmpiqmvecs7.jl:15\n"
  stdout: ''
  timestamp: 1660015398
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=juli\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc2g5hnp4.jl:15\nin expression starting at\
    \ /tmp/tmpc2g5hnp4.jl:15\n"
  stdout: ''
  timestamp: 1660015399
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector and returns the dot product of the vector.\
    \ \nThe dot product of $\\mathbf{a}$ and $\\mathbf{b}$ is defined as:\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi5oz_tka.jl:15\nin expression starting at\
    \ /tmp/tmpi5oz_tka.jl:15\n"
  stdout: ''
  timestamp: 1660015399
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector and returns the sum of the squares of\
    \ the elements in the vector.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpntzpall7.jl:15\nin expression starting at\
    \ /tmp/tmpntzpall7.jl:15\n"
  stdout: ''
  timestamp: 1660015399
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squ\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppkri0wk8.jl:15\nin expression starting at\
    \ /tmp/tmppkri0wk8.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of numbers in a given list.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4gqt0chl.jl:15\nin expression starting at\
    \ /tmp/tmp4gqt0chl.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in the\
    \ given list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxjrrmwgb.jl:15\nin expression starting at\
    \ /tmp/tmpxjrrmwgb.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppow922u9.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppow922u9.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmppow922u9.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppow922u9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmppow922u9.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmppow922u9.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmppow922u9.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of numbers and returns the sum of the\
    \ squared numbers in the vector.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7repkpvv.jl:15\nin expression starting at\
    \ /tmp/tmp7repkpvv.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of numbers and returns the sum\
    \ of all even numbers in the list.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmzvj8xtd.jl:15\nin expression starting at\
    \ /tmp/tmpmzvj8xtd.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument, x, and return the square root of x.\nExamples:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjc7teb3n.jl:15\nin expression starting at\
    \ /tmp/tmpjc7teb3n.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.4>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument, x, and return the square root of x.\nExamples:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq12fx2w6.jl:15\nin expression starting at\
    \ /tmp/tmpq12fx2w6.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,\
    \ 2.2, 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2,\
    \ 3.3, 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3,\
    \ 4.4])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n\
    </cell>\n<code language=julia-1.5>\nsum_squ\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppkri0wk8.jl:15\nin expression starting at\
    \ /tmp/tmppkri0wk8.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpom41h6kt.jl:15\nin expression starting at\
    \ /tmp/tmpom41h6kt.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mohvqaw.jl:15\nin expression starting at\
    \ /tmp/tmp1mohvqaw.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a vector\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvi_p2hun.jl:15\nin expression starting at\
    \ /tmp/tmpvi_p2hun.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum = sum + x^2\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpre614123.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpre614123.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpre614123.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpre614123.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpre614123.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpre614123.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpre614123.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpre614123.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpre614123.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpre614123.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpre614123.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpre614123.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpre614123.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the squares of the first\
    \ $n$ positive integers. \nExamples:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0bsqy2xk.jl:15\nin expression starting at\
    \ /tmp/tmp0bsqy2xk.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum = sum + x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the squares of the numbers\
    \ in a given vector.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6tpk7qrj.jl:15\nin expression starting at\
    \ /tmp/tmp6tpk7qrj.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=juli\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5dqjykj5.jl:15\nin expression starting at\
    \ /tmp/tmp5dqjykj5.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squ\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp04kv9f6u.jl:15\nin expression starting at\
    \ /tmp/tmp04kv9f6u.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the product of all the numbers in a\
    \ given list.\nExamples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf2_a_9lk.jl:15\nin expression starting at\
    \ /tmp/tmpf2_a_9lk.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([2.3, 3.4, 4.5])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of numbers in a given list.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw7l05gad.jl:15\nin expression starting at\
    \ /tmp/tmpw7l05gad.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mohvqaw.jl:15\nin expression starting at\
    \ /tmp/tmp1mohvqaw.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the product of all the numbers in a\
    \ given list.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu194vqnj.jl:15\nin expression starting at\
    \ /tmp/tmpu194vqnj.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of elements in a list that satisfy\
    \ a given condition. For example, a list with positive integers has positive integers,\
    \ negative integers has negative integers, and zeros has zeros.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2l_6w5cc.jl:15\nin expression starting at\
    \ /tmp/tmp2l_6w5cc.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector and returns the dot product of the vector.\
    \ \nThe dot product of two vectors $\\mathbf{a}\\in\\mathbb{R}^{n}$ and $\\mathbf{b}\\\
    in\\mathbb{R}^{m}$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnipvwx5o.jl:15\nin expression starting at\
    \ /tmp/tmpnipvwx5o.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns the product of all the numbers in a\
    \ given vector.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb4d7uixz.jl:15\nin expression starting at\
    \ /tmp/tmpb4d7uixz.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum = sum + x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=juli\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe2maxmks.jl:15\nin expression starting at\
    \ /tmp/tmpe2maxmks.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of numbers in a given list.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdpfji9ks.jl:15\nin expression starting at\
    \ /tmp/tmpdpfji9ks.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of all the numbers in a given list.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplr5l4bb7.jl:15\nin expression starting at\
    \ /tmp/tmplr5l4bb7.jl:15\n"
  stdout: ''
  timestamp: 1660015401
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector and returns the product of the elements in the vector. \nThe\
    \ function should work for both real and complex numbers.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkeo4u2p1.jl:15\nin expression starting at\
    \ /tmp/tmpkeo4u2p1.jl:15\n"
  stdout: ''
  timestamp: 1660015401
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of numbers and returns the sum of the\
    \ squares of the numbers.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo2853jzl.jl:15\nin expression starting at\
    \ /tmp/tmpo2853jzl.jl:15\n"
  stdout: ''
  timestamp: 1660015401
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw97yvp02.jl:15\nin expression starting at\
    \ /tmp/tmpw97yvp02.jl:15\n"
  stdout: ''
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the maximum of a given list of numbers.\
    \ \nThe function should take a list of numbers as an argument and return the maximum\
    \ value of the list.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt9bj49d7.jl:15\nin expression starting at\
    \ /tmp/tmpt9bj49d7.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of numbers and returns the sum of the\
    \ squares of the numbers in the list.\nExamples:\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp05mh2gyi.jl:15\nin expression starting at\
    \ /tmp/tmp05mh2gyi.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=juli\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5dqjykj5.jl:15\nin expression starting at\
    \ /tmp/tmp5dqjykj5.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a number as input and returns the factorial of\
    \ that number.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2l747z0r.jl:15\nin expression starting at\
    \ /tmp/tmp2l747z0r.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of numbers in a given list.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4gqt0chl.jl:15\nin expression starting at\
    \ /tmp/tmp4gqt0chl.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a given list of numbers.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuhg0yqob.jl:15\nin expression starting at\
    \ /tmp/tmpuhg0yqob.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3,4,5])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of all the numbers in a given list.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt1zznp0r.jl:15\nin expression starting at\
    \ /tmp/tmpt1zznp0r.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([2.3, 4.5, 6.7])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of numbers in a given list.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpffj0gucm.jl:15\nin expression starting at\
    \ /tmp/tmpffj0gucm.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of two numbers. \nThe function\
    \ should take two numbers as inputs and return one number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfjws54qe.jl:15\nin expression starting at\
    \ /tmp/tmpfjws54qe.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum = sum + x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector and returns a new vector where\
    \ each element is the sum of the squares of the original vector's elements\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4shuaqwq.jl:15\nin expression starting at\
    \ /tmp/tmp4shuaqwq.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the maximum of a given list of numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx4qi5yhq.jl:15\nin expression starting at\
    \ /tmp/tmpx4qi5yhq.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of elements in a list that satisfy\
    \ a certain condition. For example, a list with positive integers has positive\
    \ integers. A list with integers less than 10 has less than 10 integers. A list\
    \ with integers greater than 10 has greater than 10 integers.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptzcq8_z_.jl:15\nin expression starting at\
    \ /tmp/tmptzcq8_z_.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1, 2.2, 3.3, 4.4])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the product of all the numbers in a given list.\nExamples:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6wu2w0nn.jl:15\nin expression starting at\
    \ /tmp/tmp6wu2w0nn.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of numbers in a given list.\nExamples:\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphjctlyhb.jl:15\nin expression starting at\
    \ /tmp/tmphjctlyhb.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of all the numbers in a given list.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplr5l4bb7.jl:15\nin expression starting at\
    \ /tmp/tmplr5l4bb7.jl:15\n"
  stdout: ''
  timestamp: 1660015401
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprkptjlr4.jl:15\nin expression starting at\
    \ /tmp/tmprkptjlr4.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a list.\nExamples:\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxaaj_9xc.jl:15\nin expression starting at\
    \ /tmp/tmpxaaj_9xc.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.1,2.2,3.3])\n</cell>\n<code language=julia-1.5>\n\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptu8nasj2.jl:15\nin expression starting at\
    \ /tmp/tmptu8nasj2.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpom41h6kt.jl:15\nin expression starting at\
    \ /tmp/tmpom41h6kt.jl:15\n"
  stdout: ''
  timestamp: 1660015400
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the maximum of a given list of numbers.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_n0keewq.jl:15\nin expression starting at\
    \ /tmp/tmp_n0keewq.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of all the numbers in a given list.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpibbun647.jl:15\nin expression starting at\
    \ /tmp/tmpibbun647.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8he33q5a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8he33q5a.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp8he33q5a.jl:13\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8he33q5a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp8he33q5a.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8he33q5a.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8he33q5a.jl:19\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015395
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of all the numbers in a given list.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp02gl1v7s.jl:15\nin expression starting at\
    \ /tmp/tmp02gl1v7s.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.1, 2.2, 3.3, 4.4, 5.5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptcd4icte.jl:15\nin expression starting at\
    \ /tmp/tmptcd4icte.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of numbers in a given list.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxxxsxzdj.jl:15\nin expression starting at\
    \ /tmp/tmpxxxsxzdj.jl:15\n"
  stdout: ''
  timestamp: 1660015402
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2,\
    \ 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.2, 3.4, 5.6])\n</cell>\n<code language=juli\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5dqjykj5.jl:15\nin expression starting at\
    \ /tmp/tmp5dqjykj5.jl:15\n"
  stdout: ''
  timestamp: 1660015393
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl239ahb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpwl239ahb.jl:23\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test Failed at /tmp/tmpwl239ahb.jl:24\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:27\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpwl239ahb.jl:28\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl239ahb.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwl239ahb.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015396
- exit_code: 1
  program: "\"\"\"You are given a list of numbers.\n    You need to return the sum\
    \ of squared numbers in the given list,\n    round each element in the list to\
    \ the upper int(Ceiling) first.\n    Examples:\n                        \n\n \
    \   \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.2, 3.4, 5.6])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of all the numbers in a given list.\n\
    Examples:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7jinakx5.jl:15\nin expression starting at\
    \ /tmp/tmp7jinakx5.jl:15\n"
  stdout: ''
  timestamp: 1660015402

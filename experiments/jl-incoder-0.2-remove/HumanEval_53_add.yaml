name: HumanEval_53_add
language: jl
prompt: "\"\"\"Add two numbers x and y\n            \"\"\"\nfunction add(x::Int64,\
  \ y::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate(0, 1)\
  \ == 1)\n\t@test(candidate(1, 0) == 1)\n\t@test(candidate(2, 3) == 5)\n\t@test(candidate(5,\
  \ 7) == 12)\n\t@test(candidate(7, 5) == 12)\nend\n"
completions: ["    x + y\nend", "    if x < 0\n        error(\"x must be positive\"\
    )\n    else if y < 0\n        error(\"y must be positive\")\n    else if x ==\
    \ 0 && y == 0\n        error(\"x and y cannot be 0\")\n    else if x == 0\n  \
    \      return x\n    else if y == 0\n        return y\n    else\n        return\
    \ x + y\nend", "    x + y\nend", "    x + y\nend", "    x + y\nend", "    x +\
    \ y\nend", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(2, 3)\n</cell>\n<text>\nJulia has many more built-in functions.\
    \ You can find them in the Julia documentation. Here are some examples:", "  \
    \  x + y\nend", "    x + y\nend", "    if x < 0 || y < 0 \n        error(\"add:\
    \ x or y is negative\")\n    else if x == 0 || y == 0 \n        error(\"add: x\
    \ or y is zero\")\n    else \n        return x + y\nend", "    x + y\nend\n\"\"\
    \"\n    ", "    x + y\nend\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1.0,2.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.0>\n@code_native ", "    x + y\nend", "    x +\
    \ y\nend", "    x + y\nend", "    x + y\nend", "    x + y\nend", "    x + y\n\
    end\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n</cell>\n<text>\n\
    The @code_warntype macro will warn you if your function does not return a value\
    \ at the end of a function.", "    x + y\nend", "    x + y\nend\n</cell>\n<code\
    \ language=julia-1.0>\n@code_native add(3, 4)\n</cell>\n<text>\nJulia has many\
    \ built-in functions. Some are very useful, others are not. Here are some of them:",
  "    if x == 0 || y == 0 \n        then 0\n        else x + y\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,0)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(0,0)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,0)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(0,1)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(0,0)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,1)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,1)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.0", "    x + y\nend", "    x + y\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(3, 4)\n</cell>\n<text>\nJulia has\
    \ many more built-in functions. Check out the documentation for more!", "    x\
    \ + y\nend", "    if x < 0 || y < 0\n        error(\"Invalid input\")\n    end\n\
    \    return x + y\nend\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(0,1)\n</cell>\n<code language=julia-1.0>\n@code_native add(0,0)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,-1)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,1)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,3)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,4)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,5)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,6)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,7)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,8)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,9)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,10)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,11)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,12)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,13)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,14)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,15)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,16)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,17)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,18)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,19)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,20)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,21)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,22)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,23)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(", "    x + y\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell", "    return x + y\nend", "    x + y\nend", "    x + y\n\
    end", "    if x < 0\n        error(\"x must be positive\")\n    else if y < 0\n\
    \        error(\"y must be positive\")\n    else if x == 0\n        error(\"x\
    \ must be positive\")\n    else if y == 0\n        error(\"y must be positive\"\
    )\n    else\n        return x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_native\
    \ add(2, 3)\n</cell>\n<code language=julia-1.5>\n@code_native add(2, -3)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(2, 0)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(-2, 3)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2,\
    \ -3)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2, 0)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(2, -2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(2, 2)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2,\
    \ -2)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2, 2)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(2, 2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(-2, 2)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2,\
    \ -2)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2, -2)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(-2, -2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(-2, -2)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2,\
    \ -2)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2, -2)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(-2, -2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(-2, -2)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2,\
    \ -2)\n</cell>\n<code language=julia-1.5>\n@code_native add(-2, -2)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(-2, -2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(-2, -2)\n</cell>\n<code language=julia-1.5>\n@code_", "    x\
    \ + y\nend", "    if x == 0 || y == 0 \n        then 0\n        else x + y\n \
    \   end\nend\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n\
    <text>\nJulia has two types of functions: those that take a single argument and\
    \ those that take multiple arguments. In the first case, Julia will automatically\
    \ unpack the arguments. In the second case, Julia will require you to explicitly\
    \ unpack the arguments.", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell", "  \
    \  x + y\nend\n\"\"\"\n    \n\"\"\"\n    \n\"\"\"", "    x + y\nend\n</cell>\n\
    <code language=julia-1.3>\n@code_native add(4, 5)\n</cell>\n<text>\nJulia has\
    \ many built-in functions to do common tasks. Here are some examples:", "    x\
    \ + y\nend\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n\
    <text>\nThe @code_warntype macro will warn you if you try to add two numbers that\
    \ are not of the same type. In the example above we get an error because Julia\
    \ cannot add two Int64 numbers. We can fix this by explicitly specifying the type\
    \ of the numbers:", "    if x < 0 \n        then return x + y\n        else return\
    \ x - y\n    end\nend\n\"\"\"\n\"\"\"\n\"\"\"", "    if x < 0 || y < 0\n     \
    \   error(\"add: negative numbers\")\n    elseif x == 0 || y == 0\n        error(\"\
    add: zero numbers\")\n    else\n        return x + y\nend", "    if x < 0 \n \
    \       then return x + y\n        else return x - y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(10, -2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(10, 2)\n</cell>\n<code language=julia-1.5>\n@code_native add(10,\
    \ 0)\n</cell>\n<code language=julia-1.5>\n@code_native add(10, -10)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(10, 10)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(10, -10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10,\
    \ 10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10, -10)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(10, 10)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(10, -10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10,\
    \ 10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10, -10)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(10, 10)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(10, -10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10,\
    \ 10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10, -10)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(10, 10)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(10, -10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10,\
    \ 10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10, -10)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(10, 10)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(10, -10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10,\
    \ 10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10, -10)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(10, 10)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(10, -10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10,\
    \ 10)\n</cell>\n<code language=julia-1.5>\n@code_native add(10, -10)\n</cell>",
  "    x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3, 4)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warn", "    x + y\nend", "    x + y\n\
    end\n</cell>\n<code language=julia-1.4>\n@code_warntype add(2, 3)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ add(2.5, 3.5)\n</cell>\n<code language=julia-1.4>\n@code_warntype add(2.5, 3.5)\n\
    </cell>\n<code language=julia-1.", "    x + y\nend", "    x + y\nend\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(2, 3)\n</cell>\n<text>\nJulia has\
    \ many more built-in functions than Python, and many of them are faster than Python\
    \ equivalents. For example, Julia has built-in functions for computing logarithms,\
    \ trigonometry, exponential and so on. These functions are called \"built-in\"\
    \ because they are part of the core language and are optimized for the specific\
    \ machine architecture.", "    x + y\nend\n\"\"\"\n    ", "    x + y\nend", " \
    \   x + y\nend", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell", "  \
    \  x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype add(1.0,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell", "    x + y\nend\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3, 4)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warn", "    if x < 0 || y <0\n        error(\"Invalid input\")\n    elseif\
    \ x == 0 && y == 0\n        error(\"Invalid input\")\n    else\n        return\
    \ x + y\nend", "    return x + y\nend", "    x + y\nend", "    x + y\nend", " \
    \   x + y\nend", "    return x + y\nend", "    x + y\nend", "    if x < y \n \
    \       then x + y \n        else y + x \n    else x + y\nend\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n", "    x + y\nend", "    x + y\nend", "    x + y\nend", "    x + y\nend", " \
    \   x + y\nend", "    x + y\nend", "    x + y\nend", "    x + y\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<text>\nThe @code_warntype\
    \ macro will warn you if you try to add two numbers of different types. This is\
    \ useful if you accidentally mix Int64 and Float64. Here is an example:", "  \
    \  x + y\nend", "    x + y\nend", "    return x + y\nend", "    if x < 0 || y\
    \ < 0 \n        error(\"Invalid input\")\n    else if x == 0 && y == 0 \n    \
    \    error(\"Invalid input\")\n    else \n        return x + y\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Subtract two numbers x and y\n            \"\"\
    \"", "    if x < 0 || y < 0 \n        error(\"Invalid input\")\n    else \n  \
    \      return x + y\nend", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell", "  \
    \  x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2.0)\n</cell>\n\
    <code language=julia-1.3>\n@code_warntype add(1.0,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.5)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.5)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.5)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.5)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.5)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.5)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.5)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.5)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.5)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,", "    if x < 0 ||\
    \ y < 0 \n        error(\"Invalid input\") \n    else \n        return x + y \n\
    end\n\"\"\"\n    \n\"\"\"\n    \n\"\"\"", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_native ", "    x + y\nend", "    x +\
    \ y\nend\n\"\"\"\n    ```\n    \"\"\"\n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    x + y\nend\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<text>\nJulia\
    \ has many built-in functions. Here are some examples:", "    x + y\nend", " \
    \   return x + y\nend", "    x + y\nend", "    x + y\nend", "    x + y\nend",
  "    x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n\
    <text>\nJulia has many more built-in functions. You can find them in the Julia\
    \ documentation here.", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell", "  \
    \  x + y\nend\n</cell>\n<code language=julia-1.4>\n@code_warntype add(1,2)\n</cell>\n\
    <text>\nThe @code_warntype macro will warn you if you try to add two numbers of\
    \ different types. This is useful if you accidentally mix Int64 and Float64 or\
    \ if you accidentally mix Int64 and Float32. Julia will warn you about this mistake\
    \ for you:", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native ", "    if x < 0 || y < 0\n \
    \       error(\"Negative numbers not allowed\")\n    elseif x == 0 || y == 0\n\
    \        error(\"Zero numbers not allowed\")\n    else\n        return x + y\n\
    \    end\nend\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\
    \"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\
    \n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\
    \"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\"\"\n\"\
    \"\"\n\"\"\"\n\"\"\"\n", "    x + y\nend", "    x + y\nend", "    x + y\nend\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<text>\nJulia\
    \ has many built in functions to help us work with numbers. Here are some examples:",
  "    x + y\nend\n\"\"\"\n    \n\"\"\"\n    \n\"\"\"", "    x + y\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(x,y)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,y)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(y,1)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(y,y)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(y,y)\n</cell>", "    x\
    \ + y\nend\n\"\"\"\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n\
    \    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n\
    \    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n\
    \    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n\
    \    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"", "    x + y\nend", "    return x + y\nend", "    x + y\n\
    end\n</cell>\n<code language=julia-1.5>\n@code_native add(1,2)\n</cell>\n<text>\n\
    Julia has many more built-in functions. You can find them in the Julia documentation\
    \ here.", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<text>\nThe @code_warntype macro will warn you\
    \ if you try to add two numbers that are not of the same type. For example, if\
    \ you try to add two Int64 numbers, you will get a warning:", "    x + y\nend",
  "    x + y\nend\n\"\"\"\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n\
    \    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n\
    \    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n\
    \    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n\
    \    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```", "    x + y\nend", "    x + y\nend", "    x + y\nend", "    x + y\n\
    end\n\"\"\"\n    \n\"\"\"\n    \n\"\"\"", "    x + y\nend\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<text>\nJulia has two types of functions: those\
    \ that take a single argument and those that take multiple arguments. In the first\
    \ case, Julia will automatically unpack the arguments into the function arguments.\
    \ In the second case, Julia will require you to explicitly unpack the arguments\
    \ yourself.", "    if x == 0 || y == 0 \n        then 0\n        else x + y\n\
    \    end\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell", "    if x < y \n        then x + y \n      \
    \  else y + x \n    else x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_native\
    \ add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,3)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(1,4)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,5)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,6)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,7)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,8)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,9)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,10)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,11)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,12)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,13)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,14)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,15)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,16)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,17)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,18)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,19)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,20)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,21)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,22)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,23)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,24)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,25)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,26)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,27)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,28)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,29)\n</cell>\n<code language=julia-1.5>\n", "    x + y\nend\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<text>\n\
    The @code_warntype macro will warn you if you try to add two numbers that are\
    \ not of the same type. Here we see that Julia has inferred that x and y are Int64,\
    \ so we get a warning from @code_warntype.", "    x + y\nend\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<text>\nThe @code_warntype macro will warn you\
    \ if you try to add two numbers that do not have the same type. For example, if\
    \ you try to add two Int64 numbers, you will get a warning:", "    x + y\nend",
  "    x + y\nend\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n\
    <code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n\
    </cell", "    x + y\nend", "    if x < 0 || y <= 0\n        error(\"Invalid input\"\
    )\n    end\n    return x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,2)\n</cell>\n<text>\nThe @code_warntype macro will warn you\
    \ if you try to add two numbers of different types. This is useful if you accidentally\
    \ mix integers with floats or vice versa. Here is an example where we mix integers\
    \ with floats:", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell", "  \
    \  x + y\nend\n\"\"\"\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n\
    \    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n\
    \    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n\
    \    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n\
    \    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 2)\n    3\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n\
    \    ```\n    \"\"\"", "    x + y\nend", "    x + y\nend", "    x + y\nend\n\"\
    \"\"\n    \n\"\"\"\n    \n\"\"\"", "    x + y\nend\n\"\"\"\n    \n\"\"\"\n   \
    \ \n\"\"\"", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1,2)\n</cell>\n<text>\nThe @code_warntype macro will warn you if you're\
    \ trying to use an incompatible type. For example, if you try to add two Int64\
    \ numbers, Julia will warn you that you're doing something wrong.", "    x + y\n\
    end\n</cell>\n<code language=julia-1.0>\n@code_warntype add(2, 3)\n</cell>\n<text>\n\
    The @code_warntype macro will warn you if you try to add two numbers of different\
    \ types. This is useful when you are trying to debug your code.", "    x + y\n\
    end\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<text>\n\
    Julia supports multiple dispatch which means it can choose the most appropriate\
    \ function based on the types of the arguments. In this case it chooses the add\
    \ function because both arguments are of type Int64.", "    x + y\nend", "   \
    \ x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_native\
    \ add(3, 4)\n</cell>\n<code language=julia-1.5>\n@code_native add(3, 4.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(3.0, 4)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0,\
    \ 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0,\
    \ 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0,\
    \ 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0,\
    \ 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0,\
    \ 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0,\
    \ 4.0)\n</cell>\n<code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(3.0, 4.0)\n</cell>\n", "    x + y\nend\n\"\"\"\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 2)\n    3\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 3)\n    4\n    ```\n    \"\"\"\n    ```julia\n \
    \   julia> add(1, 4)\n    5\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1,\
    \ 5)\n    6\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 6)\n    7\n\
    \    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 7)\n    8\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 8)\n    9\n    ```\n    \"\"\"\n   \
    \ ```julia\n    julia> add(1, 9)\n    10\n    ```\n    \"\"\"\n    ```julia\n\
    \    julia> add(1, 10)\n    11\n    ```\n    \"\"\"\n    ```julia\n    julia>\
    \ add(1, 11)\n    12\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 12)\n\
    \    13\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 13)\n    14\n  \
    \  ```\n    \"\"\"\n    ```julia\n    julia> add(1, 14)\n    15\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 15)\n    16\n    ```\n    \"\"\"\n \
    \   ```julia\n    julia> add(1, 16)\n    17\n    ```\n    \"\"\"\n    ```julia\n\
    \    julia> add(1, 17)\n    18\n    ```\n    \"\"\"\n    ```julia\n    julia>\
    \ add(1, 18)\n    19\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 19)\n\
    \    20\n    ```\n    \"\"\"\n    ```julia\n    julia> add(1, 20)\n    21\n  \
    \  ```\n    \"\"\"\n    ```julia\n    julia> add(1, 21)\n    22\n    ```\n   \
    \ \"\"\"\n    ```julia\n    julia> add(1, 22)\n    23\n    ```\n    \"\"\"\n \
    \   ```julia\n    julia> add(1, 23)\n    24\n    ```\n    \"\"\"\n    ```julia\n\
    \    julia> add(1, 24)\n    25\n    ```\n    \"\"\"\n    ```julia\n    julia>\
    \ add(1, 25)\n    26\n    ", "    if x < 0 || y < 0 \n        error(\"Invalid\
    \ input\")\n    elseif x == 0 || y == 0 \n        0\n    else\n        x + y\n\
    \    end\nend\n\"\"\"", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3, 4)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0,\
    \ 4)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(3.0, 4.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype ", "    x\
    \ + y\nend", "    x + y\nend", "    x + y\nend", "    if x < 0 || y < 0 \n   \
    \     error(\"Invalid input\")\n    elseif x == 0 && y == 0 \n        error(\"\
    Invalid input\")\n    elseif x == 0 \n        return y\n    elseif y == 0 \n \
    \       return x\n    else\n        return x + y\nend", "    x + y\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.5)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.5)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.5)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.5)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.5)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.5)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,",
  "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2.0)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell", "    x + y\nend\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<text>\n\
    The @code_warntype macro will warn you if you try to add two numbers of different\
    \ types. This is useful if you accidentally mix up Int64 and Float64. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two Int64 numbers and a Float64 number. Julia will\
    \ warn you if you try to add two ", "    x + y\nend", "    x + y\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<text>\nThe @code_warntype macro will warn you about any type mismatches,\
    \ including those that would otherwise be caught by the compiler. For example,\
    \ if you try to add two Int64 numbers, you will get a type mismatch error.", " \
    \   return x + y\nend", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<text>\nThe @code_warntype macro will warn you\
    \ about type mismatches. This is useful if you know that your function will return\
    \ a value of type Int64, but you know that it will only ever be called with values\
    \ of type Int64 or Float64. For example:", "    x + y\nend\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(2, 3)\n</cell>\n<code language=julia-1.0>\n@code_native add(2,\
    \ 3.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(2.0, 3)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(2.0, 3.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(2, 3.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(2.0,\
    \ 3)\n</cell>\n<code language=julia-1.0>\n@code_native add(2.0, 3.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(2, 3.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(2.0, 3)\n</cell>\n<code language=julia-1.0>\n@code_native add(2.0,\
    \ 3.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(2, 3.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(2.0, 3)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(2.0, 3.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(2,\
    \ 3.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(2.0, 3)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(2.0, 3.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(2, 3.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(2.0,\
    \ 3)\n</cell>\n<code language=julia-1.0>\n@code_native add(2.0, 3.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(2, 3.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(2.0, 3)\n</cell>\n<code language=julia-1.0>\n@code_native add(2.0,\
    \ 3.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(2, 3.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(2.0, 3)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(2.0, 3.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(2,\
    \ 3.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(2.0, 3)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(2.0, 3.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_", "    x + y\nend", "    x + y\nend", "    if x < 0 || y < 0 \n       \
    \ error(\"Invalid input\")\n    elseif x == 0 || y == 0 \n        error(\"Invalid\
    \ input\")\n    else\n        return x + y\nend", "    x + y\nend\n</cell>\n<code\
    \ language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_native ", " \
    \   x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(x,y)\n</cell>\n\
    <text>\nThe @code_warntype macro will warn you if you're trying to use an incompatible\
    \ type or if you're trying to use a function that doesn't exist.", "    x + y\n\
    end\n</cell>\n<code language=julia-1.3>\n@code_warntype add(2, 3)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(2., 3)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(\"2\", \"3\")\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(\"2\", \"3.\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"\
    2\", \"3.1\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"2\", \"\
    3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"2\", \"3.10\"\
    )\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"2\", \"3.10\")\n</cell>\n\
    <code language=julia-1.3>\n@code_warntype add(\"2\", \"3.10\")\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(\"2\", \"3.10\")\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(\"2\", \"3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(\"2\", \"3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"\
    2\", \"3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"2\",\
    \ \"3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"2\", \"\
    3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"2\", \"3.10\"\
    )\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"2\", \"3.10\")\n</cell>\n\
    <code language=julia-1.3>\n@code_warntype add(\"2\", \"3.10\")\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(\"2\", \"3.10\")\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(\"2\", \"3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(\"2\", \"3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"\
    2\", \"3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"2\",\
    \ \"3.10\")\n</cell>\n<code language=julia-1.3>\n@code_warntype add(\"2\", \"\
    3.10\")\n</cell>\n<code language=julia-1.3>\n@", "    x + y\nend", "    x + y\n\
    end", "    if x < 0 || y <= 0\n        error(\"Invalid input\")\n    else\n  \
    \      return x + y\nend\n\"\"\"\n    \n\"\"\"\n    \n\"\"\"", "    x + y\nend\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ add(1.0,2.0)\n</cell", "    x + y\nend\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(1,2)\n</cell>\n<text>\nThe @code_native macro will generate native\
    \ code for the function add. Let's try it out on a few examples:", "    x + y\n\
    end", "    x + y\nend\n</cell>\n<code language=julia-1.0>\n@code_native add(1,2)\n\
    </cell>\n<text>\nJulia has many more built-in functions. Here are some examples:",
  "    x + y\nend", "    x + y\nend", "    return x + y\nend", "    if x < 0 || y\
    \ <= 0\n        error(\"Invalid input\")\n    else\n        return x + y\nend",
  "    x + y\nend", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(3, 4)\n</cell>\n<text>\nThe @code_warntype macro will warn\
    \ you about any type mismatches. This is particularly useful when you are writing\
    \ a function that will later be used in a larger Julia program.", "    x + y\n\
    end", "    x + y\nend", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(4, 5)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0,\
    \ 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0,\
    \ 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0,\
    \ 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0,\
    \ 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0,\
    \ 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0,\
    \ 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n\
    <code language=julia-1.0>\n@code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n\
    @code_native add(4.0, 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(4.0,\
    \ 5.0)\n</cell>\n<code language=julia-1.0>\n@code_native add(", "    if x < 0\
    \ || y <= 0\n        error(\"Invalid input\")\n    else\n        return x + y\n\
    end\n</cell>\n<code language=julia-1.3>\nadd(1,2)\n</cell>\n<text>\nExercise 2\n\
    Write a function called subtract that takes two numbers and returns the difference\
    \ between them.", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<text>\nThe @code_warntype macro will warn you\
    \ if you try to add two numbers of different types. In this case it warns us that\
    \ we can't add Int64 and Float64.", "    x + y\nend\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<text>\nThe @code_warntype macro will warn you\
    \ if your function does not return a value.", "    if x < 0 || y <= 0\n      \
    \  error(\"add: x or y is negative\")\n    end\n    return x + y\nend\n</cell>\n\
    <code language=julia-1.3>\n@code_warntype add(2, 3)\n</cell>\n<text>\nJulia has\
    \ many built-in types and functions. Here are some examples:", "    x + y\nend\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(3, 4)\n</cell>\n<text>\n\
    The @code_warntype macro will warn you if you try to add two numbers that are\
    \ not of the same type. In the example above we see that Julia is warning us about\
    \ this by raising a TypeError exception. Julia will also warn us about this if\
    \ we try to add two numbers that are not of the same type but are of the same\
    \ subtype.", "    x + y\nend", "    x + y\nend", "    x + y\nend", "    x + y\n\
    end\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_warntype add(1,2)\n\
    </cell", "    if x < 0 || y <= 0\n        error(\"Invalid input\")\n    else\n\
    \        return x + y\nend\n\"\"\"\n\"\"\"\n\"\"\"", "    if x == 0 || y == 0\
    \ \n        then 0\n        else x + y\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,0)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(0,0)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(0,1)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,1)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,3)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,4)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,5)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,6)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,7)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,8)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,9)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,11)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,12)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,13)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,14)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,15)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,16)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,17)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,18)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,19)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,20)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype add(1,21)\n</cell>\n<code language=julia-1.0>\n@code_warntype add(1,22)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype add(1,23)\n</cell>\n<code language=juli",
  "    x + y\nend", "    if x < 0 || y <= 0\n        error(\"add: x or y must be positive\"\
    )\n    elseif x == 0 && y > 0\n        error(\"add: x must be positive\")\n  \
    \  elseif y == 0 && x > 0\n        error(\"add: y must be positive\")\n    else\n\
    \        x + y\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_native\
    \ add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,0)\n</cell>\n\
    <code language=julia-1.5>\n@code_native add(0,1)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(0,0)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,-1)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,1)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,2)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,3)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,4)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,5)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,6)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,7)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,8)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,9)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,10)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,11)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,12)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,13)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,14)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,15)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,16)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,17)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,18)\n\
    </cell>\n<code language=julia-1.5>\n@code_native add(1,19)\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(1,20)\n</cell>\n<code language=julia-1.5>\n@code_native add(1,21)\n\
    </cell>\n<code language=julia-1.5>", "    x + y\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_native add(3, 4)\n</cell>\n<text>\nJulia supports multiple dispatch, allowing\
    \ us to write functions with multiple implementations for the same function type.\
    \ For example, we can write a function which can add two numbers of different\
    \ types. We do this by defining a function which takes two arguments of the same\
    \ type, and which then dispatches based on the type of the arguments. We can then\
    \ define multiple implementations of this function, one for each type of argument.\
    \ For example:", "    x + y\nend\n\"\"\"\n    \n\"\"\"\n    \n\"\"\"", "    x\
    \ + y\nend\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2)\n</cell>\n\
    <text>\nJulia has many more built in functions. Here are some of them:", "   \
    \ x + y\nend", "    x + y\nend", "    x + y\nend\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1,2)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1,2.0)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code\
    \ language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype\
    \ add(1.0,2.0)\n</cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype add(1.0,2.0)\n</cell", "  \
    \  x + y\nend", "    return x + y\nend\n\"\"\"\n    ```\n    \"\"\"\n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    "]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

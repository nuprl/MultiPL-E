language: jl
name: HumanEval_102_choose_num
results:
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    end\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc0cl6oha.jl:9\nin expression starting at /tmp/tmpc0cl6oha.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer and returns\
    \ the sum of its digits. \nFor example, if the input is 123, then the function\
    \ should return 6. \nIf the input is -123, then the function should return -6.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi1v6d3wr.jl:9\nin expression starting at /tmp/tmpi1v6d3wr.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x - 2, y + 1)\nend\nchoose_num(4,5)\n</cell>\n<text>\n\
    Exercise\nWrite a function that takes two positive numbers x and y and returns\
    \ the \n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6163jalq.jl:9\nin expression starting at /tmp/tmp6163jalq.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        \n    else if x == y \n\
    \        then return x\n        \n    else \n        choose_num(x + 1, y)\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(4,5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer number n and returns the factorial\
    \ of n. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 3628800.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxxqkivgj.jl:9\nin expression starting at /tmp/tmpxxqkivgj.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x, y)\nend\nchoose_num(7, 9)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers and returns the number\
    \ of \noccurrences of the number 3 in the array.\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpht6f61lh.jl:9\nin expression starting at /tmp/tmpht6f61lh.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y \n        then return -1\n    else \n        choose_num\
    \ = (x % 2 == 0) ? (x + (y % 2 == 0 ? 1 : 0)) : (x + (y % 2 == 0 ? -1 : 1))\n\
    \    end\n    return choose_num\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd integer number that is in the range [x, y] inclusive. If \n \
    \   there's no such number, then the function should return -1.\nusing Test\n\n\
    @testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t\
    @test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj3ztih5r.jl:9\nin expression starting at /tmp/tmpj3ztih5r.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr0cbk_rw.jl:9\nin expression starting at /tmp/tmpr0cbk_rw.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 \n        error(\"The function choose_num only accepts positive\
    \ numbers\")\n    else if x == 0 || y == 0 \n        error(\"The function choose_num\
    \ only accepts positive numbers\")\n    else if x < y \n        error(\"The function\
    \ choose_num only accepts positive numbers\")\n    else \n        choose_num(x\
    \ - 1, y - 1)\nend\n</code>\n<|/ q tags=julia |>\n<| c |>\nPlease don't post images\
    \ of code. Post the code as text instead.\n<|/ c |>\n<| c |>\nI edited the post\
    \ to include the code\n<|/ c |>\n<| c |>\nI edited the post to include the code\n\
    <|/ c |>\n<| c |>\nI edited the post to include the code\n<|/ c |>\n<| a dscore=2\
    \ |>\nThe issue is that the function choose_num is recursive, but you never actually\
    \ call it.  You just define it.  You also don't need to define choose_num if you\
    \ just want to call it recursively.  Just do:\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp09ffq7qc.jl:10\nin expression starting at\
    \ /tmp/tmp09ffq7qc.jl:10\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y\n        then return x\n  \
    \  else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb87b6b_d.jl:9\nin expression starting at /tmp/tmpb87b6b_d.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t\
    @test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2mo84f4x.jl:9\nin expression starting at /tmp/tmp2mo84f4x.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    end\n\
    end\nchoose_num(5,10)\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ an integer number and returns its factorial. \n    For example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyk66pb7w.jl:9\nin expression starting at /tmp/tmpyk66pb7w.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y \n\
    \        then return x\n        end if\n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        end if\n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        end if\n    return -1\nend function\n</code>\n\
    <|/ a |>\n<| c |>\nI believe this should be the accepted answer. Using a recursive\
    \ function here is overkill. Also, it's easier to understand and easier to debug.\
    \ Thanks!\n<|/ c |>\n<| a tags=julia,recursion,function |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmqwci3dg.jl:9\nin expression starting at /tmp/tmpmqwci3dg.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y \n        then return -1\n    else \n        choose_num(x\
    \ - 1, y - 1)\n    end\nend\nchoose_num(8, 10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes two positive numbers x and y and returns the\n   \
    \ biggest odd number that is in the range [x, y] inclusive. If there's no such\n\
    \    number, then the function should return -1.\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg20zgl3l.jl:9\nin expression starting at /tmp/tmpg20zgl3l.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 2, y + 1)\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. Try it out with x\
    \ = 2 and y = 5. The function should return 5, not -1.\n<|/ c |>\n<| c |>\nI see\
    \ what you mean. I've edited my answer to fix the problem.\n<|/ c |>\n<| a tags=julia,function,recursion\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8zi9urnl.jl:9\nin expression starting at /tmp/tmp8zi9urnl.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\nend\nchoose_num(3,4)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc8x8tju9.jl:9\nin expression starting at /tmp/tmpc8x8tju9.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        if x == 0 \n            then\
    \ return y\n        else \n            if y == 0 \n                then return\
    \ x\n            else \n                if x % 2 == 0 \n                    then\
    \ return choose_num(x / 2, y)\n                else \n                    if y\
    \ % 2 == 0 \n                        then return choose_num(x, y / 2)\n      \
    \              else \n                        if x % 2 == y % 2 \n           \
    \                 then return choose_num(x / 2, y / 2)\n                     \
    \   else \n                            if x == y \n                          \
    \      then return x\n                            else \n                    \
    \            if x > y \n                                    then return choose_num(x\
    \ / 2, y)\n                                else \n                           \
    \         return choose_num(x, y / 2)\n        end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeggtflph.jl:9\nin expression starting at /tmp/tmpeggtflph.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\nchoose_num(3,4)\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a positive integer number and returns its factorial. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp11x75o66.jl:9\nin expression starting at /tmp/tmp11x75o66.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 \n        error(\"The numbers must be positive\")\n    else if\
    \ x == 0 || y == 0 \n        error(\"The numbers must be positive\")\n    else\
    \ if x > y \n        error(\"The numbers must be positive\")\n    else \n    \
    \    choose_num(x - 1, y - 1)\nend\n</code>\n<|/ q dscore=0 |>\n<| c |>\nWhat\
    \ is your question? What have you tried? What problems did you encounter?\n<|/\
    \ c |>\n<| c |>\nI tried to solve the problem by myself but i couldn't do it.\
    \ I don't know what to do\n<|/ c |>\n<| c |>\nWhat have you tried? What problems\
    \ did you encounter? What specifically do you need help with?\n<|/ c |>\n<| c\
    \ |>\nI tried to solve the problem by myself but i couldn't do it. I don't know\
    \ what to do\n<|/ c |>\n<| c |>\nPlease [edit] your question to include your code.\
    \ Don't put it in a comment. Also, please explain what exactly you're having trouble\
    \ with. Do you know how to write a recursive function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you know how to write a conditional statement? Do you know how to\
    \ write a function? Do you know how to call a function? Do you know how to write\
    \ a loop? Do you \nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t\
    @test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0w91ne_p.jl:10\nin expression starting at\
    \ /tmp/tmp0w91ne_p.jl:10\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x + 1, y)\n            else \n                if y % 2 == 0 \n  \
    \                  then return choose_num(x, y + 1)\n                else \n \
    \                   if x == y \n                        then return x\n      \
    \              else \n                        if x % 2 == 0 \n               \
    \             then return choose_num(x + 1, y)\n                        else \n\
    \                            if y % 2 == 0 \n                                then\
    \ return choose_num(x, y + 1)\n                            else \n           \
    \                     if x == y \n                                    then return\
    \ x\n                                else \n                                 \
    \   if x % 2 == 0 \n                                        then return choose_num(x\
    \ + 1, y)\n                                    else \n                       \
    \                 if y % 2 == 0 \n                                           \
    \ then return choose_num(x, y + 1)\n                                        else\
    \ \n                                            if x == y \n                 \
    \                               then return x\n                              \
    \              else \n                                                if x % 2\
    \ == 0 \n                                                    then return choose_num(x\
    \ + 1, y)\n                                                else \n           \
    \                                         if y % 2 == 0 \n                   \
    \                                     then return choose_num(x, y + 1)\n     \
    \                                               else \n                      \
    \                                  if x == y \n                              \
    \                              then return x\n                               \
    \                         else \n                                            \
    \                if x % 2 == 0 \n                                            \
    \                    then return choose_num(x + 1, y)\n                      \
    \                                      else \n                               \
    \                                 if y % 2 == 0 \n                           \
    \                                         then return choose_num(x, y + 1)\n \
    \                                                                   else \n  \
    \                                                      if x == y \n          \
    \                                                  then return x\n           \
    \                                             else \n                        \
    \                                    if x % 2 == 0 \n                        \
    \                                        then return choose_num(x + 1, y)\n  \
    \                                                          else \n           \
    \                                                     if y % 2 == 0 \n       \
    \                                                             then return choose_num(x,\
    \ y + 1)\n                                                                   \
    \ else \n                                                        if x == y \n\
    \                                                            then return x\n \
    \                                                       else \n              \
    \                                              if x % 2 == 0 \n              \
    \                                                  then return choose_num(x +\
    \ 1, y)\n                                                            else \n \
    \                                                               if y % 2 == 0\
    \ \n                                                                    then return\
    \ choose_num(x, y + 1)\n                                                     \
    \               else \n                                                      \
    \  if x == y \n                                                            then\
    \ return x\n                                                        else \n  \
    \                                                          if x % 2 == 0 \n  \
    \                                                              then return choose_num(x\
    \ + 1, y)\n                                                            else \n\
    \                                                                if y % 2 == 0\
    \ \n                                                                    then return\
    \ choose_num(x, y + 1)\n                                                     \
    \               else \n                                                      \
    \  if x == y \n                                                            then\
    \ return x\n                                                        else \n  \
    \                                                          if x % 2 == 0 \n  \
    \                                                              then return choose_num(x\
    \ + 1, y)\n                                                            else \n\
    \                                                                if y % 2 == 0\
    \ \n                                                                    then return\
    \ choose_num(x, y + 1)\n                                                     \
    \               else \n                                                      \
    \  if x == y \n                                                            then\
    \ return x\n                                                        else \n  \
    \                                                          \nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe0e0yy5h.jl:9\nin expression starting at /tmp/tmpe0e0yy5h.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</code>\n<|/ q tags=julia,if-statement,function |>\n<| c |>\nPlease\
    \ don't post images of code. Post the code as text instead.\n<|/ c |>\n<| c |>\n\
    I edited the post and added the code as text\n<|/ c |>\n<| c |>\nPlease don't\
    \ post images of code. Post the code as text instead. Also, please don't post\
    \ images of code. Post the code as text instead. Also, please don't post images\
    \ of code. Post the code as text instead. Also, please don't post images of code.\
    \ Post the code as text instead. Also, please don't post images of code. Post\
    \ the code as text instead. Also, please don't post images of code. Post the code\
    \ as text instead. Also, please don't post images of code. Post the code as text\
    \ instead. Also, please don't post images of code. Post the code as text instead.\
    \ Also, please don't post images of code. Post the code as text instead. Also,\
    \ please don't post images of code. Post the code as text instead. Also, please\
    \ don't post images of code. Post the code as text instead. Also, please don't\
    \ post images of code. Post the code as text instead. Also, please don't post\
    \ images of code. Post the code as text instead. Also, please don't post images\
    \ of code. Post the code as text instead. Also, please don't post images of code.\
    \ Post the code as text instead. Also, please don't post images of code. Post\
    \ the code as text instead. Also, please don't post images of code. Post the code\
    \ as text instead. Also, please don't post images of code. Post the code as text\
    \ instead. Also, please don't post images of code. Post the code as text instead.\
    \ Also, please don't post images of code. Post the code as text instead. Also,\
    \ please don't post images of code. Post the code as text instead. Also, please\
    \ don't post images of code. Post the code as text instead. Also, please don't\
    \ post images of code. Post the code as text instead. Also, please don't post\
    \ images of code. Post the code as text instead. Also, please don't post images\
    \ of code. Post the code as text instead. Also, please don't post images of code.\
    \ Post the code as text instead. Also, please don't post images of code. Post\
    \ the code as text instead. Also, please don't post images of code. Post the code\
    \ as text instead. Also, please \nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc0jxkwoj.jl:9\nin expression starting at /tmp/tmpc0jxkwoj.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\nchoose_num(3,4)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an integer x and returns its square root.\nusing Test\n\n@testset begin\n\n\
    candidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy76bmlir.jl:9\nin expression starting at /tmp/tmpy76bmlir.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ number and returns its factorial. \nThe factorial of a number $n$ is defined\
    \ as $n! = n * (n - 1) * (n - 2) * ... * 1$. \nFor example, 5! = 5 x 4 x 3 x 2\
    \ x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkj_0cv42.jl:9\nin expression starting at /tmp/tmpkj_0cv42.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nPlease don't post answers to questions that have been closed as\
    \ duplicates. Instead, vote to close as duplicate instead.\n<|/ c |>\n<| c |>\n\
    I didn't know that I had to vote to close as duplicate. Thanks for letting me\
    \ know.\n<|/ c |>\n<| c |>\nI didn't know that I had to vote to close as duplicate.\
    \ Thanks for letting me know.\n<|/ c |>\n<| c |>\nI didn't know that I had to\
    \ vote to close as duplicate. Thanks for letting me know.\n<|/ c |>\n<| c |>\n\
    I didn't know that I had to vote to close as duplicate. Thanks for letting me\
    \ know.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp97h0n34j.jl:9\nin expression starting at /tmp/tmp97h0n34j.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x+1, y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't answer the question, which is about how to write this in\
    \ Julia. Also, your function doesn't return -1 when there is no even number in\
    \ the range.\n<|/ c |>\n<| c |>\nI thought the question was about how to write\
    \ this in Julia. Also, your function doesn't return -1 when there is no even number\
    \ in the range.\n<|/ c |>\n<| c |>\nI thought the question was about how to write\
    \ this in Julia. Also, your function doesn't return -1 when there is no even number\
    \ in the range.\n<|/ c |>\n<| c |>\nI thought the question was about how to write\
    \ this in Julia. Also, your function doesn't return -1 when there is no even number\
    \ in the range.\n<|/ c |>\n<| c |>\nI thought the question was about how to write\
    \ this in Julia. Also, your function doesn't return -1 when there is no even number\
    \ in the range.\n<|/ c |>\n<| a tags=julia,function,recursion |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkj1tj8v8.jl:9\nin expression starting at /tmp/tmpkj1tj8v8.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        then return -1\n    else \n       \
    \ choose_num(x + 1, y)\n    end\nend\nchoose_num(4,6)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd number that is in the range [x, y] inclusive. If there's no such\n\
    \    number, then the function should return -1.\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeo2vkxlt.jl:9\nin expression starting at /tmp/tmpeo2vkxlt.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/\
    \ a dscore=2 |>\n<| c |>\nThe `choose_num` function doesn't work correctly for\
    \ negative numbers. For example, `choose_num(-2, 3)` returns `-1`, but `choose_num(-3,\
    \ -2)` returns `-2`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| a dscore=2 |>\nThe first thing that comes to mind is recursion.\
    \ \n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_kzt05w_.jl:9\nin expression starting at /tmp/tmp_kzt05w_.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y\n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question. He wants to know how to use recursion\
    \ to solve this problem.\n<|/ c |>\n<| c |>\nI did answer the question, by providing\
    \ pseudocode for the recursive solution. He also provided a link to an explanation\
    \ of how recursion works.\n<|/ c |>\n<| c |>\nI disagree. He asked how to use\
    \ recursion to solve this problem, and you provided pseudocode for the recursive\
    \ solution. He also provided a link to an explanation of how recursion works.\
    \ He didn't ask how to use recursion to solve this problem in general. He asked\
    \ how to use recursion to solve this specific problem. He didn't ask how to use\
    \ recursion to solve this problem in general. He asked how to use recursion to\
    \ solve this specific problem. He didn't ask how to use recursion to solve this\
    \ problem in general. He asked how to use recursion to solve this specific problem.\
    \ He didn't ask how to use recursion to solve this problem in general. He asked\
    \ how to use recursion to solve this specific problem. He didn't ask how to use\
    \ recursion to solve this problem in general. He asked how to use recursion to\
    \ solve this specific problem. He didn't ask how to use recursion to solve this\
    \ problem in general. He asked how to use recursion to solve this specific problem.\
    \ He didn't ask how to use recursion to solve this problem in general. He asked\
    \ how to use recursion to solve this specific problem. He didn't ask how to use\
    \ recursion to solve this problem in general. He asked how to use recursion to\
    \ solve this specific problem. He didn't ask how to use recursion to solve this\
    \ problem in general. He asked how to use recursion to solve this specific problem.\
    \ He didn't ask how to use recursion to solve this problem in general. He asked\
    \ how to use recursion to solve this specific problem. He didn't ask how to use\
    \ recursion to solve this problem in general. He asked how to use recursion to\
    \ solve this specific problem. He didn't ask how to use recursion to solve this\
    \ problem in general. He asked how to use recursion to solve this specific problem.\
    \ He didn't ask how to use recursion to solve this problem in general. He asked\
    \ how to use recursion to solve this specific \nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0ovosl28.jl:9\nin expression starting at /tmp/tmp0ovosl28.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,function,if-statement\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps3i6bwds.jl:9\nin expression starting at /tmp/tmps3i6bwds.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y\n        then return x\n  \
    \  else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else return\
    \ choose_num(x, y / 2)\nend\nchoose_num(4,6)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an array of numbers and returns the sum of the numbers\
    \ in the array. \nIf the array is empty, return 0.\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1i1883if.jl:9\nin expression starting at /tmp/tmp1i1883if.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    \
    \    choose_num(x, y - 1)\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeafjgk6b.jl:9\nin expression starting at /tmp/tmpeafjgk6b.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        then return -1\n    else \n       \
    \ choose_num(x + 1, y - 1)\n    end\nend\n</code>\n<|/ a tags=julia,recursion,function\
    \ |>\n<| c |>\nThis doesn't work for me. `choose_num(3,4)` returns `-1`, not `2`.\n\
    <|/ c |>\n<| c |>\nIt works for me on Julia 0.6.2\n<|/ c |>\n<| c |>\nAh, I see\
    \ now. `choose_num(3,4)` returns `-1` because `choose_num(4,3)` returns `-1`.\
    \ Thanks!\n<|/ c |>\n<| c |>\nThis doesn't work for me. `choose_num(3,4)` returns\
    \ `-1`, not `2`.\n<|/ c |>\n<| c |>\nIt works for me on Julia 0.6.2\n<|/ c |>\n\
    <| a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp08ta7kux.jl:9\nin expression starting at /tmp/tmp08ta7kux.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else if x < y \n        then return -1\n \
    \   else return x % 2\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI believe that\
    \ `choose_num` should return `-1` when `x > y`.\n<|/ c |>\n<| c |>\nYes, you are\
    \ right. I missed that part. Thanks for pointing it out.\n<|/ c |>\n<| a tags=julia,if-statement\
    \ |>\nI believe that choose_num should return -1 when x > y.\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6jmhywrt.jl:9\nin expression starting at /tmp/tmp6jmhywrt.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(4,6)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmdrc1ixr.jl:9\nin expression starting at /tmp/tmpmdrc1ixr.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplk5h79xx.jl:9\nin expression starting at /tmp/tmplk5h79xx.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a positive integer number x and\
    \ returns the \n    number of digits in the number x.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3xlvej9_.jl:9\nin expression starting at /tmp/tmp3xlvej9_.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y \n        then return -1\n    else \n        choose_num(x\
    \ - 1, y - 1) + 1\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a positive integer number and returns its factorial. \n    For example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp43aoz5bo.jl:9\nin expression starting at /tmp/tmp43aoz5bo.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ q dscore=0\
    \ |>\n<| c |>\nWhat is your question?\n<|/ c |>\n<| c |>\nThe question was how\
    \ to implement the function choose_num() in Julia. I've edited the question to\
    \ make it clearer.\n<|/ c |>\n<| c |>\nI still don't understand what you're asking.\
    \ What is your question? What have you tried? What didn't work? What did you expect\
    \ to happen? What happened instead? Please read [ask].\n<|/ c |>\n<| c |>\nI've\
    \ edited the question to make it clearer. Thanks for your help.\n<|/ c |>\n<|\
    \ a dscore=1 |>\nThe function choose_num is recursive, meaning it calls itself\
    \ again and again until it reaches the base case. \n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpflbipv3r.jl:9\nin expression starting at /tmp/tmpflbipv3r.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y\n\
    \        then return x\n    else \n        choose_num(x + 1, y)\n        end if\n\
    end function\n</code>\n<|/ a tags=julia,recursion |>\n<| c |>\nThis doesn't seem\
    \ to work. `choose_num(5,5)` returns `5` instead of `-1`.\n<|/ c |>\n<| c |>\n\
    I tested it and it works. I added the function to the answer. Maybe you missed\
    \ the return statement in the last line.\n<|/ c |>\n<| c |>\nAh, I see. Thanks\
    \ for your help!\n<|/ c |>\n<| a tags=julia,recursion |>\nI believe this can be\
    \ done in one line using an anonymous function and some math:\n<code>\njulia>\
    \ choose_num(5,5)\n-1\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpddtenwut.jl:9\nin expression starting at /tmp/tmpddtenwut.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else\n        choose_num(x, y)\n  \
    \  end\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis is not the correct answer.\
    \ `choose_num(3,4)` returns `4`, not `3`.\n<|/ c |>\n<| c |>\nYes, I missed that\
    \ case. Thanks for pointing it out. I've updated the answer.\n<|/ c |>\n<| a |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmp43hx4j_z.jl:9\nin expression starting at /tmp/tmp43hx4j_z.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else\n        choose_num(x, y)\n  \
    \  end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an integer\
    \ number and returns its factorial. \nThe factorial of a number is the product\
    \ of all the numbers from 1 to that number. \nFor example, 5! = 5 x 4 x 3 x 2\
    \ x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmp97qfoznn.jl:9\nin expression starting at /tmp/tmp97qfoznn.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else\n        choose_num(x, y)\n  \
    \  end\nend\n</code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nThanks for your\
    \ answer! I understand that Julia is smart enough to know that `x < y` will always\
    \ be true and therefore the function will always return `y`. But why does it not\
    \ return `y` when `x < y` is false?\n<|/ c |>\n<| c |>\nBecause `x < y` is false.\
    \ `x < y` is false, so the function returns `y`. `y` is also false, so the function\
    \ returns `y`. `y` is also false, so the function returns `y`. `y` is also false,\
    \ so the function returns `y`. `y` is also false, so the function returns `y`.\
    \ `y` is also false, so the function returns `y`. `y` is also false, so the function\
    \ returns `y`. `y` is also false, so the function returns `y`. `y` is also false,\
    \ so the function returns `y`. `y` is also false, so the function returns `y`.\
    \ `y` is also false, so the function returns `y`. `y` is also false, so the function\
    \ returns `y`. `y` is also false, so the function returns `y`. `y` is also false,\
    \ so the function returns `y`. `y` is also false, so the function returns `y`.\
    \ `y` is also false, so the function returns `y`. `y` is also false, so the function\
    \ returns `y`. `y` is also false, so the function returns `y`. `y` is also false,\
    \ so the function returns `y`. `y` is also false, so the function returns `y`.\
    \ `y` is also false, so the function returns `y`. `y` is also false, so the function\
    \ returns `y`. `y` is also false, so the function returns `y`. `y` is also false,\
    \ so the function returns `y`. `y` is also false, so the function returns `y`.\
    \ `y` is also false, so the function returns `y`. `y` is also false, so the function\
    \ returns `y`. `y` is also false, so the function returns `y`. `y` is also false,\
    \ so the function returns `y`. `y` is also false, so the function returns `y`.\
    \ `y` is also false, so the function returns `y`. `y` is also false, so the function\
    \ returns `y`. `y` is also false, so the function returns `y`. `y` is also false,\
    \ so \nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmp2mq7og63.jl:9\nin expression starting at /tmp/tmp2mq7og63.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp531d4110.jl:9\nin expression starting at /tmp/tmp531d4110.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer number and\
    \ returns its factorial. \nThe factorial of a number $n$ is defined as $n!$, where\
    \ $n$ is an integer and $!$ is the factorial operator. \nThe factorial of 0 is\
    \ 1, and negative numbers are invalid.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzwf7fegc.jl:9\nin expression starting at /tmp/tmpzwf7fegc.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else\n        choose_num(x, y)\n  \
    \  end\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThe `if` statement is redundant.\
    \ `choose_num(x, y)` will always return `y` when `x` is greater than `y`.\n<|/\
    \ c |>\n<| c |>\nYes, you're right. I've edited my answer to remove redundant\
    \ `if` statement.\n<|/ c |>\n<| a tags=julia |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpq5eq0y7h.jl:9\nin expression starting at /tmp/tmpq5eq0y7h.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\nchoose_num(3,4)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of numbers and returns the sum of the numbers in the array.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeqm7664i.jl:9\nin expression starting at /tmp/tmpeqm7664i.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        \n    else if x == y \n\
    \        then return x\n        \n    else if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    else if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        \n    else \n        return -1\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(10,20)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(10,10)\n</cell>\n<code language=julia-1.0>\nchoose_num(10,0)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(10,-10)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(10,100)\n</cell>\n<code language=julia-1.0>\nchoose_num(10,-100)\n\
    </cell>\n<code language=julia-1.0>\nchoose_num(10,0)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(10,-10)\n</cell>\n<code language=julia-1.0>\nchoose_num(10,100)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(10,-100)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(10,0)\n</cell>\n<code language=julia-1.0>\nchoose_num(10,-10)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(10,100)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(10,-100)\n</cell>\n<code language=julia-1.0>\nchoose_num(10,0)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(10,-10)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(10,100)\n</cell>\n<code language=julia-1.0>\nchoose_num(10,-100)\n\
    </cell>\n<code language=julia-1.0>\nchoose_num(10,0)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(10,-10)\n</cell>\n<code language=julia-1.0>\nchoose_num(10,100)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(10,-100)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(10,0)\n</cell>\n<code language=julia-1.0>\nchoose_num(10,-10)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(10,\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3la1zda_.jl:9\nin expression starting at /tmp/tmp3la1zda_.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    end\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc0cl6oha.jl:9\nin expression starting at /tmp/tmpc0cl6oha.jl:9\n"
  stdout: ''
  timestamp: 1659747366
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        then return -1\n    else \n       \
    \ choose_num(x + 1, y - 1)\n    end\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't\
    \ work. Try it out with x = 2 and y = 10. You'll get an infinite loop. Also, your\
    \ function doesn't return -1 when x or y is 0.\n<|/ c |>\n<| c |>\nThanks for\
    \ pointing out the mistakes. I fixed the infinite loop and added the return -1\
    \ when x and y are 0.\n<|/ c |>\n<| c |>\nThe function doesn't return -1 when\
    \ x or y is 0. It returns -1 when x and y are negative or when x and y are greater\
    \ than the maximum number that can be represented by Int64.\n<|/ c |>\n<| c |>\n\
    I see what you mean. My bad. Thanks for pointing that out.\n<|/ c |>\n<| a tags=julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjfcd_igr.jl:9\nin expression starting at /tmp/tmpjfcd_igr.jl:9\n"
  stdout: ''
  timestamp: 1659747369
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\nend\n\
    choose_num(7, 10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer number and returns its factorial. \nFor example, factorial(5) = 5 \xD7\
    \ 4 \xD7 3 \xD7 2 \xD7 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprw9642qt.jl:9\nin expression starting at /tmp/tmprw9642qt.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x+1, y)\n    end\nend\nchoose_num(3,4)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer number and\
    \ returns its \n    factorial. \n    \n    For example:\n            \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpib_gsbq1.jl:9\nin expression starting at /tmp/tmpib_gsbq1.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd integer number that is in the range [x, y] inclusive. If \n \
    \   there's no such number, then the function should return -1.\nusing Test\n\n\
    @testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t\
    @test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphs3k871u.jl:9\nin expression starting at /tmp/tmphs3k871u.jl:9\n"
  stdout: ''
  timestamp: 1659747369
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,if-statement |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp44602myj.jl:9\nin expression starting at /tmp/tmp44602myj.jl:9\n"
  stdout: ''
  timestamp: 1659747369
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        \n    if x == y\n      \
    \  then return x\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0\n        then return choose_num(x, y /\
    \ 2)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.4>\nchoose_num(5,6)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an integer number n and\
    \ returns the sum of all \nthe even numbers from 1 to n. For example, choose_num(10)\
    \ should return \n15. Make sure your function works with negative numbers as well.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb7tf56mj.jl:9\nin expression starting at /tmp/tmpb7tf56mj.jl:9\n"
  stdout: ''
  timestamp: 1659747369
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x - y, y)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't work. Try it out with x = 2 and y = 5\n<|/ c |>\n\
    <| c |>\nIt works. I tested it before posting. Try it out with x = 2 and y = 5\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it out with x = 2 and y = 5\n<|/ c |>\n\
    <| c |>\nIt works. I tested it before posting. Try it out with x = 2 and y = 5\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it out with x = 2 and y = 5\n<|/ c |>\n\
    <| a tags=julia,recursion,function |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpln6s7vzs.jl:9\nin expression starting at /tmp/tmpln6s7vzs.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        return -1\n    else \n        return\
    \ choose_num(x+1, y-1) + 2*(x+y)\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a positive integer number and returns its factorial.\
    \ \nThe factorial of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkyr84w8f.jl:14\nin expression starting at\
    \ /tmp/tmpkyr84w8f.jl:14\n"
  stdout: ''
  timestamp: 1659747369
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a positive integer and returns the sum of its digits. \nFor example,\
    \ choose_num(12) should return 1 + 2 + 3 = 6.\nusing Test\n\n@testset begin\n\n\
    candidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpncrpttr_.jl:9\nin expression starting at /tmp/tmpncrpttr_.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y\n        then return x\n  \
    \  else \n        choose_num(x + 1, y)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuc8trt8u.jl:9\nin expression starting at /tmp/tmpuc8trt8u.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y \n\
    \        then return x\n        end if\n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        end if\n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        end if\n    if x > y \n        then return choose_num(y,\
    \ x)\n        end if\n    return -1\nend function\n</code>\n<|/ a tags=julia |>\n\
    <| a tags=julia |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8pmxi1ea.jl:9\nin expression starting at /tmp/tmp8pmxi1ea.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else\n        choose_num(x, y)\n  \
    \  end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a positive\
    \ integer number as an argument and returns the number of digits in that number.\
    \ For example, if the number is 123, then the function should return 3.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpp8zjww1k.jl:9\nin expression starting at /tmp/tmpp8zjww1k.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y\n        then return x\n  \
    \  else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else \n \
    \       then return choose_num(x, y / 2)\nend\nchoose_num(4,5)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a positive integer number and returns\
    \ its factorial. \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5z1o595z.jl:9\nin expression starting at /tmp/tmp5z1o595z.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\nend\n\
    choose_num(4,5)\n</cell>\n<text>\nExercise 4\nWrite a function that takes a positive\
    \ integer number and returns its factorial. \nThe factorial of a number $n$ is\
    \ defined as:\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp64kyrtww.jl:9\nin expression starting at /tmp/tmp64kyrtww.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=julia,recursion |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1u8lewqp.jl:9\nin expression starting at /tmp/tmp1u8lewqp.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 \n        error(\"Invalid input\") \n    else if x == 0 || y ==\
    \ 0 \n        error(\"Invalid input\") \n    else if x % 2 == 0 && y % 2 == 0\
    \ \n        error(\"Invalid input\") \n    else \n        return x if x > y \n\
    \        else y \nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't answer\
    \ the question. The question asks for an algorithm that returns -1 if there is\
    \ no even number in the range [x, y], not an algorithm that returns -1 if there\
    \ is no even number in the range [x, y].\n<|/ c |>\n<| c |>\nThe question asks\
    \ for an algorithm that returns -1 if there is no even number in the range [x,\
    \ y], not an algorithm that returns -1 if there is no even number in the range\
    \ [x, y].\n<|/ c |>\n<| c |>\nThe question asks for an algorithm that returns\
    \ -1 if there is no even number in the range [x, y], not an algorithm that returns\
    \ -1 if there is no even number in the range [x, y].\n<|/ c |>\n<| c |>\nThe question\
    \ asks for an algorithm that returns -1 if there is no even number in the range\
    \ [x, y], not an algorithm that returns -1 if there is no even number in the range\
    \ [x, y].\n<|/ c |>\n<| c |>\nThe question asks for an algorithm that returns\
    \ -1 if there is no even number in the range [x, y], not an algorithm that returns\
    \ -1 if there is no even number in the range [x, y].\n<|/ c |>\n<| a |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd_f4werz.jl:10\nin expression starting at\
    \ /tmp/tmpd_f4werz.jl:10\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            choose_num(x + 1, y)\n        end\n   \
    \ end\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes two positive numbers x and y and returns the\n    biggest odd integer\
    \ number that is in the range [x, y] inclusive. If \n    there's no such number,\
    \ then the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp0erysfx.jl:9\nin expression starting at /tmp/tmpp0erysfx.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        then return -1\n    else \n       \
    \ return choose_num(x + 1, y - 1)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz5c04d9z.jl:9\nin expression starting at /tmp/tmpz5c04d9z.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\nchoose_num(4,5)\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ a positive integer number and returns its factorial. \nFor example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1lua00rg.jl:9\nin expression starting at /tmp/tmp1lua00rg.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            choose_num(x+1, y)\n        end\n    end\n\
    end\nchoose_num(4,6)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ two positive numbers x and y and returns the\n    biggest odd integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9f_19q35.jl:9\nin expression starting at /tmp/tmp9f_19q35.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        \n    if x == y\n      \
    \  then return x\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0\n        then return choose_num(x, y /\
    \ 2)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(7,\
    \ 10)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 8)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 10)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 8)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 8)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 10)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 8)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 8)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 10)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 8)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 8)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 10)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 8)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 10)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 8)\n</\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0vqwzt7x.jl:9\nin expression starting at /tmp/tmp0vqwzt7x.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x) \n        else choose_num(x, y)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(4,5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a positive integer n and returns the factorial\
    \ of n. \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n\
    @testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t\
    @test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpsll_559d.jl:9\nin expression starting at /tmp/tmpsll_559d.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x+1, y)\n    end\nend\nchoose_num(3,4)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd number that is in the range [x, y] inclusive. If\
    \ there's no such\n    number, then the function should return -1.\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzgftq76m.jl:9\nin expression starting at /tmp/tmpzgftq76m.jl:9\n"
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an integer $n$ and returns $n!$. \nThe function should work for any positive\
    \ integer $n$.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe4yulbbp.jl:9\nin expression starting at /tmp/tmpe4yulbbp.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\n</code>\n<|/ a tags=julia,recursion,function |>\n<| c |>\nI didn't know that\
    \ you could do that. Thanks!\n<|/ c |>\n<| c |>\nI didn't know that you could\
    \ do that. Thanks!\n<|/ c |>\n<| a dscore=2 |>\nThe answer by is great, but I\
    \ thought I'd add some explanation as to why it works.\nThe function choose_num\
    \ is recursive, meaning that it calls itself to find the next even number in the\
    \ range. \nThe base case is when x is greater than or equal to y. In this case,\
    \ we return -1. \nThe recursive case is when x is less than or equal to y. \n\
    The recursive case is when x is less than y. In this case, we call choose_num(x\
    \ + 1, y). \nThe recursive case is when x is greater than y. In this case, we\
    \ call choose_num(x, y + 1). \nThe recursive case is when x is equal to y. In\
    \ this case, we return x. \nThe recursive case is when x is greater than or equal\
    \ to y. In this case, we call choose_num(x + 1, y). \nThe recursive case is when\
    \ x is less than y. In this case, we call choose_num(x, y + 1). \nThe recursive\
    \ case is when x is equal to y. In this case, we return x. \nThe recursive case\
    \ is when x is greater than or equal to y. In this case, we call choose_num(x\
    \ + 1, y). \nThe recursive case is when x is less than y. In this case, we call\
    \ choose_num(x, y + 1). \nThe recursive case is when x is equal to y. In this\
    \ case, we return x. \nThe recursive case is when x is greater than or equal to\
    \ y. In this case, we call choose_num(x + 1, y). \nThe recursive case is when\
    \ x is less than y. In this case, we call choose_num(x, y + 1). \nThe recursive\
    \ case is when x is equal to y. In this case, we return x. \nThe recursive case\
    \ is when x is greater than or equal to y. In this case, we call choose_num(x\
    \ + 1, y). \nThe recursive case is when x is less than y. In this case, we call\
    \ choose_num(x, y + 1). \nThe recursive case is when x is equal to y. In this\
    \ case, we return x. \nThe recursive case is when x is greater than or equal to\
    \ y. In this case, we call choose_num(x + 1, y). \nThe recursive case is when\
    \ x is less than y. In this case, we call choose_num(x, y + 1). \nThe recursive\
    \ case is \nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg018zxm2.jl:9\nin expression starting at /tmp/tmpg018zxm2.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x / 2, y)\n            else \n                if y % 2 == 0 \n  \
    \                  then return choose_num(x, y / 2)\n                else \n \
    \                   if x % 2 == y % 2 \n                        then return choose_num(x\
    \ / 2, y / 2)\n                    else \n                        if x == y /\
    \ 2 \n                            then return x\n                        else\
    \ \n                            if y % 2 == x / 2 \n                         \
    \       then return choose_num(x, y / 2)\n                            else \n\
    \                                return -1\n        end\nend\n</code>\n<|/ a tags=julia,recursion,algorithm\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/27814007)\n<|/ c |>\n<| c |>\nI believe this\
    \ does answer the question. He asked how to find the biggest even number in a\
    \ range. He also provided a recursive solution. He also provided a recursive solution\
    \ that is easy to understand. He also provided a recursive solution that is easy\
    \ to understand. He also provided a recursive solution that is easy to understand.\
    \ He also provided a recursive solution that is easy to understand. He also provided\
    \ a recursive solution that is easy to understand. He also provided a recursive\
    \ solution that is easy to understand. He also provided a recursive solution that\
    \ is easy to understand. He also provided a recursive solution that is easy to\
    \ understand. He also provided a recursive solution that is easy to understand.\
    \ He also provided a recursive solution that is easy to understand. He also provided\
    \ a recursive solution that is easy to understand. He also provided a recursive\
    \ solution that is easy to understand. He also provided a recursive solution that\
    \ is easy to understand. He also provided a recursive solution that is easy to\
    \ understand. He also provided a recursive solution that is easy to understand.\
    \ He also provided a recursive solution that is easy to understand. He also provided\
    \ a recursive solution that is easy to understand. He also provided a recursive\
    \ solution that is easy to understand. He also provided a recursive solution that\
    \ is easy to understand. He also provided a recursive solution that is easy to\
    \ understand. He also provided a recursive solution that is easy to understand.\
    \ He also provided a recursive solution that is easy to understand. He also provided\
    \ a recursive solution that is easy to understand. He also provided \nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpehz550v8.jl:9\nin expression starting at /tmp/tmpehz550v8.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI understand that this\
    \ is an old question, but I thought it would be helpful to post a solution I came\
    \ up with that uses `findfirst` instead of `findall`.  It also uses `findfirst`\
    \ instead of `findall` because `findfirst` is more efficient than `findall`.\n\
    <|/ c |>\n<| a tags=julia,function,recursion |>\nI came up with a solution that\
    \ uses findfirst instead of findall.  It also uses findfirst instead of findall\
    \ because findfirst is more efficient than findall.\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd444mimr.jl:9\nin expression starting at /tmp/tmpd444mimr.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        if x == 0 \n            then\
    \ return y\n        else \n            if y % 2 == 0 \n                then return\
    \ choose_num(x-1, y)\n            else \n                return choose_num(x,\
    \ y-1)\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes a positive integer number n and returns its \nfactorial. For example,\
    \ factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9fm27go2.jl:9\nin expression starting at /tmp/tmp9fm27go2.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x + 1, y)\nend\n\
    choose_num(4,5)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such \n    number, then the function\
    \ should return -1.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplb8o2gv3.jl:9\nin expression starting at /tmp/tmplb8o2gv3.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/29598274)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to find\
    \ the biggest even number in a range. He also asked how to implement the function\
    \ he asked for. He also asked how to implement the function he asked for. He also\
    \ asked how to implement the function he asked for. He also asked how to implement\
    \ the function he asked for. He also asked how to implement the function he asked\
    \ for. He also asked how to implement the function he asked for. He also asked\
    \ how to implement the function he asked for. He also asked how to implement the\
    \ function he asked for. He also asked how to implement the function he asked\
    \ for. He also asked how to implement the function he asked for. He also asked\
    \ how to implement the function he asked for. He also asked how to implement the\
    \ function he asked for. He also asked how to implement the function he asked\
    \ for. He also asked how to implement the function he asked for. He also asked\
    \ how to implement the function he asked for. He also asked how to implement the\
    \ function he asked for. He also asked how to implement the function he asked\
    \ for. He also asked how to implement the function he asked for. He also asked\
    \ how to implement the function he asked for. He also asked how to implement the\
    \ function he asked for. He also asked how to implement the function he asked\
    \ for. He also asked how to implement the function he asked for. He also asked\
    \ how to implement the function he asked for. He also asked how to implement the\
    \ function he asked for. He also asked how to implement the function he asked\
    \ for. He also asked how to implement the function he asked for. He also asked\
    \ how to implement the function he asked for. He also asked how to implement the\
    \ function he asked for. He also \nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplu4agwk9.jl:9\nin expression starting at /tmp/tmplu4agwk9.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x - 1, y)\n    end\nend\nchoose_num(10,20)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an integer and returns the next\
    \ power of 2 that is \n    greater than or equal to that integer.\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptvxyh38c.jl:9\nin expression starting at /tmp/tmptvxyh38c.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x / 2, y)\n            else \n                if y % 2 == 0 \n  \
    \                  then return choose_num(x, y / 2)\n                else \n \
    \                   if x > y \n                        then return choose_num(x\
    \ / 2, y / 2)\n                    else \n                        return -1\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the\
    \ question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26833484)\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26833484)\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26833484)\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc8x1iogt.jl:9\nin expression starting at /tmp/tmpc8x1iogt.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work when\
    \ x is negative and y is positive.\n<|/ c |>\n<| c |>\nIt doesn't work when x\
    \ is negative and y is positive.\n<|/ c |>\n<| c |>\nIt doesn't work when x is\
    \ negative and y is positive.\n<|/ c |>\n<| c |>\nIt doesn't work when x is negative\
    \ and y is positive.\n<|/ c |>\n<| c |>\nIt doesn't work when x is negative and\
    \ y is positive.\n<|/ c |>\n<| a tags=julia,if-statement |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpim5m22v5.jl:9\nin expression starting at /tmp/tmpim5m22v5.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes an integer number and returns\
    \ its factorial. \n    Factorial of a number is equal to multiplication of all\
    \ positive integers \n    less than or equal to that number. For example, 5! =\
    \ 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprp4ye5ve.jl:9\nin expression starting at /tmp/tmprp4ye5ve.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 \n        return -1\n    else if x % 2 == 0 && y % 2 == 0 \n\
    \        return choose_num(x / 2, y / 2)\n    else \n        return choose_num(x\
    \ / 2, y / 2) + 1\nend\nchoose_num(6, 8)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes two positive numbers x and y and returns True if x is \n\
    greater than or equal to y and False otherwise. \nFor example:\nchoose_num(6,\
    \ 8)\nchoose_num(6, 10)\nchoose_num(6, 12)\nchoose_num(6, 14)\nchoose_num(6, 15)\n\
    choose_num(6, 16)\nchoose_num(6, 17)\nchoose_num(6, 18)\nchoose_num(6, 19)\nchoose_num(6,\
    \ 20)\nchoose_num(6, 21)\nchoose_num(6, 22)\nchoose_num(6, 23)\nchoose_num(6,\
    \ 24)\nchoose_num(6, 25)\nchoose_num(6, 26)\nchoose_num(6, 27)\nchoose_num(6,\
    \ 28)\nchoose_num(6, 29)\nchoose_num(6, 30)\nchoose_num(6, 31)\nchoose_num(6,\
    \ 32)\nchoose_num(6, 33)\nchoose_num(6, 34)\nchoose_num(6, 35)\nchoose_num(6,\
    \ 36)\nchoose_num(6, 37)\nchoose_num(6, 38)\nchoose_num(6, 39)\nchoose_num(6,\
    \ 40)\nchoose_num(6, 41)\nchoose_num(6, 42)\nchoose_num(6, 43)\nchoose_num(6,\
    \ 44)\nchoose_num(6, 45)\nchoose_num(6, 46)\nchoose_num(6, 47)\nchoose_num(6,\
    \ 48)\nchoose_num(6, 49)\nchoose_num(6, 50)\nchoose_num(6, 51)\nchoose_num(6,\
    \ 52)\nchoose_num(6, 53)\nchoose_num(6, 54)\nchoose_num(6, 55)\nchoose_num(6,\
    \ 56)\nchoose_num(6, 57)\nchoose_num(6, 58)\nchoose_num(6, 59)\nchoose_num(6,\
    \ 60)\nchoose_num(6, 61)\nchoose_num(6, 62)\nchoose_num(6, 63)\nchoose_num(6,\
    \ 64)\nchoose_num(6, 65)\nchoose_\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwdly99zi.jl:10\nin expression starting at\
    \ /tmp/tmpwdly99zi.jl:10\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\nchoose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a positive integer number and returns its factorial. \nThe factorial of a number\
    \ $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7vsqj1qa.jl:9\nin expression starting at /tmp/tmp7vsqj1qa.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\nchoose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an integer number and returns its factorial. \n    For example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoun7pa_p.jl:9\nin expression starting at /tmp/tmpoun7pa_p.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\nend\nchoose_num(4,5)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd integer number that is in the range [x, y] inclusive. If\
    \ \n    there's no such number, then the function should return -1.\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwmrmtucf.jl:9\nin expression starting at /tmp/tmpwmrmtucf.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        if x == 0 \n            then\
    \ return y\n        else \n            if y % 2 == 0 \n                then return\
    \ choose_num(x / 2, y)\n            else \n                return choose_num(x,\
    \ y / 2)\nend\nchoose_num(4,6)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes two positive numbers x and y and returns the\n    biggest odd number\
    \ that is in the range [x, y] inclusive. If there's no such\n    number, then\
    \ the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp1o4v2ic.jl:9\nin expression starting at /tmp/tmpp1o4v2ic.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    \
    \    choose_num(x, y - 1)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(4,5)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(4,6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,7)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,9)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,10)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,11)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,13)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,16)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,19)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,22)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,23)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,24)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,25)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,26)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,27)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,28)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,29)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,30)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,31)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpol39uuh1.jl:9\nin expression starting at /tmp/tmpol39uuh1.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x, y)\nend\nchoose_num(7, 8)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes a positive integer number and returns\
    \ its factorial. \n    For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpex_5mhdn.jl:9\nin expression starting at /tmp/tmpex_5mhdn.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try it out with x = 1 and\
    \ y = 5\n<|/ c |>\n<| c |>\nIt works. I tested it before posting it. I will edit\
    \ my post to make it clearer.\n<|/ c |>\n<| c |>\nI edited my post to make it\
    \ clearer. Thanks for your help!\n<|/ c |>\n<| c |>\nI edited my post to make\
    \ it clearer. Thanks for your help!\n<|/ c |>\n<| c |>\nI edited my post to make\
    \ it clearer. Thanks for your help!\n<|/ c |>\n<| a |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t\
    @test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfobw0em3.jl:9\nin expression starting at /tmp/tmpfobw0em3.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        return -1\n    else \n        return\
    \ choose_num(x-1, y-1) + choose_num(x-1, y)\nend\n</code>\n<|/ a tags=julia,recursion,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try it with `choose_num(3,4)`.\n<|/ c |>\n<|\
    \ c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work. Try it with `choose_num(3,4)`.\n<|/ c |>\n<| c |>\nI fixed the\
    \ bug. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't work. Try\
    \ it with `choose_num(3,4)`.\n<|/ c |>\n<| a tags=julia,recursion,algorithm |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiaec6qfu.jl:13\nin expression starting at\
    \ /tmp/tmpiaec6qfu.jl:13\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(3,5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers and returns\
    \ the sum of all \nthe numbers in the array. \nIf the array is empty, return 0.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsxa0r16u.jl:9\nin expression starting at /tmp/tmpsxa0r16u.jl:9\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else \n        choose_num(x, y)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmphxzwr5a3.jl:9\nin expression starting at /tmp/tmphxzwr5a3.jl:9\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an integer number and returns\
    \ its factorial. \n    For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqc549vep.jl:9\nin expression starting at /tmp/tmpqc549vep.jl:9\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x - y, x + y)\nend\n</code>\n<|/ q dscore=0\
    \ |>\n<| c |>\nPlease post the code you have written so far.\n<|/ c |>\n<| c |>\n\
    Please post the code you have written so far.\n<|/ c |>\n<| c |>\nPlease post\
    \ the code you have written so far.\n<|/ c |>\n<| c |>\nPlease post the code you\
    \ have written so far.\n<|/ c |>\n<| c |>\nPlease post the code you have written\
    \ so far.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6a2920ld.jl:9\nin expression starting at /tmp/tmp6a2920ld.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a positive integer number x and\
    \ returns the \n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3ar4u7r7.jl:9\nin expression starting at /tmp/tmp3ar4u7r7.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y \n        then return -1\n    else if x == 0 || y == 0\
    \ \n        then return 0\n    else \n        choose_num(x-1, y-1) + choose_num(x-1,\
    \ y)\n    end\nend\nchoose_num(10,20)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a positive integer number and returns its factorial. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2j9ox7px.jl:9\nin expression starting at /tmp/tmp2j9ox7px.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    end\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the\
    \ question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/27827812)\n<|/ c |>\n<| c |>\nI believe\
    \ this does provide an answer to the question. He asked how to find the biggest\
    \ even number in a range. He also asked how to implement this in Julia. He also\
    \ asked how to do this in Julia without using recursion. He also asked how to\
    \ do this in Julia without using an if statement. He also asked how to do this\
    \ in Julia without using an if statement. He also asked how to do this in Julia\
    \ without using an if statement. He also asked how to do this in Julia without\
    \ using an if statement. He also asked how to do this in Julia without using an\
    \ if statement. He also asked how to do this in Julia without using an if statement.\
    \ He also asked how to do this in Julia without using an if statement.\n<|/ c\
    \ |>\n<| c |>\nHe also asked how to do this in Julia without using an if statement.\
    \ He also asked how to do this in Julia without using an if statement. He also\
    \ asked how to do this in Julia without using an if statement. He also asked how\
    \ to do this in Julia without using an if statement. He also asked how to do this\
    \ in Julia without using an if statement. He also asked how to do this in Julia\
    \ without using an if statement. He also asked how to do this in Julia without\
    \ using an if statement. He also asked how to do this in Julia without using an\
    \ if statement.\n<|/ c |>\n<| c |>\nHe also asked how to do this in Julia without\
    \ using an if statement. He also asked how to do this in Julia without using an\
    \ if statement. He also asked how to do this in Julia without using \nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_5eaw1xu.jl:9\nin expression starting at /tmp/tmp_5eaw1xu.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\nchoose_num(4,6)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a positive integer number and returns its \nfactorial. For example:\n    \n\
    \    factorial(5)\n    \n    should return 120\n    \n    factorial(10)\n    \n\
    \    should return 3628800\n    \n    factorial(100)\n    \n    should return\
    \ 3628800\n    \n    factorial(1000)\n    \n    should return 3628800\n    \n\
    \    factorial(10000)\n    \n    should return 3628800\n    \n    factorial(100000)\n\
    \    \n    should return 3628800\n    \n    factorial(1000000)\n    \n    should\
    \ return 3628800\n    \n    factorial(10000000)\n    \n    should return 3628800\n\
    \    \n    factorial(100000000)\n    \n    should return 3628800\n    \n    factorial(1000000000)\n\
    \    \n    should return 3628800\n    \n    factorial(10000000000)\n    \n   \
    \ should return 3628800\n    \n    factorial(100000000000)\n    \n    should return\
    \ 3628800\n    \n    factorial(1000000000000)\n    \n    should return 3628800\n\
    \    \n    factorial(10000000000000)\n    \n    should return 3628800\n    \n\
    \    factorial(100000000000000)\n    \n    should return 3628800\n    \n    factorial(1000000000000000)\n\
    \    \n    should return 3628800\n    \n    factorial(10000000000000000)\n   \
    \ \n    should return 3628800\n    \n    factorial(100000000000000000)\n    \n\
    \    should return 3628800\n    \n    factorial(1000000000000000000)\n    \n \
    \   should return 3628800\n    \n    factorial(10000000000000000000)\n    \n \
    \   should return 3628800\n    \n    factorial(100000000000000000000)\n    \n\
    \    should return 3628800\n    \n    factorial(1000000000000000000000)\n    \n\
    \    should return 3628800\n    \n    factorial(10000000000000000000000)\n   \
    \ \n    should return 3628800\n    \n    factorial(100000000000000000000000)\n\
    \    \n    should return 3628800\n    \n    factorial(1000000000000000000000000)\n\
    \    \n    should return 3628800\n    \n    factorial(10000000000000000000000000)\n\
    \    \n\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3e7lpmoh.jl:9\nin expression starting at /tmp/tmp3e7lpmoh.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y\n\
    \        then return x\n    else \n        choose_num(x + 1, y)\n    end if\n\
    end function\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with\
    \ `choose_num(3,4)`.\n<|/ c |>\n<| c |>\nI didn't test it, but I believe it works.\
    \ I tested it on repl.it and it returned the correct result. Maybe I misunderstood\
    \ the question?\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `choose_num(3,4)`.\n\
    <|/ c |>\n<| c |>\nI tested it on repl.it and it returned the correct result.\
    \ Maybe I misunderstood the question?\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ it with `choose_num(3,4)`.\n<|/ c |>\n<| a tags=recursion,julia |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkfq5j3wq.jl:9\nin expression starting at /tmp/tmpkfq5j3wq.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        error(\"Invalid input\")\n    else\
    \ \n        if x == 0 || y == 0 \n            error(\"Invalid input\")\n     \
    \   else \n            if x % 2 == 0 && y % 2 == 0 \n                choose_num(x/2,\
    \ y/2)\n            else \n                if x % 2 == 0 \n                  \
    \  choose_num(x/2, y)\n                else \n                    if y % 2 ==\
    \ 0 \n                        choose_num(x, y/2)\n                    else \n\
    \                        choose_num(x, y)\n    end\nend\n</code>\n<|/ a tags=julia,function\
    \ |>\n<| c |>\nThis doesn't seem to work. `choose_num(5,4)` returns `4` instead\
    \ of `-1`.\n<|/ c |>\n<| c |>\nI tested it and it works. I edited my answer to\
    \ include a working example.\n<|/ c |>\n<| c |>\nI tested it again and it works.\
    \ I edited my answer to include a working example.\n<|/ c |>\n<| c |>\nI tested\
    \ it again and it works. I edited my answer to include a working example.\n<|/\
    \ c |>\n<| c |>\nI tested it again and it works. I edited my answer to include\
    \ a working example.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdbv1cjbv.jl:26\nin expression starting at\
    \ /tmp/tmpdbv1cjbv.jl:26\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try\
    \ it with `choose_num(3,4)`.\n<|/ c |>\n<| c |>\nIt works. I tested it before\
    \ posting it. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with\
    \ `choose_num(3,4)`.\n<|/ c |>\n<| c |>\nIt works. I tested it before posting\
    \ it. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `choose_num(3,4)`.\n\
    <|/ c |>\n<| a tags=julia,recursion,function |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3frhz534.jl:9\nin expression starting at /tmp/tmp3frhz534.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y\n        then return x\n  \
    \  else \n        choose_num(x - 1, y)\n    end\nend\nchoose_num(7, 8)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an integer number and returns\
    \ its factorial. \nThe factorial of a number $n$ is defined as:\nusing Test\n\n\
    @testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t\
    @test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf4ufa9zg.jl:9\nin expression starting at /tmp/tmpf4ufa9zg.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis is not an answer to the question. He wants to know how to\
    \ use recursion to solve this problem.\n<|/ c |>\n<| c |>\nI believe this to be\
    \ the correct answer. He wants to know how to use recursion to solve this problem.\
    \ He has already written the code for the function he is trying to write.\n<|/\
    \ c |>\n<| c |>\nI believe this to be the correct answer. He wants to know how\
    \ to use recursion to solve this problem. He has already written the code for\
    \ the function he is trying to write.\n<|/ c |>\n<| c |>\nI believe this to be\
    \ the correct answer. He wants to know how to use recursion to solve this problem.\
    \ He has already written the code for the function he is trying to write.\n<|/\
    \ c |>\n<| c |>\nI believe this to be the correct answer. He wants to know how\
    \ to use recursion to solve this problem. He has already written the code for\
    \ the function he is trying to write.\n<|/ c |>\n<| a tags=julia,recursion |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptt90ved8.jl:9\nin expression starting at /tmp/tmptt90ved8.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 \n        then return -1\n    else if x == 0 || y == 0 \n     \
    \   then return 0\n    else if x % 2 == 0 && y % 2 == 0 \n        then return\
    \ choose_num(x / 2, y / 2)\n    else if x % 2 == 0 && y % 2 != 0 \n        then\
    \ return choose_num(x / 2, y)\n    else if x % 2 != 0 && y % 2 == 0 \n       \
    \ then return choose_num(x, y / 2)\n    else if x % 2 != 0 && y % 2 != 0 \n  \
    \      then return choose_num(x, y)\n    else return -1\nend\n</code>\n<|/ a tags=julia,algorithm\
    \ |>\n<| c |>\nThis is not correct. `choose_num(5,5)` returns `5` instead of `-1`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ c |>\nThis is not correct. `choose_num(5,5)` returns `5` instead of `-1`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ c |>\nThis is not correct. `choose_num(5,5)` returns `5` instead of `-1`.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj1agaw94.jl:9\nin expression starting at /tmp/tmpj1agaw94.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else\n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpva5w03hm.jl:9\nin expression starting at /tmp/tmpva5w03hm.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 || x > y || x < y \n        then return -1\n    else \n     \
    \   choose_num(x-1, y-1) + choose_num(x-1, y)\n    end\nend\nchoose_num(4,5)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such\n    number, then the function should return -1.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi29n3j6z.jl:9\nin expression starting at /tmp/tmpi29n3j6z.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y \n\
    \        then return x\n        end if\n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        end if\n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        end if\n    if x > y \n        then return choose_num(y,\
    \ x)\n        end if\n    return -1\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| a tags=julia,recursion |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphboi5uc8.jl:9\nin expression starting at /tmp/tmphboi5uc8.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    end\n\
    end\nchoose_num(100, 200)\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes an integer number and returns its factorial. \nThe factorial of a number\
    \ $n$ is defined as the product of all the integers \nless than or equal to $n$.\
    \ For example, the factorial of $n$ is $n!$ if $n$ is \neven, and $n(n-1)(n-2)...(1)$\
    \ if $n$ is odd. Write a recursive function \nthat takes an integer number $n$\
    \ and returns the factorial of $n$.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3agaw6pj.jl:9\nin expression starting at /tmp/tmp3agaw6pj.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(x - 1, y)\n    else \n        then return choose_num(x, y - 1)\n\
    end\nchoose_num(10,20)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a positive integer number and returns its factorial. \nThe factorial of a number\
    \ $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps3cintd7.jl:9\nin expression starting at /tmp/tmps3cintd7.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y \n        then return -1\n    else \n        return choose_num(x\
    \ + 1, y - 1)\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\n`choose_num(10^9, 10^9)`\
    \ returns `-1` instead of `0`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks.\n\
    <|/ c |>\n<| c |>\nI added a more efficient solution that doesn't require the\
    \ use of `while`.\n<|/ c |>\n<| a dscore=3 |>\nThe other answers are great, but\
    \ I thought I'd add my own.\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxna57_tl.jl:9\nin expression starting at /tmp/tmpxna57_tl.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 \n        then return -1\n    else \n        return choose_num(x-1,\
    \ y-1) + choose_num(x-1, y)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfn_08tzl.jl:9\nin expression starting at /tmp/tmpfn_08tzl.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y \n\
    \        then return x\n        end if\n    if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n        end if\n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        end if\n    return -1\nend function\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/26814175)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He asked how to find the biggest even\
    \ number in a range. He also provided a solution that does exactly that. He also\
    \ provided a link to the solution. He also provided a description of how it works.\
    \ He also provided a link to an explanation of why it works. He also provided\
    \ a link to an explanation of how it works. He also provided a link to an explanation\
    \ of how it works. He also provided a link to an explanation of how it works.\
    \ He also provided a link to an explanation of how it works. He also provided\
    \ a link to an explanation of how it works. He also provided a link to an explanation\
    \ of how it works. He also provided a link to an explanation of how it works.\
    \ He also provided a link to an explanation of how it works. He also provided\
    \ a link to an explanation of how it works. He also provided a link to an explanation\
    \ of how it works. He also provided a link to an explanation of how it works.\
    \ He also provided a link to an explanation of how it works. He also provided\
    \ a link to an explanation of how it works. He also provided a link to an explanation\
    \ of how it works. He also provided a link to an explanation of how it works.\
    \ He also provided a link to an explanation of how it works. He also provided\
    \ a link to an explanation of how it works. He also provided a link to an explanation\
    \ of how it works. He also provided a link to an explanation of how it works.\
    \ He also provided a link to an explanation of how it works. He also provided\
    \ a link to an explanation of how it works. He \nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0vyg1mgr.jl:9\nin expression starting at /tmp/tmp0vyg1mgr.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        error(\"choose_num: invalid inputs\"\
    )\n    else if x == 0 || y == 0 \n        error(\"choose_num: invalid inputs\"\
    )\n    else if x % 2 == 0 && y % 2 == 0 \n        error(\"choose_num: invalid\
    \ inputs\")\n    else if x % 2 == 0 && y % 2 == 1 \n        return y\n    else\
    \ if x % 2 == 1 && y % 2 == 0 \n        return x\n    else if x % 2 == 1 && y\
    \ % 2 == 1 \n        return y\n    else \n        return -1\n    end\nend\n</code>\n\
    <|/ a tags=julia,if-statement |>\n<| c |>\nI like your solution, but I still don't\
    \ understand why my code doesn't work. Can you explain why my code doesn't work?\n\
    <|/ c |>\n<| c |>\nI added an explanation to the answer.\n<|/ c |>\n<| c |>\n\
    Thank you very much! I understand now. :)\n<|/ c |>\n<| a tags=julia,if-statement\
    \ |>\nThe reason your code doesn't work is because you have a syntax error in\
    \ the if statement. \n<code>\nif x < 0 || y < 0 || x > y || y > x \n</code>\n\
    should be\n<code>\nif x < 0 || y < 0 || x > y || y > x \n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThank you for your answer! I fixed the syntax error, but I still\
    \ don't understand why my code doesn't work. Can you explain why my code doesn't\
    \ work?\n<|/ c |>\n<| c |>\nThe reason your code doesn't work is because you have\
    \ a syntax error in the if statement. `if x < 0 || y < 0 || x > y || y > x` should\
    \ be  `if x < 0 || y < 0 || x > y || y > x`\n<|/ c |>\n<| c |>\nThank you for\
    \ your answer! I fixed the syntax error, but I still don't understand why my code\
    \ doesn't work. Can you explain why my code doesn't work?\n<|/ c |>\n<| c |>\n\
    The reason your code doesn't work is because you have a syntax error in the if\
    \ statement. `if x < 0 || y < 0 || x > y || y > x` should be  `if x < 0 || y <\
    \ 0 || x > y || y > x`\n<|/ c |>\n<| c |>\nThank you for your answer! I fixed\
    \ the syntax error, but I still don't understand why my code doesn't work. Can\
    \ you explain why my code doesn't work?\n<|/ c |>\n<| a tags=julia,\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6dpfp2vw.jl:10\nin expression starting at\
    \ /tmp/tmp6dpfp2vw.jl:10\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x+1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer number and\
    \ returns its \n    factorial. \n    \n    For example:\n            \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_i1m394g.jl:9\nin expression starting at /tmp/tmp_i1m394g.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThe question was about a recursive function, so this answer doesn't\
    \ really help.\n<|/ c |>\n<| a tags=julia,recursion |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t\
    @test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkgxc1g61.jl:9\nin expression starting at /tmp/tmpkgxc1g61.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\nchoose_num(100, 200)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an integer number and returns its factorial. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0o7dldbn.jl:9\nin expression starting at /tmp/tmp0o7dldbn.jl:9\n"
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(x - 1, y)\n    else \n        then return choose_num(x, y - 1)\n\
    end\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis doesn't seem to work for me.\
    \ `choose_num(5,10)` returns `5` instead of `10`.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ seem to work for me. `choose_num(5,10)` returns `5` instead of `10`.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't seem to work for me. `choose_num(5,10)` returns `5`\
    \ instead of `10`.\n<|/ c |>\n<| c |>\nThis doesn't seem to work for me. `choose_num(5,10)`\
    \ returns `5` instead of `10`.\n<|/ c |>\n<| c |>\nThis doesn't seem to work for\
    \ me. `choose_num(5,10)` returns `5` instead of `10`.\n<|/ c |>\n<| a dscore=4\
    \ |>\nThe other answers here are great, but I wanted to add that you can also\
    \ use an if-else statement to solve this problem:\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpycwbue2e.jl:9\nin expression starting at /tmp/tmpycwbue2e.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 \n        error(\"Invalid input\")\n    else if x == 0 || y ==\
    \ 0 \n        error(\"Invalid input\")\n    else if x % 2 == 0 && y % 2 == 0 \n\
    \        error(\"Invalid input\")\n    else if x % 2 == 0 && y % 2 != 0 \n   \
    \     return x \n    else \n        return y\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(4,5)\n</cell>\n<code language=julia-1.3>\nchoose_num(4,0)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(4,-2)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(4,-3)\n</cell>\n<code language=julia-1.3>\nchoose_num(4,4)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(4,5)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(4,6)\n</cell>\n<code language=julia-1.3>\nchoose_num(4,7)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(4,8)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(4,9)\n</cell>\n<code language=julia-1.3>\nchoose_num(4,10)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(4,11)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(4,12)\n</cell>\n<code language=julia-1.3>\nchoose_num(4,13)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(4,14)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(4,15)\n</cell>\n<code language=julia-1.3>\nchoose_num(4,16)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(4,17)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(4,18)\n</cell>\n<code language=julia-1.3>\nchoose_num(4,19)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(4,20)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(4,21)\n</cell>\n<code language=julia-1.3>\nchoose_num(4,22)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(4,23)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(4,24)\n</cell>\n<code language=julia-1.3>\nchoose_num(4,\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpczp3b6nj.jl:10\nin expression starting at\
    \ /tmp/tmpczp3b6nj.jl:10\n"
  stdout: ''
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    end\n\
    end\nchoose_num(5,10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ two positive numbers x and y and returns the\n    biggest odd number that is\
    \ in the range [x, y] inclusive. If there's no such \n    number, then the function\
    \ should return -1.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoddisivl.jl:9\nin expression starting at /tmp/tmpoddisivl.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y \n\
    \        then return x\n        end if\n    if x % 2 == 0 && y % 2 == 0 \n   \
    \     then return choose_num(x / 2, y / 2)\n        end if\n    if x % 2 == 0\
    \ && y % 2 != 0 \n        then return choose_num(x / 2, y)\n        end if\n \
    \   if x % 2 != 0 && y % 2 == 0 \n        then return choose_num(x, y / 2)\n \
    \       end if\n    if x % 2 != 0 && y % 2 != 0 \n        then return choose_num(x,\
    \ y)\n        end if\n    return -1\nend function\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work. Try it out with x = 1 and y = 5\n<|/ c |>\n<| c |>\n\
    I tested it and it works fine. Try it out with x = 1 and y = 5\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work for x = 1 and y = 5\n<|/ c |>\n<| c |>\nIt works for me.\
    \ Try it out with x = 1 and y = 5\n<|/ c |>\n<| c |>\nIt works for me. Try it\
    \ out with x = 1 and y = 5\n<|/ c |>\n<| a tags=julia,algorithm |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk81_4u02.jl:9\nin expression starting at /tmp/tmpk81_4u02.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y \n        then return -1\n    else \n        choose_num(x\
    \ - 1, y - 1)\n    end\nend\n</cell>\n<text>\nThe function above is called a recursive\
    \ function, which means it calls itself over and over again. Let's see how it\
    \ works:\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd_8_g3dz.jl:9\nin expression starting at /tmp/tmpd_8_g3dz.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp63qg9bn4.jl:9\nin expression starting at /tmp/tmp63qg9bn4.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        then \n            return -1\n    else\
    \ \n        return choose_num(x + 1, y + 1)\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nI believe this solution will fail for `choose_num(3,4)` because `choose_num(3,4)`\
    \ returns `choose_num(4,5)` which returns `choose_num(5,6)` which returns `choose_num(6,7)`\
    \ which returns `choose_num(7,8)` which returns `choose_num(8,9)` which returns\
    \ `choose_num(9,10)` which returns `choose_num(10,11)` which returns `choose_num(11,12)`\
    \ which returns `choose_num(12,13)` which returns `choose_num(13,14)` which returns\
    \ `choose_num(14,15)` which returns `choose_num(15,-1)` which returns `-1`.\n\
    <|/ c |>\n<| c |>\nYes, you are right. I've corrected the solution. Thank you\
    \ for pointing out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpils3h4uw.jl:14\nin expression starting at\
    \ /tmp/tmpils3h4uw.jl:14\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        then return -1\n    else \n       \
    \ choose_num(x - 1, y - 1)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    The question is about Julia, not Python.\n<|/ c |>\n<| c |>\nI didn't know that\
    \ Julia had a range function. I thought it was a built in function. Thanks for\
    \ pointing that out.\n<|/ c |>\n<| a tags=julia |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6enu1nqf.jl:9\nin expression starting at /tmp/tmp6enu1nqf.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 || x == y || x > y \n        then return -1\n    else \n    \
    \    choose_num(x-1, y-1) + choose_num(x-1, y) + choose_num(x, y-1) + choose_num(x+1,\
    \ y)\nend\nchoose_num(5,5)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an integer number and returns its factorial. \nThe factorial of a number\
    \ $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy5a1m5c9.jl:9\nin expression starting at /tmp/tmpy5a1m5c9.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(x - 1, y)\n    else \n        then return choose_num(x, y - 1)\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(4,5)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,6)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,7)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,8)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,9)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,10)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,11)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,12)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,15)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,18)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,21)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,24)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,27)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,30)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,31)\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpafxy6lt6.jl:9\nin expression starting at /tmp/tmpafxy6lt6.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\nchoose_num(3,4)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an integer number and returns its factorial. \n    For example, factorial(3)\
    \ = 6.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_lth0nme.jl:9\nin expression starting at /tmp/tmp_lth0nme.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    end\nchoose_num(4,5)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ two positive numbers x and y and returns the\n    biggest odd integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2qrazmnh.jl:9\nin expression starting at /tmp/tmp2qrazmnh.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x+1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number x and\
    \ returns the \n    smallest integer number that is in the range [x, 0] inclusive.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpllj_zp1m.jl:9\nin expression starting at /tmp/tmpllj_zp1m.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x+1, y)\nend\nchoose_num(3,4)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes a positive integer number and returns\
    \ its \n    factorial. For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzirfn9c3.jl:9\nin expression starting at /tmp/tmpzirfn9c3.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y \n\
    \        then return x\n        end if\n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        end if\n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        end if\n    if x == y / 2 \n        then return\
    \ x\n        end if\n    if y / 2 % 2 == 0 \n        then return choose_num(x,\
    \ y / 2)\n        end if\n    if y / 2 % 2 == 1 \n        then return choose_num(x\
    \ / 2, y)\n        end if\n    return -1\nend function\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=julia,recursion,performance |>\nHere's a recursive solution that\
    \ doesn't use any loops:\n<code>\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplgi2ks6k.jl:9\nin expression starting at /tmp/tmplgi2ks6k.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    \
    \    choose_num(x, y - 1)\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,recursion\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwummuyvj.jl:9\nin expression starting at /tmp/tmpwummuyvj.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else \n        if x == y \n\
    \            then return x\n        else \n            if x % 2 == 0 \n      \
    \          then return choose_num(x / 2, y)\n            else \n             \
    \   if y % 2 == 0 \n                    then return choose_num(x, y / 2)\n   \
    \             else \n                    if x % 2 == y % 2 \n                \
    \        then return choose_num(x / 2, y / 2)\n                    else \n   \
    \                     if x == y / 2 \n                            then return\
    \ x\n                        else \n                            if y % 2 == x\
    \ / 2 \n                                then return choose_num(x, y / 2)\n   \
    \                         else \n                                if x % 2 == y\
    \ / 2 \n                                    then return choose_num(x / 2, y)\n\
    \                                else \n                                    return\
    \ -1\n        end\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,recursion\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4dehel7k.jl:9\nin expression starting at /tmp/tmp4dehel7k.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\nend\n\
    choose_num(5,10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ integer number and returns its factorial. \n    For example, factorial(5) =\
    \ 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2tdhiqlb.jl:9\nin expression starting at /tmp/tmp2tdhiqlb.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y \n\
    \        then return x\n        end if\n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        end if\n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        end if\n    if x % 2 == y % 2 \n        then return\
    \ choose_num(x / 2, y / 2)\n        end if\n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        end if\n    return -1\nend function\n</code>\n\
    <|/ a tags=julia,recursion,algorithm |>\n<| c |>\nI like your solution. Could\
    \ you please explain why you chose to return -1 instead of throwing an error?\n\
    <|/ c |>\n<| c |>\nI chose to return -1 because that is the only value that makes\
    \ sense to return when there is no even number in the range. Returning -1 is also\
    \ the only value that makes sense to return when there is no even number in the\
    \ range.\n<|/ c |>\n<| c |>\nI see. Thanks for your explanation!\n<|/ c |>\n<|\
    \ c |>\nI like your solution. Could you please explain why you chose to return\
    \ -1 instead of throwing an error?\n<|/ c |>\n<| c |>\nI chose to return -1 because\
    \ that is the only value that makes sense to return when there is no even number\
    \ in the range. Returning -1 is also the only value that makes sense to return\
    \ when there is no even number in the range.\n<|/ c |>\n<| a dscore=3 |>\nI like\
    \ your solution. Here is a slightly different version that uses less branches\
    \ and is easier to understand:\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmql4trzi.jl:9\nin expression starting at /tmp/tmpmql4trzi.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x/2, y)\n            else \n                if y % 2 == 0 \n    \
    \                then return choose_num(x, y/2)\n                else \n     \
    \               if x == y \n                        then return x\n          \
    \          else \n                        if x % 2 == 0 \n                   \
    \         then return choose_num(x/2, y)\n                        else \n    \
    \                        if y % 2 == 0 \n                                then\
    \ return choose_num(x, y/2)\n                            else \n             \
    \                   if x == y \n                                    then return\
    \ x\n                                else \n                                 \
    \   if x % 2 == 0 \n                                        then return choose_num(x/2,\
    \ y)\n                                    else \n                            \
    \            if y % 2 == 0 \n                                            then\
    \ return choose_num(x, y/2)\n                                        else \n \
    \                                           if x == y \n                     \
    \                           then return x\n                                  \
    \          else \n                                                if x % 2 ==\
    \ 0 \n                                                    then return choose_num(x/2,\
    \ y)\n                                                else \n                \
    \                                    if y % 2 == 0 \n                        \
    \                                then return choose_num(x, y/2)\n            \
    \                                        else \n                             \
    \                           if x == y \n                                     \
    \                       then return x\n                                      \
    \                  else \n                                                   \
    \         if x % 2 == 0 \n                                                   \
    \             then return choose_num(x/2, y)\n                               \
    \                             else \n                                        \
    \                        if y % 2 == 0 \n                                    \
    \                                then return choose_num(x, y/2)\n            \
    \                                                        else \n             \
    \                                           if x == y \n                     \
    \                                       then return x\n                      \
    \                                  else \n                                   \
    \                         if x % 2 == 0 \n                                   \
    \                             then return choose_num(x/2, y)\n               \
    \                                             else \n                        \
    \                                        if y % 2 == 0 \n                    \
    \                                                then return choose_num(x, y/2)\n\
    \                                                                    else \n \
    \                                                       if x == y \n         \
    \                                                   then return x\n          \
    \                                              else \n                       \
    \                                     if x % 2 == 0 \n                       \
    \                                         then return choose_num(x/2, y)\n   \
    \                                                         else \n            \
    \                                                    if y % 2 == 0 \n        \
    \                                                            then return choose_num(x,\
    \ y/2)\n                                                                    else\
    \ \n                                                        if x == y \n     \
    \                                                       then return x\n      \
    \                                                  else \n                   \
    \                                         if x % 2 == 0 \n                   \
    \                                             then return choose_num(x/2, y)\n\
    \                                                            else \n         \
    \                                                       if y % 2 == 0 \n     \
    \                                                               then return choose_num(x,\
    \ y/2)\n                                                                    else\
    \ \n                                                        if x == y \n     \
    \                                                       then return x\n      \
    \                                                  else \n                   \
    \                                         if x % 2 == 0 \n                   \
    \                                             then return choose_num(x/2, y)\n\
    \                                                            else \n         \
    \                                                       if y % 2 == 0 \n     \
    \                                                               then return choose_num(x,\
    \ y/2)\n                                                                    else\
    \ \n                                                        if x == y \n     \
    \                                                       then return x\n      \
    \                                                  else \n                   \
    \                                         \nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpywue3v_v.jl:9\nin expression starting at /tmp/tmpywue3v_v.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</code>\n<|/ a |>\n<| c |>\nI believe that your `choose_num` function\
    \ should return `-1` when `x` and `y` are equal, otherwise it should return the\
    \ biggest even number between `y` and `x`.\n<|/ c |>\n<| c |>\nI believe that\
    \ your `choose_num` function should return `-1` when `x` and `y` are equal, otherwise\
    \ it should return the biggest even number between `y` and `x`.\n<|/ c |>\n<|\
    \ c |>\nI believe that your `choose_num` function should return `-1` when `x`\
    \ and `y` are equal, otherwise it should return the biggest even number between\
    \ `y` and `x`.\n<|/ c |>\n<| c |>\nI believe that your `choose_num` function should\
    \ return `-1` when `x` and `y` are equal, otherwise it should return the biggest\
    \ even number between `y` and `x`.\n<|/ c |>\n<| c |>\nI believe that your `choose_num`\
    \ function should return `-1` when `x` and `y` are equal, otherwise it should\
    \ return the biggest even number between `y` and `x`.\n<|/ c |>\n<| a |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphyw335il.jl:9\nin expression starting at /tmp/tmphyw335il.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    end\nchoose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ two positive numbers x and y and returns the\n    biggest odd integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3jj5erv6.jl:9\nin expression starting at /tmp/tmp3jj5erv6.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else if x == y \n        then x\n \
    \   else choose_num(x + 1, y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(4,5)\n\
    </cell>\n<code language=julia-1.0>\nchoose_num(5,4)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(5,6)\n</cell>\n<code language=julia-1.0>\nchoose_num(5,7)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(5,8)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(5,9)\n</cell>\n<code language=julia-1.0>\nchoose_num(5,10)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(5,11)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(5,12)\n</cell>\n<code language=julia-1.0>\nchoose_num(5,13)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(5,14)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(5,15)\n</cell>\n<code language=julia-1.0>\nchoose_num(5,16)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(5,17)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(5,18)\n</cell>\n<code language=julia-1.0>\nchoose_num(5,19)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(5,20)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(5,21)\n</cell>\n<code language=julia-1.0>\nchoose_num(5,22)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(5,23)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(5,24)\n</cell>\n<code language=julia-1.0>\nchoose_num(5,25)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(5,26)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(5,27)\n</cell>\n<code language=julia-1.0>\nchoose_num(5,28)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(5,29)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(5,30)\n</cell>\n<code language=julia-1.0>\nchoose_num\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpz4d4auj_.jl:9\nin expression starting at /tmp/tmpz4d4auj_.jl:9\n"
  stdout: ''
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y \n        error(\"choose_num: x or y is out of range\"\
    )\n    else \n        if x == 0 || y == 0 \n            error(\"choose_num: x\
    \ or y is 0\")\n        else \n            if x % 2 == 0 && y % 2 == 0 \n    \
    \            x /= 2\n                y /= 2\n                choose_num(x, y)\n\
    \            else \n                if x % 2 == 0 \n                    x /= 2\n\
    \                    choose_num(x, y)\n                else \n               \
    \     if y % 2 == 0 \n                        y /= 2\n                       \
    \ choose_num(x, y)\n                    else \n                        x\n   \
    \                     y\n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n                        \n                        \n\
    \                        \n\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpn40a398h.jl:23\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpn40a398h.jl:1\n\
    in expression starting at /tmp/tmpn40a398h.jl:1\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y \n        then return -1\n    else \n        choose_num(x\
    \ + 1, y - 1)\n    end\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a positive integer number and returns its \n    factorial.\
    \ \n    \n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpey9funtr.jl:9\nin expression starting at /tmp/tmpey9funtr.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplk5h79xx.jl:9\nin expression starting at /tmp/tmplk5h79xx.jl:9\n"
  stdout: ''
  timestamp: 1659747368
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else\n        choose_num(x, y)\n  \
    \  end\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThanks for your answer. I\
    \ was trying to avoid the use of global variables and I thought that there might\
    \ be a way to avoid the use of global variables. I guess I'll have to stick with\
    \ global variables. Thanks again!\n<|/ c |>\n<| c |>\nI added a version that doesn't\
    \ use global variables. I hope it helps.\n<|/ c |>\n<| c |>\nThanks again! I appreciate\
    \ your help!\n<|/ c |>\n<| a dscore=1 |>\nHere's a version that doesn't use global\
    \ variables:\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmp7oeqo63d.jl:9\nin expression starting at /tmp/tmp7oeqo63d.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz7zo_306.jl:9\nin expression starting at /tmp/tmpz7zo_306.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        then return choose_num(y - 1, x)\n    end\nend\n\
    </code>\n<|/ a tags=julia |>\n<| c |>\nThe code you posted is incorrect. `choose_num(5,3)`\
    \ returns `3` instead of `-1`.\n<|/ c |>\n<| c |>\nI fixed the code in the answer.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThe code you posted is incorrect.\
    \ `choose_num(5,3)` returns `3` instead of `-1`.\n<|/ c |>\n<| c |>\nI fixed the\
    \ code in the answer. Thanks for pointing it out.\n<|/ c |>\n<| a dscore=2 |>\n\
    I came up with this solution:\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdp15es_d.jl:9\nin expression starting at /tmp/tmpdp15es_d.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x + 1, y)\n            else \n                if y % 2 == 0 \n  \
    \                  then return choose_num(x, y + 1)\n                else \n \
    \                   if x % 2 == y % 2 \n                        then return choose_num(x\
    \ + 1, y + 1)\n                    else \n                        if x % 2 ==\
    \ y % 2 \n                            then return choose_num(x, y + 1)\n     \
    \                   else \n                            if x == y % 2 \n      \
    \                          then return x\n                            else \n\
    \                                return -1\n        end\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| a tags=julia,recursion |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_3tenie1.jl:9\nin expression starting at /tmp/tmp_3tenie1.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    \
    \    choose_num(x, y - 1)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(4,5)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiw0uqfla.jl:9\nin expression starting at /tmp/tmpiw0uqfla.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x+1, y)\n    end\nend\n</code>\n<|/ a tags=julia,recursion,function\
    \ |>\n<| a tags=julia,recursion,function |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkjaxjk99.jl:9\nin expression starting at /tmp/tmpkjaxjk99.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x - 2, y + 2)\nend\n</code>\n<|/ q dscore=0 |>\n\
    <| c |>\nWhat is your question? What have you tried?\n<|/ c |>\n<| c |>\nI tried\
    \ to write a function which takes two positive numbers x and y and returns the\
    \ biggest even number that is in the range [x, y] inclusive. If there's no such\
    \ number, then the function should return -1.\n<|/ c |>\n<| c |>\nPlease [edit]\
    \ your question to include your code. Don't put code in comments.\n<|/ c |>\n\
    <| c |>\nI edited my question and added my code\n<|/ c |>\n<| c |>\nPlease [edit]\
    \ your question to include your code. Don't put code in comments.\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzebffafd.jl:9\nin expression starting at /tmp/tmpzebffafd.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\nchoose_num(3,4)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ two positive numbers x and y and returns the\n    biggest odd integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqrd2j4cl.jl:9\nin expression starting at /tmp/tmpqrd2j4cl.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\nchoose_num(100, 200)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes two positive numbers x and y and returns the\n    biggest odd integer\
    \ number that is in the range [x, y] inclusive. If \n    there's no such number,\
    \ then the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp68h8b7wq.jl:9\nin expression starting at /tmp/tmp68h8b7wq.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x, y)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ number n and returns its factorial. \nThe factorial of a number n is defined\
    \ as the product of all positive integers less than or equal to n.\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9m14htt1.jl:9\nin expression starting at /tmp/tmp9m14htt1.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x - 2, y + 1)\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzd6oq5gm.jl:9\nin expression starting at /tmp/tmpzd6oq5gm.jl:9\n"
  stdout: ''
  timestamp: 1659747377
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't seem to\
    \ work. `choose_num(10,20)` returns `-1`, which is not the correct answer.\n<|/\
    \ c |>\n<| c |>\nI fixed the bug. Now it works.\n<|/ c |>\n<| a tags=julia,function\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2c8v41qw.jl:9\nin expression starting at /tmp/tmp2c8v41qw.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x/2, y)\n            else \n                if y % 2 == 0 \n    \
    \                then return choose_num(x, y/2)\n                else \n     \
    \               if x == y \n                        then return x\n          \
    \          else \n                        if x % 2 == 0 \n                   \
    \         then return choose_num(x/2, y)\n                        else \n    \
    \                        if y % 2 == 0 \n                                then\
    \ return choose_num(x, y/2)\n                            else \n             \
    \                   return -1\n        end\nend\n</code>\n<|/ a tags=julia,recursion,function\
    \ |>\n<| c |>\nThis doesn't seem to work. `choose_num(4,5)` returns `4` instead\
    \ of `-1`.\n<|/ c |>\n<| c |>\nI fixed the bug. Now it works.\n<|/ c |>\n<| c\
    \ |>\nThis doesn't seem to work. `choose_num(4,5)` returns `4` instead of `-1`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Now it works.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ seem to work. `choose_num(4,5)` returns `4` instead of `-1`.\n<|/ c |>\n<| a\
    \ tags=julia,recursion,function |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy3l6kxjd.jl:9\nin expression starting at /tmp/tmpy3l6kxjd.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else \n        choose_num(x, y)\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns True if a number is\
    \ odd and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmp7k90h2q6.jl:9\nin expression starting at /tmp/tmp7k90h2q6.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\nend\n\
    choose_num(7, 8)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpynlz8n0x.jl:9\nin expression starting at /tmp/tmpynlz8n0x.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        \n    else if x == y \n\
    \        then return x\n        \n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n        \n    else if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    else return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 31)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 32)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 33)\n</cell>\n<code language=julia-1.5>\nchoose_num(7, 34)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(7, 35)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(7, 36)\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t\
    @test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpifd2kwoj.jl:9\nin expression starting at /tmp/tmpifd2kwoj.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 \n        return -1\n    else \n        return choose_num(x-1,\
    \ y-1) + choose_num(x-1, y)\nend\nchoose_num(4,6)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an integer number and returns its factorial. \nThe\
    \ factorial of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeu1hmlaq.jl:14\nin expression starting at\
    \ /tmp/tmpeu1hmlaq.jl:14\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else\n        choose_num(x, y)\n  \
    \  end\nend\n</code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nThe `if` statement\
    \ is redundant. `choose_num(x, y)` will always return `y` if `x < y` and `x` if\
    \ `x > y`.\n<|/ c |>\n<| c |>\nYes, you're right. I just wanted to show how it\
    \ works.\n<|/ c |>\n<| a dscore=0 |>\nThe function can be written as:\n<code>\n\
    choose_num(x::Int64, y::Int64)::Int64 = x < y ? y : choose_num(x, y)\n</code>\n\
    <|/ a tags=julia,if-statement |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmppdwigdvd.jl:9\nin expression starting at /tmp/tmppdwigdvd.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(4,5)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes two positive numbers x and y and returns\
    \ the \n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0varvn0m.jl:9\nin expression starting at /tmp/tmp0varvn0m.jl:9\n"
  stdout: ''
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an integer number and returns its factorial. \n    For example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpam46ldsz.jl:9\nin expression starting at /tmp/tmpam46ldsz.jl:9\n"
  stdout: ''
  timestamp: 1659747377
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    \
    \    choose_num(x, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x\
    \ - 1, y)\n        choose_num(x, y - 1)\n        choose_num(x - 1, y - 1)\n  \
    \      choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x\
    \ - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y -\
    \ 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n   \
    \     choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x\
    \ - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y -\
    \ 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n   \
    \     choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x\
    \ - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y -\
    \ 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n   \
    \     choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x\
    \ - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y -\
    \ 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n   \
    \     choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x\
    \ - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y -\
    \ 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n   \
    \     choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x\
    \ - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y -\
    \ 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n   \
    \     choose_num(x - 1, y - 1)\n        choose_num(x - 1, y - 1)\n        choose_num(x\
    \ - \nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoduqco34.jl:9\nin expression starting at /tmp/tmpoduqco34.jl:9\n"
  stdout: ''
  timestamp: 1659747377
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        then return -1\n    else \n       \
    \ return choose_num(x - 1, y - 1) + 1\nend\nchoose_num(3,4)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer number n and returns\
    \ the sum of its digits. \nFor example, if the number is 123, then the function\
    \ should return 1 + 2 + 3 = 6.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2rr01ks1.jl:9\nin expression starting at /tmp/tmp2rr01ks1.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x+1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 7\nWrite a function that takes an array of numbers and returns\
    \ the sum of the numbers in the array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpudvwge5r.jl:9\nin expression starting at /tmp/tmpudvwge5r.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\nend\nchoose_num(4,5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers and returns the sum\
    \ of the numbers in the array.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp1ug6i0r.jl:9\nin expression starting at /tmp/tmpp1ug6i0r.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y \n        then return -1\n    else if x == 0 || y == 0\
    \ \n        then return 0\n    else if x % 2 == 0 && y % 2 == 0 \n        then\
    \ return choose_num(x / 2, y / 2)\n    else if x % 2 == 0 && y % 2 != 0 \n   \
    \     then return choose_num(x / 2, y)\n    else if x % 2 != 0 && y % 2 == 0 \n\
    \        then return choose_num(x, y / 2)\n    else if x % 2 != 0 && y % 2 !=\
    \ 0 \n        then return choose_num(x, y)\n    else return -1\nend\nchoose_num(4,6)\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes two positive numbers\
    \ x and y and returns the biggest odd number that is in the range [x, y] inclusive.\
    \ If there's no such number, then the function should return -1.\nusing Test\n\
    \n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\
    \t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpry7nr36u.jl:9\nin expression starting at /tmp/tmpry7nr36u.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        end if\n    if x == y\n\
    \        then return x\n    else \n        choose_num(x + 1, y)\n    end if\n\
    end function\n</code>\n<|/ a tags=julia,recursion |>\n<| c |>\nI believe that\
    \ your function should return `choose_num(x + 1, y)` instead of `choose_num(y,\
    \ x)`.\n<|/ c |>\n<| c |>\nI believe that your function should return `choose_num(x\
    \ + 1, y)` instead of `choose_num(y, x)`.\n<|/ c |>\n<| c |>\nI believe that your\
    \ function should return `choose_num(x + 1, y)` instead of `choose_num(y, x)`.\n\
    <|/ c |>\n<| c |>\nI believe that your function should return `choose_num(x +\
    \ 1, y)` instead of `choose_num(y, x)`.\n<|/ c |>\n<| a tags=julia,recursion |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp12tr772y.jl:9\nin expression starting at /tmp/tmp12tr772y.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x - 1, y)\nend\nchoose_num(4,6)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its factorial. \nThe factorial of a number $n$ is defined as:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgjujrybv.jl:9\nin expression starting at /tmp/tmpgjujrybv.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        error(\"The given numbers are invalid\"\
    )\n    else if x == 0 || y == 0 \n        error(\"The given numbers are invalid\"\
    )\n    else if x == y \n        return -1\n    else \n        return choose_num(x\
    \ - 1, y - 1) + 1\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work\
    \ for negative numbers. `choose_num(-2, 3)` returns `-1` instead of `-2`.\n<|/\
    \ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<| a\
    \ tags=julia,recursion,function |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphh105hdn.jl:10\nin expression starting at\
    \ /tmp/tmphh105hdn.jl:10\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</cell>\n<text>\nExercise 7\nWrite a function that takes a\
    \ positive integer number and returns its \n    factorial. \n    \n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfaq5np7r.jl:9\nin expression starting at /tmp/tmpfaq5np7r.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\nend\n</code>\n<|/ a tags=julia |>\n<|\
    \ c |>\nThis doesn't work if x is negative and y is positive.\n<|/ c |>\n<| c\
    \ |>\nI didn't say it wouldn't. I'm just saying that it doesn't work if x is negative\
    \ and y is positive.\n<|/ c |>\n<| c |>\nI see. Sorry for the misunderstanding.\n\
    <|/ c |>\n<| a dscore=2 |>\nI wrote a package called \"Mathematics\" that has\
    \ some useful functions for working with numbers. \n<code>\nusing Mathematics\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb0rj82f_.jl:9\nin expression starting at /tmp/tmpb0rj82f_.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 || x > y || y > x \n        then return -1\n    else \n       \
    \ choose_num(x + 1, y - 1)\n    end\nend\nchoose_num(5,6)\n</cell>\n<text>\nExercise\n\
    Write a function that takes a positive integer number and returns its \nfactorial.\
    \ For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx_zcu33e.jl:9\nin expression starting at /tmp/tmpx_zcu33e.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then choose_num(y, x)\n    else\n        choose_num(x, y)\n  \
    \  end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive\
    \ numbers x and y and returns the\n    biggest odd number that is in the range\
    \ [x, y] inclusive. If there's no such\n    number, then the function should return\
    \ -1.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"choose_num\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpbcnw8mb9.jl:9\nin expression starting at /tmp/tmpbcnw8mb9.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x+1, y)\n    end\nend\nchoose_num(4,6)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes two positive numbers x and y and\
    \ returns True if \n    they are equal and False otherwise. \n    \n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpka71jy.jl:9\nin expression starting at /tmp/tmpmpka71jy.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < 0 || y < 0 \n        error(\"Invalid input\")\n    else if x == 0 || y ==\
    \ 0 \n        error(\"Invalid input\")\n    else \n        choose_num(x-1, y-1)\n\
    \    end \nend \nchoose_num(4,5)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes two positive numbers x and y and returns the\n    biggest odd integer\
    \ number that is in the range [x, y] inclusive. If \n    there's no such number,\
    \ then the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp85_h4wlk.jl:10\nin expression starting at\
    \ /tmp/tmp85_h4wlk.jl:10\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        if x == y \n            then\
    \ return x\n        else \n            if x % 2 == 0 \n                then return\
    \ choose_num(x + 1, y)\n            else \n                if y % 2 == 0 \n  \
    \                  then return choose_num(x, y + 1)\n                else \n \
    \                   let x = x + 1\n                    let y = y + 1\n       \
    \             let z = choose_num(x, y)\n                    if z == -1 \n    \
    \                    then return -1\n                    else return z\n    end\n\
    end\nchoose_num(4,5)\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ an integer and returns the number of digits in the number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps8c01no4.jl:9\nin expression starting at /tmp/tmps8c01no4.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 \n        return -1\n    else if x < y \n        return choose_num(x\
    \ - 1, y)\n    else \n        return choose_num(x, y - 1)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(4,5)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a positive integer n and returns the number of \n    digits in n.\
    \ For example, choose_num(12) should return 3.\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjrg3i05w.jl:10\nin expression starting at\
    \ /tmp/tmpjrg3i05w.jl:10\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</code>\n<|/ a tags=julia,function,if-statement |>\n<| c |>\nThis doesn't\
    \ work if you pass it negative numbers. For example, `choose_num(-5, -2)` returns\
    \ `-1`, but should return `-2`.\n<|/ c |>\n<| c |>\nIt doesn't work for negative\
    \ numbers. Try `choose_num(-5, -2)`.\n<|/ c |>\n<| c |>\nOh, I see what you mean.\
    \ Yes, it does work for negative numbers. I guess I misunderstood the question.\
    \ I'll edit the answer.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjgb_m1xx.jl:9\nin expression starting at /tmp/tmpjgb_m1xx.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x - 2, y + 1)\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work. Try it with `choose_num(3,4)`.\n<|/ c |>\n<| c |>\n\
    I see what you mean. Thanks for pointing that out. I edited my answer.\n<|/ c\
    \ |>\n<| a tags=julia,recursion |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe0_ixpd3.jl:9\nin expression starting at /tmp/tmpe0_ixpd3.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y\n        then return x\n  \
    \  else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(4,6)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its factorial. \nThe factorial of a number $n$ is defined as:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6v048yi4.jl:9\nin expression starting at /tmp/tmp6v048yi4.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0 \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(x - 1, y)\n    else \n        then return choose_num(x, y - 1)\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(4,6)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,7)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,8)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,9)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,10)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,11)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,13)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,16)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,17)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,18)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,19)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,20)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,21)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,22)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,23)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,24)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,25)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,26)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,27)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,28)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,29)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(4,30)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(4,31)\n</cell>\n<code language=julia-1.5>\nchoose_num(4,32)\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqzu1z8vf.jl:9\nin expression starting at /tmp/tmpqzu1z8vf.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ q tags=julia,function,if-statement |>\n<| c |>\n\
    Please don't post images of code. Post the code as text in the body of the question.\
    \ Also, please don't post images of error messages. Post the error as text in\
    \ the body of the question. Finally, please don't post images of your IDE. Post\
    \ the IDE as text in the body of the question. Finally, please don't post images\
    \ of your IDE. Post the IDE as text in the body of the question. Finally, please\
    \ don't post images of your IDE. Post the IDE as text in the body of the question.\n\
    <|/ c |>\n<| c |>\nI edited the post and added the code\n<|/ c |>\n<| c |>\nThe\
    \ code you posted is incomplete. Where is the `choose_num` function defined? What\
    \ is the `choose_num` function supposed to do? What is the `choose_num` function\
    \ supposed to return? What is the `choose_num` function supposed to do? What is\
    \ the `choose_num` function supposed to return? What is the `choose_num` function\
    \ supposed to do? What is the `choose_num` function supposed to return? What is\
    \ the `choose_num` function supposed to return? What is the `choose_num` function\
    \ supposed to return? What is the `choose_num` function supposed to return? What\
    \ is the `choose_num` function supposed to return? What is the `choose_num` function\
    \ supposed to return? What is the `choose_num` function supposed to return? What\
    \ is the `choose_num` function supposed to return? What is the `choose_num` function\
    \ supposed to return? What is the `choose_num` function supposed to return? What\
    \ is the `choose_num` function supposed to return? What is the `choose_num` function\
    \ supposed to return? What is the `choose_num` function supposed to return? What\
    \ is the `choose_num` function supposed to return? What is the `choose_num` function\
    \ supposed to return? What is the `choose_num` function supposed to return? What\
    \ is the `choose_num` function supposed to return? What is the `choose_num` function\
    \ supposed to return? What is the `choose_num` function supposed to return? What\
    \ is the `choose_num` function supposed to return? What is the `choose_num` function\
    \ supposed to return? What is the `choose_num` function supposed to return? \n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppyn9m2no.jl:9\nin expression starting at /tmp/tmppyn9m2no.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y\n        then return x\n  \
    \  else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else \n \
    \       then return choose_num(x, y / 2)\nend\nchoose_num(8, 10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer and returns the sum\
    \ of its digits. \nFor example, if the input is 123, the function should return\
    \ 6. \nIf the input is 0, the function should return 0.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5awmkxv5.jl:9\nin expression starting at /tmp/tmp5awmkxv5.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\nchoose_num(3,5)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ two positive numbers x and y and returns the\n    biggest odd number that is\
    \ in the range [x, y] inclusive. If there's no such\n    number, then the function\
    \ should return -1.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxm7ajsf5.jl:9\nin expression starting at /tmp/tmpxm7ajsf5.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    end\nchoose_num(4,5)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a positive integer and returns the next integer after \nthe given integer.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpebybegpy.jl:9\nin expression starting at /tmp/tmpebybegpy.jl:9\n"
  stdout: ''
  timestamp: 1659747378
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    end\nchoose_num(4,5)\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ two positive numbers x and y and returns the\n    biggest odd number that is\
    \ in the range [x, y] inclusive. If there's no such \n    number, then the function\
    \ should return -1.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3oiv5ak7.jl:9\nin expression starting at /tmp/tmp3oiv5ak7.jl:9\n"
  stdout: ''
  timestamp: 1659747379
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ == 0 || y == 0\n        error(\"The function choose_num should receive two positive\
    \ numbers\")\n    else\n        if x % 2 == 0 && y % 2 == 0\n            choose_num(x/2,\
    \ y/2)\n        else\n            if x % 2 == 0\n                choose_num(x/2,\
    \ y)\n            else\n                if y % 2 == 0\n                    choose_num(x,\
    \ y/2)\n                else\n                    choose_num(x, y)\n    end\n\
    end\n</code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nThank you so much! This\
    \ was very helpful!\n<|/ c |>\n<| c |>\nGlad I could help. If this answer solved\
    \ your problem, please consider marking it as accepted (by clicking the check\
    \ mark next to it).\n<|/ c |>\n<| c |>\nI did but since I'm new here it says I\
    \ have to wait 2 minutes before I can accept an answer\n<|/ c |>\n<| c |>\nAh,\
    \ okay. Thanks for letting me know!\n<|/ c |>\n<| a dscore=1 |>\nThe other answers\
    \ here are great, but I thought I'd add my own since I feel like it might help\
    \ someone else in the future.\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeff6dgdv.jl:23\nin expression starting at\
    \ /tmp/tmpeff6dgdv.jl:23\n"
  stdout: ''
  timestamp: 1659747379
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x, y)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzinb0pjx.jl:9\nin expression starting at /tmp/tmpzinb0pjx.jl:9\n"
  stdout: ''
  timestamp: 1659747379
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else \n        choose_num(x + 1, y)\n    end\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it out with x\
    \ = 2 and y = 3.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution\
    \ that works with negative numbers as well.\n<|/ c |>\n<| c |>\nThis doesn't work.\
    \ Try it out with x = 2 and y = 3.\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a solution that works with negative numbers as well.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work. Try it out with x = 2 and y = 3.\n<|/ c |>\n<| a tags=julia,recursion\
    \ |>\nThe other answers here are all correct, but I thought I'd add my own solution\
    \ that is slightly more efficient and doesn't require any global variables:\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxknvqu1p.jl:9\nin expression starting at /tmp/tmpxknvqu1p.jl:9\n"
  stdout: ''
  timestamp: 1659747380
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y\n        then return x\n  \
    \  else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a positive integer number and\
    \ returns its factorial. \nThe factorial of a number $n$ is defined as:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx5wucf4h.jl:9\nin expression starting at /tmp/tmpx5wucf4h.jl:9\n"
  stdout: ''
  timestamp: 1659747380
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a tags=julia,recursion,function |>\n<| c |>\n\
    Thank you for your answer. I was able to solve the problem with your help. I appreciate\
    \ it.\n<|/ c |>\n<| c |>\nYou're welcome. I'm glad it helped. Feel free to accept\
    \ the answer if it solved your problem.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_00a5td5.jl:9\nin expression starting at /tmp/tmp_00a5td5.jl:9\n"
  stdout: ''
  timestamp: 1659747379
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else\n        choose_num(x,\
    \ y)\n    end\nend\n</code>\n<|/ a tags=julia,recursion |>\n<| c |>\nThanks for\
    \ your answer. Your code works perfectly for small numbers, but for large numbers\
    \ it gives me an overflow error. Do you know why this happens?\n<|/ c |>\n<| c\
    \ |>\nI edited my answer to include a solution that works for large numbers. I\
    \ tested it and it works for me on Julia 0.6.2\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. Your code works perfectly for small numbers, but for large numbers\
    \ it gives me an overflow error. Do you know why this happens?\n<|/ c |>\n<| c\
    \ |>\nI edited my answer to include a solution that works for large numbers. I\
    \ tested it and it works for me on Julia 0.6.2\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. Your code works perfectly for small numbers, but for large numbers\
    \ it gives me an overflow error. Do you know why this happens?\n<|/ c |>\n<| a\
    \ tags=julia,recursion |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjvxa65kg.jl:9\nin expression starting at /tmp/tmpjvxa65kg.jl:9\n"
  stdout: ''
  timestamp: 1659747380
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns true if\
    \ the given number is even and false if it is odd.\nusing Test\n\n@testset begin\n\
    \ncandidate = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13,\
    \ 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234,\
    \ 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) ==\
    \ -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_9i_3rj_.jl:9\nin expression starting at /tmp/tmp_9i_3rj_.jl:9\n"
  stdout: ''
  timestamp: 1659747379
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x + 1, y)\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its \nfactorial. For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.\n\
    using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbw3zfaz9.jl:9\nin expression starting at /tmp/tmpbw3zfaz9.jl:9\n"
  stdout: ''
  timestamp: 1659747380
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ > y \n        then return -1\n    else \n        choose_num(x - 1, y)\n    end\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease don't post only code as an answer,\
    \ but also provide an explanation of what your code does and how it solves the\
    \ problem of the question. Answers with an explanation are usually more helpful\
    \ and of better quality, and are more likely to attract upvotes.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work when x is greater than y\n<|/ c |>\n<| c |>\nIt works\
    \ when x is greater than y\n<|/ c |>\n<| c |>\nIt works when x is greater than\
    \ y\n<|/ c |>\n<| c |>\nIt works when x is greater than y\n<|/ c |>\n<| a tags=julia,recursion\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5_ofk33s.jl:9\nin expression starting at /tmp/tmp5_ofk33s.jl:9\n"
  stdout: ''
  timestamp: 1659747380
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(4,5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its factorial. \nThe factorial of a number $n$ is defined as:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12, 15)\
    \ == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) == 12354)\n\
    \t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27,\
    \ 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546, 546) == 546)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5yvtxle2.jl:9\nin expression starting at /tmp/tmp5yvtxle2.jl:9\n"
  stdout: ''
  timestamp: 1659747379
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes two positive numbers x and y and returns the\n    biggest odd number\
    \ that is in the range [x, y] inclusive. If there's no such\n    number, then\
    \ the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6fz_guqi.jl:9\nin expression starting at /tmp/tmp6fz_guqi.jl:9\n"
  stdout: ''
  timestamp: 1659747380
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return -1\n    else if x == y \n        then return x\n \
    \   else \n        choose_num(x + 1, y)\n    end\nend\nchoose_num(3,5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an integer and returns the factorial\
    \ of it.\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyfg8dtel.jl:9\nin expression starting at /tmp/tmpyfg8dtel.jl:9\n"
  stdout: ''
  timestamp: 1659747380
- exit_code: 1
  program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x\
    \ < y \n        then return choose_num(y, x)\n    else \n        choose_num(x,\
    \ y)\n    end\nend\nchoose_num(4,5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes two positive numbers x and y and returns the\n    biggest odd integer\
    \ number that is in the range [x, y] inclusive. If \n    there's no such number,\
    \ then the function should return -1.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqsj_8i2j.jl:9\nin expression starting at /tmp/tmpqsj_8i2j.jl:9\n"
  stdout: ''
  timestamp: 1659747380

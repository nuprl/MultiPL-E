name: HumanEval_63_fibfib
language: jl
prompt: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
  \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
  \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
  \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
  \ == 927)\nend\n"
completions: ["    if n == 0 || n == 1 \n        return 0 \n    else \n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<text>\nExercise 4\n\
    Write a function that computes the factorial of a number.", "    if n == 0 ||\
    \ n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\n</cell>\n<text>\nExercise 2\nWrite a function that computes\
    \ the n-th element of the Fibonacci sequence using recursion.", "    if n == 0\
    \ \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n\
    \    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ... \\times 1 \\times\
    \ 0$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120$", " \
    \   if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n", " \
    \   if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise: Write a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.", "    if n == 0 \n        0\n    else\
    \ if n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(2)\n</cell>\n<text>\nExercise 4\nWrite a function that computes the\
    \ factorial of a number. For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th Fibonacci\
    \ number using the recursive definition of fibfib(n). Test your function by computing\
    \ the first 20 Fibonacci numbers. \nHint: You can use the function fibfib(n) to\
    \ compute the n-th Fibonacci number.", "    if n == 0 || n == 1 \n        return\
    \ n\n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</", " \
    \   if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\n@time fibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1 \n        return 0 \n \
    \   else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ number.", "    if n == 0 || n == 1\n        return n\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.3>\nfibfib(3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.3>\nfibfib(7)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.3>\nfibfib(9)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.3>\nfibfib(11)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.3>\nfibfib(13)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.3>\nfibfib(15)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.3>\nfibfib(17)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.3>\nfibfib(19)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.3>\nfibfib(21)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.3>\nfibfib(23)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.3>\nfibfib(25)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.3>\nfibfib(27)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.3>\nfibfib(29)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.3>\nfibfib(31)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(32)\n</cell>\n<code language=julia-1.3>\nfibfib(", "    if n == 0 || n\
    \ == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the factorial of a given number.\
    \ \nHint: Use a recursive function.", "    if n == 0 || n == 1 \n        return\
    \ n\n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(4)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(6)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.3>\nfibfib(10)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.3>\nfibfib(12)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.3>\nfibfib(14)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.3>\nfibfib(16)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.3>\nfibfib(18)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.3>\nfibfib(20)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.3>\nfibfib(22)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.3>\nfibfib(24)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.3>\nfibfib(26)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.3>\nfibfib(28)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.3>\nfibfib(30)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(31)\n</cell>\n<code language=julia-1.3>\nfibfib(32)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(33", "    if n == 0 || n == 1 \n        return 0 \n    else \n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0 || n ==\
    \ 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(2)\n</cell>\n<text>\nExercise 7\nWrite a function that computes the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    $$n! = n  (n-1)  (n-2)  ...  2  1$$\nWrite a function that computes the factorial\
    \ of a given number using recursion.", "    if n == 0 || n == 1\n        return\
    \ n\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", " \
    \   if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times ...$$\nFor example, 6! = 6 \\times 5  \\times\
    \ 4 \\times 3 \\times 2 \\times 1 = 720.\nWrite a function to compute the factorial\
    \ of a given number using recursion.", "    if n == 0 || n == 1 \n        return\
    \ 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.5>\nfibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(6)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.5>\nfibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.5>\nfibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.5>\nfibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.5>\nfibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.5>\nfibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.5>\nfibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.5>\nfibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.5>\nfibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.5>\nfibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.5>\nfibfib(28)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.5>\nfibfib(31)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(0)\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(2)\n</cell", "    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    if n == 0 || n == 1 \n        return 0 \n    else \n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype fibfib(0)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(1)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(4)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(5)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(6)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(7)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(8)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(11)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(12)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(13)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype fibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(15)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(16)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(17)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(18)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype fibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(20)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(21)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(22)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(23)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <text>\nExercise: Write a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1 \n        return 0 \n \
    \   else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(2)\n</cell>\n<code language=julia-1.5>\nfibfib(3)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(6)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.5>\nfibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.5>\nfibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.5>\nfibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.5>\nfibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.5>\nfibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.5>\nfibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.5>\nfibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.5>\nfibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.5>\nfibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.5>\nfibfib(28)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.5>\nfibfib(31)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(40)\n</cell>\n<code language=julia-1.5>\nfibfib(41)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(42)", "    if n == 0 || n == 1 \n        0\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite a function\
    \ to compute the factorial of a given number using recursion.", "    if n == 0\
    \ || n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the factorial of a number.", "    if n == 0 || n == 1 \n        return\
    \ 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend",
  "    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(0)\n</cell>\n\
    <code language=julia-1.4>\nfibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(3)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.4>\nfibfib(5)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.4>\nfibfib(7)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.4>\nfibfib(9)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.4>\nfibfib(11)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.4>\nfibfib(13)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.4>\nfibfib(15)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.4>\nfibfib(17)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.4>\nfibfib(19)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.4>\nfibfib(21)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.4>\nfibfib(23)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.4>\nfibfib(25)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.4>\nfibfib(27)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.4>\nfibfib(29)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.4>\nfibfib(31)", "    if n == 0 ||\
    \ n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n\
    <code language=julia-1.3>\nfibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(4)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.0>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise 3\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using memoization.", "    if n == 0 || n == 1 \n        return 0 \n\
    \    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(n);\n</cell>\n<text>\nExercise\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0 || n ==\
    \ 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1 \n        return 0 \n \
    \   else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        1\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(0)\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.0>\nfibfib(4)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(6)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.0>\nfibfib(10)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.0>\nfibfib(12)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.0>\nfibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.0>\nfibfib(16)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.0>\nfibfib(18)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.0>\nfibfib(20)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.0>\nfibfib(22)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.0>\nfibfib(24)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.0>\nfibfib(26)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.0>\nfibfib(28)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.0>\nfibfib(30)\n</", "    if n ==\
    \ 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1 \n        then 0\n    else\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    if n == 0 || n == 1 \n        return 0 \n    else \n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0 ||\
    \ n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nfibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n\
    \        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nfibfib(n::Int64)::Int64\n \
    \   if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nfibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n\
    \        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nfibfib(n::Int64)::Int64\n \
    \   if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nfibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n\
    \        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2", "   \
    \ if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(0)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.0>\nfibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>\nfibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfib", "    if n == 0 || n == 1 \n \
    \       return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0 \n        0\n    else if n == 1 \n        0\n  \
    \  else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function to compute the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\\
    times .... 1 \\times 0$$\nWrite a function to compute the factorial of a given\
    \ number using recursion.", "    if n == 0 || n == 1 \n        return 0 \n   \
    \ else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(n);\n</cell>\n<text>\nExercise 2\nWrite a function to compute the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0 then\
    \ 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 || n == 1 \n        return 0 \n    else \n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(2)\n</cell>\n<text>\nExercise\nWrite a function\
    \ to compute the n-th element of the Fibonacci number sequence using recursion.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise: Write\
    \ a function that computes the n-th Fibonacci number using recursion.", "    if\
    \ n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0", "    if n\
    \ == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n\
    </cell>\n<text>\nExercise: Write a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.", "    if n == 0 || n == 1 \n        then\
    \ 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<text>\nExercise\nWrite a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the n-th Fibonacci number using recursion.", "    if n == 0 ||\
    \ n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n", "    if n == 0 || n\
    \ == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    elseif n == 1\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "    if n == 0 || n == 1 \n        return 0 \n    else \n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\n\
    Exercise\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1\
    \ \\times n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120$", "    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code\
    \ language=julia-1.3>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.", " \
    \   if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n  \
    \      1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite a function\
    \ that computes the factorial of a given number using recursion.", "    if n ==\
    \ 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n       \
    \ 1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ number.", "    if n == 0 || n == 1 \n        return 0 \n    else \n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.3>\n@time fibfib(2)\n</cell>", "    if n == 0\n        0\n\
    \    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\nfibfib(2)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the n-th Fibonacci\
    \ number using the recursive definition of Fibonacci numbers. \nThe function should\
    \ take one parameter, the number of the Fibonacci number to be computed.\nThe\
    \ function should return the computed Fibonacci number.", "    if n == 0 || n\
    \ == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "    if n == 0 || n == 1\n        return 0\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function to compute the factorial of a number.", "    if n\
    \ == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n", "    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    if n == 0 || n == 1 \n        return 0 \n    else \n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the factorial\
    \ of a given number. \nFor example, factorial(3) == 3 * 2 * 1", "    if n == 0\
    \ \n        0\n    else if n == 1 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.", "    if n == 0 \n        0\n    else if\
    \ n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nFor example, factorial(4) == 24. \nHint: use the factorial function\
    \ from the Base package.", "    if n == 0 \n        0\n    else if n == 1 \n \
    \       0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\nfibfib(0)\n</cell>\n\
    <code language=julia-1.3>\nfibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.3>\nfibfib(7)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.3>\nfibfib(9)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.3>\nfibfib(11)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.3>\nfibfib(13)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.3>\nfibfib(15)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.3>\nfibfib(17)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.3>\nfibfib(19)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.3>\nfibfib(21)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.3>\nfibfib(23)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.3>\nfibfib(25)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.3>\nfibfib(27)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.3>\nfibfib(29)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(30)", "    if n == 0 || n == 1 \n        return 0 \n    else \n       \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times\
    \ 3 \\times 2 \\times 1 = 120$", "    if n == 0\n        0\n    else\n       \
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0\n   \
    \     0\n    elseif n == 1\n        1\n    elseif n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 || n == 1 \n        then 0\n    else \n  \
    \      fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 || n == 1 \n        return 0 \n    else \n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(n);\n</cell>\n<text>\nExercise 2\nWrite a function to compute the\
    \ n-th element of the Fibonacci sequence using memoization.", "    if n == 0 then\
    \ 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 \n        0\n    else if n == 1 \n       \
    \ 0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1 \n        return 0 \n \
    \   else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<text>\nExercise\nWrite a\
    \ function to compute the n-th element of the Fibonacci sequence using memoization.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the factorial of a given number. \nFor example, factorial(5) = fib(5)\
    \ = 5.", "    if n == 0 || n == 1\n        return 0\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(0)\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(4)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(7)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(27)\n</cell>\n<code language=juli", "    if n == 0 || n == 1 \n \
    \       return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(2)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0", "    if n == 0 || n == 1 \n        return\
    \ 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(0)\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(3)\n</cell>\n<code language=julia-1.0>\n@time fibfib(4)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(6)\n</cell>\n<code language=julia-1.0>\n@time fibfib(7)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(8)\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(9)\n</cell>\n<code language=julia-1.0>\n@time fibfib(10)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.0>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.0>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.0>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(20)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.0>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.0>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(26)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(27)\n</cell>\n<code language=", "    if n == 0 || n == 1 \n     \
    \   return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(n);\n</cell>\n<text>\nExercise\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\nfibfib(2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the factorial of a number.", "    if n == 0 ||\
    \ n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n\
    <text>\nExercise: Write a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1 \n        then 0\n    else\
    \ \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that computes the factorial of a number.\
    \ \nThe factorial of a number is defined as the product of all positive integers\
    \ less than or equal to the number. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\
    \ \nWrite a recursive function factorial that computes the factorial of a number.\
    \ \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.", "    if n == 0 || n\
    \ == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise: Write a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-", "    if n == 0 || n == 1 \n        return 0 \n    else \n    \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 || n == 1 \n        return 0 \n    else \n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function to compute the factorial of a number. For example,\
    \ factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n == 0 \n        0\n    else\
    \ if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(4)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(7)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(10)\n</cell>\n<code language=julia-1.5>\n@time fibfib(11)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(13)\n</cell>\n<code language=julia-1.5>\n@time fibfib(14)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(16)\n</cell>\n<code language=julia-1.5>\n@time fibfib(17)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(19)\n</cell>\n<code language=julia-1.5>\n@time fibfib(20)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(22)\n</cell>\n<code language=julia-1.5>\n@time fibfib(23)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(25)\n</cell>\n<code language=julia-1.5>\n@time fibfib(26)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(27)\n</cell>\n", "    if n == 0 || n ==\
    \ 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(0)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(3)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(4)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(6)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(7)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(9)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(10)\n</cell>\n<code language=julia-1.5>\n@time fibfib(11)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(13)\n</cell>\n<code language=julia-1.5>\n@time fibfib(14)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(16)\n</cell>\n<code language=julia-1.5>\n@time fibfib(17)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(19)\n</cell>\n<code language=julia-1.5>\n@time fibfib(20)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(22)\n</cell>\n<code language=julia-1.5>\n@time fibfib(23)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(25)\n</cell>\n<code language=julia-1.5>\n@time fibfib(26)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(27)\n</cell>\n<code language=", "    if\
    \ n == 0 \n        0\n    else if n == 1 \n        0\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120$", "    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(0)\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.0>\nfibfib(4)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(6)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.0>\nfibfib(10)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.0>\nfibfib(12)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.0>\nfibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.0>\nfibfib(16)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.0>\nfibfib(18)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.0>\nfibfib(20)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.0>\nfibfib(22)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.0>\nfibfib(24)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.0>\nfibfib(26)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.0>\nfibfib(28)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.0>\nfibfib(30)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(31)", "    if n == 0 || n == 1 \n        return 0 \n    else \n       \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a given number. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7\
    \ 1", "    if n == 0 || n == 1 \n        return 0 \n    else \n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(3)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(4)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(6)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(8)\n</cell>\n<code language=julia-1.0>\n@time fibfib(9)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(10)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(11)\n</cell>\n<code language=julia-1.0>\n@time fibfib(12)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(13)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(14)\n</cell>\n<code language=julia-1.0>\n@time fibfib(15)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(16)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(17)\n</cell>\n<code language=julia-1.0>\n@time fibfib(18)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(20)\n</cell>\n<code language=julia-1.0>\n@time fibfib(21)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(22)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(23)\n</cell>\n<code language=julia-1.0>\n@time fibfib(24)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(25)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(26)\n</cell>\n<code language=julia-1.0>\n@time fibfib(27)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(28)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(29)\n</cell>", "    if n == 0 || n == 1 \n        0\n    else \n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:5\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:10\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:100\n</cell>\n\
    <code language=julia-1.0>\nfibfib(n) for n in 0:1000\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:10000\n</cell>\n<code language=julia-1.0>\nfibfib(n) for\
    \ n in 0:100000\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:1000000\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:10000000\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:100000000\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:1000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:10000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n\
    \ in 0:100000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:1000000000000\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:10000000000000\n</cell>\n\
    <code language=julia-1.0>\nfibfib(n) for n in 0:100000000000000\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:1000000000000000\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:10000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:100000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:1000000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:10000000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:100000000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:1000000000000000000000\n</cell>\n", "    if n == 0 \n        0\n\
    \    else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n \
    \       fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if n == 0 || n ==\
    \ 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(2)\n</cell>\n<text>\nExercise\nWrite a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0 then\
    \ 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that computes the factorial of a given number. For\
    \ example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n == 0\n        0\n\
    \    else\n        if n == 1\n            0\n        else\n            if n ==\
    \ 2\n                1\n            else\n                fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        end\n    end\nend\nfibfib(n::Int64)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(n);\n</cell>\n<text>\nExercise: Write a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0 || n ==\
    \ 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    $$n! = n \\times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite a function\
    \ that computes the factorial of a given number using recursion.", "    if n ==\
    \ 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n       \
    \ 1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(2)\n</cell>\n<code language=julia-1.5>\nfibfib(3)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(100)\n</cell>\n<code language=julia-1.5>\nfibfib(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(10000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10000000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000000)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10000000000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10000000000000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10000000000000000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(10000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(100000000000000000000)\n</cell>\n<code language=julia-1.5>\nfibfib(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(100000000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1000000000000000000000000)\n</cell>\n", "    if n == 0 \n        0\n  \
    \  else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n   \
    \     fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that computes the factorial of a given number. For example,\
    \ factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if n == 0 || n == 1\n       \
    \ return n\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th element\
    \ of the Fibonacci sequence using recursion.", "    if n == 0 \n        0\n  \
    \  else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n   \
    \     fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.0>\nfibfib(4)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(6)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.0>\nfibfib(10)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.0>\nfibfib(12)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.0>\nfibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.0>\nfibfib(16)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.0>\nfibfib(18)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.0>\nfibfib(20)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.0>\nfibfib(22)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.0>\nfibfib(24)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.0>\nfibfib(26)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.0>\nfibfib(28)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.0>\nfibfib(30)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(3", "    if n == 0 || n == 1 \n        return 0 \n    else \n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the factorial\
    \ of a given number. \nFor instance, the factorial of $5$ is $5 * 4 * 3 * 2 *\
    \ 1$. \nThe factorial of $0$ is $1$. \nThe factorial of negative numbers is $NaN$.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1\
    \ \\times 0 $$\nWrite a function that computes the factorial of a given number\
    \ using recursion.", "    if n == 0 || n == 1 \n        return 0 \n    else \n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0 || n ==\
    \ 1\n        return 0\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=", "    if n == 0 || n == 1 \n        then 0 \n    else \n    \
    \    fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\n\
    Exercise\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0\n        0\n    elseif n == 1\n        1\n\
    \    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the factorial of a given number.\
    \ Hint: use the factorial function defined above.", "    if n == 0 \n        0\n\
    \    else if n == 1 \n        1\n    else if n == 2 \n        1\n    else \n \
    \       fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.0>\nfibfib(100)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1000)\n</cell>\n<code language=julia-1.0>\nfibfib(10000)\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(100000)\n</cell>\n<code language=julia-1.0>\nfibfib(1000000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(10000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(100000000)\n</cell>\n<code language=julia-1.0>\nfibfib(1000000000)\n</cell>\n\
    <code language=julia-1.0>\nfibfib(10000000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(100000000000)\n</cell>\n<code language=julia-1.0>\nfibfib(1000000000000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(10000000000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(100000000000000)\n</cell>\n<code language=julia-1.0>\nfibfib(1000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(10000000000000000)\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(100000000000000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1000000000000000000)\n</cell>\n<code language=julia-1.0>\nfibfib(10000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(100000000000000000000)\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(1000000000000000000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10000000000000000000000)\n</cell>\n<code language=julia-1.0>\nfibfib(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1000000000000000000000000)\n</cell>\n",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ Fibonacci number in the Fibonacci sequence (defined above).", "    if n == 0\
    \ \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n\
    \    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\n\
    Exercise 7\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as the product of all the numbers from\
    \ 1 to $n$. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.\
    \ \nWrite a function that computes the factorial of a given number using recursion.\
    \ \nThe factorial of a number $n$ is defined as the product of all the numbers\
    \ from 1 to $n$. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 =\
    \ 120. \nWrite a function that computes the factorial of a given number using\
    \ iteration. \nThe factorial of a number $n$ is defined as the product of all\
    \ the numbers from 1 to $n$. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7\
    \ 2 \xD7 1 = 120. \nWrite a function that computes the factorial of a given number\
    \ using an iterative loop. \nThe factorial of a number $n$ is defined as the product\
    \ of all the numbers from 1 to $n$. \nFor example, factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1 = 120. \nWrite a function that computes the factorial of a given\
    \ number using an iterative loop. \nThe factorial of a number $n$ is defined as\
    \ the product of all the numbers from 1 to $n$. \nFor example, factorial(5) =\
    \ 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120. \nWrite a function that computes the factorial\
    \ of a given number using recursion. \nThe factorial of a number $n$ is defined\
    \ as the product of all the numbers from 1 to $n$. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120. \nWrite a function that computes the\
    \ factorial of a given number using recursion. \nThe factorial of a number $n$\
    \ is defined as the product of all the numbers from 1 to $n$. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120. \nWrite a function that computes the\
    \ factorial of a given number using recursion. \nThe factorial of a number $n$\
    \ is defined ", "    if n == 0 \n        0\n    else if n == 1 \n        0\n \
    \   else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as the product of all positive integers less than or equal to $n$. \nFor example,\
    \ the factorial of $3$ is $6$, the factorial of $5$ is $120$, the factorial of\
    \ $6$ is $720$, and so on. \nWrite a recursive function factorial(n) that computes\
    \ the factorial of a given number.", "    if n == 0 || n == 1 \n        return\
    \ 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a\
    \ function that computes the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that\
    \ computes the factorial of a given number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    $$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of\
    \ a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...", " \
    \   if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<text>\nExercise: Write a\
    \ function that computes the n-th Fibonacci number using the recursive formula.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "    if n == 0 || n == 1 \n        return\
    \ 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.5>\nfibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(6)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.5>\nfibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.5>\nfibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.5>\nfibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.5>\nfibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.5>\nfibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.5>\nfibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.5>\nfibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.5>\nfibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.5>\nfibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.5>\nfibfib(28)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.5>\nfibfib(31)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(40)\n</cell>\n<code language=julia-1.5>\nfibfib(41)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(42)", "    if n == 0 || n == 1 \n        return 0 \n    else \n       \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the nth Fibonacci\
    \ number in the Fibbonacci sequence using recursion.", "    if n == 0 || n ==\
    \ 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ Fibonacci number using the recursive definition of fibfib(n). \nThe function\
    \ should take in input a positive integer n and return the n-th Fibonacci number.",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0 || n == 1\n        return n\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0 || n ==\
    \ 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3) \nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the factorial of a given number.\
    \ For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if n == 0 || n ==\
    \ 1 \n        then 0 \n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0\n        0\n    else if n == 1\n        0\n\
    \    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\nfibfib(n::Int64)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the factorial of a number. For example, factorial(5) = 5 * 4 *\
    \ 3 * 2 * 1 = 120", "    if n == 0 || n == 1 \n        return 0 \n    else \n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code\
    \ language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(2)\n</cell>\n<text>\nExercise: Write a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0 || n ==\
    \ 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(0)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(10)\n</cell>\n\
    <text>\nExercise: Write a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1 \n        return 0 \n \
    \   else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</", " \
    \   if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.0>\nfibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>\nfibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.0>\nfibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.0>\nfibfib(13)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.0>\nfibfib(15)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.0>\nfibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.0>\nfibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.0>\nfibfib(21)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.0>\nfibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.0>\nfibfib(25)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.0>\nfibfib(27)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.0>\nfibfib(29)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.0>\nfibfib(31)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(32)\n</cell>\n<code language=julia-1.0>\nfibfib(33", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(27)\n</cell>\n<code language=julia-1.5>\n@time fibfib(28)\n</cell>\n",
  "    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ Fibonacci number in the Fibonacci sequence. \nThe Fibonacci sequence is defined\
    \ as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n    fibfib(2) == 1\n  \
    \  fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n    Please write a function\
    \ to efficiently compute the n-th element of the fibfib number sequence.\nHint:\
    \ Use recursion.", "    if n == 0 || n == 1 \n        return 0 \n    else \n \
    \       return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(n);\n</cell>\n<text>\nExercise 2\nWrite a function to compute the\
    \ factorial of a given number. \nHint: Use a recursive function.", "    if n ==\
    \ 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n", " \
    \   if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times\
    \ 1 = 120$", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else\
    \ if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(4)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(7)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(27)\n</cell>\n<code language=julia-1.5>\n@time fibfib(28)\n</cell>",
  "    if n == 0 || n == 1 \n        then 0 \n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(3)\n</cell>\n<code language=julia-1.0>\n@time fibfib(4)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(6)\n</cell>\n<code language=julia-1.0>\n@time fibfib(7)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(8)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(9)\n</cell>\n<code language=julia-1.0>\n@time fibfib(10)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.0>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.0>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.0>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(20)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.0>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.0>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(26)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(27)\n</cell>\n<code language=julia-1.0>\n@time fibfib(28)\n</cell>\n",
  "    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(n);\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th Fibonacci number using the recursive\
    \ formula.", "    if n == 0 || n == 1 \n        return 0 \n    else \n       \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\n\
    Problem 7\nWrite a function that computes the factorial of a number.", "    if\
    \ n == 0\n        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<text>\nExercise\nWrite a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0 ||\
    \ n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(0)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(3)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(6)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time fibfib(9)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(11)\n</cell>\n<code language=julia-1.5>\n@time fibfib(12)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(14)\n</cell>\n<code language=julia-1.5>\n@time fibfib(15)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(17)\n</cell>\n<code language=julia-1.5>\n@time fibfib(18)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(20)\n</cell>\n<code language=julia-1.5>\n@time fibfib(21)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(23)\n</cell>\n<code language=julia-1.5>\n@time fibfib(24)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(26)\n</cell>\n<code language=julia-1.5>\n@time fibfib(27)\n</cell>\n",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a\
    \ function that computes the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that\
    \ computes the factorial of a given number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    $$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of\
    \ a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2 \
    \ 1  $$\nWrite a function that computes the ", "    if n == 0 \n        0\n  \
    \  else if n == 1 \n        1\n    else if n == 2 \n        1\n    else \n   \
    \     fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if n == 0 || n == 1\
    \ \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ \nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 \n        0\n    else if n == 1 \n       \
    \ 0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1 \n        return 0 \n \
    \   else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the factorial of a given number. \nHint: use recursion.", "    if\
    \ n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<text>\nExercise: Write a function that computes\
    \ the n-th element of the Fibonacci sequence using recursion.", "    if n == 0\
    \ || n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype fibfib(2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0 || n == 1 \n        return 0 \n    else \n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(3)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(6)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time fibfib(9)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(11)\n</cell>\n<code language=julia-1.5>\n@time fibfib(12)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(14)\n</cell>\n<code language=julia-1.5>\n@time fibfib(15)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(17)\n</cell>\n<code language=julia-1.5>\n@time fibfib(18)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(20)\n</cell>\n<code language=julia-1.5>\n@time fibfib(21)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(23)\n</cell>\n<code language=julia-1.5>\n@time fibfib(24)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(26)\n</cell>\n<code language=julia-1.5>\n@time fibfib(27)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(28)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(29)\n</cell", "    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code\
    \ language=julia-1.4>\nfibfib(2)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(2)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.", "    if n == 0 || n == 1 \n        then 0\n\
    \    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n\
    </cell>\n<text>\nExercise 4\nWrite a function that computes the factorial of a\
    \ given number. \nHint: use recursion.", "    if n == 0 || n == 1 \n        return\
    \ 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n::Int64) = (n==", "    if n == 0 || n == 1 \n        then 0\n    else\
    \ \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the factorial of a given number.\
    \ \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n == 0 || n\
    \ == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell",
  "    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ computes the factorial of a number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 0 $$\nWrite a function\
    \ that computes the factorial of a number using recursion.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\\
    times 0 $$\nWrite a function that computes the factorial of a number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times .... 1 \\times 0 $$\nWrite a function that computes the factorial of\
    \ a number using recursion.\nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 \\times .... 1 \\times 0 $$\nWrite a function that\
    \ computes the factorial of a number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times\
    \ 0 $$\nWrite a function that computes the factorial of a number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times .... 1 \\times 0 $$\nWrite a function that computes the factorial of\
    \ a number using recursion.\nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 \\times .... 1 \\times 0 $$\nWrite a function that\
    \ computes the factorial of a number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times\
    \ 0 $$\nWrite a function that computes the factorial of a number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times .... 1 \\times 0 $$\nWrite a function that computes the factorial of\
    \ a number using recursion.\nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 ", "    if n == 0 || n == 1 \n        then 0\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.0>\n@time fibfib(0)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-3)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-4)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-6)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-7)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-8)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-9)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-10)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-11)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-12)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-13)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-14)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-15)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-16)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-17)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-18)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-19)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-20)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-21)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-22)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-23)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-24)\n</cell>\n\
    <code language=julia-1.0", "    if n == 0 || n == 1 \n        then 0\n    else\
    \ \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that computes the factorial of a number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times .... 1 \\times 0 $$\nFor example, $5! = 5 \\times 4 \\times 3 \\\
    times 2 \\times 1 = 120$", "    if n == 0 || n == 1 \n        then 0\n    else\
    \ \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n\
    <text>\nExercise\nWrite a function that computes the n-th Fibonacci number using\
    \ the recursive definition of fibfib().", "    if n == 0 || n == 1 \n        return\
    \ n\n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(0)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-3)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-4)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-6)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-7)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-8)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-9)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-10)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-11)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-12)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-13)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-14)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-15)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-16)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-17)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-18)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-19)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-20)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-21)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-22)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-23)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-24)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-25)\n</cell>\n<code language=julia-",
  "    if n == 0 || n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ to compute the factorial of a number.", "    if n == 0 \n        0\n    else\
    \ if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(3)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.5>\nfibfib(7)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.5>\nfibfib(9)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.5>\nfibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.5>\nfibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.5>\nfibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.5>\nfibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.5>\nfibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.5>\nfibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.5>\nfibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.5>\nfibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.5>\nfibfib(27)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.5>\nfibfib(29)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.5>\nfibfib(31)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(", "    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    if n == 0 || n == 1 \n        return 0 \n\
    \    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(4)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(7)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(27)\n</cell>\n<code language=julia-1.5>\n@time fibfib(28)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(29)\n</cell", "    if n == 0 || n == 1\
    \ \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ \nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function to compute the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 || n == 1 \n        return 0 \n    else \n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(n);\n</cell>\n<text>\nExercise 2\nWrite a function that computes\
    \ the n-th element of the Fibonacci sequence using recursion.", "    if n == 0\
    \ || n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.", "    if n == 0 || n == 1 \n        return 0 \n    else \n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>", "    if n == 0 || n == 1\n\
    \        return n\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function to compute the factorial of a given number. For example,\
    \ factorial(4) == 24. Make sure your function works with negative numbers as well.",
  "    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if\
    \ n == 0 || n == 1\n        return 0\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1\n        return n\n   \
    \ else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(0)\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(-1)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-3)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-4)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-5)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-6)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-7)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-8)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-9)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-10)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-11)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-12)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-13)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-14)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-15)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-16)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-17)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-18)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-19)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-20)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-21)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-22)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-23)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-24)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-25)\n</cell>\n<code language=julia-", "    if n == 0 || n == 1 \n\
    \        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ \nend\nfibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.4>\n\
    @time fibfib(n);\n</cell>\n<text>\nExercise 3\nWrite a function to compute the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0 ||\
    \ n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.0>\nfibfib(4)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(6)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.0>\nfibfib(10)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.0>\nfibfib(12)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.0>\nfibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.0>\nfibfib(16)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.0>\nfibfib(18)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.0>\nfibfib(20)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.0>\nfibfib(22)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.0>\nfibfib(24)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.0>\nfibfib(26)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.0>\nfibfib(28)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.0>\nfibfib(31)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(40)\n</cell>\n<code language=julia-1.0>\nfibfib(41)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(42)", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.0>\nfibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>\nfibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.0>\nfibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.0>\nfibfib(13)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.0>\nfibfib(15)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.0>\nfibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.0>\nfibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.0>\nfibfib(21)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.0>\nfibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.0>\nfibfib(25)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.0>\nfibfib(27)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.0>\nfibfib(29)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.0>\nfibfib(31)\n", "    if n == 0\
    \ \n        0\n    else if n == 1 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "    if n == 0 || n == 1 \n        0\n  \
    \  else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if n ==\
    \ 0 || n == 1\n        return n\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n", "    if n == 0 || n == 1 \n        return 0 \n  \
    \  else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.", "    if n == 0 || n == 1 \n      \
    \  then 0\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite a function that computes\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 2\
    \ \\times 1$$\nWrite a function that computes the factorial of a given number\
    \ using recursion and a while loop.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite\
    \ a function that computes the factorial of a given number using recursion and\
    \ a while loop and a for loop.\nThe factorial of a number $n$ is defined as:\n\
    $$n! = n \\times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$", "    if\
    \ n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2 \
    \ 1  $$\nWrite a function that computes the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1\
    \  $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a\
    \ function that computes the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that\
    \ computes the factorial of a given number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...", "    if n == 0 \n        0\n    else if n\
    \ == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(4)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(7)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(10)\n</cell>\n<code language=julia-1.5>\n@time fibfib(11)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(13)\n</cell>\n<code language=julia-1.5>\n@time fibfib(14)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(16)\n</cell>\n<code language=julia-1.5>\n@time fibfib(17)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(19)\n</cell>\n<code language=julia-1.5>\n@time fibfib(20)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(22)\n</cell>\n<code language=julia-1.5>\n@time fibfib(23)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(25)\n</cell>\n<code language=julia-1.5>\n@time fibfib(26)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(27)\n</cell>\n<code language=", "    if\
    \ n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>", "    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the nth element of the\
    \ Fibonacci sequence using recursion.", "    if n == 0 \n        0\n    else if\
    \ n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(3)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that computes the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 $$\n\
    For example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120$", "    if\
    \ n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.", "    if n\
    \ == 0 \n        0\n    else if n == 1 \n        1\n    else if n == 2 \n    \
    \    1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(2)\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ to compute the factorial of a given number. For example, factorial(5) = 5 *\
    \ 4 * 3 * 2 * 1 = 120.", "    if n == 0 || n == 1 \n        return n\n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(0)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(4)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(7)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(10)\n</cell>\n<code language=julia-1.5>\n@time fibfib(11)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(13)\n</cell>\n<code language=julia-1.5>\n@time fibfib(14)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(16)\n</cell>\n<code language=julia-1.5>\n@time fibfib(17)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(19)\n</cell>\n<code language=julia-1.5>\n@time fibfib(20)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(22)\n</cell>\n<code language=julia-1.5>\n@time fibfib(23)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(25)\n</cell>\n<code language=julia-1.5>\n@time fibfib(26)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(27)\n</cell>\n<code language=", "    if\
    \ n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that computes the factorial of a number.", "    if n == 0 || n ==\
    \ 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(2)\n</cell>\n<text>\nExercise: Write a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0 ||\
    \ n == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(0)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-1)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-4)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-5)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-7)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-8)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-10)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-25)\n</cell>\n\
    <code language=julia-", "    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number is\
    \ defined as the product of all positive integers less than or equal to the number.\n\
    For example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\nWrite a function that computes the\
    \ factorial of a given number using recursion.", "    if n == 0 || n == 1 \n \
    \       return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function to compute the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n == 0 || n == 1\n        return\
    \ n\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if\
    \ n == 0\n        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(3)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(4)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(6)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(7)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(9)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(10)\n</cell>\n<code language=julia-1.5>\n@time fibfib(11)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(13)\n</cell>\n<code language=julia-1.5>\n@time fibfib(14)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(16)\n</cell>\n<code language=julia-1.5>\n@time fibfib(17)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(19)\n</cell>\n<code language=julia-1.5>\n@time fibfib(20)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(22)\n</cell>\n<code language=julia-1.5>\n@time fibfib(23)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(25)\n</cell>\n<code language=julia-1.5>\n@time fibfib(26)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(27)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfi"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

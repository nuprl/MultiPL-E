language: jl
name: HumanEval_40_triples_sum_to_zero
results:
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for x in\
    \ l\n        sum += x\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1emziw9k.jl:18\nin expression starting at\
    \ /tmp/tmp1emziw9k.jl:18\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l, [],\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp38ds3444.jl:15\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Any}, ::Int64)\n  Closest
    candidates are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmp38ds3444.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp38ds3444.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38ds3444.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38ds3444.jl:14\n'''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2]\
    \ = 1\n    triples_sum_to_zero[3] = 1\n    \n    for x in l\n        if triples_sum_to_zero[x]\
    \ == 1\n            return true\n        end\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplt_318o7.jl:21\nin expression starting at\
    \ /tmp/tmplt_318o7.jl:21\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = @view\
    \ l == [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: ArgumentError: Invalid use of @view macro: argument must\
    \ be a reference expression A[...].\nStacktrace:\n [1] var\"@view\"(__source__::LineNumberNode,\
    \ __module__::Module, ex::Any)\n   @ Base ./views.jl:136\n [2] #macroexpand#51\n\
    \   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n\
    \ [4] docm(source::LineNumberNode, mod::Module, meta::Any, ex::Any, define::Bool)\
    \ (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode,\
    \ ::Module, ::String, ::Vararg{Any})\n   @ Core ./boot.jl:517\nin expression starting\
    \ at /tmp/tmpmdo39ia6.jl:1\nin expression starting at /tmp/tmpmdo39ia6.jl:1\n"
  stdout: ''
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true\n        end\n    end\n    return triples_sum_to_zero\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplpxcnb8l.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmplpxcnb8l.jl:21\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplpxcnb8l.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplpxcnb8l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplpxcnb8l.jl:22\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplpxcnb8l.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplpxcnb8l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplpxcnb8l.jl:24\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplpxcnb8l.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplpxcnb8l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplpxcnb8l.jl:25\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplpxcnb8l.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplpxcnb8l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplpxcnb8l.jl:28\n  Expression: candidate([1, 3, 5, -100]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/j"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    \n    for i in 1:3\n        triples_sum_to_zero[i] =\
    \ sum(l[(i-1)*3:i*3])\n    end\n    \n    if triples_sum_to_zero[1]==0 && triples_sum_to_zero[2]==0\
    \ && triples_sum_to_zero[3]==0\n        return true\n    else\n        return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    triples_sum_to_zero\
    \ takes a list of integers as an input.\n    it returns True if there are three\
    \ distinct elements in the list that\n    sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6hpj3l3q.jl:21\nin expression starting at\
    \ /tmp/tmp6hpj3l3q.jl:21\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = triples_sum_to_zero(l)\n\
    \    if triples_sum_to_zero == true\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpx7pecsd_.jl:20\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpx7pecsd_.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx7pecsd_.jl:20 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx7pecsd_.jl:19\ntest set: Error
    During Test at /tmp/tmpx7pecsd_.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpx7pecsd_.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx7pecsd_.jl:21 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx7pecsd_.jl:19\ntest set: Error
    During Test at /tmp/tmpx7pecsd_.jl:22\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpx7pecsd_.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx7pecsd_.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx7pecsd_.jl:19\ntest set: Error
    During Test at /tmp/tmpx7pecsd_.jl:23\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_sum_to_zero not defin'
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x == 0 || x == -x || x == -x-x\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9l3r0nzs.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp9l3r0nzs.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9l3r0nzs.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9l3r0nzs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9l3r0nzs.jl:24\n  Expression: candidate([1, 3, -2, 1]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9l3r0nzs.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9l3r0nzs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9l3r0nzs.jl:27\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9l3r0nzs.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9l3r0nzs.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l \n        if x != 0 && x != 1 && x != 2 \n            triples_sum_to_zero\
    \ = true \n            break \n        end \n    end \n    return triples_sum_to_zero\
    \ \nend \n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvn15deui.jl:17\nin expression starting at\
    \ /tmp/tmpvn15deui.jl:17\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for i in l\n        triples.push(i)\n    end\n    triples_sum_to_zero(triples)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjhjxgf14.jl:14\nin expression starting at\
    \ /tmp/tmpjhjxgf14.jl:14\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2] = 1\n    triples_sum_to_zero[3]\
    \ = 1\n    \n    for x in l\n        if triples_sum_to_zero[x] == 1\n        \
    \    return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero(1:10000);\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are three distinct elements in the list that sum to zero, and\
    \ False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0h4fr4ti.jl:20\nin expression starting at\
    \ /tmp/tmp0h4fr4ti.jl:20\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = zip(l, l[1:end-1],\
    \ l[2:end])\n    triples_sum_to_zero = all(map(x -> x==0, triples))\n    return\
    \ triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3ellzly0.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp3ellzly0.jl:19\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ellzly0.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ellzly0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3ellzly0.jl:22\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3ellzly0.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ellzly0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3ellzly0.jl:23\n  Expression: candidate([1]) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ellzly0.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ellzly0.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = false\n    \n    triples_sum_to_zero = triples_sum_to_zero or l[1] == 0 &&\
    \ l[2] == 0\n    triples_sum_to_zero = triples_sum_to_zero or l[3] == 0 && l[4]\
    \ == 0\n    triples_sum_to_zero = triples_sum_to_zero or l[5] == 0 && l[6] ==\
    \ 0\n    triples_sum_to_zero = triples_sum_to_zero or l[7] == 0 && l[8] == 0\n\
    \    triples_sum_to_zero = triples_sum_to_zero or l[9] == 0 && l[10] == 0\n  \
    \  triples_sum_to_zero = triples_sum_to_zero or l[11] == 0 && l[12] == 0\n   \
    \ triples_sum_to_zero = triples_sum_to_zero or l[13] == 0 && l[14] == 0\n    triples_sum_to_zero\
    \ = triples_sum_to_zero or l[15] == 0 && l[16] == 0\n    triples_sum_to_zero =\
    \ triples_sum_to_zero or l[17] == 0 && l[18] == 0\n    triples_sum_to_zero = triples_sum_to_zero\
    \ or l[19] == 0 && l[20] == 0\n    triples_sum_to_zero = triples_sum_to_zero or\
    \ l[21] == 0 && l[22] == 0\n    triples_sum_to_zero = triples_sum_to_zero or l[23]\
    \ == 0 && l[24] == 0\n    triples_sum_to_zero = triples_sum_to_zero or l[25] ==\
    \ 0 && l[26] == 0\n    triples_sum_to_zero = triples_sum_to_zero or l[27] == 0\
    \ && l[28] == 0\n    triples_sum_to_zero = triples_sum_to_zero or l[29] == 0 &&\
    \ l[30] == 0\n    triples_sum_to_zero = triples_sum_to_zero or l[31] == 0 && l[32]\
    \ == 0\n    triples_sum_to_zero = triples_sum_to_zero or l[33] == 0 && l[34] ==\
    \ 0\n    triples_sum_to_zero = triples_sum_to_zero or l[35] == 0 && l[36] == 0\n\
    \    triples_sum_to_zero = triples_sum_to_zero or l[37] == 0 && l[38] == 0\n \
    \   triples_sum_to_zero = triples_sum_to_zero or l[39] == 0 && l[40] == 0\n  \
    \  triples_sum_to_zero = triples_sum_to_zero or l[41] == 0 && l[42] == 0\n   \
    \ triples_sum_to_zero = triples_sum_to_zero \nusing Test\n\n@testset begin\n\n\
    candidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmps_9e5jl3.jl:7 expected\
    \ \"end\", got \"or\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps_9e5jl3.jl:11\n\
    in expression starting at /tmp/tmps_9e5jl3.jl:11\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2] = 1\n    triples_sum_to_zero[3]\
    \ = 1\n    \n    for x in l\n        if triples_sum_to_zero[x] == 1\n        \
    \    return true\n        end\n    end\n    return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Test Failed at /tmp/tmpd602jwmq.jl:25\n  Expression: candidate([1,
    3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n
    [2] macro expansion\n   @ /tmp/tmpd602jwmq.jl:25 [inlined]\n [3] macro expansion\n   @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n
    [4] top-level scope\n   @ /tmp/tmpd602jwmq.jl:24\ntest set: Test Failed at /tmp/tmpd602jwmq.jl:26\n  Expression:
    candidate([1, 3, 5, -1]) == false\n   Evaluated: true == false\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpd602jwmq.jl:26 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpd602jwmq.jl:24\ntest set: Test Failed
    at /tmp/tmpd602jwmq.jl:28\n  Expression: candidate([1, 2, 3, 7]) == false\n   Evaluated:
    true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpd602jwmq.jl:28 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpd602jwmq.jl:24\ntest set: Test Failed
    at /tmp/tmpd602jwmq.jl:29\n  Expression: candidate([1, 2, 5, 7]) == false\n   Evaluated:
    true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpd602jwmq.jl:29 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpd602jwmq.jl:24\ntest set: Test Failed
    at /tmp/tmpd602jwmq.jl:31\n  Expression: candidate([1]) == false\n   Evaluated:
    true == false\nStacktrace:\n [1] macro expansio'
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        if x != 0\n            if x != l[1]\n               \
    \ if x != l[2]\n                    push!(triples, x)\n                end\n \
    \           end\n        end\n    end\n    return length(triples) == 3\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert triples_sum_to_zero([0,0,0]) == true\n\
    @assert triples_sum_to_zero([0,0,1]) == false\n@assert triples_sum_to_zero([0,0,2])\
    \ == false\n@assert triples_sum_to_zero([0,0,3]) == false\n@assert triples_sum_to_zero([0,0,4])\
    \ == false\n@assert triples_sum_to_zero([0,0,5]) == false\n@assert triples_sum_to_zero([0,0,6])\
    \ == false\n@assert triples_sum_to_zero([0,0,7]) == false\n@assert triples_sum_to_zero([0,0,8])\
    \ == false\n@assert triples_sum_to_zero([0,0,9]) == false\n@assert triples_sum_to_zero([0,0,10])\
    \ == false\n@assert triples_sum_to_zero([0,0,11]) == false\n@assert triples_sum_to_zero([0,0,12])\
    \ == false\n@assert triples_sum_to_zero([0,0,13]) == false\n@assert triples_sum_to_zero([0,0,14])\
    \ == false\n@assert triples_sum_to_zero([0,0,15]) == false\n@assert triples_sum_to_zero([0,0,16])\
    \ == false\n@assert triples_sum_to_zero([0,0,17]) == false\n@assert triples_sum_to_zero([0,0,18])\
    \ == false\n@assert triples_sum_to_zero([0,0,19]) == false\n@assert triples_sum_to_zero([0,0,20])\
    \ == false\n@assert triples_sum_to_zero([0,0,21]) == false\n@assert triples_sum_to_zero([0,0,22])\
    \ == false\n@assert triples_sum_to_zero([0,0,23]) == false\n@assert triples_sum_to_zero([0,0,24])\
    \ == false\n@assert triples_sum_to_zero([0,0,25]) == false\n@assert triples_sum_to_zero([0,0,26])\
    \ == false\n@assert triples_sum_to_zero([0,0,27]) == false\n@assert triples_sum_to_zero([0,0,28])\
    \ == false\n@assert triples_sum_to_zero([0,0,29]) == false\n@assert triples_sum_to_zero([0,0,30])\
    \ == false\n@assert triples_sum_to_zero([0,0,31]) == false\n@assert triples_sum_to_zero([0,0,\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7u9k575d.jl:20\nin expression starting at\
    \ /tmp/tmp7u9k575d.jl:20\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = \n \
    \       sum(l) == 0 && \n        sum(l) == 0 && \n        sum(l) == 0\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp25_cn21n.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp25_cn21n.jl:20\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25_cn21n.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25_cn21n.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp25_cn21n.jl:23\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp25_cn21n.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25_cn21n.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749140
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    triples_sum_to_zero(triples, l)\n    return length(triples) == 3\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmetcx6q4.jl:17\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates
    are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpmetcx6q4.jl:9\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmetcx6q4.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmetcx6q4.jl:16\ntest set: Error
    During Test at /tmp/tmpmetcx6q4.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},
    ::Vector{Int64})\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})
    at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpmetcx6q4.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmetcx6q4.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmetcx6q4.jl:16\ntest set: Error
    During Test at /tmp/tmpmetcx6q4.jl:19\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},
    ::Vector{Int64})\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})
    at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpmetcx6q4.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] mac'
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for x in\
    \ l\n        sum += x\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(vec(1:10000));\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(vec(1:100000));\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input and returns a list of integers such that each element in the list is\
    \ an integer that is the sum of the first three elements in the list. For example,\
    \ if the list is [1,2,3,4,5,6,7,8,9,10], the function should return [1,2,5,8,10].\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6vlakyu6.jl:18\nin expression starting at\
    \ /tmp/tmp6vlakyu6.jl:18\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    \n    for x in l\n        if triples_sum_to_zero[1] ==\
    \ 0\n            triples_sum_to_zero[1] += x\n        elseif triples_sum_to_zero[2]\
    \ == 0\n            triples_sum_to_zero[2] += x\n        elseif triples_sum_to_zero[0]\
    \ == 0\n            triples_sum_to_zero[0] += x\n        end\n    end\n    \n\
    \    if triples_sum_to_zero[1] == triples_sum_to_zero[2] && triples_sum_to_zero[2]\
    \ == triples_sum_to_zero[0]\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    triples_sum_to_zero\
    \ takes a list of integers as an input.\n    it returns True if there are three\
    \ distinct elements in the list that\n    sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpma86vi2g.jl:27\nin expression starting at\
    \ /tmp/tmpma86vi2g.jl:27\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = zip(l, l[1:end-1],\
    \ l[2:end])\n    triples_sum_to_zero = all(x -> x[1] == 0 && x[2] == 0, triples)\n\
    \    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpok8u5f_5.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpok8u5f_5.jl:19\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpok8u5f_5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpok8u5f_5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpok8u5f_5.jl:22\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpok8u5f_5.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpok8u5f_5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpok8u5f_5.jl:23\n  Expression: candidate([1]) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpok8u5f_5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpok8u5f_5.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z == 0\n                    triples_sum_to_zero = true\n          \
    \          return triples_sum_to_zero\n    return triples_sum_to_zero\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    triples_sum_to_zero takes a list of integers\
    \ as an input.\n    it returns True if there are three distinct elements in the\
    \ list that\n    sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_nd_58ea.jl:17\nin expression starting at\
    \ /tmp/tmp_nd_58ea.jl:17\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpulnbi969.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpulnbi969.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:23\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:25\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:26\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:29\n  Expression: candidate([1, 3, 5, -100]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/j"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum > 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpot4f2pq5.jl:17\nin expression starting at\
    \ /tmp/tmpot4f2pq5.jl:17\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n    end\n    \n    sum == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt7v41u7h.jl:16\nin expression starting at\
    \ /tmp/tmpt7v41u7h.jl:16\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = triples_sum_to_zero_helper(l)\n\
    \    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgp8q82qm.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero_helper
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpgp8q82qm.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8q82qm.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8q82qm.jl:15\ntest set: Error
    During Test at /tmp/tmpgp8q82qm.jl:17\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero_helper not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpgp8q82qm.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8q82qm.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8q82qm.jl:15\ntest set: Error
    During Test at /tmp/tmpgp8q82qm.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero_helper not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpgp8q82qm.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8q82qm.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8q82qm.jl:15\ntest set: Error
    During Test at /tmp/tmpgp8q82qm.jl:19\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_'
  timestamp: 1659749144
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@assert triples_sum_to_zero([1,0,1])\
    \ == true\n@assert triples_sum_to_zero([1,1,1]) == false\n@assert triples_sum_to_zero([1,0,2])\
    \ == false\n@assert triples_sum_to_zero([1,2,1]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,3,1]) == false\n@assert triples_sum_to_zero([1,0,4])\
    \ == false\n@assert triples_sum_to_zero([1,4,1]) == false\n@assert triples_sum_to_zero([1,0,5])\
    \ == false\n@assert triples_sum_to_zero([1,5,1]) == false\n@assert triples_sum_to_zero([1,0,6])\
    \ == false\n@assert triples_sum_to_zero([1,6,1]) == false\n@assert triples_sum_to_zero([1,0,7])\
    \ == false\n@assert triples_sum_to_zero([1,7,1]) == false\n@assert triples_sum_to_zero([1,0,8])\
    \ == false\n@assert triples_sum_to_zero([1,8,1]) == false\n@assert triples_sum_to_zero([1,0,9])\
    \ == false\n@assert triples_sum_to_zero([1,9,1]) == false\n@assert triples_sum_to_zero([1,0,10])\
    \ == false\n@assert triples_sum_to_zero([1,10,1]) == false\n@assert triples_sum_to_zero([1,0,11])\
    \ == false\n@assert triples_sum_to_zero([1,11,1]) == false\n@assert triples_sum_to_zero([1,0,12])\
    \ == false\n@assert triples_sum_to_zero([1,12,1]) == false\n@assert triples_sum_to_zero([1,0,13])\
    \ == false\n@assert triples_sum_to_zero([1,13,1]) == false\n@assert triples_sum_to_zero([1,0,14])\
    \ == false\n@assert triples_sum_to_zero([1,14,1]) == false\n@assert triples_sum_to_zero([1,0,15])\
    \ == false\n@assert triples_sum_to_zero([1,15,1]) == false\n@assert triples_sum_to_zero([1,0,16])\
    \ == false\n@assert triples_sum_to_zero([1,16,1]) == false\n@assert triples_sum_to_zero([1,0,17])\
    \ == false\n@assert triples_sum_to_zero\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiffh7v94.jl:17\nin expression starting at\
    \ /tmp/tmpiffh7v94.jl:17\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        if triples.contains(x)\n            triples.push(x)\n\
    \        else\n            triples.push(x)\n            triples.push(x)\n    \
    \    end\n    end\n    return length(triples) == 3\nend\n</cell>\n<code language=julia-1.3>\n\
    @test triples_sum_to_zero([1,2,3]) == true\n@test triples_sum_to_zero([1,2,4])\
    \ == false\n@test triples_sum_to_zero([1,2,5]) == false\n@test triples_sum_to_zero([1,2,6])\
    \ == false\n@test triples_sum_to_zero([1,2,7]) == false\n@test triples_sum_to_zero([1,2,8])\
    \ == false\n@test triples_sum_to_zero([1,2,9]) == false\n@test triples_sum_to_zero([1,2,10])\
    \ == false\n@test triples_sum_to_zero([1,2,11]) == false\n@test triples_sum_to_zero([1,2,12])\
    \ == false\n@test triples_sum_to_zero([1,2,13]) == false\n@test triples_sum_to_zero([1,2,14])\
    \ == false\n@test triples_sum_to_zero([1,2,15]) == false\n@test triples_sum_to_zero([1,2,16])\
    \ == false\n@test triples_sum_to_zero([1,2,17]) == false\n@test triples_sum_to_zero([1,2,18])\
    \ == false\n@test triples_sum_to_zero([1,2,19]) == false\n@test triples_sum_to_zero([1,2,20])\
    \ == false\n@test triples_sum_to_zero([1,2,21]) == false\n@test triples_sum_to_zero([1,2,22])\
    \ == false\n@test triples_sum_to_zero([1,2,23]) == false\n@test triples_sum_to_zero([1,2,24])\
    \ == false\n@test triples_sum_to_zero([1,2,25]) == false\n@test triples_sum_to_zero([1,2,26])\
    \ == false\n@test triples_sum_to_zero([1,2,27]) == false\n@test triples_sum_to_zero([1,2,28])\
    \ == false\n@test triples_sum_to_zero([1,2,29]) == false\n@test triples_sum_to_zero([1,2,30])\
    \ == false\n@test triples_sum_to_zero([1,2,31]) == false\n@test triples_sum_to_zero([1,2,32])\
    \ == false\n@test triples_sum_to_zero([1,2,33]) == false\n@test triples_sum_to_zero([1,2,34])\
    \ == false\n@test triples_sum_to_zero([1,2,35]) == false\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3,\
    \ -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeamrut1z.jl:19\nin expression starting at\
    \ /tmp/tmpeamrut1z.jl:19\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l \n        for y in l \n            for z in l \n          \
    \      if x+y+z == 0 \n                    triples_sum_to_zero = true \n     \
    \               break \n                end \n            end \n        end \n\
    \    end \n    return triples_sum_to_zero \nend \n</cell>\n<code language=julia-1.0>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<text>\nProblem 7\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1pv7yfkk.jl:21\nin expression starting at\
    \ /tmp/tmp1pv7yfkk.jl:21\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n    end\n    \n    if sum == 0 \n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n    it\
    \ returns True if there are three distinct elements in the list that\n    sum\
    \ to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpga2sh6vj.jl:20\nin expression starting at\
    \ /tmp/tmpga2sh6vj.jl:20\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z == 0\n                    triples_sum_to_zero = true\n          \
    \          break\n            end\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpezhu8rqd.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpezhu8rqd.jl:1\n\
    in expression starting at /tmp/tmpezhu8rqd.jl:1\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n    end\n    \n    if sum == 0 \n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjufa9n9q.jl:20\nin expression starting at\
    \ /tmp/tmpjufa9n9q.jl:20\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = triples_sum_to_zero_helper(l)\n\
    \    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgp8q82qm.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero_helper
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpgp8q82qm.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8q82qm.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8q82qm.jl:15\ntest set: Error
    During Test at /tmp/tmpgp8q82qm.jl:17\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero_helper not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpgp8q82qm.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8q82qm.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8q82qm.jl:15\ntest set: Error
    During Test at /tmp/tmpgp8q82qm.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero_helper not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpgp8q82qm.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8q82qm.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8q82qm.jl:15\ntest set: Error
    During Test at /tmp/tmpgp8q82qm.jl:19\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_'
  timestamp: 1659749144
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum > 0\n            return false\n        end\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@test triples_sum_to_zero([1,2,3])\
    \ == true\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\n@test triples_sum_to_zero([1,0,3])\
    \ == false\n@test triples_sum_to_zero([1,0,3]) == false\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3,\
    \ -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuoruoi1l.jl:17\nin expression starting at\
    \ /tmp/tmpuoruoi1l.jl:17\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = \n \
    \       sum([l[i]*l[i+2]*l[i+3] for i in 1:length(l)]) == 0 \n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.3>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise\nWrite a function that takes a list of integers as an\
    \ input.\nIt returns True if there are three distinct elements in the list that\n\
    sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvt3ozezf.jl:12\nin expression starting at\
    \ /tmp/tmpvt3ozezf.jl:12\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n    end\n    \n    triples_sum_to_zero = sum == 0\n   \
    \ \n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8b95tb4l.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp8b95tb4l.jl:25\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8b95tb4l.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8b95tb4l.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8b95tb4l.jl:28\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8b95tb4l.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8b95tb4l.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples = Vector{Int64}()\n\
    \    \n    for x in l\n        if x != 0\n            if x != 1\n            \
    \    if x != 2\n                    push!(triples, x)\n                end\n \
    \           end\n        end\n    end\n    \n    if length(triples) == 3\n   \
    \     return true\n    else\n        return false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert triples_sum_to_zero([0,0,0]) == true\n@assert triples_sum_to_zero([0,0,1])\
    \ == true\n@assert triples_sum_to_zero([0,0,2]) == true\n@assert triples_sum_to_zero([0,1,0])\
    \ == false\n@assert triples_sum_to_zero([0,1,1]) == false\n@assert triples_sum_to_zero([0,1,2])\
    \ == false\n@assert triples_sum_to_zero([0,2,0]) == false\n@assert triples_sum_to_zero([0,2,1])\
    \ == false\n@assert triples_sum_to_zero([0,2,2]) == false\n@assert triples_sum_to_zero([1,0,0])\
    \ == false\n@assert triples_sum_to_zero([1,0,1]) == false\n@assert triples_sum_to_zero([1,0,2])\
    \ == false\n@assert triples_sum_to_zero([1,1,0]) == false\n@assert triples_sum_to_zero([1,1,1])\
    \ == false\n@assert triples_sum_to_zero([1,1,2]) == false\n@assert triples_sum_to_zero([1,2,0])\
    \ == false\n@assert triples_sum_to_zero([1,2,1]) == false\n@assert triples_sum_to_zero([1,2,2])\
    \ == false\n@assert triples_sum_to_zero([2,0,0]) == false\n@assert triples_sum_to_zero([2,0,1])\
    \ == false\n@assert triples_sum_to_zero([2,0,2]) == false\n@assert triples_sum_to_zero([2,1,0])\
    \ == false\n@assert triples_sum_to_zero([2,1,1]) == false\n@assert triples_sum_to_zero([2,1,2])\
    \ == false\n@assert triples_sum_to_zero([2,2,0]) == false\n@assert triples_sum_to_zero([2,2,1])\
    \ == false\n@assert triples_sum_to_zero([2,2,2]) == false\n@assert triples_sum_to_zero([2,3,0])\
    \ == false\n@assert triples_sum_to_zero([2,3,1]) == false\n@assert triples_sum_to_zero([2,3,2])\
    \ == false\n@assert triples_sum_to_zero([3,3,0]) == false\n@assert triples_sum_to_zero([3,3,1])\
    \ == false\n@assert triples_sum_to_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpurm2itdz.jl:27\nin expression starting at\
    \ /tmp/tmpurm2itdz.jl:27\n"
  stdout: ''
  timestamp: 1659749142
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpulnbi969.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpulnbi969.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:23\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:25\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:26\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:29\n  Expression: candidate([1, 3, 5, -100]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/j"
  timestamp: 1659749140
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples = Vector{Int64}()\n\
    \    \n    for i in 1:length(l)\n        triples.push((l[i], l[i - 1], l[i - 2]))\n\
    \    end\n    \n    triples_sum_to_zero(triples)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3,\
    \ -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpr3av78hs.jl:22\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpr3av78hs.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr3av78hs.jl:22 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr3av78hs.jl:21\ntest set: Error
    During Test at /tmp/tmpr3av78hs.jl:23\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpr3av78hs.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr3av78hs.jl:23 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr3av78hs.jl:21\ntest set: Error
    During Test at /tmp/tmpr3av78hs.jl:24\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpr3av78hs.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr3av78hs.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr3av78hs.jl:21\ntest set: Error
    During Test at /tmp/tmpr3av78hs.jl:25\n  Test threw exc'
  timestamp: 1659749145
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2]\
    \ = 1\n    triples_sum_to_zero[3] = 1\n    \n    for i in 1:length(l)\n      \
    \  if triples_sum_to_zero[sum((l[i-1:i+1]))]==1\n            return true\n   \
    \     end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero([1,2,3])\n</cell>\n<code language=julia-1.5>\n@time\
    \ triples_sum_to_zero([1,2,4,5])\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpueiat1cw.jl:21\nin expression starting at\
    \ /tmp/tmpueiat1cw.jl:21\n"
  stdout: ''
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2] = 1\n    triples_sum_to_zero[3]\
    \ = 1\n    triples_sum_to_zero = tuple(triples_sum_to_zero)\n    \n    for x in\
    \ l\n        if triples_sum_to_zero[x] == 1\n            return true\n       \
    \ end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\"\"\
    \"\n    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf6buren6.jl:21\nin expression starting at\
    \ /tmp/tmpf6buren6.jl:21\n"
  stdout: ''
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z == 0\n                    triples_sum_to_zero = true\n          \
    \          break\n            end\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpezhu8rqd.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpezhu8rqd.jl:1\n\
    in expression starting at /tmp/tmpezhu8rqd.jl:1\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = false\n    \n    for x in l\n        for y in l\n            for z in l\n\
    \                if x+y+z == 0\n                    triples_sum_to_zero = true\n\
    \                    break\n            end\n        end\n    end\n    \n    return\
    \ triples_sum_to_zero\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe5dbyahs.jl:23\nin expression starting at\
    \ /tmp/tmpe5dbyahs.jl:23\n"
  stdout: ''
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert triples_sum_to_zero([0,0,0]) == true\n@assert triples_sum_to_zero([0,0,1])\
    \ == false\n@assert triples_sum_to_zero([0,0,2]) == false\n@assert triples_sum_to_zero([0,1,0])\
    \ == false\n@assert triples_sum_to_zero([0,1,1]) == true\n@assert triples_sum_to_zero([0,1,2])\
    \ == false\n@assert triples_sum_to_zero([0,2,0]) == false\n@assert triples_sum_to_zero([0,2,1])\
    \ == false\n@assert triples_sum_to_zero([0,2,2]) == true\n@assert triples_sum_to_zero([1,0,0])\
    \ == false\n@assert triples_sum_to_zero([1,0,1]) == false\n@assert triples_sum_to_zero([1,0,2])\
    \ == false\n@assert triples_sum_to_zero([1,1,0]) == false\n@assert triples_sum_to_zero([1,1,1])\
    \ == false\n@assert triples_sum_to_zero([1,1,2]) == false\n@assert triples_sum_to_zero([1,2,0])\
    \ == false\n@assert triples_sum_to_zero([1,2,1]) == false\n@assert triples_sum_to_zero([1,2,2])\
    \ == false\n@assert triples_sum_to_zero([2,0,0]) == false\n@assert triples_sum_to_zero([2,0,1])\
    \ == false\n@assert triples_sum_to_zero([2,0,2]) == false\n@assert triples_sum_to_zero([2,1,0])\
    \ == false\n@assert triples_sum_to_zero([2,1,1]) == false\n@assert triples_sum_to_zero([2,1,2])\
    \ == false\n@assert triples_sum_to_zero([2,2,0]) == false\n@assert triples_sum_to_zero([2,2,1])\
    \ == false\n@assert triples_sum_to_zero([2,2,2]) == false\n</cell>\n<text>\nProblem\
    \ 4\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2w2xk1r.jl:11\nin expression starting at\
    \ /tmp/tmpv2w2xk1r.jl:11\n"
  stdout: ''
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = false \n    \n    for x in l \n        triples_sum_to_zero = false \n    \
    \    for y in l \n            if x + y == 0 \n                triples_sum_to_zero\
    \ = true \n                break \n            end \n        end \n    end \n\
    \    \n    return triples_sum_to_zero \nend \nusing Test\n\n@testset begin\n\n\
    candidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpapkhnker.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpapkhnker.jl:28\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpapkhnker.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpapkhnker.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpapkhnker.jl:29\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpapkhnker.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpapkhnker.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpapkhnker.jl:30\n  Expression: candidate([1, 3, -2, 1]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpapkhnker.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpapkhnker.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpapkhnker.jl:33\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpapkhnker.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpapkhnker.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpapkhnker.jl:36\n  Expression: candidate([100, 3, 5, -100])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3"
  timestamp: 1659749145
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true \n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplg7xcecm.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmplg7xcecm.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplg7xcecm.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplg7xcecm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplg7xcecm.jl:23\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplg7xcecm.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplg7xcecm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplg7xcecm.jl:25\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplg7xcecm.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplg7xcecm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplg7xcecm.jl:26\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplg7xcecm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplg7xcecm.jl:21\ntest set: Test\
    \ Failed at /tmp/tmplg7xcecm.jl:29\n  Expression: candidate([1, 3, 5, -100]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/j"
  timestamp: 1659749145
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for x in\
    \ l\n        sum += x\n        if sum == 0 \n            return true\n       \
    \ end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp28_z370s.jl:18\nin expression starting at\
    \ /tmp/tmp28_z370s.jl:18\n"
  stdout: ''
  timestamp: 1659749144
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = \n \
    \       sum(l) == 0 && \n        sum(l) == 0 && \n        sum(l) == 0 \nend\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph7bhb_kq.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmph7bhb_kq.jl:20\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph7bhb_kq.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph7bhb_kq.jl:17\ntest set: Test\
    \ Failed at /tmp/tmph7bhb_kq.jl:23\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph7bhb_kq.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph7bhb_kq.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749145
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n    end\n    \n    triples_sum_to_zero = (sum == 0)\n \
    \   \n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8ob3fel_.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp8ob3fel_.jl:25\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ob3fel_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ob3fel_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8ob3fel_.jl:28\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8ob3fel_.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ob3fel_.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749145
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l, [],\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp38ds3444.jl:15\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Any}, ::Int64)\n  Closest
    candidates are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmp38ds3444.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp38ds3444.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38ds3444.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38ds3444.jl:14\n'''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        triples_sum_to_zero[(x-3)%3]+=1\n    end\n    return\
    \ triples_sum_to_zero[1]==3\nend\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9t_kx6d_.jl:14\nin expression starting at\
    \ /tmp/tmp9t_kx6d_.jl:14\n"
  stdout: ''
  timestamp: 1659749144
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = @view\
    \ l |> filter(x->(x+x+x)==0, l) |> length==3\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(vec(1:10000))\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers and\
    \ returns True if there are three distinct elements in the list that sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: ArgumentError: Invalid use of @view macro: argument must\
    \ be a reference expression A[...].\nStacktrace:\n [1] var\"@view\"(__source__::LineNumberNode,\
    \ __module__::Module, ex::Any)\n   @ Base ./views.jl:136\n [2] #macroexpand#51\n\
    \   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n\
    \ [4] docm(source::LineNumberNode, mod::Module, meta::Any, ex::Any, define::Bool)\
    \ (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode,\
    \ ::Module, ::String, ::Vararg{Any})\n   @ Core ./boot.jl:517\nin expression starting\
    \ at /tmp/tmpyk5ek_cj.jl:1\nin expression starting at /tmp/tmpyk5ek_cj.jl:1\n"
  stdout: ''
  timestamp: 1659749145
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2] = 1\n    triples_sum_to_zero[3]\
    \ = 1\n    triples_sum_to_zero = triples_sum_to_zero * l\n    return triples_sum_to_zero[1]+triples_sum_to_zero[2]+triples_sum_to_zero[3]\
    \ == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659749146
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = triples_sum_to_zero(l,\
    \ 0)\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp1vukdz1v.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmp1vukdz1v.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1vukdz1v.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1vukdz1v.jl:15\ntest set: Error
    During Test at /tmp/tmp1vukdz1v.jl:17\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp1vukdz1v.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1vukdz1v.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1vukdz1v.jl:15\ntest set: Error
    During Test at /tmp/tmp1vukdz1v.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp1vukdz1v.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1vukdz1v.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1vukdz1v.jl:15\ntest set: Error
    During Test at /tmp/tmp1vukdz1v.jl:19\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_sum_to_zero not defin'
  timestamp: 1659749146
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l, [],\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp38ds3444.jl:15\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Any}, ::Int64)\n  Closest
    candidates are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmp38ds3444.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp38ds3444.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38ds3444.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38ds3444.jl:14\n'''
  timestamp: 1659749141
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = zip(l, l[1:end-1],\
    \ l[2:end])\n    triples_sum_to_zero = all(map(triples_sum_to_zero, triples))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp3h_57fz6.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmp3h_57fz6.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3h_57fz6.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3h_57fz6.jl:15\ntest set: Error
    During Test at /tmp/tmp3h_57fz6.jl:17\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp3h_57fz6.jl:9\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3h_57fz6.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3h_57fz6.jl:15\ntest set: Error
    During Test at /tmp/tmp3h_57fz6.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp3h_57fz6.jl:9\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3h_57fz6.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3h_57fz6.jl:15\ntest set: Error
    During Test at /tmp/tmp3h_57fz6.jl:19\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_sum_to_zero not defin'
  timestamp: 1659749146
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = Set()\n    for x in l\n        triples_sum_to_zero = triples_sum_to_zero |\
    \ triples(x)\n    end\n    \n    triples_sum_to_zero == Set()\nend\n</cell>\n\
    <code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,24\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcen2p43t.jl:16\nin expression starting at\
    \ /tmp/tmpcen2p43t.jl:16\n"
  stdout: ''
  timestamp: 1659749144
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        triples_sum_to_zero[x] = triples_sum_to_zero[x]\
    \ + 1\n    end\n    \n    if triples_sum_to_zero[1] > 0 && triples_sum_to_zero[2]\
    \ > 0 && triples_sum_to_zero[3] > 0\n        return true\n    else\n        return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    triples_sum_to_zero\
    \ takes a list of integers as an input.\n    it returns True if there are three\
    \ distinct elements in the list that\n    sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr46ltc52.jl:19\nin expression starting at\
    \ /tmp/tmpr46ltc52.jl:19\n"
  stdout: ''
  timestamp: 1659749144
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        triples = triples + [x^2, x^3, x^4]\n    end\n    triples_sum_to_zero(triples)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100);\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers as an input\
    \ and returns the number of integers in the list that sum to zero.\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8_21hyjy.jl:14\nin expression starting at\
    \ /tmp/tmp8_21hyjy.jl:14\n"
  stdout: ''
  timestamp: 1659749144
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        if x != 0\n            push!(triples, x)\n        end\n\
    \    end\n    triples_sum_to_zero(triples)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert triples_sum_to_zero([0,0,0]) == true\n@assert triples_sum_to_zero([0,0,1])\
    \ == false\n@assert triples_sum_to_zero([0,1,0]) == false\n@assert triples_sum_to_zero([1,1,0])\
    \ == true\n@assert triples_sum_to_zero([1,1,1]) == false\n</cell>\n<text>\n4.2\
    \ Write a function that returns True if there are two distinct elements in the\
    \ list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2rdqucvt.jl:16\nin expression starting at\
    \ /tmp/tmp2rdqucvt.jl:16\n"
  stdout: ''
  timestamp: 1659749144
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = @view\
    \ l |> filter(x->(x+x+x)==0, l) |> length==3\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: ArgumentError: Invalid use of @view macro: argument must\
    \ be a reference expression A[...].\nStacktrace:\n [1] var\"@view\"(__source__::LineNumberNode,\
    \ __module__::Module, ex::Any)\n   @ Base ./views.jl:136\n [2] #macroexpand#51\n\
    \   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n\
    \ [4] docm(source::LineNumberNode, mod::Module, meta::Any, ex::Any, define::Bool)\
    \ (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode,\
    \ ::Module, ::String, ::Vararg{Any})\n   @ Core ./boot.jl:517\nin expression starting\
    \ at /tmp/tmp0tpsd9oo.jl:1\nin expression starting at /tmp/tmp0tpsd9oo.jl:1\n"
  stdout: ''
  timestamp: 1659749146
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z == 0\n                    triples_sum_to_zero = true\n          \
    \          return triples_sum_to_zero\n    return triples_sum_to_zero\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq7_pbk45.jl:1\nin expression starting at /tmp/tmpq7_pbk45.jl:1\n"
  stdout: ''
  timestamp: 1659749145
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    \n    for x in l\n        if triples_sum_to_zero[x] ==\
    \ 0\n            triples_sum_to_zero[x] = 1\n        else\n            triples_sum_to_zero[x]\
    \ += 1\n        end\n    end\n    \n    return triples_sum_to_zero[1] == 0 &&\
    \ triples_sum_to_zero[2] == 0\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ triples_sum_to_zero([1,2,3,4,5,6,7,8,9])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers as an input.\nIt returns True if there\
    \ are three distinct elements in the list that\nsum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1e1hxh0e.jl:21\nin expression starting at\
    \ /tmp/tmp1e1hxh0e.jl:21\n"
  stdout: ''
  timestamp: 1659749145
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z == 0 \n                    triples_sum_to_zero = true\n         \
    \           return triples_sum_to_zero\n    return triples_sum_to_zero\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp8949hjwf.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8949hjwf.jl:1\n\
    in expression starting at /tmp/tmp8949hjwf.jl:1\n"
  stdout: ''
  timestamp: 1659749145
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwzvq5x5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpzwzvq5x5.jl:24\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwzvq5x5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwzvq5x5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzwzvq5x5.jl:27\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzwzvq5x5.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwzvq5x5.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749146
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l \n        for y in l \n            for z in l \n          \
    \      if x+y+z == 0 \n                    triples_sum_to_zero = true \n     \
    \               break \n                end \n            end \n        end \n\
    \    end \n    return triples_sum_to_zero \nend \nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp53mtf_b_.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp53mtf_b_.jl:26\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53mtf_b_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53mtf_b_.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     1      9\n"
  timestamp: 1659749147
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    triples = [triples_sum_to_zero(triple) for triple in l]\n    return length(triples)\
    \ == 3\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpk9fdo7u6.jl:17\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Int64)\n  Closest candidates are:\n    triples_sum_to_zero(!Matched::Vector{Int64})
    at /tmp/tmpk9fdo7u6.jl:7\n  Stacktrace:\n   [1] (::var"#1#2")(triple::Int64)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n     @
    ./array.jl:724 [inlined]\n   [4] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpk9fdo7u6.jl:9\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpk9fdo7u6.jl:17 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpk9fdo7u6.jl:16\ntest set: Error
    During Test at /tmp/tmpk9fdo7u6.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Int64)\n  Closest
    candidates are:\n    triples_sum_to_zero(!Matched::Vector{Int64}) at /tmp/tmpk9fdo7u6.jl:7\n  Stacktrace:\n   [1]
    (::var"#1#2")(triple::Int64)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect\n     @ ./array.jl:724 [inlined]\n   [4] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpk9fdo7u6.jl:9\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpk9fdo7u6.jl:18 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpk9fdo7u6.jl:16\ntest set: Error
    During Test at /tmp/tmpk9fdo7u6.jl:19\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Int64)\n  Closest
    candidates are:\n    triples_sum_to_zero(!Ma'
  timestamp: 1659749148
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = \n \
    \       sum(l) == 0 && \n        sum(l) == 0 && \n        sum(l) == 0\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert triples_sum_to_zero([1,2,3]) == true\n@assert\
    \ triples_sum_to_zero([1,2,4]) == false\n@assert triples_sum_to_zero([1,2,4,5])\
    \ == false\n@assert triples_sum_to_zero([1,2,4,5,6]) == true\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers and returns True if\
    \ there are three distinct elements in the list that sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgl_obsqj.jl:13\nin expression starting at\
    \ /tmp/tmpgl_obsqj.jl:13\n"
  stdout: ''
  timestamp: 1659749146
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for i in 1:length(l)\n        triples[i] = l[i] + l[i+1] + l[i+2]\n    end\n\
    \    triples_sum_to_zero(triples)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8nzsqtc.jl:19\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  BoundsError: attempt
    to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1] setindex!\n     @
    ./array.jl:903 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpm8nzsqtc.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm8nzsqtc.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm8nzsqtc.jl:18\ntest set: Error
    During Test at /tmp/tmpm8nzsqtc.jl:20\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  BoundsError: attempt to access 0-element Vector{Int64}
    at index [1]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpm8nzsqtc.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm8nzsqtc.jl:20 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm8nzsqtc.jl:18\ntest set: Error
    During Test at /tmp/tmpm8nzsqtc.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  BoundsError: attempt to access 0-element Vector{Int64} at
    index [1]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpm8nzsqtc.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm8nzsqtc.jl:21 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] to'
  timestamp: 1659749149
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2]\
    \ = 1\n    triples_sum_to_zero[3] = 1\n    \n    for x in l\n        if triples_sum_to_zero[x]\
    \ == 1\n            triples_sum_to_zero[x] = 0\n        else\n            triples_sum_to_zero[x]\
    \ = 1\n        end\n    end\n    \n    return triples_sum_to_zero[1]+triples_sum_to_zero[2]+triples_sum_to_zero[3]\
    \ == 3\nend\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns the number of integers in the list that sum to zero.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdhbtxpb4.jl:24\nin expression starting at\
    \ /tmp/tmpdhbtxpb4.jl:24\n"
  stdout: ''
  timestamp: 1659749146
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l \n        for y in l \n            for z in l \n          \
    \      if x+y+z == 0 \n                    triples_sum_to_zero = true \n     \
    \               break \n                end \n            end \n        end \n\
    \    end \n    return triples_sum_to_zero \nend \n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0kz2glu0.jl:21\nin expression starting at\
    \ /tmp/tmp0kz2glu0.jl:21\n"
  stdout: ''
  timestamp: 1659749146
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpup2u7ljb.jl:17\nin expression starting at\
    \ /tmp/tmpup2u7ljb.jl:17\n"
  stdout: ''
  timestamp: 1659749147
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for i in l\n        triples.push(i)\n    end\n    triples_sum_to_zero(triples)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjhjxgf14.jl:14\nin expression starting at\
    \ /tmp/tmpjhjxgf14.jl:14\n"
  stdout: ''
  timestamp: 1659749139
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpup2u7ljb.jl:17\nin expression starting at\
    \ /tmp/tmpup2u7ljb.jl:17\n"
  stdout: ''
  timestamp: 1659749147
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = Set()\n\
    \    for x in l\n        if triples_sum_to_zero(x) == true\n            triples_sum_to_zero\
    \ = triples_sum_to_zero \u222A Set([x])\n        end\n    end\n    length(triples_sum_to_zero)\
    \ == 3\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    triples_sum_to_zero\
    \ takes a list of integers as an input.\n    it returns True if there are three\
    \ distinct elements in the list that\n    sum to zero, and False otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwa90zuul.jl:16\nin expression starting at\
    \ /tmp/tmpwa90zuul.jl:16\n"
  stdout: ''
  timestamp: 1659749147
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    triples_sum_to_zero(triples, l)\n    return length(triples) == 3\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmetcx6q4.jl:17\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates
    are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpmetcx6q4.jl:9\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmetcx6q4.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmetcx6q4.jl:16\ntest set: Error
    During Test at /tmp/tmpmetcx6q4.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},
    ::Vector{Int64})\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})
    at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpmetcx6q4.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmetcx6q4.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmetcx6q4.jl:16\ntest set: Error
    During Test at /tmp/tmpmetcx6q4.jl:19\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},
    ::Vector{Int64})\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})
    at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpmetcx6q4.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] mac'
  timestamp: 1659749141
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        if triples_sum_to_zero[x] == 0\n            triples_sum_to_zero[x]\
    \ = 1\n        else\n            triples_sum_to_zero[x] += 1\n        end\n  \
    \  end\n    return triples_sum_to_zero[1] == 0 && triples_sum_to_zero[2] == 0\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpc7zhqcj7.jl:23\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  BoundsError: attempt
    to access 3-element Vector{Int64} at index [5]\n  Stacktrace:\n   [1] getindex\n     @
    ./array.jl:861 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpc7zhqcj7.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc7zhqcj7.jl:23 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc7zhqcj7.jl:22\ntest set: Error
    During Test at /tmp/tmpc7zhqcj7.jl:24\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  BoundsError: attempt to access 3-element Vector{Int64}
    at index [5]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpc7zhqcj7.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc7zhqcj7.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc7zhqcj7.jl:22\ntest set: Error
    During Test at /tmp/tmpc7zhqcj7.jl:25\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  BoundsError: attempt to access 3-element Vector{Int64} at
    index [-2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpc7zhqcj7.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc7zhqcj7.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-'
  timestamp: 1659749149
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if (x == 0) || (x == 1) || (x == -1)\n           \
    \ triples_sum_to_zero = true\n            break\n        end\n    end\n    return\
    \ triples_sum_to_zero\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfymcgrce.jl:17\nin expression starting at\
    \ /tmp/tmpfymcgrce.jl:17\n"
  stdout: ''
  timestamp: 1659749147
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    triples[2] = 0\n    for i in l\n        if triples[i - 1] != 0\n        \
    \    triples[i - 1] += i\n            triples[i] += i\n        end\n    end\n\
    \    for i in triples[2:end]\n        if triples[i] != 0\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n@time\
    \ triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n</cell>\n\
    <code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n@time\
    \ triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n</cell>\n\
    <code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n@time\
    \ triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n</cell>\n\
    <code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero(1:100000);\n</cell>\n<code language=julia-1.5>\n@time\
    \ triples_sum_to_zero(1:100000);\n</cell>\n<code language=\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3,\
    \ -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8aa_7zzt.jl:23\nin expression starting at\
    \ /tmp/tmp8aa_7zzt.jl:23\n"
  stdout: ''
  timestamp: 1659749148
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        triples_sum_to_zero[(x-3)^2, (x-3)+1] += 1\n   \
    \ end\n    \n    return triples_sum_to_zero[1,1] == 0 && triples_sum_to_zero[1,2]\
    \ == 0 && triples_sum_to_zero[1,3] == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo37yqy4v.jl:15\nin expression starting at\
    \ /tmp/tmpo37yqy4v.jl:15\n"
  stdout: ''
  timestamp: 1659749148
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2] = 1\n    triples_sum_to_zero[3]\
    \ = 1\n    for i in l\n        if triples_sum_to_zero[i] == 1\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm8f7vy3u.jl:19\nin expression starting at\
    \ /tmp/tmpm8f7vy3u.jl:19\n"
  stdout: ''
  timestamp: 1659749148
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        triples.push(x)\n    end\n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcpiwd09n.jl:19\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpcpiwd09n.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:20\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:20 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:21 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:22\n  Test threw exc'
  timestamp: 1659749150
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z == 0 \n                    triples_sum_to_zero = true\n         \
    \           break\n            end\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy5igrzbi.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy5igrzbi.jl:1\n\
    in expression starting at /tmp/tmpy5igrzbi.jl:1\n"
  stdout: ''
  timestamp: 1659749148
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptzedla2f.jl:17\nin expression starting at\
    \ /tmp/tmptzedla2f.jl:17\n"
  stdout: ''
  timestamp: 1659749148
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    \n    for x in l\n        for y in l\n            for\
    \ z in l\n                if x+y+z == 0\n                    triples_sum_to_zero[x,y,z]\
    \ = 1\n                end\n            end\n        end\n    end\n    \n    return\
    \ triples_sum_to_zero[1,1,1]\nend\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjhhzyx3a.jl:23\nin expression starting at\
    \ /tmp/tmpjhhzyx3a.jl:23\n"
  stdout: ''
  timestamp: 1659749148
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = zip(l, l[1:end-1],\
    \ l[2:end])\n    triples_sum_to_zero = all(map(triples_sum_to_zero, triples))\n\
    \    return triples_sum_to_zero\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu3j_0le3.jl:12\nin expression starting at\
    \ /tmp/tmpu3j_0le3.jl:12\n"
  stdout: ''
  timestamp: 1659749148
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = triples_sum_to_zero(l)\n\
    \    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp6quyvjrn.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmp6quyvjrn.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6quyvjrn.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6quyvjrn.jl:15\ntest set: Error
    During Test at /tmp/tmp6quyvjrn.jl:17\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp6quyvjrn.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6quyvjrn.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6quyvjrn.jl:15\ntest set: Error
    During Test at /tmp/tmp6quyvjrn.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp6quyvjrn.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6quyvjrn.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6quyvjrn.jl:15\ntest set: Error
    During Test at /tmp/tmp6quyvjrn.jl:19\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_sum_to_zero not defin'
  timestamp: 1659749151
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        triples.push(x)\n    end\n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcpiwd09n.jl:19\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpcpiwd09n.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:20\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:20 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:21 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:22\n  Test threw exc'
  timestamp: 1659749150
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if sum(x) == 0 \n            triples_sum_to_zero =\
    \ true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7vth2dhy.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp7vth2dhy.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vth2dhy.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vth2dhy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp7vth2dhy.jl:24\n  Expression: candidate([1, 3, -2, 1]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vth2dhy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vth2dhy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp7vth2dhy.jl:27\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7vth2dhy.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vth2dhy.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659749150
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    triples_sum_to_zero(triples, l)\n    return length(triples) == 3\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmetcx6q4.jl:17\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates
    are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpmetcx6q4.jl:9\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmetcx6q4.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmetcx6q4.jl:16\ntest set: Error
    During Test at /tmp/tmpmetcx6q4.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},
    ::Vector{Int64})\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})
    at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpmetcx6q4.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmetcx6q4.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmetcx6q4.jl:16\ntest set: Error
    During Test at /tmp/tmpmetcx6q4.jl:19\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},
    ::Vector{Int64})\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})
    at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpmetcx6q4.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] mac'
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for x in l\n\
    \        sum += x\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@assert triples_sum_to_zero([1,2,3])\
    \ == true\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\n@assert triples_sum_to_zero([1,0,3])\
    \ == false\n@assert triples_sum_to_zero([1,0,3]) == false\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3,\
    \ -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvlv22lrk.jl:17\nin expression starting at\
    \ /tmp/tmpvlv22lrk.jl:17\n"
  stdout: ''
  timestamp: 1659749149
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = false \n    \n    for x in l \n        if x == 0 \n            triples_sum_to_zero\
    \ = true \n            break\n        else \n            triples_sum_to_zero =\
    \ false \n            break\n    end\n    \n    return triples_sum_to_zero\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpss37faym.jl:22\nin expression starting at\
    \ /tmp/tmpss37faym.jl:22\n"
  stdout: ''
  timestamp: 1659749149
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpulnbi969.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpulnbi969.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:23\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:25\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:26\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:29\n  Expression: candidate([1, 3, 5, -100]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/j"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = false\n    \n    for i in 1:length(l)\n        for j in i+1:length(l)\n  \
    \          for k in j+1:length(l)\n                if l[i] + l[j] + l[k] == 0\n\
    \                    triples_sum_to_zero = true\n                end\n       \
    \     end\n        end\n    end\n    \n    return triples_sum_to_zero\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2_ndc29v.jl:23\nin expression starting at\
    \ /tmp/tmp2_ndc29v.jl:23\n"
  stdout: ''
  timestamp: 1659749149
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if sum(x) == 0 \n            triples_sum_to_zero =\
    \ true \n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbrq0_mpf.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpbrq0_mpf.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrq0_mpf.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrq0_mpf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbrq0_mpf.jl:24\n  Expression: candidate([1, 3, -2, 1]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrq0_mpf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrq0_mpf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbrq0_mpf.jl:27\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbrq0_mpf.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrq0_mpf.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659749150
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z==0\n                    triples_sum_to_zero = true\n            \
    \        return triples_sum_to_zero\n    return triples_sum_to_zero\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpjnk39c0l.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjnk39c0l.jl:1\n\
    in expression starting at /tmp/tmpjnk39c0l.jl:1\n"
  stdout: ''
  timestamp: 1659749149
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0\n            if triples_sum_to_zero\n  \
    \              return false\n            else\n                triples_sum_to_zero\
    \ = true\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpngxzm9uy.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpngxzm9uy.jl:27\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngxzm9uy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngxzm9uy.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpngxzm9uy.jl:30\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpngxzm9uy.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngxzm9uy.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpngxzm9uy.jl:31\n  Expression: candidate([1]) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngxzm9uy.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngxzm9uy.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659749151
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwzvq5x5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpzwzvq5x5.jl:24\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwzvq5x5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwzvq5x5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzwzvq5x5.jl:27\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzwzvq5x5.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwzvq5x5.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749146
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpulnbi969.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpulnbi969.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:23\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:25\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:26\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:29\n  Expression: candidate([1, 3, 5, -100]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/j"
  timestamp: 1659749140
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = triples_sum_to_zero(l,\
    \ l, l)\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwwjrfnpl.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpwwjrfnpl.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwwjrfnpl.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwwjrfnpl.jl:15\ntest set: Error
    During Test at /tmp/tmpwwjrfnpl.jl:17\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpwwjrfnpl.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwwjrfnpl.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwwjrfnpl.jl:15\ntest set: Error
    During Test at /tmp/tmpwwjrfnpl.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpwwjrfnpl.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwwjrfnpl.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwwjrfnpl.jl:15\ntest set: Error
    During Test at /tmp/tmpwwjrfnpl.jl:19\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_sum_to_zero not defin'
  timestamp: 1659749152
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z==0\n                    triples_sum_to_zero = true\n            \
    \        break\n            end\n        end\n    end\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100);\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of integers as an input,\
    \ and returns True if there are three distinct elements in the list that sum to\
    \ zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3k81rwqz.jl:20\nin expression starting at\
    \ /tmp/tmp3k81rwqz.jl:20\n"
  stdout: ''
  timestamp: 1659749149
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z == 0 \n                    triples_sum_to_zero = true\n         \
    \           break\n                end\n            end\n        end\n    end\n\
    \    return triples_sum_to_zero\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpewwhfn_g.jl:21\nin expression starting at\
    \ /tmp/tmpewwhfn_g.jl:21\n"
  stdout: ''
  timestamp: 1659749149
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x == 0 || x == -x || x == -x + 1\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpux9gss3m.jl:17\nin expression starting at\
    \ /tmp/tmpux9gss3m.jl:17\n"
  stdout: ''
  timestamp: 1659749150
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = \n \
    \       sum(l) == 0 && \n        sum(l) == 1 && \n        sum(l) == 2 \nend\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg5d3eg20.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpg5d3eg20.jl:20\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg5d3eg20.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg5d3eg20.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpg5d3eg20.jl:23\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg5d3eg20.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg5d3eg20.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749152
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        triples.push(x)\n    end\n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcpiwd09n.jl:19\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpcpiwd09n.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:20\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:20 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:21 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:22\n  Test threw exc'
  timestamp: 1659749150
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l .==\
    \ 0 .* l .== 0 .* l .== 0\n    return triples_sum_to_zero\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659749153
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        if triples_sum_to_zero[x] == 0\n            triples_sum_to_zero[x]\
    \ = 1\n        else\n            triples_sum_to_zero[x] += 1\n        end\n  \
    \  end\n    return triples_sum_to_zero[1] == 0 && triples_sum_to_zero[2] == 0\n\
    end\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers and\
    \ returns the number of elements in the list that sum to zero.\nusing Test\n\n\
    @testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp19bvwb_5.jl:18\nin expression starting at\
    \ /tmp/tmp19bvwb_5.jl:18\n"
  stdout: ''
  timestamp: 1659749150
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    triples_sum_to_zero(triples, l)\n    return length(triples) == 3\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmetcx6q4.jl:17\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates
    are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpmetcx6q4.jl:9\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmetcx6q4.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmetcx6q4.jl:16\ntest set: Error
    During Test at /tmp/tmpmetcx6q4.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},
    ::Vector{Int64})\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})
    at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpmetcx6q4.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmetcx6q4.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmetcx6q4.jl:16\ntest set: Error
    During Test at /tmp/tmpmetcx6q4.jl:19\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  MethodError: no method matching triples_sum_to_zero(::Vector{Int64},
    ::Vector{Int64})\n  Closest candidates are:\n    triples_sum_to_zero(::Vector{Int64})
    at /tmp/tmpmetcx6q4.jl:7\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpmetcx6q4.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] mac'
  timestamp: 1659749141
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l, [],\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp38ds3444.jl:15\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Any}, ::Int64)\n  Closest
    candidates are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmp38ds3444.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp38ds3444.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38ds3444.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38ds3444.jl:14\n'''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n    end\n    \n    if sum == 0 \n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmmzqbyv3.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpmmzqbyv3.jl:27\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmzqbyv3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmzqbyv3.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmmzqbyv3.jl:30\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmmzqbyv3.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmzqbyv3.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749152
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples = Vector{Int64}()\n\
    \    \n    for x in l\n        triples.push(x)\n    end\n    \n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8c7l72mk.jl:22\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp8c7l72mk.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8c7l72mk.jl:22 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8c7l72mk.jl:21\ntest set: Error
    During Test at /tmp/tmp8c7l72mk.jl:23\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmp8c7l72mk.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8c7l72mk.jl:23 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8c7l72mk.jl:21\ntest set: Error
    During Test at /tmp/tmp8c7l72mk.jl:24\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmp8c7l72mk.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8c7l72mk.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8c7l72mk.jl:21\ntest set: Error
    During Test at /tmp/tmp8c7l72mk.jl:25\n  Test threw exc'
  timestamp: 1659749153
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x == 0 || x == -3 || x == -5 || x == -7 || x ==\
    \ -9\n            triples_sum_to_zero = true\n            break\n        end\n\
    \    end\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpovblt9hq.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpovblt9hq.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpovblt9hq.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpovblt9hq.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpovblt9hq.jl:24\n  Expression: candidate([1, 3, -2, 1]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpovblt9hq.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpovblt9hq.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749152
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = triples_sum_to_zero_helper(l)\n\
    \    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgp8q82qm.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero_helper
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpgp8q82qm.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8q82qm.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8q82qm.jl:15\ntest set: Error
    During Test at /tmp/tmpgp8q82qm.jl:17\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero_helper not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpgp8q82qm.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8q82qm.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8q82qm.jl:15\ntest set: Error
    During Test at /tmp/tmpgp8q82qm.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero_helper not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpgp8q82qm.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgp8q82qm.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgp8q82qm.jl:15\ntest set: Error
    During Test at /tmp/tmpgp8q82qm.jl:19\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_'
  timestamp: 1659749144
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpulnbi969.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpulnbi969.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:23\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:25\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:26\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:29\n  Expression: candidate([1, 3, 5, -100]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/j"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpulnbi969.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpulnbi969.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:23\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:25\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:26\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulnbi969.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulnbi969.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpulnbi969.jl:29\n  Expression: candidate([1, 3, 5, -100]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/j"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwzvq5x5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpzwzvq5x5.jl:24\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwzvq5x5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwzvq5x5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzwzvq5x5.jl:27\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzwzvq5x5.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwzvq5x5.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749146
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n    end\n    \n    triples_sum_to_zero = sum == 0\n   \
    \ \n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8b95tb4l.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp8b95tb4l.jl:25\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8b95tb4l.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8b95tb4l.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8b95tb4l.jl:28\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8b95tb4l.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8b95tb4l.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for x in l\n\
    \        sum += x\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb_8jg819.jl:17\nin expression starting at\
    \ /tmp/tmpb_8jg819.jl:17\n"
  stdout: ''
  timestamp: 1659749150
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n\
    <code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero(1:100000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ triples_sum_to_zero(1:100000)\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n\
    <code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero(1:100000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ triples_sum_to_zero(1:100000)\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n\
    <code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero(1:100000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ triples_sum_to_zero(1:100000)\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n\
    </cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n\
    <code language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero(1:100000)\n</\nusing Test\n\n\
    @testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6nntu78f.jl:17\nin expression starting at\
    \ /tmp/tmp6nntu78f.jl:17\n"
  stdout: ''
  timestamp: 1659749151
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2] = 1\n    triples_sum_to_zero[3]\
    \ = 1\n    triples_sum_to_zero = tuple(triples_sum_to_zero)\n    \n    for x in\
    \ l\n        if triples_sum_to_zero[x] == 1\n            return true\n       \
    \ end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps1db80ij.jl:21\nin expression starting at\
    \ /tmp/tmps1db80ij.jl:21\n"
  stdout: ''
  timestamp: 1659749151
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = triples_sum_to_zero(l,\
    \ l[1], l[2])\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp1sz7c3wd.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmp1sz7c3wd.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1sz7c3wd.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1sz7c3wd.jl:15\ntest set: Error
    During Test at /tmp/tmp1sz7c3wd.jl:17\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp1sz7c3wd.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1sz7c3wd.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1sz7c3wd.jl:15\ntest set: Error
    During Test at /tmp/tmp1sz7c3wd.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp1sz7c3wd.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1sz7c3wd.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1sz7c3wd.jl:15\ntest set: Error
    During Test at /tmp/tmp1sz7c3wd.jl:19\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_sum_to_zero not defin'
  timestamp: 1659749154
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@assert triples_sum_to_zero([1,2,3])\
    \ == true\n@assert triples_sum_to_zero([1,2,4]) == false\n@assert triples_sum_to_zero([1,2,4,5])\
    \ == true\n@assert triples_sum_to_zero([1,2,4,6,7]) == false\n</cell>\n<text>\n\
    12. Write a function that returns true if the sum of the squares of the numbers\
    \ in a given list is equal to zero, and false otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3,\
    \ -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2zmogj9i.jl:17\nin expression starting at\
    \ /tmp/tmp2zmogj9i.jl:17\n"
  stdout: ''
  timestamp: 1659749152
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for i in l\n        triples.push(i)\n    end\n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcdf5fuk9.jl:19\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpcdf5fuk9.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcdf5fuk9.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcdf5fuk9.jl:18\ntest set: Error
    During Test at /tmp/tmpcdf5fuk9.jl:20\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcdf5fuk9.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcdf5fuk9.jl:20 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcdf5fuk9.jl:18\ntest set: Error
    During Test at /tmp/tmpcdf5fuk9.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcdf5fuk9.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcdf5fuk9.jl:21 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcdf5fuk9.jl:18\ntest set: Error
    During Test at /tmp/tmpcdf5fuk9.jl:22\n  Test threw exc'
  timestamp: 1659749154
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmzzjd49.jl:17\nin expression starting at\
    \ /tmp/tmpcmzzjd49.jl:17\n"
  stdout: ''
  timestamp: 1659749152
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum > 0\n            return false\n        end\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@test triples_sum_to_zero([1,2,3])\
    \ == true\n@test triples_sum_to_zero([1,2,-3]) == false\n@test triples_sum_to_zero([1,2,-3,-4])\
    \ == true\n</cell>\n<text>\nExercise 3\nWrite a function that takes a list of\
    \ integers as an input, and returns True if there are two distinct elements in\
    \ the list that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9rpu1669.jl:17\nin expression starting at\
    \ /tmp/tmp9rpu1669.jl:17\n"
  stdout: ''
  timestamp: 1659749152
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l \n        for y in l \n            for z in l \n          \
    \      if x+y+z == 0 \n                    triples_sum_to_zero = true \n     \
    \               break \n                end \n            end \n        end \n\
    \    end \n    return triples_sum_to_zero \nend \n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<text>\nExercise 2\n\
    Write a function called triples_sum_to_zero that takes a list of integers as an\
    \ input.\nIt returns True if there are three distinct elements in the list that\
    \ sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc3huuhlb.jl:21\nin expression starting at\
    \ /tmp/tmpc3huuhlb.jl:21\n"
  stdout: ''
  timestamp: 1659749152
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = \n \
    \       sum(l) == 0 && \n        sum(l) == 0 && \n        sum(l) == 0\nend\n</cell>\n\
    <code language=julia-1.3>\n@time triples_sum_to_zero(vec(1:10000));\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of integers as an input,\
    \ and returns True if there are three distinct elements in the list that sum to\
    \ zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprp_ekfig.jl:13\nin expression starting at\
    \ /tmp/tmprp_ekfig.jl:13\n"
  stdout: ''
  timestamp: 1659749152
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for x in\
    \ l\n        sum += x\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr1uoyth1.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpr1uoyth1.jl:25\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr1uoyth1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1uoyth1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr1uoyth1.jl:28\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpr1uoyth1.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1uoyth1.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749154
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyoiobm28.jl:17\nin expression starting at\
    \ /tmp/tmpyoiobm28.jl:17\n"
  stdout: ''
  timestamp: 1659749153
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = @view\
    \ l |> filter(x->(x+x+x) == 0, 3)\n    return length(triples_sum_to_zero) == 3\n\
    end\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(vec(1:10000));\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ as an input and returns a vector of integers that sum to zero.\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: ArgumentError: Invalid use of @view macro: argument must\
    \ be a reference expression A[...].\nStacktrace:\n [1] var\"@view\"(__source__::LineNumberNode,\
    \ __module__::Module, ex::Any)\n   @ Base ./views.jl:136\n [2] #macroexpand#51\n\
    \   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n\
    \ [4] docm(source::LineNumberNode, mod::Module, meta::Any, ex::Any, define::Bool)\
    \ (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode,\
    \ ::Module, ::String, ::Vararg{Any})\n   @ Core ./boot.jl:517\nin expression starting\
    \ at /tmp/tmpwafmh0w3.jl:1\nin expression starting at /tmp/tmpwafmh0w3.jl:1\n"
  stdout: ''
  timestamp: 1659749154
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = \n \
    \       sum(l) == 0 && \n        sum(l) == 1 && \n        sum(l) == 2 \nend\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg5d3eg20.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpg5d3eg20.jl:20\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg5d3eg20.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg5d3eg20.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpg5d3eg20.jl:23\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg5d3eg20.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg5d3eg20.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749152
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for x in\
    \ l\n        sum += x\n        if sum == 0 \n            return true\n       \
    \ end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl2ffi4t.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpwl2ffi4t.jl:25\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl2ffi4t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl2ffi4t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpwl2ffi4t.jl:28\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwl2ffi4t.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl2ffi4t.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749154
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        triples.push(x)\n    end\n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcpiwd09n.jl:19\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpcpiwd09n.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:20\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:20 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:21 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:22\n  Test threw exc'
  timestamp: 1659749150
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnp0e3ild.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnp0e3ild.jl:1\n\
    in expression starting at /tmp/tmpnp0e3ild.jl:1\n"
  stdout: ''
  timestamp: 1659749153
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgv1oxk0d.jl:17\nin expression starting at\
    \ /tmp/tmpgv1oxk0d.jl:17\n"
  stdout: ''
  timestamp: 1659749153
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l \n        if x != 0 \n            for y in l \n           \
    \     if y != 0 \n                    for z in l \n                        if\
    \ z != 0 \n                            if x + y + z == 0 \n                  \
    \              return true\n                            else \n              \
    \                  return false\n                end \n            end \n    \
    \    end \n    end \n    return false \nend \n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\n\
    @time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphwdiv12l.jl:25\nin expression starting at\
    \ /tmp/tmphwdiv12l.jl:25\n"
  stdout: ''
  timestamp: 1659749153
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for x in l\n\
    \        sum += x\n        if sum > 0\n            return true\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2j53bh9k.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp2j53bh9k.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2j53bh9k.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2j53bh9k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2j53bh9k.jl:23\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2j53bh9k.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2j53bh9k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2j53bh9k.jl:25\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2j53bh9k.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2j53bh9k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2j53bh9k.jl:26\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2j53bh9k.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2j53bh9k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2j53bh9k.jl:28\n  Expression: candidate([1]) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  timestamp: 1659749155
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj5dl505f.jl:17\nin expression starting at\
    \ /tmp/tmpj5dl505f.jl:17\n"
  stdout: ''
  timestamp: 1659749153
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    triples[2] = 0\n    triples[1] = 0\n    triples[0] = 0\n    for x in l\n\
    \        if triples[x - 1] == 0 && triples[x - 2] == 0 && triples[x - 3] == 0\n\
    \            return true\n        else\n            triples[x - 1] += 1\n    \
    \        triples[x - 2] += 1\n            triples[x - 3] += 1\n        end\n \
    \   end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpylqoqbvs.jl:28\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  BoundsError: attempt
    to access 0-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] setindex!\n     @
    ./array.jl:903 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpylqoqbvs.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpylqoqbvs.jl:28 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpylqoqbvs.jl:27\ntest set: Error
    During Test at /tmp/tmpylqoqbvs.jl:29\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  BoundsError: attempt to access 0-element Vector{Int64}
    at index [2]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpylqoqbvs.jl:9\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpylqoqbvs.jl:29 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpylqoqbvs.jl:27\ntest set: Error
    During Test at /tmp/tmpylqoqbvs.jl:30\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  BoundsError: attempt to access 0-element Vector{Int64} at
    index [2]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpylqoqbvs.jl:9\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpylqoqbvs.jl:30 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-l'
  timestamp: 1659749156
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        triples_sum_to_zero[x] = triples_sum_to_zero[x]\
    \ + 1\n    end\n    if triples_sum_to_zero[1] > 0\n        return true\n    else\n\
    \        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3mcellud.jl:18\nin expression starting at\
    \ /tmp/tmp3mcellud.jl:18\n"
  stdout: ''
  timestamp: 1659749154
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = false \n    \n    for i in 1:length(l)\n        if l[i] + l[i+1] + l[i+2]\
    \ == 0\n            triples_sum_to_zero = true \n            break\n        end\n\
    \    end\n    \n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcs8c0pd5.jl:25\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  BoundsError: attempt
    to access 4-element Vector{Int64} at index [5]\n  Stacktrace:\n   [1] getindex\n     @
    ./array.jl:861 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmpcs8c0pd5.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcs8c0pd5.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcs8c0pd5.jl:24\ntest set: Error
    During Test at /tmp/tmpcs8c0pd5.jl:26\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  BoundsError: attempt to access 4-element Vector{Int64}
    at index [5]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpcs8c0pd5.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcs8c0pd5.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcs8c0pd5.jl:24\ntest set: Error
    During Test at /tmp/tmpcs8c0pd5.jl:27\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  BoundsError: attempt to access 4-element Vector{Int64} at
    index [5]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpcs8c0pd5.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcs8c0pd5.jl:27 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-l'
  timestamp: 1659749157
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2] = 1\n    triples_sum_to_zero[3]\
    \ = 1\n    triples_sum_to_zero = tuple(triples_sum_to_zero)\n    \n    for i in\
    \ l\n        if triples_sum_to_zero == tuple(triples_sum_to_zero)\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbisyc0n_.jl:21\nin expression starting at\
    \ /tmp/tmpbisyc0n_.jl:21\n"
  stdout: ''
  timestamp: 1659749154
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        triples_sum_to_zero[(x-3)%3]+=1\n    end\n    return\
    \ triples_sum_to_zero[1]==3\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8y01e2gs.jl:19\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  BoundsError: attempt
    to access 3-element Vector{Int64} at index [-2]\n  Stacktrace:\n   [1] getindex\n     @
    ./array.jl:861 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmp8y01e2gs.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8y01e2gs.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8y01e2gs.jl:18\ntest set: Error
    During Test at /tmp/tmp8y01e2gs.jl:20\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  BoundsError: attempt to access 3-element Vector{Int64}
    at index [-2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp8y01e2gs.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8y01e2gs.jl:20 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8y01e2gs.jl:18\ntest set: Error
    During Test at /tmp/tmp8y01e2gs.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  BoundsError: attempt to access 3-element Vector{Int64} at
    index [-2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp8y01e2gs.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8y01e2gs.jl:21 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] to'
  timestamp: 1659749157
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        triples.push(x)\n    end\n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcpiwd09n.jl:19\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpcpiwd09n.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:20\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:20 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:21 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:22\n  Test threw exc'
  timestamp: 1659749150
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n    end\n    \n    triples_sum_to_zero = sum == 0 && sum\
    \ == 1 && sum == 2\n    \n    return triples_sum_to_zero\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8m8qfkrm.jl:18\nin expression starting at\
    \ /tmp/tmp8m8qfkrm.jl:18\n"
  stdout: ''
  timestamp: 1659749154
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        if x != 0\n            if triples.contains(x)\n     \
    \           false\n            else\n                triples.push(x)\n       \
    \     end\n        end\n    end\n    triples.size == 3\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n    it\
    \ returns True if there are three distinct elements in the list that\n    sum\
    \ to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo9wz7nv0.jl:20\nin expression starting at\
    \ /tmp/tmpo9wz7nv0.jl:20\n"
  stdout: ''
  timestamp: 1659749154
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = @view\
    \ l |> filter(x->(x+x+x)==0, l) |> length==3\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: ArgumentError: Invalid use of @view macro: argument must\
    \ be a reference expression A[...].\nStacktrace:\n [1] var\"@view\"(__source__::LineNumberNode,\
    \ __module__::Module, ex::Any)\n   @ Base ./views.jl:136\n [2] #macroexpand#51\n\
    \   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n\
    \ [4] docm(source::LineNumberNode, mod::Module, meta::Any, ex::Any, define::Bool)\
    \ (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode,\
    \ ::Module, ::String, ::Vararg{Any})\n   @ Core ./boot.jl:517\nin expression starting\
    \ at /tmp/tmpe4hb8oxp.jl:1\nin expression starting at /tmp/tmpe4hb8oxp.jl:1\n"
  stdout: ''
  timestamp: 1659749155
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z == 0\n                    triples_sum_to_zero = true\n          \
    \          break\n                end\n            end\n        end\n    end\n\
    \    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3u0n0zcg.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp3u0n0zcg.jl:26\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3u0n0zcg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3u0n0zcg.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     1      9\n"
  timestamp: 1659749156
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x == 0 || x == -x || x == -x-x\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu599a764.jl:17\nin expression starting at\
    \ /tmp/tmpu599a764.jl:17\n"
  stdout: ''
  timestamp: 1659749154
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    \n    for x in l\n        triples_sum_to_zero[(x-3)%3]+=1\n\
    \    end\n    \n    triples_sum_to_zero[triples_sum_to_zero==3]=true\n    \n \
    \   return triples_sum_to_zero\nend\n</cell>\n<code language=julia-1.5>\ntriples_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<text>\nExercise 2\nWrite a function called triples_sum_to_zero that\
    \ takes a list of integers as an input.\nIt returns True if there are three distinct\
    \ elements in the list that sum to zero, and False otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyiotcpnz.jl:19\nin expression starting at\
    \ /tmp/tmpyiotcpnz.jl:19\n"
  stdout: ''
  timestamp: 1659749155
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples_sum_to_zero\
    \ = zeros(Int64, 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2]\
    \ = 1\n    triples_sum_to_zero[3] = 1\n    \n    for i in 1:length(l)\n      \
    \  if triples_sum_to_zero[triples_sum_to_zero[i] + l[i]] == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @time triples_sum_to_zero(1:10000);\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a list of integers as an input, and returns True if there are three\
    \ distinct elements in the list that sum to zero, and False otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb587ig54.jl:21\nin expression starting at\
    \ /tmp/tmpb587ig54.jl:21\n"
  stdout: ''
  timestamp: 1659749155
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for x in\
    \ l\n        sum += x\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpivgrv235.jl:18\nin expression starting at\
    \ /tmp/tmpivgrv235.jl:18\n"
  stdout: ''
  timestamp: 1659749156
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x == 0 || x == -x || x == -x-x\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9l3r0nzs.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp9l3r0nzs.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9l3r0nzs.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9l3r0nzs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9l3r0nzs.jl:24\n  Expression: candidate([1, 3, -2, 1]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9l3r0nzs.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9l3r0nzs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9l3r0nzs.jl:27\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9l3r0nzs.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9l3r0nzs.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        triples_sum_to_zero[x] = triples_sum_to_zero[x]\
    \ + 1\n    end\n    triples_sum_to_zero[1] > 0 && triples_sum_to_zero[2] > 0 &&\
    \ triples_sum_to_zero[3] > 0\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpscny2ni1.jl:14\nin expression starting at\
    \ /tmp/tmpscny2ni1.jl:14\n"
  stdout: ''
  timestamp: 1659749156
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n    end\n    \n    if sum == 0 \n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjufa9n9q.jl:20\nin expression starting at\
    \ /tmp/tmpjufa9n9q.jl:20\n"
  stdout: ''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@assert triples_sum_to_zero([1,2,3])\
    \ == true\n@assert triples_sum_to_zero([1,2,4]) == false\n@assert triples_sum_to_zero([1,2,5])\
    \ == false\n@assert triples_sum_to_zero([1,2,6]) == false\n@assert triples_sum_to_zero([1,2,7])\
    \ == false\n@assert triples_sum_to_zero([1,2,8]) == false\n@assert triples_sum_to_zero([1,2,9])\
    \ == false\n@assert triples_sum_to_zero([1,2,10]) == false\n@assert triples_sum_to_zero([1,2,11])\
    \ == false\n@assert triples_sum_to_zero([1,2,12]) == false\n@assert triples_sum_to_zero([1,2,13])\
    \ == false\n@assert triples_sum_to_zero([1,2,14]) == false\n@assert triples_sum_to_zero([1,2,15])\
    \ == false\n@assert triples_sum_to_zero([1,2,16]) == false\n@assert triples_sum_to_zero([1,2,17])\
    \ == false\n@assert triples_sum_to_zero([1,2,18]) == false\n@assert triples_sum_to_zero([1,2,19])\
    \ == false\n@assert triples_sum_to_zero([1,2,20]) == false\n@assert triples_sum_to_zero([1,2,21])\
    \ == false\n@assert triples_sum_to_zero([1,2,22]) == false\n@assert triples_sum_to_zero([1,2,23])\
    \ == false\n@assert triples_sum_to_zero([1,2,24]) == false\n@assert triples_sum_to_zero([1,2,25])\
    \ == false\n@assert triples_sum_to_zero([1,2,26]) == false\n@assert triples_sum_to_zero([1,2,27])\
    \ == false\n@assert triples_sum_to_zero([1,2,28]) == false\n@assert triples_sum_to_zero([1,2,29])\
    \ == false\n@assert triples_sum_to_zero([1,2,30]) == false\n@assert triples_sum_to_zero([1,2,31])\
    \ == false\n@assert triples_sum_to_zero([1,2,32]) == false\n@assert triples_sum_to_zero([1,2,33])\
    \ == false\n@assert triples_sum_to_zero([1,2,34]) == false\n@assert triples_sum_to_zero([1,2,35])\
    \ == false\n@assert triples_sum_to_zero([1,2,36]) == false\n@assert triples_sum\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1xahj2c9.jl:18\nin expression starting at\
    \ /tmp/tmp1xahj2c9.jl:18\n"
  stdout: ''
  timestamp: 1659749156
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        for y in l\n            for z in l\n           \
    \     if x+y+z == 0 \n                    triples_sum_to_zero[x,y,z] = 1\n   \
    \             end\n            end\n        end\n    end\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwcicohs9.jl:20\nin expression starting at\
    \ /tmp/tmpwcicohs9.jl:20\n"
  stdout: ''
  timestamp: 1659749156
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        triples = triples + [x]*x\n        if triples.sum() ==\
    \ 0\n            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcqvmfsj7.jl:17\nin expression starting at\
    \ /tmp/tmpcqvmfsj7.jl:17\n"
  stdout: ''
  timestamp: 1659749156
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l, [],\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp38ds3444.jl:15\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Any}, ::Int64)\n  Closest
    candidates are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmp38ds3444.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp38ds3444.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38ds3444.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38ds3444.jl:14\n'''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(vec(1:100000));\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are three distinct elements in the list\
    \ that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps21t0fde.jl:17\nin expression starting at\
    \ /tmp/tmps21t0fde.jl:17\n"
  stdout: ''
  timestamp: 1659749156
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples = Vector{Int64}()\n\
    \    \n    for x in l\n        triples.push(x)\n    end\n    \n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8c7l72mk.jl:22\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp8c7l72mk.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8c7l72mk.jl:22 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8c7l72mk.jl:21\ntest set: Error
    During Test at /tmp/tmp8c7l72mk.jl:23\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmp8c7l72mk.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8c7l72mk.jl:23 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8c7l72mk.jl:21\ntest set: Error
    During Test at /tmp/tmp8c7l72mk.jl:24\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmp8c7l72mk.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8c7l72mk.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8c7l72mk.jl:21\ntest set: Error
    During Test at /tmp/tmp8c7l72mk.jl:25\n  Test threw exc'
  timestamp: 1659749153
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z == 0\n                    triples_sum_to_zero = true\n          \
    \          break\n            end\n        end\n    end\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm2enjny9.jl:20\nin expression starting at\
    \ /tmp/tmpm2enjny9.jl:20\n"
  stdout: ''
  timestamp: 1659749157
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa6m5n4dy.jl:17\nin expression starting at\
    \ /tmp/tmpa6m5n4dy.jl:17\n"
  stdout: ''
  timestamp: 1659749157
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    triples_sum_to_zero[1] = 1\n    triples_sum_to_zero[2] = 1\n    triples_sum_to_zero[3]\
    \ = -1\n    \n    for x in l\n        if triples_sum_to_zero[x] == 1\n       \
    \     return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time triples_sum_to_zero([1,2,3])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are three distinct elements in the list that sum to zero, and False\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcpvftpkg.jl:20\nin expression starting at\
    \ /tmp/tmpcpvftpkg.jl:20\n"
  stdout: ''
  timestamp: 1659749157
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = \n \
    \       sum(l) == 0 && (sum(l) == 0 || sum(l) == -sum(l))\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5o0l5nmj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp5o0l5nmj.jl:19\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5o0l5nmj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5o0l5nmj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5o0l5nmj.jl:22\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5o0l5nmj.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5o0l5nmj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749158
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = zip(l, l[1:end-1],\
    \ l[2:end])\n    triples_sum_to_zero = all(map(triples_sum_to_zero, triples))\n\
    \    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmptnq5ivj3.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmptnq5ivj3.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero\
    \ not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n \
    \    @ Main /tmp/tmptnq5ivj3.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptnq5ivj3.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptnq5ivj3.jl:16\ntest set:\
    \ Error During Test at /tmp/tmptnq5ivj3.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero not\
    \ defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @\
    \ Main /tmp/tmptnq5ivj3.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptnq5ivj3.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptnq5ivj3.jl:16\ntest set:\
    \ Error During Test at /tmp/tmptnq5ivj3.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero not defined\n\
    \  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmptnq5ivj3.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptnq5ivj3.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptnq5ivj3.jl:16\ntest set:\
    \ Error During Test at /tmp/tmptnq5ivj3.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 7]) == false\n  UndefVarError: triples_sum_to_zero not defined\n\
    \  Stacktrace:\n   [1] triples_sum_to_zero(l::Vec"
  timestamp: 1659749159
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x == 0 || x == -x || x == -x-x\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9l3r0nzs.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp9l3r0nzs.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9l3r0nzs.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9l3r0nzs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9l3r0nzs.jl:24\n  Expression: candidate([1, 3, -2, 1]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9l3r0nzs.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9l3r0nzs.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9l3r0nzs.jl:27\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9l3r0nzs.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9l3r0nzs.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
  timestamp: 1659749140
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:10000);\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes a list of integers as\
    \ an input and returns a list of all integers in the list that are divisible by\
    \ 3.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0xn2dsz_.jl:17\nin expression starting at\
    \ /tmp/tmp0xn2dsz_.jl:17\n"
  stdout: ''
  timestamp: 1659749157
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = @view\
    \ l == 0 && (@view l == @view l .+ @view l .+ @view l .+ 0)\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: ArgumentError: Invalid use of @view macro: argument must\
    \ be a reference expression A[...].\nStacktrace:\n [1] var\"@view\"(__source__::LineNumberNode,\
    \ __module__::Module, ex::Any)\n   @ Base ./views.jl:136\n [2] #macroexpand#51\n\
    \   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n\
    \ [4] docm(source::LineNumberNode, mod::Module, meta::Any, ex::Any, define::Bool)\
    \ (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode,\
    \ ::Module, ::String, ::Vararg{Any})\n   @ Core ./boot.jl:517\nin expression starting\
    \ at /tmp/tmpbwy_bo07.jl:1\nin expression starting at /tmp/tmpbwy_bo07.jl:1\n"
  stdout: ''
  timestamp: 1659749157
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        for y in l\n            for z in l\n             \
    \   if x+y+z==0\n                    triples_sum_to_zero = true\n            \
    \        break\n            end\n        end\n    end\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(1:100000);\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input.\nIt returns True if there are three distinct elements in the list\
    \ that\nsum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptahwl1sa.jl:20\nin expression starting at\
    \ /tmp/tmptahwl1sa.jl:20\n"
  stdout: ''
  timestamp: 1659749157
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        for y in l\n            for z in l\n           \
    \     if x+y+z==0\n                    triples_sum_to_zero[x,y,z] = 1\n      \
    \          end\n            end\n        end\n    end\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.4>\n@time triples_sum_to_zero([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are three distinct elements in the list\
    \ that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp66k_dqcc.jl:20\nin expression starting at\
    \ /tmp/tmp66k_dqcc.jl:20\n"
  stdout: ''
  timestamp: 1659749157
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l \n        for y in l \n            for z in l \n          \
    \      if x+y+z==0 \n                    triples_sum_to_zero = true \n       \
    \             break \n                end \n            end \n        end \n \
    \   end \n    return triples_sum_to_zero \nend \n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfkn7uix1.jl:21\nin expression starting at\
    \ /tmp/tmpfkn7uix1.jl:21\n"
  stdout: ''
  timestamp: 1659749157
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = @view\
    \ l[[1]] == 0 && @view l[[2]] == 0 && @view l[[3]] == 0\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: ArgumentError: Invalid use of @view macro: argument must\
    \ be a reference expression A[...].\nStacktrace:\n [1] var\"@view\"(__source__::LineNumberNode,\
    \ __module__::Module, ex::Any)\n   @ Base ./views.jl:136\n [2] #macroexpand#51\n\
    \   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n\
    \ [4] docm(source::LineNumberNode, mod::Module, meta::Any, ex::Any, define::Bool)\
    \ (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode,\
    \ ::Module, ::String, ::Vararg{Any})\n   @ Core ./boot.jl:517\nin expression starting\
    \ at /tmp/tmp824ife7o.jl:1\nin expression starting at /tmp/tmp824ife7o.jl:1\n"
  stdout: ''
  timestamp: 1659749158
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for triple in l\n        triples_sum_to_zero[triple] += 1\n    end\n\
    \    return triples_sum_to_zero[1]==3 && triples_sum_to_zero[2]==3 && triples_sum_to_zero[3]==3\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    triples_sum_to_zero takes\
    \ a list of integers as an input.\n    it returns True if there are three distinct\
    \ elements in the list that\n    sum to zero, and False otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuuf2uokm.jl:14\nin expression starting at\
    \ /tmp/tmpuuf2uokm.jl:14\n"
  stdout: ''
  timestamp: 1659749158
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@assert triples_sum_to_zero([1,2,3])\
    \ == true\n@assert triples_sum_to_zero([1,2,2,3]) == false\n</cell>\n<text>\n\
    Question 2.2\nWrite a function that takes a list of integers as an input, and\
    \ returns True if there are two distinct elements in the list that sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpalc7qtso.jl:17\nin expression starting at\
    \ /tmp/tmpalc7qtso.jl:17\n"
  stdout: ''
  timestamp: 1659749158
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero(l, [],\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\
    \t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) ==\
    \ false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp38ds3444.jl:15\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method
    matching triples_sum_to_zero(::Vector{Int64}, ::Vector{Any}, ::Int64)\n  Closest
    candidates are:\n    triples_sum_to_zero(::Vector{Int64}) at /tmp/tmp38ds3444.jl:7\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp38ds3444.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38ds3444.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38ds3444.jl:14\n'''
  timestamp: 1659749141
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = Set()\n\
    \    for x in l\n        for y in l\n            for z in l\n                if\
    \ x+y+z == 0\n                    triples_sum_to_zero = triples_sum_to_zero +\
    \ (x,y,z)\n                end\n            end\n        end\n    end\n    return\
    \ length(triples_sum_to_zero) == 3\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp68jawci_.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp68jawci_.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 3, 5, 0]) == false\n  MethodError: no method matching\
    \ +(::Set{Any}, ::Tuple{Int64, Int64, Int64})\n  Closest candidates are:\n   \
    \ +(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp68jawci_.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp68jawci_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp68jawci_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp68jawci_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, -2, 1]) == true\n  MethodError: no method matching +(::Set{Any},\
    \ ::Tuple{Int64, Int64, Int64})\n  Closest candidates are:\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp68jawci_.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp68jawci_.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp68jawci_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp68jawci_.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([2, 4, -5, 3, 9, 7]) == true\n  MethodError: no method matching +(::Set{Any},\
    \ ::Tuple{Int64, Int64, Int64})\n  Closest candidates are:\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp68jawci_.jl:13\n\
    \   [2] macro expansion\n     @ /share"
  timestamp: 1659749160
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = @view\
    \ l |> filter(x->(x+x+x)==0, 1:3)\n    return length(triples_sum_to_zero)==3\n\
    end\n</cell>\n<code language=julia-1.5>\n@time triples_sum_to_zero(vec(1:100000));\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are three distinct elements in the list\
    \ that sum to zero, and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: ArgumentError: Invalid use of @view macro: argument must\
    \ be a reference expression A[...].\nStacktrace:\n [1] var\"@view\"(__source__::LineNumberNode,\
    \ __module__::Module, ex::Any)\n   @ Base ./views.jl:136\n [2] #macroexpand#51\n\
    \   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n\
    \ [4] docm(source::LineNumberNode, mod::Module, meta::Any, ex::Any, define::Bool)\
    \ (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode,\
    \ ::Module, ::String, ::Vararg{Any})\n   @ Core ./boot.jl:517\nin expression starting\
    \ at /tmp/tmpq858m4mf.jl:1\nin expression starting at /tmp/tmpq858m4mf.jl:1\n"
  stdout: ''
  timestamp: 1659749158
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x == 0 || x == -x || x == x\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo8v37euc.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpo8v37euc.jl:22\n  Expression: candidate([1,\
    \ 3, 5, 0]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8v37euc.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8v37euc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo8v37euc.jl:23\n  Expression: candidate([1, 3, 5, -1]) ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo8v37euc.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8v37euc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo8v37euc.jl:25\n  Expression: candidate([1, 2, 3, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8v37euc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8v37euc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo8v37euc.jl:26\n  Expression: candidate([1, 2, 5, 7]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8v37euc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8v37euc.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo8v37euc.jl:28\n  Expression: candidate([1]) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  timestamp: 1659749159
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for x in l\n\
    \        sum += x\n        if sum == 0 \n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp98d4c39d.jl:17\nin expression starting at\
    \ /tmp/tmp98d4c39d.jl:17\n"
  stdout: ''
  timestamp: 1659749158
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum > 0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpav_baznw.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpav_baznw.jl:24\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpav_baznw.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpav_baznw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpav_baznw.jl:27\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpav_baznw.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpav_baznw.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749159
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = zeros(Int64,\
    \ 3)\n    for x in l\n        triples_sum_to_zero[x] = triples_sum_to_zero[x]\
    \ + 1\n    end\n    \n    if triples_sum_to_zero[1] == 2 && triples_sum_to_zero[2]\
    \ == 2 && triples_sum_to_zero[3] == 2\n        return true\n    else\n       \
    \ return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n   \
    \ triples_sum_to_zero takes a list of integers as an input.\n    it returns True\
    \ if there are three distinct elements in the list that\n    sum to zero, and\
    \ False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj9h236rg.jl:19\nin expression starting at\
    \ /tmp/tmpj9h236rg.jl:19\n"
  stdout: ''
  timestamp: 1659749158
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    triples = Vector{Int64}()\n\
    \    \n    for x in l\n        triples.push(x)\n    end\n    \n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8c7l72mk.jl:22\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp8c7l72mk.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8c7l72mk.jl:22 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8c7l72mk.jl:21\ntest set: Error
    During Test at /tmp/tmp8c7l72mk.jl:23\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmp8c7l72mk.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8c7l72mk.jl:23 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8c7l72mk.jl:21\ntest set: Error
    During Test at /tmp/tmp8c7l72mk.jl:24\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmp8c7l72mk.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8c7l72mk.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8c7l72mk.jl:21\ntest set: Error
    During Test at /tmp/tmp8c7l72mk.jl:25\n  Test threw exc'
  timestamp: 1659749153
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = triples_sum_to_zero(l)\n\
    \    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp6quyvjrn.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  UndefVarError: triples_sum_to_zero
    not defined\n  Stacktrace:\n   [1] triples_sum_to_zero(l::Vector{Int64})\n     @
    Main /tmp/tmp6quyvjrn.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6quyvjrn.jl:16 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6quyvjrn.jl:15\ntest set: Error
    During Test at /tmp/tmp6quyvjrn.jl:17\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp6quyvjrn.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6quyvjrn.jl:17 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6quyvjrn.jl:15\ntest set: Error
    During Test at /tmp/tmp6quyvjrn.jl:18\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  UndefVarError: triples_sum_to_zero not defined\n  Stacktrace:\n   [1]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmp6quyvjrn.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6quyvjrn.jl:18 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6quyvjrn.jl:15\ntest set: Error
    During Test at /tmp/tmp6quyvjrn.jl:19\n  Test threw exception\n  Expression: candidate([1,
    2, 3, 7]) == false\n  UndefVarError: triples_sum_to_zero not defin'
  timestamp: 1659749151
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l \n        for y in l \n            for z in l \n          \
    \      if x+y+z == 0 \n                    triples_sum_to_zero = true \n     \
    \               break \n                end \n            end \n        end \n\
    \    end \n    return triples_sum_to_zero \nend \n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkvv7krqc.jl:21\nin expression starting at\
    \ /tmp/tmpkvv7krqc.jl:21\n"
  stdout: ''
  timestamp: 1659749158
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = false\
    \ \n    for x in l\n        if x != 0 && x != 1 && x != 2\n            triples_sum_to_zero\
    \ = true\n            break\n        end\n    end\n    return triples_sum_to_zero\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptzedla2f.jl:17\nin expression starting at\
    \ /tmp/tmptzedla2f.jl:17\n"
  stdout: ''
  timestamp: 1659749148
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for x in\
    \ l\n        sum += x\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    triples_sum_to_zero takes a list of integers as an input.\n    it returns\
    \ True if there are three distinct elements in the list that\n    sum to zero,\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([1, 2, 5, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([1,\
    \ 3, 5, -100]) == false)\n\t@test(candidate([100, 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxtfn47zb.jl:18\nin expression starting at\
    \ /tmp/tmpxtfn47zb.jl:18\n"
  stdout: ''
  timestamp: 1659749158
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = @view\
    \ l |> filter(x->(x+x+x)==0, l) |> length==3\n    return triples_sum_to_zero\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: ArgumentError: Invalid use of @view macro: argument must\
    \ be a reference expression A[...].\nStacktrace:\n [1] var\"@view\"(__source__::LineNumberNode,\
    \ __module__::Module, ex::Any)\n   @ Base ./views.jl:136\n [2] #macroexpand#51\n\
    \   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n\
    \ [4] docm(source::LineNumberNode, mod::Module, meta::Any, ex::Any, define::Bool)\
    \ (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode,\
    \ ::Module, ::String, ::Vararg{Any})\n   @ Core ./boot.jl:517\nin expression starting\
    \ at /tmp/tmp0tpsd9oo.jl:1\nin expression starting at /tmp/tmp0tpsd9oo.jl:1\n"
  stdout: ''
  timestamp: 1659749146
- exit_code: -1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples = Vector{Int64}()\n\
    \    for x in l\n        triples.push(x)\n    end\n    triples_sum_to_zero(triples)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcpiwd09n.jl:19\n  Test threw
    exception\n  Expression: candidate([1, 3, 5, 0]) == false\n  type Array has no
    field push\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    triples_sum_to_zero(l::Vector{Int64})\n     @ Main /tmp/tmpcpiwd09n.jl:10\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:20\n  Test threw exception\n  Expression: candidate([1,
    3, 5, -1]) == false\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:20 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:21\n  Test threw exception\n  Expression: candidate([1,
    3, -2, 1]) == true\n  type Array has no field push\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] triples_sum_to_zero(l::Vector{Int64})\n     @ Main
    /tmp/tmpcpiwd09n.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcpiwd09n.jl:21 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcpiwd09n.jl:18\ntest set: Error
    During Test at /tmp/tmpcpiwd09n.jl:22\n  Test threw exc'
  timestamp: 1659749150
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    \n    sum = 0\n    for x in\
    \ l\n        sum += x\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3,\
    \ 5, 0]) == false)\n\t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1,\
    \ 2, 5, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpivgrv235.jl:18\nin expression starting at\
    \ /tmp/tmpivgrv235.jl:18\n"
  stdout: ''
  timestamp: 1659749156
- exit_code: 1
  program: "\"\"\"\n    triples_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are three distinct elements in the list that\n \
    \   sum to zero, and False otherwise.\n\n                        \"\"\"\nfunction\
    \ triples_sum_to_zero(l::Vector{Int64})::Bool \n    triples_sum_to_zero = l ==\
    \ [0,0,0]\n    return triples_sum_to_zero\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triples_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\
    \t@test(candidate([1, 3, 5, -1]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([1, 2, 5,\
    \ 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 9, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([1, 3, 5, -100]) == false)\n\t@test(candidate([100,\
    \ 3, 5, -100]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb66bjans.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb66bjans.jl:18\n  Expression: candidate([1,\
    \ 3, -2, 1]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb66bjans.jl:21\n  Expression: candidate([2, 4, -5, 3, 9, 7])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb66bjans.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb66bjans.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     2      9\n"
  timestamp: 1659749143

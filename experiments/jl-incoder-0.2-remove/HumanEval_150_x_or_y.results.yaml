language: jl
name: HumanEval_150_x_or_y
results:
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if isPrime(n) \n        then return x_or_y(n-1, x-1, y-1)\n        else\
    \ return x_or_y(n-1, x, y+1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb9vk3jrt.jl:9\nin expression starting at /tmp/tmpb9vk3jrt.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi1lpzafo.jl:9\nin expression starting at /tmp/tmpi1lpzafo.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2, 5, 10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a program which should return the value of x if n is a prime number and should\
    \ return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfmd5hnrw.jl:9\nin expression starting at /tmp/tmpfmd5hnrw.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y\n    end\n \
    \   if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcu7i4sna.jl:9\nin expression starting at /tmp/tmpcu7i4sna.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 1, 2)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpora3dug6.jl:9\nin expression starting at /tmp/tmpora3dug6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 10, 20)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu5mi51pu.jl:9\nin expression starting at /tmp/tmpu5mi51pu.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else\
    \ return x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4d33fhr9.jl:9\nin expression starting at /tmp/tmp4d33fhr9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==2 \n        then return x\n        else return y\n    end\n    if\
    \ n%2==0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(4, 2, 3)\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ a prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu_9ukwj6.jl:9\nin expression starting at /tmp/tmpu_9ukwj6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y) \n        else\
    \ return x_or_y(n/2, y, x) \n    end\nend\n</cell>\n<text>\nThe function x_or_y\
    \ takes three arguments: n, x and y. The first argument n takes the value of a\
    \ number which we want to check. The second argument x takes the value of a variable\
    \ which we want to return if the first argument is a prime number. The third argument\
    \ y takes the value of a variable which we want to return if the first argument\
    \ is not a prime number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0ntmjdb5.jl:9\nin expression starting at /tmp/tmp0ntmjdb5.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y) \n        else\
    \ return x_or_y(n/2, y, x) \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0ws4s0f_.jl:9\nin expression starting at /tmp/tmp0ws4s0f_.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(3,\
    \ 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(4, 10, 20)\n</cell>\n<code\
    \ language=julia-1.0>\nx_or_y(5, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(6, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(8, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(9, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(10, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(11, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(12, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(13, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(14, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(15, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(16, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(17, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(18, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(19, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(20, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(21, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(22, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(23, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(24, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(25, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(26, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(27, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(28, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(29, 10, 20)\n</cell>\n<code language=julia-\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc54wot0y.jl:9\nin expression starting at /tmp/tmpc54wot0y.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 11)\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 13)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 14)\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 15)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 16)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 17)\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 18)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 19)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 21)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 22)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 23)\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 24)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 25)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 26)\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 27)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 28)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 29)\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 31)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 32)\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 33)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 34)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 35)\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 36)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 37)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt2r8mchg.jl:9\nin expression starting at /tmp/tmpt2r8mchg.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(6, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(8, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(9, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(11, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(12, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(13, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(14, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(16, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(17, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(18, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(19, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(20, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(21, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(22, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(23, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(24, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(25, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(26, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(27, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(28, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(29, 10, 20)\n</cell>\n<code language=\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4q1d6tfe.jl:9\nin expression starting at /tmp/tmp4q1d6tfe.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n % 2 == 0 \n        then return x\n        else return y\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjqc9h7g6.jl:9\nin expression starting at /tmp/tmpjqc9h7g6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvc8x06hc.jl:9\nin expression starting at /tmp/tmpvc8x06hc.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n % 2 == 0 \n        then return x\n        else return y\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjqc9h7g6.jl:9\nin expression starting at /tmp/tmpjqc9h7g6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 30)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 40)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 50)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 60)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 70)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 80)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 90)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 100)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 110)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 120)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 130)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 140)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 150)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 160)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 170)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 180)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 190)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 200)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 210)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 220)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 230)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 240)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 250)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 260)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 270)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 280)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 290)\n</cell\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3tve2rw5.jl:9\nin expression starting at /tmp/tmp3tve2rw5.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n)\n        \
    \    then y\n        else\n            x\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 3, 5)\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplh2915fj.jl:9\nin expression starting at /tmp/tmplh2915fj.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0a5l_3r6.jl:9\nin expression starting at /tmp/tmp0a5l_3r6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else \n        return y\nend\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(2,1,2)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(2,3,4)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,5)\n</cell>\n<code\
    \ language=julia-1.4>\nx_or_y(2,3,6)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,7)\n\
    </cell>\n<code language=julia-1.4>\nx_or_y(2,3,8)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(2,3,9)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,10)\n</cell>\n<code\
    \ language=julia-1.4>\nx_or_y(2,3,11)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,12)\n\
    </cell>\n<code language=julia-1.4>\nx_or_y(2,3,13)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(2,3,14)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,15)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(2,3,16)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(2,3,17)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,18)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(2,3,19)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(2,3,20)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,21)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(2,3,22)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(2,3,23)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,24)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(2,3,25)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(2,3,26)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,27)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(2,3,28)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(2,3,29)\n</cell>\n<code language=julia-1.4>\nx_or_y(2,3,30)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(2,3,3\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpovqhi097.jl:13\nin expression starting at\
    \ /tmp/tmpovqhi097.jl:13\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0a5l_3r6.jl:9\nin expression starting at /tmp/tmp0a5l_3r6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplftydipj.jl:9\nin expression starting at /tmp/tmplftydipj.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 2, 3)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 3, 2)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 2)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 3)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 4)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 6)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 7)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 8)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 9)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 11)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 13)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 14)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 15)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 16)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 17)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 18)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 19)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 21)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 22)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 23)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 24)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 25)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 26)\n</cell\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz1h_k9bo.jl:9\nin expression starting at /tmp/tmpz1h_k9bo.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if n % 2 == 0 \n        then x_or_y(n/2,\
    \ x, y)\n    else \n        y \nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 30)\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(10, 10, 40)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 50)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 60)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 10, 70)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 80)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 90)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 10, 100)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 110)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 120)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 130)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 140)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 150)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 160)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 170)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 180)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 190)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 200)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 210)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 220)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 230)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 240)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 250)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 260)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 270)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 280)\n</cell>\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3r8fon9j.jl:9\nin expression starting at /tmp/tmp3r8fon9j.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if isPrime(n) \n        then return x\n        else return y\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nx_or_y(3, -5, -2)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function which takes an integer n and returns the value of\
    \ x if n is a prime number and returns the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp27wp8xe.jl:9\nin expression starting at /tmp/tmpp27wp8xe.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n)\n        \
    \    then x_or_y(n-1, x-1, y-1)\n        else\n            y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 10, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 20, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 20, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 20, 30)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 30, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 30, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 30, 30)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 30, 40)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 40, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 40, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 40, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 40, 40)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 50, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 50, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 50, 30)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 50, 40)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 50, 50)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 60, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 60, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 60, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 60, 40)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 60, 50)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 70, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 70, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 70, 30)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 70, 40)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 70, 50)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdeox8yyu.jl:9\nin expression starting at /tmp/tmpdeox8yyu.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 30)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 40)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 50)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 60)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 70)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 80)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 90)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 100)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 110)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 120)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 130)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 140)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 150)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 160)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 170)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 180)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 190)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 200)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 210)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 220)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 230)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 240)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 250)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 260)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 270)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 280)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo55a9od8.jl:9\nin expression starting at /tmp/tmpo55a9od8.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(5,\
    \ 1, 2)\n</cell>\n<text>\nExercise 2\nWrite a program which should return the\
    \ value of x if n is \n    a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0xln2a9r.jl:9\nin expression starting at /tmp/tmp0xln2a9r.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(5,\
    \ 1, 2)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 3)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 3)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 3, 3)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 3, 4)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 3, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 3, 6)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 3, 7)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 3, 8)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 3, 9)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 3, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 3, 11)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 3, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 3, 13)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 3, 14)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 3, 15)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 3, 16)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 3, 17)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 3, 18)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 3, 19)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 3, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 3, 21)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 3, 22)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 3, 23)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 3, 24)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 3, 25)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 3, 26)\n</cell>\n<code language=juli\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe01fijav.jl:9\nin expression starting at /tmp/tmpe01fijav.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else \n        return y\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6v31dkkf.jl:13\nin expression starting at\
    \ /tmp/tmp6v31dkkf.jl:13\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(2,\
    \ 5, 6)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 7, 8)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 9, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 11, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(6, 13, 14)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 15, 16)\n</cell>\n<code language=julia-1.5>\nx_or_y(8, 17, 18)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(9, 19, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 21, 22)\n</cell>\n<code language=julia-1.5>\nx_or_y(11, 23, 24)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(12, 25, 26)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(13, 27, 28)\n</cell>\n<code language=julia-1.5>\nx_or_y(14, 29, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 31, 32)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(16, 33, 34)\n</cell>\n<code language=julia-1.5>\nx_or_y(17, 35, 36)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(18, 37, 38)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(19, 39, 40)\n</cell>\n<code language=julia-1.5>\nx_or_y(20, 41, 42)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(21, 43, 44)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(22, 45, 46)\n</cell>\n<code language=julia-1.5>\nx_or_y(23, 47, 48)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(24, 49, 50)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(25, 51, 52)\n</cell>\n<code language=julia-1.5>\nx_or_y(26, 53, 54)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(27, 55, 56)\n</cell>\n<code language=julia-1.5>\n\
    x_or_\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd5a8ssxl.jl:9\nin expression starting at /tmp/tmpd5a8ssxl.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 20)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe764y6d1.jl:9\nin expression starting at /tmp/tmpe764y6d1.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if n % 2 == 0 \n        then x_or_y(n/2,\
    \ x, y)\n    else \n        y \nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 1, 2)\n</cell>\n<text>\nExercise 2\nWrite a program which should return the\
    \ value of x if n is \n    a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz8c6zpuk.jl:9\nin expression starting at /tmp/tmpz8c6zpuk.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(2,\
    \ 5, 3)\n</cell>\n<text>\nExercise 2\nWrite a program which should return the\
    \ value of x if n is \n    a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpes8bxorj.jl:9\nin expression starting at /tmp/tmpes8bxorj.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpit9fo78e.jl:9\nin expression starting at /tmp/tmpit9fo78e.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if n % 2 == 0 \n       \
    \     then x_or_y(n/2, x, y)\n        else\n            if n % 3 == 0 \n     \
    \           then x_or_y(n/3, x, y)\n            else\n                if n % 5\
    \ == 0 \n                    then x_or_y(n/5, x, y)\n                else\n  \
    \                  if n % 7 == 0 \n                        then x_or_y(n/7, x,\
    \ y)\n                    else\n                        if n % 11 == 0 \n    \
    \                        then x_or_y(n/11, x, y)\n                        else\n\
    \                            if n % 13 == 0 \n                               \
    \ then x_or_y(n/13, x, y)\n                            else\n                \
    \                if n % 17 == 0 \n                                    then x_or_y(n/17,\
    \ x, y)\n                                else\n                              \
    \      if n % 19 == 0 \n                                        then x_or_y(n/19,\
    \ x, y)\n                                    else\n                          \
    \              if n % 23 == 0 \n                                            then\
    \ x_or_y(n/23, x, y)\n                                        else\n         \
    \                                   if n % 29 == 0 \n                        \
    \                        then x_or_y(n/29, x, y)\n                           \
    \                 else\n                                                if n %\
    \ 31 == 0 \n                                                    then x_or_y(n/31,\
    \ x, y)\n                                                else\n              \
    \                                      if n % 37 == 0 \n                     \
    \                                   then x_or_y(n/37, x, y)\n                \
    \                                    else\n                                  \
    \                      if n % 41 == 0 \n                                     \
    \                       then x_or_y(n/41, x, y)\n                            \
    \                            else\n                                          \
    \                  if n % 43 == 0 \n                                         \
    \                       then x_or_y(n/43, x, y)\n                            \
    \                                else\n                                      \
    \                          if n % 47 == 0 \n                                 \
    \                                   then x_or_y(n/47, x, y)\n                \
    \                                                else\n                      \
    \                                              if n % 49 == 0 \n             \
    \                                                           then x_or_y(n/49,\
    \ x, y)\n                                                                    else\n\
    \                                                        if n % 53 == 0 \n   \
    \                                                         then x_or_y(n/53, x,\
    \ y)\n                                                        else\n         \
    \                                                   if n % 59 == 0 \n        \
    \                                                        then x_or_y(n/59, x,\
    \ y)\n                                                            else\n     \
    \                                                           if n % 61 == 0 \n\
    \                                                                    then x_or_y(n/61,\
    \ x, y)\n                                                                else\n\
    \                                                                    if n % 67\
    \ == 0 \n                                                                    \
    \    then x_or_y(n/67, x, y)\n                                               \
    \                     else\n                                                 \
    \       if n % 71 == 0 \n                                                    \
    \        then x_or_y(n/71, x, y)\n                                           \
    \             else\n                                                         \
    \   if n % 73 == 0 \n                                                        \
    \        then x_or_y(n/73, x, y)\n                                           \
    \                 else\n                                                     \
    \           if n % 79 == 0 \n                                                \
    \                    then x_or_y(n/79, x, y)\n                               \
    \                                 else\n                                     \
    \                               if n % 83 == 0 \n                            \
    \                                            then x_or_y(n/83, x, y)\n       \
    \                                                             else\n         \
    \                                               if n % 89 == 0 \n            \
    \                                                then x_or_y(n/89, x, y)\n   \
    \                                                     else\n                 \
    \                                           if n % 97 == 0 \n                \
    \                                                then x_or_y(n/97, x, y)\n   \
    \                                                         \nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwg8i5moa.jl:9\nin expression starting at /tmp/tmpwg8i5moa.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1lnvy47d.jl:9\nin expression starting at /tmp/tmp1lnvy47d.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then x_or_y(n-1, x-1, y-1)\n        else\n            y\n        end\n \
    \   end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 1, 0)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 2, 0)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 3, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 4, 0)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 5, 0)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 6, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 7, 0)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 8, 0)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 9, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 0)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 11, 0)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 12, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 13, 0)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 14, 0)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 15, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 16, 0)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 17, 0)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 18, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 19, 0)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 20, 0)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 21, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 22, 0)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 23, 0)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 24, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 25, 0)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 26, 0)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 27, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, \nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk133oai9.jl:9\nin expression starting at /tmp/tmpk133oai9.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphzpqe9kh.jl:9\nin expression starting at /tmp/tmphzpqe9kh.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(4,\
    \ 1, 2)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 2, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 3, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 5, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 6, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 7, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 8, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 9, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 10, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 11, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 12, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 13, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 14, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 15, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 16, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 17, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 18, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 19, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 20, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 21, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 22, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 23, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 24, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 25, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 26, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 27, 1)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_cngxqvo.jl:9\nin expression starting at /tmp/tmp_cngxqvo.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else if n == 2 \n        return y\n\
    \    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n    else \n      \
    \  return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.4>\nx_or_y(10,\
    \ 1, 2)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 2, 1)\n</cell>\n<code\
    \ language=julia-1.4>\nx_or_y(10, 3, 3)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(10, 4, 4)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 5, 5)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(10, 6, 6)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(10, 7, 7)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 8, 8)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(10, 9, 9)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(10, 10, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 11, 11)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(10, 12, 12)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(10, 13, 13)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 14, 14)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(10, 15, 15)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(10, 16, 16)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 17, 17)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(10, 18, 18)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(10, 19, 19)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 20, 20)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(10, 21, 21)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(10, 22, 22)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 23, 23)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(10, 24, 24)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(10, 25, 25)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 26, 26)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(10, 27, 27)\n</cell>\n<code language=\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7yr62107.jl:10\nin expression starting at\
    \ /tmp/tmp7yr62107.jl:10\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(3,\
    \ 10, 20)\n</cell>\n<text>\nExercise 3\nWrite a program which prints the numbers\
    \ from 1 to 100. \nThe program should print each number on a separate line.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgas9fivw.jl:9\nin expression starting at /tmp/tmpgas9fivw.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(5, 2, 3)\n</cell>\n<code language=julia-1.5>\nx_or_y(5,\
    \ 2, 4)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 6)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 7)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 8)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 9)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 11)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 13)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 14)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 15)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 16)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 17)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 18)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 19)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 21)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 22)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 23)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 24)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 25)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 26)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 27)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 28)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 29)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 30)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, \nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6i56cw1y.jl:9\nin expression starting at /tmp/tmp6i56cw1y.jl:9\n"
  stdout: ''
  timestamp: 1659747601
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 1, 2)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 2, 1)\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(10, 3, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 4, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 5, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 6, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 7, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 8, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 9, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 11, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 12, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 13, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 14, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 15, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 16, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 17, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 18, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 19, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 20, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 21, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 22, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 23, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 24, 1)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 25, 1)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 26, 1)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 27, 1)\n</cell>\n<code language=julia-\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2fq_55pf.jl:9\nin expression starting at /tmp/tmp2fq_55pf.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    if n != 1 \n        then return x_or_y(n-1, x-1, y-1)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp87hnm233.jl:9\nin expression starting at /tmp/tmp87hnm233.jl:9\n"
  stdout: ''
  timestamp: 1659747601
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y\n    end\n \
    \   if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcu7i4sna.jl:9\nin expression starting at /tmp/tmpcu7i4sna.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 1, 2)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 3)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 1, 4)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 1, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 6)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 1, 7)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 1, 8)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 9)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 1, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 1, 11)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 1, 13)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 1, 14)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 15)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 1, 16)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 1, 17)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 18)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 1, 19)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 1, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 21)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 1, 22)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 1, 23)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 24)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 1, 25)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 1, 26)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 1, 27)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 1, 28)\n\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwz9g_3d4.jl:9\nin expression starting at /tmp/tmpwz9g_3d4.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n % 2 == 0 \n        then return x \n        else return y\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9hutosgh.jl:9\nin expression starting at /tmp/tmp9hutosgh.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>\nx_or_y(5, 2, 3)\n</cell>\n<code language=julia-1.3>\nx_or_y(5,\
    \ 3, 2)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, 4)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(5, 3, 5)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, 6)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 3, 7)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(5, 3, 8)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, 9)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 3, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(5, 3, 11)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, 12)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 3, 13)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(5, 3, 14)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, 15)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 3, 16)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(5, 3, 17)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, 18)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 3, 19)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(5, 3, 20)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, 21)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 3, 22)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(5, 3, 23)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, 24)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 3, 25)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(5, 3, 26)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, 27)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 3, 28)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(5, 3, 29)\n</cell>\n<code language=julia-1.3>\nx_or_y(5, 3, \nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfyqt8ahu.jl:9\nin expression starting at /tmp/tmpfyqt8ahu.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if n % 2 == 0 \n        then x_or_y(n/2,\
    \ x, y)\n    else \n        y \nend\n</cell>\n<text>\nExercise 3\nWrite a program\
    \ that prints the Fibonacci series up to a number n.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3i4kr5ji.jl:9\nin expression starting at /tmp/tmp3i4kr5ji.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 3)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdv31g3hd.jl:9\nin expression starting at /tmp/tmpdv31g3hd.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0a5l_3r6.jl:9\nin expression starting at /tmp/tmp0a5l_3r6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 7)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 5, 7)\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx23_6gwq.jl:9\nin expression starting at /tmp/tmpx23_6gwq.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x) \n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 1, 2)\n</cell>\n<text>\nExercise 2\nWrite a program which prints the numbers\
    \ from 1 to 100. \nThe program should print each number on a new line.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6y8fs569.jl:9\nin expression starting at /tmp/tmp6y8fs569.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else \n        x\nend\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwx0zq9ci.jl:9\nin expression starting at /tmp/tmpwx0zq9ci.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else x\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 10)\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3se5qfb6.jl:9\nin expression starting at /tmp/tmp3se5qfb6.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 1, 2)\n</cell>\n<text>\nExercise 2\nWrite a program which should return the\
    \ value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppfcr7jn5.jl:9\nin expression starting at /tmp/tmppfcr7jn5.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y\n    end\n \
    \   if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp468rzdue.jl:9\nin expression starting at /tmp/tmp468rzdue.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==2 \n        then return x\n        else return y\n    end\n    \n\
    \    if n%2==0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 1, 2)\n\
    </cell>\n<text>\nExercise 3\nWrite a program which should return the value of\
    \ x if n is a prime number and should return the value of y otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp24ub_zeo.jl:9\nin expression starting at /tmp/tmp24ub_zeo.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else x\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 10)\n</cell>\n\
    <text>\nExercise 4\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxa8ma5vg.jl:9\nin expression starting at /tmp/tmpxa8ma5vg.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==2 \n        then return x\n        else return y\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function which returns the factorial of a\
    \ number. \nThe function should accept a number as an argument and should return\
    \ the factorial of that number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4hww4mnz.jl:9\nin expression starting at /tmp/tmp4hww4mnz.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 10, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 20)\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(10, 20, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 20, 20)\n</cell>\n<text>\nExercise 3\nWrite a program which should\
    \ return the value of x if n is a prime number and should return the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz855fxqo.jl:9\nin expression starting at /tmp/tmpz855fxqo.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n    else if isPrime(n) \n        then\
    \ return y \n    else \n        then return x \n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1cyggc88.jl:9\nin expression starting at /tmp/tmp1cyggc88.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(5, 2, 3)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaci6o6ja.jl:9\nin expression starting at /tmp/tmpaci6o6ja.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else \n        x\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(3, 10,\
    \ 20)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the value of\
    \ x if n is a prime number and returns the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuyplxbmc.jl:9\nin expression starting at /tmp/tmpuyplxbmc.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ the value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx5yffe0v.jl:9\nin expression starting at /tmp/tmpx5yffe0v.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    \n    if isPrime(n) \n        then return x \n        else return y \n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpounfr43y.jl:9\nin expression starting at /tmp/tmpounfr43y.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else x\nend\n</cell>\n<text>\nExercise 9\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp562vwaib.jl:9\nin expression starting at /tmp/tmp562vwaib.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==1 \n        then x\n        else y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>\nx_or_y(2,1,2)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,4)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(2,3,5)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(2,3,6)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,7)\n</cell>\n<code\
    \ language=julia-1.3>\nx_or_y(2,3,8)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,9)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(2,3,10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(2,3,11)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,12)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2,3,13)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(2,3,14)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,15)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2,3,16)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(2,3,17)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,18)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2,3,19)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(2,3,20)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,21)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2,3,22)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(2,3,23)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,24)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2,3,25)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(2,3,26)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,27)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2,3,28)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(2,3,29)\n</cell>\n<code language=julia-1.3>\nx_or_y(2,3,30)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2,\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp56z3flkb.jl:9\nin expression starting at /tmp/tmp56z3flkb.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(3,\
    \ 10, 20)\n</cell>\n<text>\nExercise 2\nWrite a program which should return True\
    \ if n is a prime number and False otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe592724j.jl:9\nin expression starting at /tmp/tmpe592724j.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==2 \n        then return x \n        else return y\n    end\n   \
    \ if n==3 \n        then return x \n        else return y\n    end\n    if n==5\
    \ \n        then return x \n        else return y\n    end\n    if n==7 \n   \
    \     then return x \n        else return y\n    end\n    if n==11 \n        then\
    \ return x \n        else return y\n    end\n    if n==13 \n        then return\
    \ x \n        else return y\n    end\n    if n==17 \n        then return x \n\
    \        else return y\n    end\n    if n==19 \n        then return x \n     \
    \   else return y\n    end\n    if n==23 \n        then return x \n        else\
    \ return y\n    end\n    if n==29 \n        then return x \n        else return\
    \ y\n    end\n    if n==37 \n        then return x \n        else return y\n \
    \   end\n    if n==43 \n        then return x \n        else return y\n    end\n\
    \    if n==51 \n        then return x \n        else return y\n    end\n    if\
    \ n==59 \n        then return x \n        else return y\n    end\n    if n==67\
    \ \n        then return x \n        else return y\n    end\n    if n==73 \n  \
    \      then return x \n        else return y\n    end\n    if n==81 \n       \
    \ then return x \n        else return y\n    end\n    if n==89 \n        then\
    \ return x \n        else return y\n    end\n    if n==97 \n        then return\
    \ x \n        else return y\n    end\n    if n==103 \n        then return x \n\
    \        else return y\n    end\n    if n==111 \n        then return x \n    \
    \    else return y\n    end\n    if n==119 \n        then return x \n        else\
    \ return y\n    end\n    if n==127 \n        then return x \n        else return\
    \ y\n    end\n    if n==135 \n        then return x \n        else return y\n\
    \    end\n    if n==143 \n        then return x \n        else return y\n    end\n\
    \    if n==151 \n        then return x \n        else return y\n    end\n    if\
    \ n==159 \n        then return x \n        else return y\n    end\n    if n==167\
    \ \n        then return x \n        else return y\n    end\n    if n==175 \n \
    \       then return x \n        else return y\n    end\n    if n==183 \n     \
    \   then return x \n        else return y\n    end\n    if n==191 \n        then\
    \ return x \n        else return \nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjipp5k75.jl:9\nin expression starting at /tmp/tmpjipp5k75.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 1, 2)\n</cell>\n<text>\nExercise 2\nWrite a program which should return the\
    \ value of x if n is \n    a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjsgthz6x.jl:9\nin expression starting at /tmp/tmpjsgthz6x.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if isPrime(n) \n        then return x_or_y(n-1, x-1, y-1)\n        else\
    \ return x_or_y(n-1, x-1, y-1)\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpof_11zxv.jl:9\nin expression starting at /tmp/tmpof_11zxv.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else\
    \ return x_or_y(n/2, y, x) \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 1, 2)\n</cell>\n<text>\nExercise 2\nWrite a program which takes as\
    \ input a number n and returns the value of n!.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphw8zvng5.jl:9\nin expression starting at /tmp/tmphw8zvng5.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then x_or_y(n-1, x, y)\n        else\n            y\n        end\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 1, 2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of divisors of a given number. \n\
    The function should take one parameter, n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbue0x5od.jl:9\nin expression starting at /tmp/tmpbue0x5od.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else \n        x\nend\n</cell>\n<text>\nExercise 9\nWrite a program which\
    \ should return the value of x if n is \n    a prime number and should return\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2lczxsa2.jl:9\nin expression starting at /tmp/tmp2lczxsa2.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 1, 2)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 2, 1)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(10, 3, 3)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 4, 4)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 5, 5)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(10, 6, 6)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 7, 7)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 8, 8)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(10, 9, 9)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 10, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 11, 11)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(10, 12, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 13, 13)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 14, 14)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(10, 15, 15)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 16, 16)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 17, 17)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(10, 18, 18)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 19, 19)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 20, 20)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(10, 21, 21)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 22, 22)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 23, 23)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(10, 24, 24)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 25, 25)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 26, 26)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(10, 27, 27)\n</\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpquddzz_b.jl:9\nin expression starting at /tmp/tmpquddzz_b.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0a5l_3r6.jl:9\nin expression starting at /tmp/tmp0a5l_3r6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==1 \n        return x\n    else \n        return y\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuivaeqk4.jl:13\nin expression starting at\
    \ /tmp/tmpuivaeqk4.jl:13\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n)\n        \
    \    then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(3, 7, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(4, 7, 10)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 7, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(6, 7, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 7, 10)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(8, 7, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(9, 7, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 7, 10)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(11, 7, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(12, 7, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(13, 7, 10)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(14, 7, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 7, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(16, 7, 10)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(17, 7, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(18, 7, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(19, 7, 10)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(20, 7, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(21, 7, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(22, 7, 10)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(23, 7, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(24, 7, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(25, 7, 10)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(26, 7, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(27, 7, 10)\n</cell>\n<code language=julia-1.3>\nx_or_y(28, 7, 10)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(29, 7, 10)\n</cell>\n<code language=juli\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpywu52q30.jl:9\nin expression starting at /tmp/tmpywu52q30.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 5)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 5)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 5)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 5)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 5)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 5)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 5)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 5)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell>\n<code language=julia-1.0>\nx_or_y(2, 5, 5)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(2, 5, 2)\n</cell\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1w8temrg.jl:9\nin expression starting at /tmp/tmp1w8temrg.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 10)\n</cell>\n<text>\nExercise 3\nWrite a program which takes as\
    \ input a number n and returns the value of \nthe factorial of n. \nThe factorial\
    \ of a number $n$ is defined as the product of all the \nnumbers from 1 to $n$,\
    \ excluding $n$.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1q96g044.jl:9\nin expression starting at /tmp/tmp1q96g044.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(3,\
    \ 0, 0)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 5, 7)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 7, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 9, 5)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 11, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 13, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 17, 5)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 19, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 23, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 25, 5)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 29, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 31, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 33, 5)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 37, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 39, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 41, 5)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 43, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 47, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 49, 5)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 51, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 53, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 55, 5)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 57, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 59, 5)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 61, 5)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 63, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 65, 5)\n</cell>\n\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy4a8y4oz.jl:9\nin expression starting at /tmp/tmpy4a8y4oz.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0a5l_3r6.jl:9\nin expression starting at /tmp/tmp0a5l_3r6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a program which takes a number n and returns the value\
    \ of x if n is a prime number and returns the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpefi4whaj.jl:9\nin expression starting at /tmp/tmpefi4whaj.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\nx_or_y(5, 2, 3)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which takes in two numbers and returns their sum.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplkailqkh.jl:9\nin expression starting at /tmp/tmplkailqkh.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if n == 2 \n        then y\n    else\
    \ if n % 2 == 0 \n        then x_or_y(n/2, x, y)\n    else x_or_y(n/2, y, x)\n\
    end\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 1, 2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which prints the numbers from 1 to 100. \nThe program should\
    \ print each number on a separate line. \nThe program should print each number\
    \ on a separate line with a space in between.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqg1c6iop.jl:9\nin expression starting at /tmp/tmpqg1c6iop.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1lnvy47d.jl:9\nin expression starting at /tmp/tmp1lnvy47d.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    if n % 2 == 0 \n        then return x_or_y(n/2, x, y) \n        else return\
    \ x_or_y(n/2, y, x) \n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program\
    \ which should return the value of x if n is \n    a prime number and should return\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdegydeha.jl:9\nin expression starting at /tmp/tmpdegydeha.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(2, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(6, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(8, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(9, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(11, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(12, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(13, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(14, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(16, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(17, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(18, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(19, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(20, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(21, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(22, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(23, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(24, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(25, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(26, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(27, 10, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(28, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(29, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(30, 10, 20)\n</cell>\n\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdtehmpmm.jl:9\nin expression starting at /tmp/tmpdtehmpmm.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvc8x06hc.jl:9\nin expression starting at /tmp/tmpvc8x06hc.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a program which should return x if n is even, y if n is odd and z if n is neither\
    \ even nor odd.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpln8c7t4k.jl:9\nin expression starting at /tmp/tmpln8c7t4k.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else if n == 2 \n        return y\n\
    \    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n    else \n      \
    \  return x_or_y(n/2, y, x)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn629og99.jl:10\nin expression starting at\
    \ /tmp/tmpn629og99.jl:10\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number. \nThe function should accept a number as an argument and should\
    \ return the factorial of that number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptorg1rn_.jl:9\nin expression starting at /tmp/tmptorg1rn_.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0a5l_3r6.jl:9\nin expression starting at /tmp/tmp0a5l_3r6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else \n        return y\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwgi26euw.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwgi26euw.jl:1\n\
    in expression starting at /tmp/tmpwgi26euw.jl:1\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 4\nWrite a function that returns\
    \ the first n prime numbers. \nThe function should take in n as an argument and\
    \ should return an array. \nThe function should return an array of n prime numbers.\
    \ \nThe function should return nothing if n is not a positive integer.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnybhu2z5.jl:9\nin expression starting at /tmp/tmpnybhu2z5.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0a5l_3r6.jl:9\nin expression starting at /tmp/tmp0a5l_3r6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==2 \n        then return x\n        else return y\n    end\n    \n\
    \    if n%2==0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2,\
    \ y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4cklkb08.jl:9\nin expression starting at /tmp/tmp4cklkb08.jl:9\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else \n        return y\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 6)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a program which should return the value of x if n is a prime number and should\
    \ return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzodns_or.jl:13\nin expression starting at\
    \ /tmp/tmpzodns_or.jl:13\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y\n    end\n \
    \   \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else\
    \ return x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq2hq7mfj.jl:9\nin expression starting at /tmp/tmpq2hq7mfj.jl:9\n"
  stdout: ''
  timestamp: 1659747605
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==1 \n        return x\n    else if n==2 \n        return y\n    else\
    \ \n        return x_or_y(n-1, x-1, y-1)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp663gib7_.jl:10\nin expression starting at\
    \ /tmp/tmp663gib7_.jl:10\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1lnvy47d.jl:9\nin expression starting at /tmp/tmp1lnvy47d.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n)\n        \
    \    then x_or_y(n-1, x, y)\n        else\n            y\n        end\n    end\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number of\
    \ prime numbers less than a given number. \nThe function should take one argument,\
    \ x, and should return the number of prime numbers less than x.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdabe0tst.jl:9\nin expression starting at /tmp/tmpdabe0tst.jl:9\n"
  stdout: ''
  timestamp: 1659747605
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n % 2 == 0 \n        then return x \n        else return y\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpos4p7osf.jl:9\nin expression starting at /tmp/tmpos4p7osf.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if n % 2 == 0 \n        then x_or_y(n/2,\
    \ x, y)\n    else \n        y \nend\n</cell>\n<code language=julia-1.4>\nx_or_y(10,\
    \ 1, 2)\n</cell>\n<text>\nExercise 3\nWrite a program which takes a number n and\
    \ returns the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpduv71tuo.jl:9\nin expression starting at /tmp/tmpduv71tuo.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(3,\
    \ 10, 20)\n</cell>\n<text>\nExercise 3\nWrite a function which returns the number\
    \ of times a given value appears in a given array.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfesh7ki0.jl:9\nin expression starting at /tmp/tmpfesh7ki0.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n    else \n        if isPrime(n) \n\
    \            then return x \n        else \n            return y \nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.3>\nx_or_y(4, 20, 30)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(5, 30, 40)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(6, 40, 50)\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 50, 60)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(8, 60, 70)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(9, 70, 80)\n</cell>\n<code language=julia-1.3>\nx_or_y(10, 80, 90)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(11, 90, 100)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(12, 100, 110)\n</cell>\n<code language=julia-1.3>\nx_or_y(13, 110, 120)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(14, 120, 130)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 130, 140)\n</cell>\n<code language=julia-1.3>\nx_or_y(16, 140, 150)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(17, 150, 160)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(18, 160, 170)\n</cell>\n<code language=julia-1.3>\nx_or_y(19, 170, 180)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(20, 180, 190)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(21, 190, 200)\n</cell>\n<code language=julia-1.3>\nx_or_y(22, 200, 210)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(23, 210, 220)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(24, 220, 230)\n</cell>\n<code language=julia-1.3>\nx_or_y(25, 230, 240)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(26, 240, 250)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(27, 250, 260)\n</cell>\n<code language=julia-1.3>\nx_or_y(28, \nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9phg59gm.jl:9\nin expression starting at /tmp/tmp9phg59gm.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if isPrime(n) \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgkqlhfxp.jl:9\nin expression starting at /tmp/tmpgkqlhfxp.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0a5l_3r6.jl:9\nin expression starting at /tmp/tmp0a5l_3r6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==2 \n        then return x \n        else return y\n    end\n   \
    \ if n%2==0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 1, 2)\n\
    </cell>\n<text>\nExercise 3\nWrite a program which returns the value of x if n\
    \ is a prime number and returns the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp61v5qaxh.jl:9\nin expression starting at /tmp/tmp61v5qaxh.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else \n        x\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of numbers and returns the sum of all even numbers in the array.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc561enr3.jl:9\nin expression starting at /tmp/tmpc561enr3.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm43d5184.jl:9\nin expression starting at /tmp/tmpm43d5184.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2, 5, 3)\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_qmx6psh.jl:9\nin expression starting at /tmp/tmp_qmx6psh.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphzpqe9kh.jl:9\nin expression starting at /tmp/tmphzpqe9kh.jl:9\n"
  stdout: ''
  timestamp: 1659747600
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplftydipj.jl:9\nin expression starting at /tmp/tmplftydipj.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==1 \n        then return x\n        else return y\n    end\n    \n\
    \    if n==2 \n        then return x\n        else return y\n    end\n    \n \
    \   if n==3 \n        then return x\n        else return y\n    end\n    \n  \
    \  if n==4 \n        then return x\n        else return y\n    end\n    \n   \
    \ if n==5 \n        then return x\n        else return y\n    end\n    \n    if\
    \ n==6 \n        then return x\n        else return y\n    end\n    \n    if n==7\
    \ \n        then return x\n        else return y\n    end\n    \n    if n==8 \n\
    \        then return x\n        else return y\n    end\n    \n    if n==9 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==10 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==11 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==12 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==13 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==14 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==15 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==16 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==17 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==18 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==19 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==20 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==21 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==22 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==23 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==24 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==25 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==26 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==27 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==28 \n \
    \       then return x\n        else return y\n    end\n    \n    if n==29 \n \
    \       then return \nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj53mcc68.jl:9\nin expression starting at /tmp/tmpj53mcc68.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(3,\
    \ 10, 20)\n</cell>\n<text>\nExercise 2\nWrite a program which should return the\
    \ value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphhjxr546.jl:9\nin expression starting at /tmp/tmphhjxr546.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvc8x06hc.jl:9\nin expression starting at /tmp/tmpvc8x06hc.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else \n        return y\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwgi26euw.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwgi26euw.jl:1\n\
    in expression starting at /tmp/tmpwgi26euw.jl:1\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x) \n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program\
    \ which returns the value of x if n is a prime number and returns the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy4dkk97r.jl:9\nin expression starting at /tmp/tmpy4dkk97r.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(5, 2, 3)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the value of x if n is a prime number and returns the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp26lc_78w.jl:9\nin expression starting at /tmp/tmp26lc_78w.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function which returns the number of prime numbers less than or equal to n.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3o93k5ru.jl:9\nin expression starting at /tmp/tmp3o93k5ru.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzi0p4hmr.jl:9\nin expression starting at /tmp/tmpzi0p4hmr.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if isPrime(n) \n        then return x\n        else return y\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2w_ookb6.jl:9\nin expression starting at /tmp/tmp2w_ookb6.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 10, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 10, 20)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 20, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 20, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 20, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 30, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 30, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 30, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 40, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 40, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 40, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 50, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 50, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 50, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 60, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 60, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 60, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 70, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 70, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 70, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 80, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 80, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 80, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 90, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(10, 90, 20)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 90, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 100, 10)\n</cell>\n<code language=\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd9z1jzuv.jl:9\nin expression starting at /tmp/tmpd9z1jzuv.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if isPrime(n) \n        then return x_or_y(n-1, x-1, y-1)\n        else\
    \ return x_or_y(n-1, x, y+1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb9vk3jrt.jl:9\nin expression starting at /tmp/tmpb9vk3jrt.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, x*y) \n        else\
    \ return x_or_y(n/2, x*y, y) \n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppwyh85nt.jl:9\nin expression starting at /tmp/tmppwyh85nt.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(3,\
    \ 10, 20)\n</cell>\n<text>\nExercise 2\nWrite a function which returns the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx2d9a64z.jl:9\nin expression starting at /tmp/tmpx2d9a64z.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(2,\
    \ 5, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 15)\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(4, 15, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 20, 25)\n</cell>\n<code language=julia-1.5>\nx_or_y(6, 25, 30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 30, 35)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(8, 35, 40)\n</cell>\n<code language=julia-1.5>\nx_or_y(9, 40, 45)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(10, 45, 50)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(11, 50, 55)\n</cell>\n<code language=julia-1.5>\nx_or_y(12, 55, 60)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(13, 60, 65)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(14, 65, 70)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 70, 75)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(16, 75, 80)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(17, 80, 85)\n</cell>\n<code language=julia-1.5>\nx_or_y(18, 85, 90)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(19, 90, 95)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(20, 95, 100)\n</cell>\n<code language=julia-1.5>\nx_or_y(21, 100, 105)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(22, 105, 110)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(23, 110, 115)\n</cell>\n<code language=julia-1.5>\nx_or_y(24, 115, 120)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(25, 120, 125)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(26, 125, 130)\n</cell>\n<code language=julia-1.5>\nx_or_y(27, 130, 135)\n\
    </cell>\n\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvjqp73x0.jl:9\nin expression starting at /tmp/tmpvjqp73x0.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n % 2 == 0 \n        then return x \n        else return y\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9hutosgh.jl:9\nin expression starting at /tmp/tmp9hutosgh.jl:9\n"
  stdout: ''
  timestamp: 1659747602
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2,1,2)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2,3,4)\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ the value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn3zw7cmb.jl:9\nin expression starting at /tmp/tmpn3zw7cmb.jl:9\n"
  stdout: ''
  timestamp: 1659747607
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else \n        return y\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwgi26euw.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwgi26euw.jl:1\n\
    in expression starting at /tmp/tmpwgi26euw.jl:1\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n % 2 == 0 \n        then return x \n        else return y\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 30)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 40)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 50)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 60)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 70)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 80)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 90)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 100)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 110)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 120)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 130)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 140)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 150)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 160)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 170)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 180)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 190)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 200)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 210)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 220)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 230)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 240)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 250)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 260)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 10, 270)\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 280)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 290)\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2js6e1k9.jl:9\nin expression starting at /tmp/tmp2js6e1k9.jl:9\n"
  stdout: ''
  timestamp: 1659747607
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if n % 2 == 0 \n        then x_or_y(n/2,\
    \ x, y)\n    else \n        y \nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 1, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number\
    \ of times a given number appears in a given array.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz8z41m84.jl:9\nin expression starting at /tmp/tmpz8z41m84.jl:9\n"
  stdout: ''
  timestamp: 1659747607
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else \n        return y\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwgi26euw.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwgi26euw.jl:1\n\
    in expression starting at /tmp/tmpwgi26euw.jl:1\n"
  stdout: ''
  timestamp: 1659747604
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 2, 3)\n</cell>\n<text>\nExercise 2\nWrite a program which should return the\
    \ value of x if n is \n    a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmb4wxte4.jl:9\nin expression starting at /tmp/tmpmb4wxte4.jl:9\n"
  stdout: ''
  timestamp: 1659747607
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n)\n        then y\n \
    \   else x\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprhfojb7t.jl:9\nin expression starting at /tmp/tmprhfojb7t.jl:9\n"
  stdout: ''
  timestamp: 1659747607
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(3,\
    \ 10, 20)\n</cell>\n<text>\nExercise 2\nWrite a program which returns the number\
    \ of times the function x_or_y was called\nwith different values of x and y.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj15q927a.jl:9\nin expression starting at /tmp/tmpj15q927a.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which prints the square of the number n. \n\
    The program should accept a number n as an argument and should print out n*n.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7a98xcn4.jl:9\nin expression starting at /tmp/tmp7a98xcn4.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==2 \n        then return x \n        else return y\n    end\n   \
    \ if n%2==0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program that prints\
    \ the prime numbers up to a number entered by the user. \nThe program should stop\
    \ when the user enters 0.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp90lceo9h.jl:9\nin expression starting at /tmp/tmp90lceo9h.jl:9\n"
  stdout: ''
  timestamp: 1659747607
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if n == 2 \n        then y\n    else\
    \ if n % 2 == 0 \n        then x_or_y(n/2, x, y)\n    else \n        y \nend\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(10, 1, 2)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(10, 2, 1)\n</cell>\n<text>\nExercise 2\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8uaulobp.jl:9\nin expression starting at /tmp/tmp8uaulobp.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, 2*x) \n        else\
    \ return x_or_y(n/2, 2*x, y) \n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnxn_6po9.jl:9\nin expression starting at /tmp/tmpnxn_6po9.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 2, 3)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 3, 2)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 2)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 3)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 4)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 6)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 7)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 8)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 9)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 11)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 13)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 14)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 15)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 16)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 17)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 18)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 19)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 21)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 22)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 23)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 4, 24)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 4, 25)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(4, 4, 26)\n</cell\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz1h_k9bo.jl:9\nin expression starting at /tmp/tmpz1h_k9bo.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 6, 10)\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ x if n is odd and y if n is even.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppofyd_ec.jl:9\nin expression starting at /tmp/tmppofyd_ec.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else \n        return y\nend\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(3, 10, 20)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(3, 10, 20)\n</cell>\n<code language=\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx_isjzab.jl:13\nin expression starting at\
    \ /tmp/tmpx_isjzab.jl:13\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        return x\n    else if n == 2 \n        return y\n\
    \    else \n        return x_or_y(n-1, x-y, y-x)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkf4ivzga.jl:10\nin expression starting at\
    \ /tmp/tmpkf4ivzga.jl:10\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else x\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(3, 10, 20)\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt3527q63.jl:9\nin expression starting at /tmp/tmpt3527q63.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(3, 7, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 7, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 7, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(6, 7, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 7, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(8, 7, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(9, 7, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(10, 7, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(11, 7, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(12, 7, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(13, 7, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(14, 7, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 7, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(16, 7, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(17, 7, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(18, 7, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(19, 7, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(20, 7, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(21, 7, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(22, 7, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(23, 7, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(24, 7, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(25, 7, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(26, 7, 10)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(27, 7, 10)\n</cell>\n<code language=julia-1.5>\nx_or_y(28, 7, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(29, 7, 10)\n</cell>\n<code language=\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6l0fb3kq.jl:9\nin expression starting at /tmp/tmp6l0fb3kq.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(4, 2, 3)\n</cell>\n<code language=julia-1.5>\nx_or_y(4, 3, 2)\n</cell>\n\
    <text>\nExercise 3\nWrite a function which returns the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaez3ex18.jl:9\nin expression starting at /tmp/tmpaez3ex18.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \nend\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 20)\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(3, 10, 30)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function which returns the number of prime numbers less than a given number.\
    \ \nThe function should take one argument - the number to be tested.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpchmimfiv.jl:9\nin expression starting at /tmp/tmpchmimfiv.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else x\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(3, 10, 20)\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp180m5lf7.jl:9\nin expression starting at /tmp/tmp180m5lf7.jl:9\n"
  stdout: ''
  timestamp: 1659747607
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if n % 2 == 0 \n        then x_or_y(n/2,\
    \ x, y)\n    else \n        y \nend\n</cell>\n<code language=julia-1.5>\nx_or_y(3,\
    \ x, y)\n</cell>\n<text>\nExercise 2\nWrite a program which takes as input a number\
    \ n and returns the value of x if n is a prime number and returns the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2ev7jav4.jl:9\nin expression starting at /tmp/tmp2ev7jav4.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(2, 5, 10)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(3, 7, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(4, 7, 10)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(5, 7, 10)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(6, 7, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(7, 7, 10)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(8, 7, 10)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(9, 7, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(10, 7, 10)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(11, 7, 10)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(12, 7, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(13, 7, 10)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(14, 7, 10)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(15, 7, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(16, 7, 10)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(17, 7, 10)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(18, 7, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(19, 7, 10)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(20, 7, 10)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(21, 7, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(22, 7, 10)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(23, 7, 10)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(24, 7, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(25, 7, 10)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(26, 7, 10)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(27, 7, 10)\n</cell>\n<code language=julia-1.4>\nx_or_y(28, 7, 10)\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(29, 7, 10)\n</cell>\n<code language=\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu_tl50rp.jl:9\nin expression starting at /tmp/tmpu_tl50rp.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0a5l_3r6.jl:9\nin expression starting at /tmp/tmp0a5l_3r6.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(10,\
    \ 10, 10)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9nmwz_cb.jl:9\nin expression starting at /tmp/tmp9nmwz_cb.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 3)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 4)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 5)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 6)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 7)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 8)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 9)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 10)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 11)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 13)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 14)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 15)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 16)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 17)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 18)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 19)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 21)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 22)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 23)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 24)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 25)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 26)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(5, 2, 27)\n</cell>\n<code language=julia-1.5>\nx_or_y(5, 2, 28)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(5, 2, 29)\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2hajjkft.jl:9\nin expression starting at /tmp/tmp2hajjkft.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2,1,2)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ program which should return the value of x if n is a prime number and should\
    \ return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgf5uztdz.jl:9\nin expression starting at /tmp/tmpgf5uztdz.jl:9\n"
  stdout: ''
  timestamp: 1659747608
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==1 \n        then x\n        else y\n    end\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a program which prints the value of x if n is a prime number\
    \ and prints the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgfc4gm92.jl:9\nin expression starting at /tmp/tmpgfc4gm92.jl:9\n"
  stdout: ''
  timestamp: 1659747609
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n        else y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3et70yb9.jl:9\nin expression starting at /tmp/tmp3et70yb9.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n) \n       \
    \     then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(3, 10, 20)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a program which should return the value of x if n is a prime number and should\
    \ return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpygwyu5xr.jl:9\nin expression starting at /tmp/tmpygwyu5xr.jl:9\n"
  stdout: ''
  timestamp: 1659747609
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==2 \n        then return x\n        else return y\n    end\n    if\
    \ n%2==0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2,\
    \ y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxj3zsrt3.jl:9\nin expression starting at /tmp/tmpxj3zsrt3.jl:9\n"
  stdout: ''
  timestamp: 1659747609
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x \n        else return y \n    end\n\
    \    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x) \n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program\
    \ which prints the value of x if n is a prime number and prints the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_kpm_v7v.jl:9\nin expression starting at /tmp/tmp_kpm_v7v.jl:9\n"
  stdout: ''
  timestamp: 1659747609
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else\n        if isPrime(n)\n        \
    \    then y\n        else\n            x\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(4, 2, 3)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(4, 2, 4)\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ the value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0rc77kac.jl:9\nin expression starting at /tmp/tmp0rc77kac.jl:9\n"
  stdout: ''
  timestamp: 1659747609
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if isPrime(n) \n        then return x\n        else return y\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgkqlhfxp.jl:9\nin expression starting at /tmp/tmpgkqlhfxp.jl:9\n"
  stdout: ''
  timestamp: 1659747606
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  if isPrime(n) \n        then return x\n        else return y\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(2, 5, 7)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzxbn523d.jl:9\nin expression starting at /tmp/tmpzxbn523d.jl:9\n"
  stdout: ''
  timestamp: 1659747609
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then x\n    else if isPrime(n) \n        then y\n\
    \    else\n        x\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5ciqcxhp.jl:9\nin expression starting at /tmp/tmp5ciqcxhp.jl:9\n"
  stdout: ''
  timestamp: 1659747609
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n == 1 \n        then return x\n        else return y\n    end\n  \
    \  \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return\
    \ x_or_y(n/2, y, x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmpzlw2xi.jl:9\nin expression starting at /tmp/tmpmpzlw2xi.jl:9\n"
  stdout: ''
  timestamp: 1659747599
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \            \n    \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64\
    \ \n    if n==2 \n        then return x\n        else return y\n    end\n    if\
    \ n%2==0 \n        then return x_or_y(n/2,x,y)\n        else return x_or_y(n/2,y,x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(2,1,1)\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(2,3,4)\n</cell>\n<code language=julia-1.5>\nx_or_y(2,5,6)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(2,7,8)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2,9,10)\n</cell>\n<code language=julia-1.5>\nx_or_y(2,11,12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2,13,14)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2,15,16)\n</cell>\n<code language=julia-1.5>\nx_or_y(2,17,18)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2,19,20)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2,21,22)\n</cell>\n<code language=julia-1.5>\nx_or_y(2,23,24)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2,25,26)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2,27,28)\n</cell>\n<code language=julia-1.5>\nx_or_y(2,29,30)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2,31,32)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2,33,34)\n</cell>\n<code language=julia-1.5>\nx_or_y(2,35,36)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2,37,38)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2,39,40)\n</cell>\n<code language=julia-1.5>\nx_or_y(2,41,42)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2,43,44)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2,45,46)\n</cell>\n<code language=julia-1.5>\nx_or_y(2,47,48)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(2,49,50)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(2,51,52)\n</cell>\n<code language=\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppliapwv9.jl:9\nin expression starting at /tmp/tmppliapwv9.jl:9\n"
  stdout: ''
  timestamp: 1659747609

language: jl
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    numbers\
    \ = numbers[numbers != 0]\n    \n    numbers = numbers[numbers != 0]\n    numbers\
    \ = sort(numbers)\n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    numbers = sort(numbers)\n    numbers = numbers[numbers != 0]\n  \
    \  \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    numbers\
    \ = numbers[numbers != 0]\n    \n    numbers = numbers[numbers != 0]\n    numbers\
    \ = sort(numbers)\n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    numbers = sort(numbers)\n    numbers = numbers[numbers != 0]\n  \
    \  \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    numbers\
    \ = numbers[numbers != 0]\n    \n    numbers = numbers[numbers != 0]\n    numbers\
    \ = sort(numbers)\n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    numbers = sort(numbers)\n    numbers = numbers[numbers != 0]\n  \
    \  \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    numbers\
    \ = numbers[numbers != 0]\n    \n    numbers = numbers[numbers != 0]\n    numbers\
    \ = sort(numbers)\n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    numbers = sort(numbers)\n    numbers = numbers[numbers != 0]\n  \
    \  \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    numbers\
    \ = numbers[numbers != 0]\n    \n    numbers = numbers[numbers != 0]\n    numbers\
    \ = sort(numbers)\n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    numbers = sort(numbers)\n    numbers = numbers[numbers != 0]\n  \
    \  \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    numbers\
    \ = numbers[numbers != 0]\n    \n    numbers = numbers[numbers != 0]\n    numbers\
    \ = sort(numbers)\n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    numbers = sort(numbers)\n    numbers = numbers[numbers != 0]\n  \
    \  \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    numbers\
    \ = numbers[numbers != 0]\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqr2_t9_7.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqr2_t9_7.jl:1\n\
    in expression starting at /tmp/tmpqr2_t9_7.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, \nusing Test\n\n@testset begin\n\ncandidate =\
    \ remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplx3ou6kj.jl:20\nin expression starting at\
    \ /tmp/tmplx3ou6kj.jl:20\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, \nusing Test\n\n@testset begin\n\ncandidate =\
    \ remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplx3ou6kj.jl:20\nin expression starting at\
    \ /tmp/tmplx3ou6kj.jl:20\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    \n    numbers = sort(numbers)\n \
    \   \n    numbers = numbers[numbers != numbers[end]]\n    \n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    numbers = Vector{Int64}([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpggnojuqb.jl:16\nin expression starting at\
    \ /tmp/tmpggnojuqb.jl:16\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\nnumbers\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector of integers and returns a vector of integers\
    \ where the values are the square of those in the original vector. For example,\
    \ if the input vector is [1,2,3,4,5], the output vector should be [1,2,3,4,5,8,9,16,25].\
    \ Do not use loops.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpel1rep41.jl:10\nin expression starting at\
    \ /tmp/tmpel1rep41.jl:10\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end-1]] \n    numbers = numbers[numbers != numbers[end-2]] \n   \
    \ numbers = numbers[numbers != numbers[end-3]] \n    numbers = numbers[numbers\
    \ != numbers[end-4]] \n    numbers = numbers[numbers != numbers[end-5]] \n   \
    \ numbers = numbers[numbers != numbers[end-6]] \n    numbers = numbers[numbers\
    \ != numbers[end-7]] \n    numbers = numbers[numbers != numbers[end-8]] \n   \
    \ numbers = numbers[numbers != numbers[end-9]] \n    numbers = numbers[numbers\
    \ != numbers[end-10]] \n    numbers = numbers[numbers != numbers[end-11]] \n \
    \   numbers = numbers[numbers != numbers[end-12]] \n    numbers = numbers[numbers\
    \ != numbers[end-13]] \n    numbers = numbers[numbers != numbers[end-14]] \n \
    \   numbers = numbers[numbers != numbers[end-15]] \n    numbers = numbers[numbers\
    \ != numbers[end-16]] \n    numbers = numbers[numbers != numbers[end-17]] \n \
    \   numbers = numbers[numbers != numbers[end-18]] \n    numbers = numbers[numbers\
    \ != numbers[end-19]] \n    numbers = numbers[numbers != numbers[end-20]] \n \
    \   numbers = numbers[numbers != numbers[end-21]] \n    numbers = numbers[numbers\
    \ != numbers[end-22]] \n    numbers = numbers[numbers != numbers[end-23]] \n \
    \   numbers = numbers[numbers != numbers[end-24]] \n    numbers = numbers[numbers\
    \ != numbers[end-25]] \n    numbers = numbers[numbers != numbers[end-26]] \n \
    \   numbers = numbers[numbers != numbers[end-27]] \n    numbers = numbers[numbers\
    \ != numbers[end-28]] \n    numbers = numbers[numbers != numbers[end-29]] \n \
    \   numbers = numbers[numbers != numbers[end-30]] \n    numbers = numbers[numbers\
    \ != numbers[end-31]] \n    numbers = numbers[numbers != numbers[end-32]] \n \
    \   numbers = numbers[numbers != numbers[end-33]] \n    numbers = numbers[numbers\
    \ != numbers[end-34]] \n    numbers = numbers[numbers != numbers[end-35]] \n \
    \   numbers = numbers[numbers != numbers[end-\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpedall50s.jl:1\nin expression starting at /tmp/tmpedall50s.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    \n\
    \    return numbers\nend\n</cell>\n<code language=julia-1.5>\n# Test the function\n\
    numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    println(numbers)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of integers and returns the sum of the squares of the integers in the\
    \ array.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpak9em8_0.jl:12\nin expression starting at\
    \ /tmp/tmpak9em8_0.jl:12\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10])\n\
    </cell>\n<text>\nExercise 2: Remove all elements that occur less than twice\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx2uz7m3x.jl:19\nin expression starting at\
    \ /tmp/tmpx2uz7m3x.jl:19\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.4>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv_qs8kof.jl:10\nin expression starting at\
    \ /tmp/tmpv_qs8kof.jl:10\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplxn5nbn0.jl:10\nin expression starting at\
    \ /tmp/tmplxn5nbn0.jl:10\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[i+1:length(numbers)]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpqv18htfz.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpqv18htfz.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpqv18htfz.jl:11\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqv18htfz.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqv18htfz.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqv18htfz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  BoundsError: attempt to access\
    \ 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpqv18htfz.jl:11\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqv18htfz.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqv18htfz.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\n@time remove_duplicates([1,1,1,2,2,3,3,3,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbdeg7jis.jl:19\nin expression starting at\
    \ /tmp/tmpbdeg7jis.jl:19\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers and\
    \ returns the sum of the squares of the numbers.\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnzveq11o.jl:20\nin expression starting at\
    \ /tmp/tmpnzveq11o.jl:20\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the integers.\
    \ \nUse map() to apply the function to each element in the vector.\nUse reduce()\
    \ to sum the squares.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq7igz72z.jl:12\nin expression starting at\
    \ /tmp/tmpq7igz72z.jl:12\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = numbers[numbers .!= numbers[numbers .== numbers[numbers .!=0]]]\n\
    \    return numbers\nend\n</code>\n<|/ a tags=julia,arrays |>\n<| a tags=julia,arrays\
    \ |>\nI came up with a solution that is more efficient than removing duplicates\
    \ and is more readable than using an anonymous function.\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe3imh12d.jl:8\nin expression starting at /tmp/tmpe3imh12d.jl:8\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,26\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpew4j4idz.jl:12\nin expression starting at\
    \ /tmp/tmpew4j4idz.jl:12\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = numbers[numbers != numbers[end]]\n    return numbers\nend\n</cell>\n\
    <code language=julia-1.5>\nnumbers = [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a list of numbers and returns a new list with all the even numbers in\
    \ it.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxspftxzn.jl:8\nin expression starting at /tmp/tmpxspftxzn.jl:8\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,2,3,3,4,4,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,2\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpogaucvci.jl:12\nin expression starting at\
    \ /tmp/tmpogaucvci.jl:12\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    numbers\
    \ = numbers[numbers != numbers[end-3]]\n    numbers = numbers[numbers != numbers[end-4]]\n\
    \    numbers = numbers[numbers != numbers[end-5]]\n    numbers = numbers[numbers\
    \ != numbers[end-6]]\n    numbers = numbers[numbers != numbers[end-7]]\n    numbers\
    \ = numbers[numbers != numbers[end-8]]\n    numbers = numbers[numbers != numbers[end-9]]\n\
    \    numbers = numbers[numbers != numbers[end-10]]\n    numbers = numbers[numbers\
    \ != numbers[end-11]]\n    numbers = numbers[numbers != numbers[end-12]]\n   \
    \ numbers = numbers[numbers != numbers[end-13]]\n    numbers = numbers[numbers\
    \ != numbers[end-14]]\n    numbers = numbers[numbers != numbers[end-15]]\n   \
    \ numbers = numbers[numbers != numbers[end-16]]\n    numbers = numbers[numbers\
    \ != numbers[end-17]]\n    numbers = numbers[numbers != numbers[end-18]]\n   \
    \ numbers = numbers[numbers != numbers[end-19]]\n    numbers = numbers[numbers\
    \ != numbers[end-20]]\n    numbers = numbers[numbers != numbers[end-21]]\n   \
    \ numbers = numbers[numbers != numbers[end-22]]\n    numbers = numbers[numbers\
    \ != numbers[end-23]]\n    numbers = numbers[numbers != numbers[end-24]]\n   \
    \ numbers = numbers[numbers != numbers[end-25]]\n    numbers = numbers[numbers\
    \ != numbers[end-26]]\n    numbers = numbers[numbers != numbers[end-27]]\n   \
    \ numbers = numbers[numbers != numbers[end-28]]\n    numbers = numbers[numbers\
    \ != numbers[end-29]]\n    numbers = numbers[numbers != numbers[end-30]]\n   \
    \ numbers = numbers[numbers != numbers[end-31]]\n    numbers = numbers[numbers\
    \ != numbers[end-32]]\n    numbers = numbers[numbers != numbers[end-33]]\n   \
    \ numbers = numbers[numbers != numbers[end-34]]\n    numbers = numbers[numbers\
    \ != numbers[end-35]]\n    numbers = numbers[numbers != numbers[end-36]]\n   \
    \ numbers = numbers[numbers != numbers[end-37]]\n    numbers = numbers[numbers\
    \ != numbers[end-38]]\n    \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpty922aya.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpty922aya.jl:1\n\
    in expression starting at /tmp/tmpty922aya.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.4>\nnumbers = [1,2,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    </cell>\n<code language=julia-1.4>\nremove_duplicates(numbers)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of integers and returns the sum\
    \ of the squares of the integers in the vector.\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxculpwos.jl:20\nin expression starting at\
    \ /tmp/tmpxculpwos.jl:20\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers .!= numbers[numbers .!= numbers[numbers .!=\
    \ numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph5y2cvka.jl:1\nin expression starting at /tmp/tmph5y2cvka.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers in the vector. \nFor example,\
    \ if the input vector is [1,2,3,4,5], the output should be 55.\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjetic8_z.jl:19\nin expression starting at\
    \ /tmp/tmpjetic8_z.jl:19\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,1,2,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of elements in a vector that are less than a given value.\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkznx35j4.jl:12\nin expression starting at\
    \ /tmp/tmpkznx35j4.jl:12\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,26\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpew4j4idz.jl:12\nin expression starting at\
    \ /tmp/tmpew4j4idz.jl:12\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\n@time remove_duplicates(numbers)\n</cell>\n\
    <text>\nExercise\nWrite a function that removes all the elements that are less\
    \ than a given number from a given list.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj3htlavx.jl:10\nin expression starting at\
    \ /tmp/tmpj3htlavx.jl:10\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates(numbers)\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwoz24ov8.jl:10\nin expression starting at\
    \ /tmp/tmpwoz24ov8.jl:10\n"
  stdout: ''
  timestamp: 1659747719
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpr17r621j.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpr17r621j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpr17r621j.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr17r621j.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpr17r621j.jl:8\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpr17r621j.jl:18 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747722
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2njvzr0k.jl:12\nin expression starting at\
    \ /tmp/tmp2njvzr0k.jl:12\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.3>\nnumbers = [1,2,3,3,4,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4i71og8o.jl:10\nin expression starting at\
    \ /tmp/tmp4i71og8o.jl:10\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,3,3,4,5,6,\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp44xlz96f.jl:19\nin expression starting at\
    \ /tmp/tmp44xlz96f.jl:19\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpplne2mt7.jl:12\nin expression starting at\
    \ /tmp/tmpplne2mt7.jl:12\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,1,2,3,4,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0apmlo0r.jl:20\nin expression starting at\
    \ /tmp/tmp0apmlo0r.jl:20\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers .!= numbers[1]]\n    numbers = numbers[numbers\
    \ .!= numbers[2]]\n    numbers = numbers[numbers .!= numbers[3]]\n    numbers\
    \ = numbers[numbers .!= numbers[4]]\n    numbers = numbers[numbers .!= numbers[5]]\n\
    \    numbers = numbers[numbers .!= numbers[6]]\n    numbers = numbers[numbers\
    \ .!= numbers[7]]\n    numbers = numbers[numbers .!= numbers[8]]\n    numbers\
    \ = numbers[numbers .!= numbers[9]]\n    numbers = numbers[numbers .!= numbers[10]]\n\
    \    numbers = numbers[numbers .!= numbers[11]]\n    numbers = numbers[numbers\
    \ .!= numbers[12]]\n    numbers = numbers[numbers .!= numbers[13]]\n    numbers\
    \ = numbers[numbers .!= numbers[14]]\n    numbers = numbers[numbers .!= numbers[15]]\n\
    \    numbers = numbers[numbers .!= numbers[16]]\n    numbers = numbers[numbers\
    \ .!= numbers[17]]\n    numbers = numbers[numbers .!= numbers[18]]\n    numbers\
    \ = numbers[numbers .!= numbers[19]]\n    numbers = numbers[numbers .!= numbers[20]]\n\
    \    numbers = numbers[numbers .!= numbers[21]]\n    numbers = numbers[numbers\
    \ .!= numbers[22]]\n    numbers = numbers[numbers .!= numbers[23]]\n    numbers\
    \ = numbers[numbers .!= numbers[24]]\n    numbers = numbers[numbers .!= numbers[25]]\n\
    \    numbers = numbers[numbers .!= numbers[26]]\n    numbers = numbers[numbers\
    \ .!= numbers[27]]\n    numbers = numbers[numbers .!= numbers[28]]\n    numbers\
    \ = numbers[numbers .!= numbers[29]]\n    numbers = numbers[numbers .!= numbers[30]]\n\
    \    numbers = numbers[numbers .!= numbers[31]]\n    numbers = numbers[numbers\
    \ .!= numbers[32]]\n    numbers = numbers[numbers .!= numbers[33]]\n    numbers\
    \ = numbers[numbers .!= numbers[34]]\n    numbers = numbers[numbers .!= numbers[35]]\n\
    \    numbers = numbers[numbers .!= numbers[36]]\n    numbers = numbers[numbers\
    \ .!= numbers[37]]\n    numbers = numbers[numbers .!= numbers[38]]\n    numbers\
    \ = numbers[numbers .!= numbers[39]]\n    numbers = numbers[\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4whuix6g.jl:1\nin expression starting at /tmp/tmp4whuix6g.jl:1\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = numbers[numbers != numbers[end]]\n    return numbers\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkhj0s2y7.jl:8\nin expression starting at /tmp/tmpkhj0s2y7.jl:8\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of elements in a vector that are less than a given value.\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphcbynw6p.jl:19\nin expression starting at\
    \ /tmp/tmphcbynw6p.jl:19\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the integers\
    \ in the vector.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0_ez0kqk.jl:20\nin expression starting at\
    \ /tmp/tmp0_ez0kqk.jl:20\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,4])\n</cell>\n<code language=\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6z2nuf8s.jl:10\nin expression starting at\
    \ /tmp/tmp6z2nuf8s.jl:10\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\n# Test function\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp024y3sqc.jl:10\nin expression starting at\
    \ /tmp/tmp024y3sqc.jl:10\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[i+1:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,4,5,6,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp81ul5yml.jl:20\nin expression starting at\
    \ /tmp/tmp81ul5yml.jl:20\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,2,3,3,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,46,47,47,47,47,47,48,48,48,48,48,49,49,49,49,49,50,50,50,50,51,51,51,51,51,52,52,52,52,52,53,53,53,53,53,54,54,54,54,54,55,55,55,55,55,56,56,56,56,56,57,57,57,57,57,58,58,58,58,58,59,59,59,59,59,60,60,60,60,61,61,61,61,61,62,62,62,62,62,63,63,63,63,63,64,64,64,64,65,65,65,65,66,66,66,66,67,67,67,67,67,68,68,68,68,68,69,69,69,69,69,70,70,70,70,70,71,71,71,71,71,72,72,72,72,72,73,73,73,73,73,74\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprrukxl96.jl:19\nin expression starting at\
    \ /tmp/tmprrukxl96.jl:19\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n</cell>\n<code language=julia-1.5>\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers. \nThe function should only\
    \ take one argument, the vector of integers.\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe3l3_w1x.jl:12\nin expression starting at\
    \ /tmp/tmpe3l3_w1x.jl:12\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\n@time remove_duplicates([1,2,2,3,3,4,4,4,5,5,6,6,7,7,8,8,9,9,10,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprskpdwmz.jl:19\nin expression starting at\
    \ /tmp/tmprskpdwmz.jl:19\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    numbers\
    \ = numbers[numbers != numbers[end-3]]\n    numbers = numbers[numbers != numbers[end-4]]\n\
    \    numbers = numbers[numbers != numbers[end-5]]\n    numbers = numbers[numbers\
    \ != numbers[end-6]]\n    numbers = numbers[numbers != numbers[end-7]]\n    numbers\
    \ = numbers[numbers != numbers[end-8]]\n    numbers = numbers[numbers != numbers[end-9]]\n\
    \    numbers = numbers[numbers != numbers[end-10]]\n    numbers = numbers[numbers\
    \ != numbers[end-11]]\n    numbers = numbers[numbers != numbers[end-12]]\n   \
    \ numbers = numbers[numbers != numbers[end-13]]\n    numbers = numbers[numbers\
    \ != numbers[end-14]]\n    numbers = numbers[numbers != numbers[end-15]]\n   \
    \ numbers = numbers[numbers != numbers[end-16]]\n    numbers = numbers[numbers\
    \ != numbers[end-17]]\n    numbers = numbers[numbers != numbers[end-18]]\n   \
    \ numbers = numbers[numbers != numbers[end-19]]\n    numbers = numbers[numbers\
    \ != numbers[end-20]]\n    numbers = numbers[numbers != numbers[end-21]]\n   \
    \ numbers = numbers[numbers != numbers[end-22]]\n    numbers = numbers[numbers\
    \ != numbers[end-23]]\n    numbers = numbers[numbers != numbers[end-24]]\n   \
    \ numbers = numbers[numbers != numbers[end-25]]\n    numbers = numbers[numbers\
    \ != numbers[end-26]]\n    numbers = numbers[numbers != numbers[end-27]]\n   \
    \ numbers = numbers[numbers != numbers[end-28]]\n    numbers = numbers[numbers\
    \ != numbers[end-29]]\n    numbers = numbers[numbers != numbers[end-30]]\n   \
    \ numbers = numbers[numbers != numbers[end-31]]\n    numbers = numbers[numbers\
    \ != numbers[end-32]]\n    numbers = numbers[numbers != numbers[end-33]]\n   \
    \ numbers = numbers[numbers != numbers[end-34]]\n    numbers = numbers[numbers\
    \ != numbers[end-35]]\n    numbers = numbers[numbers != numbers[end-36]]\n   \
    \ numbers = numbers[numbers != numbers[end-37]]\n    numbers = numbers[numbers\
    \ != numbers[end-38]]\n    \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpty922aya.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpty922aya.jl:1\n\
    in expression starting at /tmp/tmpty922aya.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\n</cell\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpplne2mt7.jl:12\nin expression starting at\
    \ /tmp/tmpplne2mt7.jl:12\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    numbers\
    \ = numbers[numbers != numbers[end-3]]\n    numbers = numbers[numbers != numbers[end-4]]\n\
    \    numbers = numbers[numbers != numbers[end-5]]\n    numbers = numbers[numbers\
    \ != numbers[end-6]]\n    numbers = numbers[numbers != numbers[end-7]]\n    numbers\
    \ = numbers[numbers != numbers[end-8]]\n    numbers = numbers[numbers != numbers[end-9]]\n\
    \    numbers = numbers[numbers != numbers[end-10]]\n    numbers = numbers[numbers\
    \ != numbers[end-11]]\n    numbers = numbers[numbers != numbers[end-12]]\n   \
    \ numbers = numbers[numbers != numbers[end-13]]\n    numbers = numbers[numbers\
    \ != numbers[end-14]]\n    numbers = numbers[numbers != numbers[end-15]]\n   \
    \ numbers = numbers[numbers != numbers[end-16]]\n    numbers = numbers[numbers\
    \ != numbers[end-17]]\n    numbers = numbers[numbers != numbers[end-18]]\n   \
    \ numbers = numbers[numbers != numbers[end-19]]\n    numbers = numbers[numbers\
    \ != numbers[end-20]]\n    numbers = numbers[numbers != numbers[end-21]]\n   \
    \ numbers = numbers[numbers != numbers[end-22]]\n    numbers = numbers[numbers\
    \ != numbers[end-23]]\n    numbers = numbers[numbers != numbers[end-24]]\n   \
    \ numbers = numbers[numbers != numbers[end-25]]\n    numbers = numbers[numbers\
    \ != numbers[end-26]]\n    numbers = numbers[numbers != numbers[end-27]]\n   \
    \ numbers = numbers[numbers != numbers[end-28]]\n    numbers = numbers[numbers\
    \ != numbers[end-29]]\n    numbers = numbers[numbers != numbers[end-30]]\n   \
    \ numbers = numbers[numbers != numbers[end-31]]\n    numbers = numbers[numbers\
    \ != numbers[end-32]]\n    numbers = numbers[numbers != numbers[end-33]]\n   \
    \ numbers = numbers[numbers != numbers[end-34]]\n    numbers = numbers[numbers\
    \ != numbers[end-35]]\n    numbers = numbers[numbers != numbers[end-36]]\n   \
    \ numbers = numbers[numbers != numbers[end-37]]\n    numbers = numbers[numbers\
    \ != numbers[end-38]]\n    \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpty922aya.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpty922aya.jl:1\n\
    in expression starting at /tmp/tmpty922aya.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 1]\n\
    \    numbers = numbers[numbers != 2]\n    numbers = numbers[numbers != 3]\n  \
    \  numbers = numbers[numbers != 4]\n    numbers = numbers[numbers != 5]\n    numbers\
    \ = numbers[numbers != 6]\n    numbers = numbers[numbers != 7]\n    numbers =\
    \ numbers[numbers != 8]\n    numbers = numbers[numbers != 9]\n    numbers = numbers[numbers\
    \ != 10]\n    numbers = numbers[numbers != 11]\n    numbers = numbers[numbers\
    \ != 12]\n    numbers = numbers[numbers != 13]\n    numbers = numbers[numbers\
    \ != 14]\n    numbers = numbers[numbers != 15]\n    numbers = numbers[numbers\
    \ != 16]\n    numbers = numbers[numbers != 17]\n    numbers = numbers[numbers\
    \ != 18]\n    numbers = numbers[numbers != 19]\n    numbers = numbers[numbers\
    \ != 20]\n    numbers = numbers[numbers != 21]\n    numbers = numbers[numbers\
    \ != 22]\n    numbers = numbers[numbers != 23]\n    numbers = numbers[numbers\
    \ != 24]\n    numbers = numbers[numbers != 25]\n    numbers = numbers[numbers\
    \ != 26]\n    numbers = numbers[numbers != 27]\n    numbers = numbers[numbers\
    \ != 28]\n    numbers = numbers[numbers != 29]\n    numbers = numbers[numbers\
    \ != 30]\n    numbers = numbers[numbers != 31]\n    numbers = numbers[numbers\
    \ != 32]\n    numbers = numbers[numbers != 33]\n    numbers = numbers[numbers\
    \ != 34]\n    numbers = numbers[numbers != 35]\n    numbers = numbers[numbers\
    \ != 36]\n    numbers = numbers[numbers != 37]\n    numbers = numbers[numbers\
    \ != 38]\n    numbers = numbers[numbers != 39]\n    numbers = numbers[numbers\
    \ != 40]\n    numbers = numbers[numbers != 41]\n    numbers = numbers[numbers\
    \ != 42]\n    numbers = numbers[numbers != 43]\n    numbers = numbers[numbers\
    \ != 44]\n    numbers = numbers[numbers != 45]\n    numbers = numbers[numbers\
    \ != 46]\n    numbers = numbers[numbers != 47]\n    numbers = numbers[numbers\
    \ != 48]\n    numbers = numbers[numbers != 49]\n    numbers = numbers[numbers\
    \ != 50]\n    numbers = numbers[numbers != 51]\n    \nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2z7amlxc.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2z7amlxc.jl:1\n\
    in expression starting at /tmp/tmp2z7amlxc.jl:1\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,2\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_v6ov3tw.jl:11\nin expression starting at\
    \ /tmp/tmp_v6ov3tw.jl:11\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0zl_zrf6.jl:20\nin expression starting at\
    \ /tmp/tmp0zl_zrf6.jl:20\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[2:end]\n    \n  \
    \  return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,2,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,51,52,52,52,52,52,53,53,53,53,53,54,54,54,54,54,55,55,55,55,55,56,56,56,56,56,57,57,57,57,57,58,58,58,58,59,59,59,59,59,60,60,60,60,61,61,61,61,61,62,62,62,62,62,63,63,63,63,64,64,64,64,65,65,65,65,66,66,66,66,67,67,67,67,67,68,68,68,68,68,69,69,69,69,69,70,70,70,70,70,71,71,71,71,71,72,72,72,72,72,73,73,73,73,73,74,74,74,74,74,75,75,75,75,75,76,76,76,76,76,77,77,77,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxbxcu7si.jl:12\nin expression starting at\
    \ /tmp/tmpxbxcu7si.jl:12\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgaz9xg67.jl:20\nin expression starting at\
    \ /tmp/tmpgaz9xg67.jl:20\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,13\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqa4evb9x.jl:20\nin expression starting at\
    \ /tmp/tmpqa4evb9x.jl:20\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpr17r621j.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpr17r621j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpr17r621j.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr17r621j.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpr17r621j.jl:8\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpr17r621j.jl:18 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747722
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpr17r621j.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpr17r621j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpr17r621j.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr17r621j.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpr17r621j.jl:8\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpr17r621j.jl:18 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747722
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,26\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpew4j4idz.jl:12\nin expression starting at\
    \ /tmp/tmpew4j4idz.jl:12\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\nend\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,4,5,5,6,6,7,8,9,9,10])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns a vector of integers where the integers are in descending order.\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3uhs8u5k.jl:9\nin expression starting at /tmp/tmp3uhs8u5k.jl:9\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end-1]] \n    numbers = numbers[numbers != numbers[end-2]] \n   \
    \ numbers = numbers[numbers != numbers[end-3]] \n    numbers = numbers[numbers\
    \ != numbers[end-4]] \n    numbers = numbers[numbers != numbers[end-5]] \n   \
    \ numbers = numbers[numbers != numbers[end-6]] \n    numbers = numbers[numbers\
    \ != numbers[end-7]] \n    numbers = numbers[numbers != numbers[end-8]] \n   \
    \ numbers = numbers[numbers != numbers[end-9]] \n    numbers = numbers[numbers\
    \ != numbers[end-10]] \n    numbers = numbers[numbers != numbers[end-11]] \n \
    \   numbers = numbers[numbers != numbers[end-12]] \n    numbers = numbers[numbers\
    \ != numbers[end-13]] \n    numbers = numbers[numbers != numbers[end-14]] \n \
    \   numbers = numbers[numbers != numbers[end-15]] \n    numbers = numbers[numbers\
    \ != numbers[end-16]] \n    numbers = numbers[numbers != numbers[end-17]] \n \
    \   numbers = numbers[numbers != numbers[end-18]] \n    numbers = numbers[numbers\
    \ != numbers[end-19]] \n    numbers = numbers[numbers != numbers[end-20]] \n \
    \   numbers = numbers[numbers != numbers[end-21]] \n    numbers = numbers[numbers\
    \ != numbers[end-22]] \n    numbers = numbers[numbers != numbers[end-23]] \n \
    \   numbers = numbers[numbers != numbers[end-24]] \n    numbers = numbers[numbers\
    \ != numbers[end-25]] \n    numbers = numbers[numbers != numbers[end-26]] \n \
    \   numbers = numbers[numbers != numbers[end-27]] \n    numbers = numbers[numbers\
    \ != numbers[end-28]] \n    numbers = numbers[numbers != numbers[end-29]] \n \
    \   numbers = numbers[numbers != numbers[end-30]] \n    numbers = numbers[numbers\
    \ != numbers[end-31]] \n    numbers = numbers[numbers != numbers[end-32]] \n \
    \   numbers = numbers[numbers != numbers[end-33]] \n    numbers = numbers[numbers\
    \ != numbers[end-34]] \n    numbers = numbers[numbers != numbers[end-35]] \n \
    \   numbers = numbers[numbers != numbers[end-\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpedall50s.jl:1\nin expression starting at /tmp/tmpedall50s.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    # Test our function\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\nprintln(numbers)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of integers and returns a vector of\
    \ integers where the values are the square of those numbers. \nFor example, remove_duplicates([1,2,3])\
    \ should return [1,2,9].\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqi7artq1.jl:11\nin expression starting at\
    \ /tmp/tmpqi7artq1.jl:11\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n  \
    \  return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpfbd4n5wj.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpfbd4n5wj.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpfbd4n5wj.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfbd4n5wj.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfbd4n5wj.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpfbd4n5wj.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpfbd4n5wj.jl:6\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpfbd4n5wj.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpfbd4n5wj.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpfbd4n5wj.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of numbers and returns the sum of the numbers in the list.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpobo1v5ky.jl:20\nin expression starting at\
    \ /tmp/tmpobo1v5ky.jl:20\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpr17r621j.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpr17r621j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpr17r621j.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr17r621j.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpr17r621j.jl:8\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpr17r621j.jl:18 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747722
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    \n \
    \   numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxw5m0iot.jl:1\nin expression starting at /tmp/tmpxw5m0iot.jl:1\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    numbers\
    \ = numbers[numbers != numbers[end-3]]\n    numbers = numbers[numbers != numbers[end-4]]\n\
    \    numbers = numbers[numbers != numbers[end-5]]\n    numbers = numbers[numbers\
    \ != numbers[end-6]]\n    numbers = numbers[numbers != numbers[end-7]]\n    numbers\
    \ = numbers[numbers != numbers[end-8]]\n    numbers = numbers[numbers != numbers[end-9]]\n\
    \    numbers = numbers[numbers != numbers[end-10]]\n    numbers = numbers[numbers\
    \ != numbers[end-11]]\n    numbers = numbers[numbers != numbers[end-12]]\n   \
    \ numbers = numbers[numbers != numbers[end-13]]\n    numbers = numbers[numbers\
    \ != numbers[end-14]]\n    numbers = numbers[numbers != numbers[end-15]]\n   \
    \ numbers = numbers[numbers != numbers[end-16]]\n    numbers = numbers[numbers\
    \ != numbers[end-17]]\n    numbers = numbers[numbers != numbers[end-18]]\n   \
    \ numbers = numbers[numbers != numbers[end-19]]\n    numbers = numbers[numbers\
    \ != numbers[end-20]]\n    numbers = numbers[numbers != numbers[end-21]]\n   \
    \ numbers = numbers[numbers != numbers[end-22]]\n    numbers = numbers[numbers\
    \ != numbers[end-23]]\n    numbers = numbers[numbers != numbers[end-24]]\n   \
    \ numbers = numbers[numbers != numbers[end-25]]\n    numbers = numbers[numbers\
    \ != numbers[end-26]]\n    numbers = numbers[numbers != numbers[end-27]]\n   \
    \ numbers = numbers[numbers != numbers[end-28]]\n    numbers = numbers[numbers\
    \ != numbers[end-29]]\n    numbers = numbers[numbers != numbers[end-30]]\n   \
    \ numbers = numbers[numbers != numbers[end-31]]\n    numbers = numbers[numbers\
    \ != numbers[end-32]]\n    numbers = numbers[numbers != numbers[end-33]]\n   \
    \ numbers = numbers[numbers != numbers[end-34]]\n    numbers = numbers[numbers\
    \ != numbers[end-35]]\n    numbers = numbers[numbers != numbers[end-36]]\n   \
    \ numbers = numbers[numbers != numbers[end-37]]\n    numbers = numbers[numbers\
    \ != numbers[end-38]]\n    \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpty922aya.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpty922aya.jl:1\n\
    in expression starting at /tmp/tmpty922aya.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgaz9xg67.jl:20\nin expression starting at\
    \ /tmp/tmpgaz9xg67.jl:20\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgaz9xg67.jl:20\nin expression starting at\
    \ /tmp/tmpgaz9xg67.jl:20\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the first n prime numbers. \nThe function should take an optional argument\
    \ n that defaults to 5.\nThe function should return an array of n prime numbers.\n\
    The function should return nothing if n is less than 2.\nThe function should return\
    \ nothing if n is less than 2.\nThe function should return nothing if n is less\
    \ than 2.\nThe function should return nothing if n is less than 2.\nThe function\
    \ should return nothing if n is less than 2.\nThe function should return nothing\
    \ if n is less than 2.\nThe function should return nothing if n is less than 2.\n\
    The function should return nothing if n is less than 2.\nThe function should return\
    \ nothing if n is less than 2.\nThe function should return nothing if n is less\
    \ than 2.\nThe function should return nothing if n is less than 2.\nThe function\
    \ should return nothing if n is less than 2.\nThe function should return nothing\
    \ if n is less than 2.\nThe function should return nothing if n is less than 2.\n\
    The function should return nothing if n is less than 2.\nThe function should return\
    \ nothing if n is less than 2.\nThe function should return nothing if n is less\
    \ than 2.\nThe function should return nothing if n is less than 2.\nThe function\
    \ should return nothing if n is less than 2.\nThe function should return nothing\
    \ if n is less than 2.\nThe function should return nothing if n is less than 2.\n\
    The function should return nothing if n is less than 2.\nThe function should return\
    \ nothing if n is less than 2.\nThe function should return nothing if n is less\
    \ than 2.\nThe function should return nothing if n is less than 2.\nThe function\
    \ should return nothing if n is less than 2.\nThe function should return nothing\
    \ if n is less than 2.\nThe function should return nothing if n is less than 2.\n\
    The function should return nothing if n is less than 2.\nThe function should return\
    \ nothing if n is less than 2.\nThe function should return nothing if n is less\
    \ than 2.\nThe function should return nothing if n is less than 2.\nThe function\
    \ should return nothing if n is less than 2.\nThe function should return nothing\
    \ if n is less than 2.\nThe function should return nothing if n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg580pisx.jl:19\nin expression starting at\
    \ /tmp/tmpg580pisx.jl:19\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nremove_duplicates(numbers)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns a vector of integers where the values are the square of those in\
    \ the original vector. For example, if the input vector is [1,2,3,4,5], the output\
    \ vector should be [1,2,3,4,5].\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumlpznkf.jl:12\nin expression starting at\
    \ /tmp/tmpumlpznkf.jl:12\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[2:end]\n    \n  \
    \  return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8e6vw2tt.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp8e6vw2tt.jl:18\n  Expression: candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n   Evaluated: [2, 3, 4] == [1, 2, 3, 4]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8e6vw2tt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8e6vw2tt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8e6vw2tt.jl:19\n  Expression: candidate([1, 2, 3, 2, 4, 3,\
    \ 5]) == [1, 4, 5]\n   Evaluated: [2, 2, 3, 3, 4, 5] == [1, 4, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8e6vw2tt.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8e6vw2tt.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  timestamp: 1659747722
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpr17r621j.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpr17r621j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpr17r621j.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr17r621j.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpr17r621j.jl:8\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpr17r621j.jl:18 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747722
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprohc4jac.jl:12\nin expression starting at\
    \ /tmp/tmprohc4jac.jl:12\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,4,5,5,6,7,8,9,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy_b5_f0x.jl:20\nin expression starting at\
    \ /tmp/tmpy_b5_f0x.jl:20\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n</cell>\n<code language=julia-1.5>\n\
    numbers = remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nnumbers\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given value.\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc42hx3t_.jl:12\nin expression starting at\
    \ /tmp/tmpc42hx3t_.jl:12\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n@time remove_duplicates([1,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,14\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg29ys80x.jl:12\nin expression starting at\
    \ /tmp/tmpg29ys80x.jl:12\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n  \
    \  return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the integers.\
    \ \nFor example, \n$$ f([1,2,3]) $$\nshould return $1 + 4 + 9 + 16 = 25$. \nThe\
    \ function should work for any vector and any element type.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppjthst5b.jl:9\nin expression starting at /tmp/tmppjthst5b.jl:9\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpxtobabed.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpxtobabed.jl:15\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpxtobabed.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxtobabed.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxtobabed.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxtobabed.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpxtobabed.jl:6\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpxtobabed.jl:16 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpxtobabed.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxtobabed.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates(numbers)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the first element of a vector, if it\
    \ exists and a default value otherwise. \nIf no element exists, return default.\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmvh5s8l.jl:10\nin expression starting at\
    \ /tmp/tmpcmvh5s8l.jl:10\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nremove_duplicates(numbers)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given value.\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqbcrj93p.jl:12\nin expression starting at\
    \ /tmp/tmpqbcrj93p.jl:12\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\n@time remove_duplicates([1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphfeoo8dv.jl:20\nin expression starting at\
    \ /tmp/tmphfeoo8dv.jl:20\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    numbers\nend\n\
    </cell>\n<code language=julia-1.5>\n@time remove_duplicates(rand(1:10000,100));\n\
    </cell>\n<text>\nExercise: Remove all elements that occur more than once.\nWrite\
    \ a function that removes all elements that occur more than once.\nUse a while\
    \ loop to remove all elements that occur more than once.\nUse a for loop to remove\
    \ all elements that occur more than once.\nUse a while loop to remove all elements\
    \ that occur more than once.\nUse a for loop to remove all elements that occur\
    \ more than once.\nUse a while loop to remove all elements that occur more than\
    \ once.\nUse a for loop to remove all elements that occur more than once.\nUse\
    \ a while loop to remove all elements that occur more than once.\nUse a for loop\
    \ to remove all elements that occur more than once.\nUse a while loop to remove\
    \ all elements that occur more than once.\nUse a for loop to remove all elements\
    \ that occur more than once.\nUse a while loop to remove all elements that occur\
    \ more than once.\nUse a for loop to remove all elements that occur more than\
    \ once.\nUse a while loop to remove all elements that occur more than once.\n\
    Use a for loop to remove all elements that occur more than once.\nUse a while\
    \ loop to remove all elements that occur more than once.\nUse a for loop to remove\
    \ all elements that occur more than once.\nUse a while loop to remove all elements\
    \ that occur more than once.\nUse a for loop to remove all elements that occur\
    \ more than once.\nUse a while loop to remove all elements that occur more than\
    \ once.\nUse a for loop to remove all elements that occur more than once.\nUse\
    \ a while loop to remove all elements that occur more than once.\nUse a for loop\
    \ to remove all elements that occur more than once.\nUse a while loop to remove\
    \ all elements that occur more than once.\nUse a for loop to remove all elements\
    \ that occur more than once.\nUse a while loop to remove all elements that occur\
    \ more than once.\nUse a for loop to remove all elements that occur more than\
    \ once.\nUse a while loop to remove all elements that occur more than once.\n\
    Use a for loop to remove all elements that occur more than once.\nUse a while\
    \ loop to remove all elements that occur more than once.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4j9teasw.jl:20\nin expression starting at\
    \ /tmp/tmp4j9teasw.jl:20\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers .!= numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the integers.\
    \ \n    Use a for loop to iterate over the vector and add squared integers.\n\
    \    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared integers.\
    \ \n    \n    Use a while loop to iterate over the vector and add squared \nusing\
    \ Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsej_91jz.jl:10\nin expression starting at\
    \ /tmp/tmpsej_91jz.jl:10\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end-1]] \n    numbers = numbers[numbers != numbers[end-2]] \n   \
    \ numbers = numbers[numbers != numbers[end-3]] \n    numbers = numbers[numbers\
    \ != numbers[end-4]] \n    numbers = numbers[numbers != numbers[end-5]] \n   \
    \ numbers = numbers[numbers != numbers[end-6]] \n    numbers = numbers[numbers\
    \ != numbers[end-7]] \n    numbers = numbers[numbers != numbers[end-8]] \n   \
    \ numbers = numbers[numbers != numbers[end-9]] \n    numbers = numbers[numbers\
    \ != numbers[end-10]] \n    numbers = numbers[numbers != numbers[end-11]] \n \
    \   numbers = numbers[numbers != numbers[end-12]] \n    numbers = numbers[numbers\
    \ != numbers[end-13]] \n    numbers = numbers[numbers != numbers[end-14]] \n \
    \   numbers = numbers[numbers != numbers[end-15]] \n    numbers = numbers[numbers\
    \ != numbers[end-16]] \n    numbers = numbers[numbers != numbers[end-17]] \n \
    \   numbers = numbers[numbers != numbers[end-18]] \n    numbers = numbers[numbers\
    \ != numbers[end-19]] \n    numbers = numbers[numbers != numbers[end-20]] \n \
    \   numbers = numbers[numbers != numbers[end-21]] \n    numbers = numbers[numbers\
    \ != numbers[end-22]] \n    numbers = numbers[numbers != numbers[end-23]] \n \
    \   numbers = numbers[numbers != numbers[end-24]] \n    numbers = numbers[numbers\
    \ != numbers[end-25]] \n    numbers = numbers[numbers != numbers[end-26]] \n \
    \   numbers = numbers[numbers != numbers[end-27]] \n    numbers = numbers[numbers\
    \ != numbers[end-28]] \n    numbers = numbers[numbers != numbers[end-29]] \n \
    \   numbers = numbers[numbers != numbers[end-30]] \n    numbers = numbers[numbers\
    \ != numbers[end-31]] \n    numbers = numbers[numbers != numbers[end-32]] \n \
    \   numbers = numbers[numbers != numbers[end-33]] \n    numbers = numbers[numbers\
    \ != numbers[end-34]] \n    numbers = numbers[numbers != numbers[end-35]] \n \
    \   numbers = numbers[numbers != numbers[end-\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpedall50s.jl:1\nin expression starting at /tmp/tmpedall50s.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[i+1:length(numbers)]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates(numbers)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of integers and returns a vector\
    \ of integers where the integers are in descending order.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptblf_yf8.jl:20\nin expression starting at\
    \ /tmp/tmptblf_yf8.jl:20\n"
  stdout: ''
  timestamp: 1659747722
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = numbers[numbers != numbers[end]] \n    return numbers\nend\n</cell>\n\
    <code language=julia-1.5>\n# Test remove_duplicates\nnumbers = [1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_5v2828v.jl:8\nin expression starting at /tmp/tmp_5v2828v.jl:8\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpr17r621j.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpr17r621j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpr17r621j.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr17r621j.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpr17r621j.jl:8\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpr17r621j.jl:18 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747722
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    \n    numbers = sort(numbers)\n \
    \   \n    numbers = numbers[numbers != numbers[end]]\n    \n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    \n    numbers = numbers[numbers != numbers[end-2]]\n\
    \    \n    numbers = numbers[numbers != numbers[end-3]]\n    \n    numbers = numbers[numbers\
    \ != numbers[end-4]]\n    \n    numbers = numbers[numbers != numbers[end-5]]\n\
    \    \n    numbers = numbers[numbers != numbers[end-6]]\n    \n    numbers = numbers[numbers\
    \ != numbers[end-7]]\n    \n    numbers = numbers[numbers != numbers[end-8]]\n\
    \    \n    numbers = numbers[numbers != numbers[end-9]]\n    \n    numbers = numbers[numbers\
    \ != numbers[end-10]]\n    \n    numbers = numbers[numbers != numbers[end-11]]\n\
    \    \n    numbers = numbers[numbers != numbers[end-12]]\n    \n    numbers =\
    \ numbers[numbers != numbers[end-13]]\n    \n    numbers = numbers[numbers !=\
    \ numbers[end-14]]\n    \n    numbers = numbers[numbers != numbers[end-15]]\n\
    \    \n    numbers = numbers[numbers != numbers[end-16]]\n    \n    numbers =\
    \ numbers[numbers != numbers[end-17]]\n    \n    numbers = numbers[numbers !=\
    \ numbers[end-18]]\n    \n    numbers = numbers[numbers != numbers[end-19]]\n\
    \    \n    numbers = numbers[numbers != numbers[end-20]]\n    \n    numbers =\
    \ numbers[numbers != numbers[end-21]]\n    \n    numbers = numbers[numbers !=\
    \ numbers[end-22]]\n    \n    numbers = numbers[numbers != numbers[end-23]]\n\
    \    \n    numbers = numbers[numbers != numbers[end-24]]\n    \n    numbers =\
    \ numbers[numbers != numbers[end-25]]\n    \n    numbers = numbers[numbers !=\
    \ numbers[end-26]]\n    \n    numbers = numbers[numbers != numbers[end-27]]\n\
    \    \n    numbers = numbers[numbers != numbers[end-28]]\n    \n    numbers =\
    \ numbers[numbers != numbers[end-29]]\n    \n    numbers = numbers[numbers !=\
    \ numbers[end-30]]\n    \n    numbers = numbers[numbers != numbers[end-31]]\n\
    \    \n    numbers = numbers[numbers != number\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1jw3khcg.jl:1\nin expression starting at /tmp/tmp1jw3khcg.jl:1\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    numbers\
    \ = numbers[numbers != numbers[end-3]]\n    numbers = numbers[numbers != numbers[end-4]]\n\
    \    numbers = numbers[numbers != numbers[end-5]]\n    numbers = numbers[numbers\
    \ != numbers[end-6]]\n    numbers = numbers[numbers != numbers[end-7]]\n    numbers\
    \ = numbers[numbers != numbers[end-8]]\n    numbers = numbers[numbers != numbers[end-9]]\n\
    \    numbers = numbers[numbers != numbers[end-10]]\n    numbers = numbers[numbers\
    \ != numbers[end-11]]\n    numbers = numbers[numbers != numbers[end-12]]\n   \
    \ numbers = numbers[numbers != numbers[end-13]]\n    numbers = numbers[numbers\
    \ != numbers[end-14]]\n    numbers = numbers[numbers != numbers[end-15]]\n   \
    \ numbers = numbers[numbers != numbers[end-16]]\n    numbers = numbers[numbers\
    \ != numbers[end-17]]\n    numbers = numbers[numbers != numbers[end-18]]\n   \
    \ numbers = numbers[numbers != numbers[end-19]]\n    numbers = numbers[numbers\
    \ != numbers[end-20]]\n    numbers = numbers[numbers != numbers[end-21]]\n   \
    \ numbers = numbers[numbers != numbers[end-22]]\n    numbers = numbers[numbers\
    \ != numbers[end-23]]\n    numbers = numbers[numbers != numbers[end-24]]\n   \
    \ numbers = numbers[numbers != numbers[end-25]]\n    numbers = numbers[numbers\
    \ != numbers[end-26]]\n    numbers = numbers[numbers != numbers[end-27]]\n   \
    \ numbers = numbers[numbers != numbers[end-28]]\n    numbers = numbers[numbers\
    \ != numbers[end-29]]\n    numbers = numbers[numbers != numbers[end-30]]\n   \
    \ numbers = numbers[numbers != numbers[end-31]]\n    numbers = numbers[numbers\
    \ != numbers[end-32]]\n    numbers = numbers[numbers != numbers[end-33]]\n   \
    \ numbers = numbers[numbers != numbers[end-34]]\n    numbers = numbers[numbers\
    \ != numbers[end-35]]\n    numbers = numbers[numbers != numbers[end-36]]\n   \
    \ numbers = numbers[numbers != numbers[end-37]]\n    numbers = numbers[numbers\
    \ != numbers[end-38]]\n    \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpty922aya.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpty922aya.jl:1\n\
    in expression starting at /tmp/tmpty922aya.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplxn5nbn0.jl:10\nin expression starting at\
    \ /tmp/tmplxn5nbn0.jl:10\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    numbers\
    \ = numbers[numbers != numbers[end-3]]\n    numbers = numbers[numbers != numbers[end-4]]\n\
    \    numbers = numbers[numbers != numbers[end-5]]\n    numbers = numbers[numbers\
    \ != numbers[end-6]]\n    numbers = numbers[numbers != numbers[end-7]]\n    numbers\
    \ = numbers[numbers != numbers[end-8]]\n    numbers = numbers[numbers != numbers[end-9]]\n\
    \    numbers = numbers[numbers != numbers[end-10]]\n    numbers = numbers[numbers\
    \ != numbers[end-11]]\n    numbers = numbers[numbers != numbers[end-12]]\n   \
    \ numbers = numbers[numbers != numbers[end-13]]\n    numbers = numbers[numbers\
    \ != numbers[end-14]]\n    numbers = numbers[numbers != numbers[end-15]]\n   \
    \ numbers = numbers[numbers != numbers[end-16]]\n    numbers = numbers[numbers\
    \ != numbers[end-17]]\n    numbers = numbers[numbers != numbers[end-18]]\n   \
    \ numbers = numbers[numbers != numbers[end-19]]\n    numbers = numbers[numbers\
    \ != numbers[end-20]]\n    numbers = numbers[numbers != numbers[end-21]]\n   \
    \ numbers = numbers[numbers != numbers[end-22]]\n    numbers = numbers[numbers\
    \ != numbers[end-23]]\n    numbers = numbers[numbers != numbers[end-24]]\n   \
    \ numbers = numbers[numbers != numbers[end-25]]\n    numbers = numbers[numbers\
    \ != numbers[end-26]]\n    numbers = numbers[numbers != numbers[end-27]]\n   \
    \ numbers = numbers[numbers != numbers[end-28]]\n    numbers = numbers[numbers\
    \ != numbers[end-29]]\n    numbers = numbers[numbers != numbers[end-30]]\n   \
    \ numbers = numbers[numbers != numbers[end-31]]\n    numbers = numbers[numbers\
    \ != numbers[end-32]]\n    numbers = numbers[numbers != numbers[end-33]]\n   \
    \ numbers = numbers[numbers != numbers[end-34]]\n    numbers = numbers[numbers\
    \ != numbers[end-35]]\n    numbers = numbers[numbers != numbers[end-36]]\n   \
    \ numbers = numbers[numbers != numbers[end-37]]\n    numbers = numbers[numbers\
    \ != numbers[end-38]]\n    \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpty922aya.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpty922aya.jl:1\n\
    in expression starting at /tmp/tmpty922aya.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n# Test our\
    \ function\nnumbers = [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm2v7shqn.jl:12\nin expression starting at\
    \ /tmp/tmpm2v7shqn.jl:12\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    numbers\
    \ = numbers[numbers != numbers[end-3]]\n    numbers = numbers[numbers != numbers[end-4]]\n\
    \    numbers = numbers[numbers != numbers[end-5]]\n    numbers = numbers[numbers\
    \ != numbers[end-6]]\n    numbers = numbers[numbers != numbers[end-7]]\n    numbers\
    \ = numbers[numbers != numbers[end-8]]\n    numbers = numbers[numbers != numbers[end-9]]\n\
    \    numbers = numbers[numbers != numbers[end-10]]\n    numbers = numbers[numbers\
    \ != numbers[end-11]]\n    numbers = numbers[numbers != numbers[end-12]]\n   \
    \ numbers = numbers[numbers != numbers[end-13]]\n    numbers = numbers[numbers\
    \ != numbers[end-14]]\n    numbers = numbers[numbers != numbers[end-15]]\n   \
    \ numbers = numbers[numbers != numbers[end-16]]\n    numbers = numbers[numbers\
    \ != numbers[end-17]]\n    numbers = numbers[numbers != numbers[end-18]]\n   \
    \ numbers = numbers[numbers != numbers[end-19]]\n    numbers = numbers[numbers\
    \ != numbers[end-20]]\n    numbers = numbers[numbers != numbers[end-21]]\n   \
    \ numbers = numbers[numbers != numbers[end-22]]\n    numbers = numbers[numbers\
    \ != numbers[end-23]]\n    numbers = numbers[numbers != numbers[end-24]]\n   \
    \ numbers = numbers[numbers != numbers[end-25]]\n    numbers = numbers[numbers\
    \ != numbers[end-26]]\n    numbers = numbers[numbers != numbers[end-27]]\n   \
    \ numbers = numbers[numbers != numbers[end-28]]\n    numbers = numbers[numbers\
    \ != numbers[end-29]]\n    numbers = numbers[numbers != numbers[end-30]]\n   \
    \ numbers = numbers[numbers != numbers[end-31]]\n    numbers = numbers[numbers\
    \ != numbers[end-32]]\n    numbers = numbers[numbers != numbers[end-33]]\n   \
    \ numbers = numbers[numbers != numbers[end-34]]\n    numbers = numbers[numbers\
    \ != numbers[end-35]]\n    numbers = numbers[numbers != numbers[end-36]]\n   \
    \ numbers = numbers[numbers != numbers[end-37]]\n    numbers = numbers[numbers\
    \ != numbers[end-38]]\n    \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpty922aya.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpty922aya.jl:1\n\
    in expression starting at /tmp/tmpty922aya.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = numbers[findall(numbers .!= numbers .&. numbers .==0)]\n    return\
    \ numbers\nend\n</code>\n<|/ a dscore=2 |>\n<| a |>\nI wrote a function to remove\
    \ duplicates from a vector. \n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \".\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpspx1271u.jl:5\nin expression starting at /tmp/tmpspx1271u.jl:5\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    \n    numbers = sort(numbers)\n \
    \   \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[number\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob2j4ok1.jl:1\nin expression starting at /tmp/tmpob2j4ok1.jl:1\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    \n    numbers = sort(numbers)\n \
    \   \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[number\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob2j4ok1.jl:1\nin expression starting at /tmp/tmpob2j4ok1.jl:1\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfhzmmia1.jl:19\nin expression starting at\
    \ /tmp/tmpfhzmmia1.jl:19\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,26\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpew4j4idz.jl:12\nin expression starting at\
    \ /tmp/tmpew4j4idz.jl:12\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers .!= numbers[end]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-1]]\n    numbers = numbers[numbers .!= numbers[end-2]]\n   \
    \ numbers = numbers[numbers .!= numbers[end-3]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-4]]\n    numbers = numbers[numbers .!= numbers[end-5]]\n   \
    \ numbers = numbers[numbers .!= numbers[end-6]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-7]]\n    numbers = numbers[numbers .!= numbers[end-8]]\n   \
    \ numbers = numbers[numbers .!= numbers[end-9]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-10]]\n    numbers = numbers[numbers .!= numbers[end-11]]\n \
    \   numbers = numbers[numbers .!= numbers[end-12]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-13]]\n    numbers = numbers[numbers .!= numbers[end-14]]\n \
    \   numbers = numbers[numbers .!= numbers[end-15]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-16]]\n    numbers = numbers[numbers .!= numbers[end-17]]\n \
    \   numbers = numbers[numbers .!= numbers[end-18]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-19]]\n    numbers = numbers[numbers .!= numbers[end-20]]\n \
    \   numbers = numbers[numbers .!= numbers[end-21]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-22]]\n    numbers = numbers[numbers .!= numbers[end-23]]\n \
    \   numbers = numbers[numbers .!= numbers[end-24]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-25]]\n    numbers = numbers[numbers .!= numbers[end-26]]\n \
    \   numbers = numbers[numbers .!= numbers[end-27]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-28]]\n    numbers = numbers[numbers .!= numbers[end-29]]\n \
    \   numbers = numbers[numbers .!= numbers[end-30]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-31]]\n    numbers = numbers[numbers .!= numbers[end-32]]\n \
    \   numbers = numbers[numbers .!= numbers[end-33]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-34]]\n    numbers = numbers[numbers .!= numbers[end-35]]\n \
    \   numbers = number\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp39crwslr.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp39crwslr.jl:1\n\
    in expression starting at /tmp/tmp39crwslr.jl:1\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mg8fbnq.jl:12\nin expression starting at\
    \ /tmp/tmp1mg8fbnq.jl:12\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\nend\n\
    </cell>\n<code language=julia-1.5>\n@time remove_duplicates(numbers)\n</cell>\n\
    <text>\nExercise: Remove all elements that occur more than once.\nWhat is the\
    \ time complexity of this function?\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt610y_rp.jl:9\nin expression starting at /tmp/tmpt610y_rp.jl:9\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers .!= numbers[end]]\n    \n    return numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpr6iowoyd.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpr6iowoyd.jl:15\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpr6iowoyd.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr6iowoyd.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr6iowoyd.jl:14\ntest set:\
    \ Test Failed at /tmp/tmpr6iowoyd.jl:16\n  Expression: candidate([1, 2, 3, 4])\
    \ == [1, 2, 3, 4]\n   Evaluated: [1, 2, 3] == [1, 2, 3, 4]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr6iowoyd.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr6iowoyd.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpr6iowoyd.jl:17\n  Expression: candidate([1, 2, 3, 2, 4, 3,\
    \ 5]) == [1, 4, 5]\n   Evaluated: [1, 2, 3, 2, 4, 3] == [1, 4, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr6iowoyd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr6iowoyd.jl:14\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747726
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    \n    numbers = sort(numbers)\n \
    \   \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[number\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob2j4ok1.jl:1\nin expression starting at /tmp/tmpob2j4ok1.jl:1\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgaz9xg67.jl:20\nin expression starting at\
    \ /tmp/tmpgaz9xg67.jl:20\n"
  stdout: ''
  timestamp: 1659747721
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = sort(numbers)\n    numbers = numbers[numbers .!= numbers[end]]\n \
    \   return numbers\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nI like this solution,\
    \ but I wonder if there is a way to do this without sorting the entire vector.\
    \ Maybe by using a different data structure that doesn't require sorting at all?\n\
    <|/ c |>\n<| c |>\nI believe that sorting is O(n log n), so this solution is O(n\
    \ log n). Sorting is a very common operation and I believe that Julia has some\
    \ data structure that can do it in O(n log n).\n<|/ c |>\n<| c |>\nI believe that\
    \ sorting is O(n log n) but it is also O(n) because of the sorting algorithm.\
    \ Sorting is a very common operation and I believe that Julia has some data structure\
    \ that can do it in O(n log n).\n<|/ c |>\n<| c |>\nI believe that sorting is\
    \ O(n log n) but it is also O(n) because of the sorting algorithm. Sorting is\
    \ a very common operation and I believe that Julia has some data structure that\
    \ can do it in O(n log n).\n<|/ c |>\n<| c |>\nI believe that sorting is O(n log\
    \ n) but it is also O(n) because of the sorting algorithm. Sorting is a very common\
    \ operation and I believe that Julia has some data structure that can do it in\
    \ O(n log n).\n<|/ c |>\n<| a dscore=4 |>\nHere's a solution using Sets:\n<code>\n\
    julia> function remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n  \
    \         numbers = sort(numbers)\n           numbers = numbers[numbers .!= numbers[end]]\n\
    \           return numbers\n       end\nremove_duplicates (generic function with\
    \ 1 method)\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr77cyd37.jl:9\nin expression starting at /tmp/tmpr77cyd37.jl:9\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mg8fbnq.jl:12\nin expression starting at\
    \ /tmp/tmp1mg8fbnq.jl:12\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\n@time remove_duplicates(rand(1:10000))\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns a vector of integers where the integers are all even.\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2z38sqgi.jl:19\nin expression starting at\
    \ /tmp/tmp2z38sqgi.jl:19\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.3>\nnumbers = [1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,13\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2yx9xtnp.jl:20\nin expression starting at\
    \ /tmp/tmp2yx9xtnp.jl:20\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ a given element appears in a given vector.\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpku2s0j1r.jl:19\nin expression starting at\
    \ /tmp/tmpku2s0j1r.jl:19\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.4>\nnumbers =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.4>\nnumbers\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a vector of integers and returns a vector of integers\
    \ where the values are the square of those integers in the input vector.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpybbf20ng.jl:12\nin expression starting at\
    \ /tmp/tmpybbf20ng.jl:12\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nremove_duplicates(numbers)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvky7qaht.jl:12\nin expression starting at\
    \ /tmp/tmpvky7qaht.jl:12\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    numbers = remove_duplicates(numbers)\nnumbers\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector of integers and returns a vector of integers\
    \ where the integers are in descending order.\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8uqi90rw.jl:20\nin expression starting at\
    \ /tmp/tmp8uqi90rw.jl:20\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n  \
    \  return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns a vector of integers where the values\
    \ are the square of those integers in the input vector. For example, if the input\
    \ vector is [1,2,3,4,5], the output vector should be [1,2,3,4,5].\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpglnb2run.jl:9\nin expression starting at /tmp/tmpglnb2run.jl:9\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers .!= numbers[end]]\n    numbers = numbers[numbers\
    \ .!= numbers[end-1]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.4>\n\
    numbers = [1,2,2,3,4,4,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n</cell>\n\
    <code language=julia-1.4>\nremove_duplicates(numbers)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of integers and returns a vector of\
    \ integers where the integers are in descending order.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd3raugi5.jl:11\nin expression starting at\
    \ /tmp/tmpd3raugi5.jl:11\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n  \
    \  return numbers\nend\n</code>\n<|/ a tags=julia,arrays |>\n<| c |>\nThanks for\
    \ your answer! I tested it and it works well. However I still don't understand\
    \ why my code didn't work. Could you please explain it to me?\n<|/ c |>\n<| c\
    \ |>\nI added some explanation to the answer.\n<|/ c |>\n<| a dscore=0 |>\nThe\
    \ reason your code doesn't work is because you never actually remove any elements\
    \ from the array. Your code only removes elements that occur more than once.\n\
    To fix this, you can use the removeall function from the Base package:\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpopfqmbmb.jl:9\nin expression starting at /tmp/tmpopfqmbmb.jl:9\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\nend\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp39oiswy4.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp39oiswy4.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp39oiswy4.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp39oiswy4.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp39oiswy4.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp39oiswy4.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmp39oiswy4.jl:6\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp39oiswy4.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp39oiswy4.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp39oiswy4.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747726
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code\
    \ language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code\
    \ language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code\
    \ language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code\
    \ language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code language=julia-1.5>\n\
    remove_duplicates([1,2,2,3,3,3,3])\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\n</cell>\n\
    <code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,3,3])\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprqfdtn7w.jl:10\nin expression starting at\
    \ /tmp/tmprqfdtn7w.jl:10\n"
  stdout: ''
  timestamp: 1659747724
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nnumbers = remove_duplicates(numbers)\n\
    </cell>\n<code language=julia-1.5>\nnumbers\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the first n prime numbers. \nThe function should take\
    \ an argument n and return a vector of n prime numbers.\nThe function should return\
    \ nothing if the argument n is less than 2.\nThe function should return nothing\
    \ if the argument n is greater than 20.\nThe function should return nothing if\
    \ the argument n is 0.\nThe function should return nothing if the argument n is\
    \ NaN.\nThe function should return nothing if the argument n is Inf.\nThe function\
    \ should return nothing if the argument n is NaN.\nThe function should return\
    \ nothing if the argument n is Inf.\nThe function should return nothing if the\
    \ argument n is NaN.\nThe function should return nothing if the argument n is\
    \ Inf.\nThe function should return nothing if the argument n is NaN.\nThe function\
    \ should return nothing if the argument n is Inf.\nThe function should return\
    \ nothing if the argument n is NaN.\nThe function should return nothing if the\
    \ argument n is Inf.\nThe function should return nothing if the argument n is\
    \ NaN.\nThe function should return nothing if the argument n is Inf.\nThe function\
    \ should return nothing if the argument n is NaN.\nThe function should return\
    \ nothing if the argument n is Inf.\nThe function should return nothing if the\
    \ argument n is NaN.\nThe function should return nothing if the argument n is\
    \ Inf.\nThe function should return nothing if the argument n is NaN.\nThe function\
    \ should return nothing if the argument n is Inf.\nThe function should return\
    \ nothing if the argument n is NaN.\nThe function should return nothing if the\
    \ argument n is Inf.\nThe function should return nothing if the argument n is\
    \ NaN.\nThe function should return nothing if the argument n is Inf.\nThe function\
    \ should return nothing if the argument n is NaN.\nThe function should return\
    \ nothing if the argument n is Inf.\nThe function should return nothing if the\
    \ argument n is NaN.\nThe function should return nothing if the argument n is\
    \ Inf.\nThe function should return nothing if the argument n is NaN.\nThe function\
    \ should return nothing if the argument n is Inf.\nThe function should return\
    \ nothing if the argument n is NaN.\nThe function should return nothing if the\
    \ argument n is \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp6hqpwtc.jl:11\nin expression starting at\
    \ /tmp/tmpp6hqpwtc.jl:11\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[2:end]\n    \n  \
    \  return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,2,3,3,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_snrglh1.jl:12\nin expression starting at\
    \ /tmp/tmp_snrglh1.jl:12\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers and returns the number of unique elements in the list.\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt1t2d78x.jl:20\nin expression starting at\
    \ /tmp/tmpt1t2d78x.jl:20\n"
  stdout: ''
  timestamp: 1659747724
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    \n    numbers = sort(numbers)\n \
    \   \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[number\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob2j4ok1.jl:1\nin expression starting at /tmp/tmpob2j4ok1.jl:1\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers .!= numbers[numbers\
    \ .!= numbers[numbers .!= numbers[numbers .\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"numbers .\"\
    \ at /tmp/tmpjvj1fufy.jl:5\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjvj1fufy.jl:5\n\
    in expression starting at /tmp/tmpjvj1fufy.jl:5\n"
  stdout: ''
  timestamp: 1659747724
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpr17r621j.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpr17r621j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpr17r621j.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr17r621j.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpr17r621j.jl:8\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpr17r621j.jl:18 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpr17r621j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpr17r621j.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747722
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    \n\
    \    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,25\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnq8_cwpr.jl:12\nin expression starting at\
    \ /tmp/tmpnq8_cwpr.jl:12\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0_bh7qcv.jl:19\nin expression starting at\
    \ /tmp/tmp0_bh7qcv.jl:19\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    \n    numbers = sort(numbers)\n \
    \   \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[number\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob2j4ok1.jl:1\nin expression starting at /tmp/tmpob2j4ok1.jl:1\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    \n    numbers = sort(numbers)\n \
    \   \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[number\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob2j4ok1.jl:1\nin expression starting at /tmp/tmpob2j4ok1.jl:1\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,13\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjhyf9rbn.jl:19\nin expression starting at\
    \ /tmp/tmpjhyf9rbn.jl:19\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpxtobabed.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpxtobabed.jl:15\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpxtobabed.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxtobabed.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxtobabed.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxtobabed.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpxtobabed.jl:6\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpxtobabed.jl:16 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpxtobabed.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxtobabed.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers_copy = copy(numbers)\n    \n\
    \    numbers_copy[numbers_copy .!= numbers_copy[1]] .= numbers_copy[numbers_copy\
    \ .!= numbers_copy[1]]\n    \n    numbers_copy[numbers_copy .!= numbers_copy[end]]\
    \ .= numbers_copy[numbers_copy .!= numbers_copy[end]]\n    \n    numbers_copy[numbers_copy\
    \ .!= numbers_copy[1]] .= numbers_copy[numbers_copy .!= numbers_copy[1]]\n   \
    \ \n    numbers_copy[numbers_copy .!= numbers_copy[end]] .= numbers_copy[numbers_copy\
    \ .!= numbers_copy[end]]\n    \n    numbers_copy[numbers_copy .!= numbers_copy[1]]\
    \ .= numbers_copy[numbers_copy .!= numbers_copy[1]]\n    \n    numbers_copy[numbers_copy\
    \ .!= numbers_copy[end]] .= numbers_copy[numbers_copy .!= numbers_copy[end]]\n\
    \    \n    numbers_copy[numbers_copy .!= numbers_copy[1]] .= numbers_copy[numbers_copy\
    \ .!= numbers_copy[1]]\n    \n    numbers_copy[numbers_copy .!= numbers_copy[end]]\
    \ .= numbers_copy[numbers_copy .!= numbers_copy[end]]\n    \n    numbers_copy[numbers_copy\
    \ .!= numbers_copy[1]] .= numbers_copy[numbers_copy .!= numbers_copy[1]]\n   \
    \ \n    numbers_copy[numbers_copy .!= numbers_copy[end]] .= numbers_copy[numbers_copy\
    \ .!= numbers_copy[end]]\n    \n    numbers_copy[numbers_copy .!= numbers_copy[1]]\
    \ .= numbers_copy[numbers_copy .!= numbers_copy[1]]\n    \n    numbers_copy[numbers_copy\
    \ .!= numbers_copy[end]] .= numbers_copy[numbers_copy .!= numbers_copy[end]]\n\
    \    \n    numbers_copy[numbers_copy .!= numbers_copy[1]] .= numbers_copy[numbers_copy\
    \ .!= numbers_copy[1]]\n    \n    numbers_copy[numbers_copy .!= numbers_copy[end]]\
    \ .= numbers_copy[numbers_copy .!= numbers_copy[end]]\n    \n    numbers_copy[numbers_copy\
    \ \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphnwyos1n.jl:1\nin expression starting at /tmp/tmphnwyos1n.jl:1\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    \n    numbers = sort(numbers)\n \
    \   \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[numbers != 0]\n    \n    numbers = numbers[numbers\
    \ != 0]\n    \n    numbers = numbers[number\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob2j4ok1.jl:1\nin expression starting at /tmp/tmpob2j4ok1.jl:1\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    \n \
    \   numbers = numbers[numbers != numbers[end]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 1]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 2]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 3]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 4]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 5]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 6]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 7]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 8]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 9]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 10]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 11]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 12]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 13]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 14]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 15]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 16]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 17]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 18]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 19]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 20]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != numbers[end - 21]]\n    numbers = sort(numbers)\n\
    \    \n    numbers = numbers[numbers != number\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfovn9_av.jl:1\nin expression starting at /tmp/tmpfovn9_av.jl:1\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end]] \n    numbers = numbers[numbers != numbers[end]] \n    numbers\
    \ = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers != numbers[end]]\
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end]] \n    numbers = numbers[numbers != numbers[end]] \n    numbers\
    \ = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers != numbers[end]]\
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end]] \n    numbers = numbers[numbers != numbers[end]] \n    numbers\
    \ = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers != numbers[end]]\
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end]] \n    numbers = numbers[numbers != numbers[end]] \n    numbers\
    \ = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers != numbers[end]]\
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end]] \n    numbers = numbers[numbers != numbers[end]] \n    numbers\
    \ = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers != numbers[end]]\
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end]] \n    numbers = numbers[numbers != numbers[end]] \n    numbers\
    \ = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers != numbers[end]]\
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end]] \n    numbers = numbers[numbers != numbers[end]] \n    numbers\
    \ = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers != numbers[end]]\
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end]] \n    numbers = numbers[numbers != numbers[end]] \n    numbers\
    \ = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers != numbers[end]]\
    \ \n    numbers = numbers[numbers != numbers[end]] \n    numbers = numbers[numbers\
    \ != numbers[end]] \n    numbers = numbers[number\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkb6c3i_j.jl:1\nin expression starting at /tmp/tmpkb6c3i_j.jl:1\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\nend\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp39oiswy4.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp39oiswy4.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp39oiswy4.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp39oiswy4.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp39oiswy4.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp39oiswy4.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmp39oiswy4.jl:6\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp39oiswy4.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp39oiswy4.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp39oiswy4.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747726
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mg8fbnq.jl:12\nin expression starting at\
    \ /tmp/tmp1mg8fbnq.jl:12\n"
  stdout: ''
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx1j_29qe.jl:19\nin expression starting at\
    \ /tmp/tmpx1j_29qe.jl:19\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers_unique = Vector{Int64}()\n\
    \    \n    for number in numbers\n        if number in numbers_unique\n      \
    \      numbers_unique += number\n        else\n            numbers_unique += number\n\
    \        end\n    end\n    \n    return numbers_unique\nend\n</cell>\n<code language=julia-1.5>\n\
    numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqh2e0fu_.jl:20\nin expression starting at\
    \ /tmp/tmpqh2e0fu_.jl:20\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,1,2,3,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd94i7su6.jl:20\nin expression starting at\
    \ /tmp/tmpd94i7su6.jl:20\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    numbers\
    \ = numbers[2:end]\n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5wdcl27v.jl:11\nin expression starting at\
    \ /tmp/tmp5wdcl27v.jl:11\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdjp_kjzc.jl:9\nin expression starting at /tmp/tmpdjp_kjzc.jl:9\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    </cell>\n<code language=julia-1.5>\nremove_duplicates(numbers)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of integers and returns the sum\
    \ of the squares of the integers in the vector.\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5396m5xe.jl:19\nin expression starting at\
    \ /tmp/tmp5396m5xe.jl:19\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers .!= numbers[end]]\n    return numbers\nend\n\
    </cell>\n<code language=julia-1.5>\nnumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpobebuf8_.jl:9\nin expression starting at /tmp/tmpobebuf8_.jl:9\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpxtobabed.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpxtobabed.jl:15\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpxtobabed.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxtobabed.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxtobabed.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxtobabed.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmpxtobabed.jl:6\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpxtobabed.jl:16 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpxtobabed.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxtobabed.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747723
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.4>\nnumbers = [1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the sum of the squares of the integers.\
    \ \nFor example, \n$$\n\\begin{align}\n\\text{sum of the squares of the integers}\
    \ &=& \\sum{i=1}^n i^2\n\\end{align}\n$$\nWrite a function that takes a vector\
    \ of integers and returns the sum of the squares of the integers. \nFor example,\
    \ \n$$\n\\begin{align}\n\\text{sum of the squares of the integers} &=& \\sum{i=1}^n\
    \ i^2\n\\end{align}\n$$\nWrite a function that takes a vector of integers and\
    \ returns the sum of the squares of the integers. \nFor example, \n$$\n\\begin{align}\n\
    \\text{sum of the squares of the integers} &=& \\sum{i=1}^n i^2\n\\end{align}\n\
    $$\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbdm_05cj.jl:19\nin expression starting at\
    \ /tmp/tmpbdm_05cj.jl:19\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n  \
    \  return numbers\nend\n</cell>\n<code language=julia-1.5>\nremove_duplicates([1,2,2,3,3,4,4,4,5,5,5,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp38puma1g.jl:9\nin expression starting at /tmp/tmp38puma1g.jl:9\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2njvzr0k.jl:12\nin expression starting at\
    \ /tmp/tmp2njvzr0k.jl:12\n"
  stdout: ''
  timestamp: 1659747720
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\n# Test our function\nnumbers = [1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of integers and returns a vector of integers where the integers\
    \ are in descending order.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpklumbs7p.jl:10\nin expression starting at\
    \ /tmp/tmpklumbs7p.jl:10\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    numbers\
    \ = numbers[numbers != numbers[end-3]]\n    numbers = numbers[numbers != numbers[end-4]]\n\
    \    numbers = numbers[numbers != numbers[end-5]]\n    numbers = numbers[numbers\
    \ != numbers[end-6]]\n    numbers = numbers[numbers != numbers[end-7]]\n    numbers\
    \ = numbers[numbers != numbers[end-8]]\n    numbers = numbers[numbers != numbers[end-9]]\n\
    \    numbers = numbers[numbers != numbers[end-10]]\n    numbers = numbers[numbers\
    \ != numbers[end-11]]\n    numbers = numbers[numbers != numbers[end-12]]\n   \
    \ numbers = numbers[numbers != numbers[end-13]]\n    numbers = numbers[numbers\
    \ != numbers[end-14]]\n    numbers = numbers[numbers != numbers[end-15]]\n   \
    \ numbers = numbers[numbers != numbers[end-16]]\n    numbers = numbers[numbers\
    \ != numbers[end-17]]\n    numbers = numbers[numbers != numbers[end-18]]\n   \
    \ numbers = numbers[numbers != numbers[end-19]]\n    numbers = numbers[numbers\
    \ != numbers[end-20]]\n    numbers = numbers[numbers != numbers[end-21]]\n   \
    \ numbers = numbers[numbers != numbers[end-22]]\n    numbers = numbers[numbers\
    \ != numbers[end-23]]\n    numbers = numbers[numbers != numbers[end-24]]\n   \
    \ numbers = numbers[numbers != numbers[end-25]]\n    numbers = numbers[numbers\
    \ != numbers[end-26]]\n    numbers = numbers[numbers != numbers[end-27]]\n   \
    \ numbers = numbers[numbers != numbers[end-28]]\n    numbers = numbers[numbers\
    \ != numbers[end-29]]\n    numbers = numbers[numbers != numbers[end-30]]\n   \
    \ numbers = numbers[numbers != numbers[end-31]]\n    numbers = numbers[numbers\
    \ != numbers[end-32]]\n    numbers = numbers[numbers != numbers[end-33]]\n   \
    \ numbers = numbers[numbers != numbers[end-34]]\n    numbers = numbers[numbers\
    \ != numbers[end-35]]\n    numbers = numbers[numbers != numbers[end-36]]\n   \
    \ numbers = numbers[numbers != numbers[end-37]]\n    numbers = numbers[numbers\
    \ != numbers[end-38]]\n    \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpty922aya.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpty922aya.jl:1\n\
    in expression starting at /tmp/tmpty922aya.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1,2,2,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpke418yjp.jl:12\nin expression starting at\
    \ /tmp/tmpke418yjp.jl:12\n"
  stdout: ''
  timestamp: 1659747726
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpic_w_gk8.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpic_w_gk8.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpic_w_gk8.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpic_w_gk8.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpic_w_gk8.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpic_w_gk8.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  BoundsError: attempt to access\
    \ 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpic_w_gk8.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpic_w_gk8.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpic_w_gk8.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747727
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjlfjw27r.jl:4\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjlfjw27r.jl:1\n\
    in expression starting at /tmp/tmpjlfjw27r.jl:1\n"
  stdout: ''
  timestamp: 1659747718
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    \n\
    \    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2ys3wr7o.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp2ys3wr7o.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] remove_duplicates(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp2ys3wr7o.jl:6\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2ys3wr7o.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2ys3wr7o.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2ys3wr7o.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  ArgumentError: invalid index: true\
    \ of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:330 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1221\
    \ [inlined]\n    [6] remove_duplicates(numbers::Vector{Int64})\n      @ Main /tmp/tmp2ys3wr7o.jl:6\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp2ys3wr7o.jl:18 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp2ys3wr7o.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2ys3wr7o.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5]\n  ArgumentError: invalid index:\
    \ true of type Bool\n  Stacktrace:\n    [1] to_index(i::Bool)\n      @ Base ./indices.jl:293\n\
    \    [2] to_index(A::Vector{Int64}, i::Bool)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices"
  timestamp: 1659747727
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nnumbers = [1,2,2,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    remove_duplicates(numbers)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns a vector of integers where the values\
    \ are the product of all the numbers in the original vector. For example, if the\
    \ input vector is [1,2,3,4,5], the output vector should be [1,2,6,24,120].\nusing\
    \ Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkv5c6kqm.jl:19\nin expression starting at\
    \ /tmp/tmpkv5c6kqm.jl:19\n"
  stdout: ''
  timestamp: 1659747726
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nremove_duplicates(numbers)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of numbers and\
    \ returns the sum of the numbers in the list.\nusing Test\n\n@testset begin\n\n\
    candidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyh_laluy.jl:11\nin expression starting at\
    \ /tmp/tmpyh_laluy.jl:11\n"
  stdout: ''
  timestamp: 1659747726
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers != numbers[end]]\n\
    \    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\nnumbers =\
    \ [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx7ced415.jl:12\nin expression starting at\
    \ /tmp/tmpx7ced415.jl:12\n"
  stdout: ''
  timestamp: 1659747726
- exit_code: 1
  program: "\"\"\" From a list of integers, remove all elements that occur more than\
    \ once.\n    Keep order of elements left the same as in the input.\n        \"\
    \"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64} \n   \
    \ \n    numbers = numbers[numbers != 0]\n    numbers = sort(numbers)\n    numbers\
    \ = numbers[2:end]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyosz5j71.jl:12\nin expression starting at\
    \ /tmp/tmpyosz5j71.jl:12\n"
  stdout: ''
  timestamp: 1659747726

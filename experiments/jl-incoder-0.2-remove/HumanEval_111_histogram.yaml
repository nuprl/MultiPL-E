name: HumanEval_111_histogram
language: jl
prompt: "\"\"\"Given a string representing a space separated lowercase letters, return\
  \ a dictionary\n    of the letter with the most repetition and containing the corresponding\
  \ count.\n    If several letters have the same occurrence, return all of them.\n\
  \    \n    Example:\n                    \n    \"\"\"\nfunction histogram(test::String)::Dict{String,\
  \ Int64}> \n"
tests: "using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
  a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") ==\
  \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\"\
  \ => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r\
  \ t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b\
  \ b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1,\
  \ \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
  a\") == Dict(\"a\" => 1))\nend\n"
completions: ["    \n    histogram = Dict{String, Int64}()\n    \n    for letter in\
    \ test\n        histogram[letter] = histogram[letter] + 1\n    end\n    \n   \
    \ return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadab",
  "    \n    histogram = Dict{String, Int64}()\n    \n    for char in test\n     \
    \   histogram[char] = histogram[char] + 1\n    end\n    \n    return histogram\n\
    end", "    histogram = Dict{String, Int64}()\n    \n    for letter in test\n \
    \       histogram[letter] = get(histogram, letter, 0) + 1\n    end\n    \n   \
    \ return histogram\nend", "    \n    letters = split(test)\n    counts = Dict{String,\
    \ Int64}()\n    for letter in letters\n        counts[letter] = get(counts, letter,\
    \ 0) + 1\n    end\n    \n    return counts\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend", "    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend", "    histogram = Dict{String,\
    \ Int64}()\n    letters = split(test)\n    for letter in letters\n        histogram[letter]\
    \ = get(histogram, letter, 0) + 1\n    end\n    histogram\nend\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns the number of spaces separating the words in the string.", "   \
    \ \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n    \
    \    histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5", "    \n    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend", "    \n\
    \    histogram = Dict{String, Int64}()\n    \n    for letter in test\n       \
    \ histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end", "    histogram = Dict{String, Int64}()\n    \n    for letter in test\n \
    \       histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end", "    \n    histogram = Dict{String, Int64}()\n    \n    for c in test\n\
    \        histogram[c] = histogram[c] ? histogram[c] + 1 : 1\n    end\n    \n \
    \   return histogram\nend", "    \n    histogram = Dict{String, Int64}()\n   \
    \ \n    for letter in test\n        histogram[letter] = histogram[letter] + 1\n\
    \    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = get(histogram,\
    \ letter, 0) + 1\n    end\n    \n    return histogram\nend", "    histogram =\
    \ Dict{String, Int64}()\n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.", "    histogram = Dict{String, Int64}()\n  \
    \  for c in test\n        histogram[c] = histogram.get(c, 0) + 1\n    end\n  \
    \  histogram\nend\n</cell>\n<code language=julia-1.4>\nhistogram(\"a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b ", "    \n    histogram = Dict{String, Int64}()\n    \n    for i in\
    \ split(test)\n        histogram[i] = histogram[i] + 1 if histogram[i] < 1 else\
    \ 1\n    \n    return histogram\nend", "    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend", "    histogram = Dict{String,\
    \ Int64}()\n    letters = split(test)\n    for letter in letters\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t ", "    histogram = Dict{String, Int64}()\n    for\
    \ c in test\n        histogram[c] = get(histogram, c, 0) + 1\n    end\n    histogram\n\
    end", "    histogram = Dict{String, Int64}()\n    for char in test\n        if\
    \ histogram.has_key(char)\n            histogram[char] += 1\n        else\n  \
    \          histogram[char] = 1\n        end\n    end\n    return histogram\nend\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t ", "    histogram = Dict{String, Int64}()\n    letters\
    \ = split(test)\n    for letter in letters\n        if histogram[letter] == 0\n\
    \            histogram[letter] = 1\n        else\n            histogram[letter]\
    \ += 1\n        end\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.3>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.3>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.3>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.3>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b c d e f\
    \ g h ", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in\
    \ test\n        histogram[letter] = histogram[letter] + 1\n    end\n    \n   \
    \ return histogram\nend", "    counts = Dict{String, Int64}()\n    for c in test\n\
    \        counts[c] = get(counts, c, 0) + 1\n    end\n    \n    return counts\n\
    end", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n\
    \        histogram[letter] = histogram[letter] + 1\n    end\n    \n    return\
    \ histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5",
  "    histogram = Dict{String, Int64}()\n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>", "    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for char in test\n        histogram[char] = histogram[char]\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of characters in the string that are not in the alphabet.", "    histogram =\
    \ Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend", "    counts\
    \ = Dict{String, Int64}()\n    for c in test\n        counts[c] = get(counts,\
    \ c, 0) + 1\n    \n    maximum = max(counts.values)\n    \n    counts = counts\
    \ |> filter((_, count) -> count > maximum) |> map((_, count) -> count)\n    \n\
    \    return counts\n    \n\"\"\"Given a string representing a space separated\
    \ lowercase letters, return a dictionary\n    of the letter with the most repetition\
    \ and containing the corresponding count.\n    If several letters have the same\
    \ occurrence, return all of them.\n    \n    Example:\n                    \n\
    \    \"\"\"", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in split(test)\n        histogram[letter] = histogram[letter] + 1\n    end\n\
    \    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracad", "    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in test\n        histogram[letter] = get(histogram, letter, 0) + 1\n    end\n\
    \    \n    return histogram\nend", "    \n    letters = split(test)\n    \n  \
    \  histogram = Dict{String, Int64}()\n    \n    for letter in letters\n      \
    \  histogram[letter] = get(histogram, letter, 0) + 1\n    end\n    \n    return\
    \ histogram\nend", "    histogram = Dict{String, Int64}()\n    for letter in test\n\
    \        histogram[letter] = histogram[letter] + 1\n    end\n    return histogram\n\
    end", "    \n    letters = split(test)\n    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in letters\n        histogram[letter] = get(histogram, letter,\
    \ 0) + 1\n    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend", "    histogram = Dict{String,\
    \ Int64}()\n    for c in test\n        if histogram[c] == 0\n            histogram[c]\
    \ = 1\n        else\n            histogram[c] += 1\n        end\n    end\n   \
    \ return histogram\nend", "    \n    histogram = Dict{String, Int64}()\n    \n\
    \    for letter in test\n        histogram[letter] = histogram[letter] + 1\n \
    \   end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadab", "    \n    histogram = Dict{String, Int64}()\n    \n \
    \   for i in split(test)\n        histogram[i] = histogram[i] + 1 \n    end\n\
    \    \n    return histogram\nend", "    \n    letters = split(test)\n    counts\
    \ = Dict{String, Int64}()\n    for letter in letters\n        counts[letter] =\
    \ get(counts, letter, 0) + 1\n    end\n    \n    return counts\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c ", "    \n    letters\
    \ = split(test)\n    \n    counts = Dict{String, Int64}()\n    \n    for letter\
    \ in letters\n        counts[letter] = get(counts, letter, 0) + 1\n    end\n \
    \   \n    return counts\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a string and returns the number of words in the\
    \ string.\nThe function should ignore all punctuation and only count the letters\
    \ a-z.\nThe function should ignore all empty spaces.\nThe function should ignore\
    \ all non-letter characters and only count the letters a-z.\nThe function should\
    \ ignore all non-letter characters and only count the letters a-z.\nThe function\
    \ should ignore all non-letter characters and only count the letters a-z.\nThe\
    \ function should ignore all non-letter characters and only count the letters\
    \ a-z.\nThe function should ignore all non-letter characters and only count the\
    \ letters a-z.\nThe function should ignore all non-letter characters and only\
    \ count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function should ignore all non-letter characters\
    \ and only count the letters a-z.\nThe function ", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend", "    histogram = Dict{String,\
    \ Int64}()\n    for letter in test\n        if histogram[letter] == 0\n      \
    \      histogram[letter] = 1\n        else\n            histogram[letter] += 1\n\
    \        end\n    end\n    return histogram\nend\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n",
  "    histogram = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend", "    \n\
    \    histogram = Dict{String, Int64}()\n    \n    for letter in test\n       \
    \ histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a ", "    histogram = Dict{String,\
    \ Int64}()\n    for letter in test\n        histogram[letter] = get(histogram,\
    \ letter, 0) + 1\n    end\n    histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in split(test)\n        histogram[letter] = get(histogram,\
    \ letter, 0) + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"\
    a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"a\
    \ b c a b c ", "    histogram = Dict{String, Int64}()\n    for c in test\n   \
    \     histogram[c] = histogram[c] ? histogram[c] + 1 : 1\n    end\n    return\
    \ histogram\nend", "    counts = Dict{String, Int64}()\n    for c in test\n  \
    \      counts[c] = get(counts, c, 0) + 1\n    end\n    counts\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c\")\n</cell>", "   \
    \ histogram = Dict{String, Int64}()\n    \n    for i in split(test)\n        histogram[i]\
    \ = histogram[i] + 1 \n    end\n    \n    return histogram\nend", "    \n    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend", "    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = get(histogram, letter, 0) + 1\n    end\n    \n    return histogram\nend",
  "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n   \
    \     histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadab", "    histogram\
    \ = Dict{String, Int64}()\n    for c in test\n        histogram[c] = get(histogram,\
    \ c, 0) + 1\n    end\n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>", "    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadab", "    \n    histogram = Dict{String, Int64}()\n    \n \
    \   for letter in test\n        histogram[letter] = histogram[letter] + 1\n  \
    \  end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadab", "    histogram = Dict{String, Int64}()\n    \n    for\
    \ letter in test\n        histogram[letter] = histogram[letter] + 1\n    end\n\
    \    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")", "    histogram = Dict{String, Int64}()\n    \n  \
    \  for letter in test\n        histogram[letter] = histogram[letter] + 1\n   \
    \ end\n    \n    return histogram\nend", "    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for c in test\n        histogram[c] = get(histogram, c, 0) + 1\n  \
    \  end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a ", "    \n    letters = split(test)\n    letters_count = Dict{String,\
    \ Int64}()\n    \n    for letter in letters\n        letters_count[letter] = get(letters_count,\
    \ letter, 0) + 1\n    end\n    \n    return letters_count\nend\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns a string with all the letters capitalized.", "    \n    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend", "    \n\
    \    histogram = Dict{String, Int64}()\n    \n    for letter in test\n       \
    \ histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end", "    histogram = Dict{String, Int64}()\n    for letter in test\n       \
    \ histogram[letter] = histogram[letter] + 1\n    end\n    histogram\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba", " \
    \   histogram = Dict{String, Int64}()\n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>", "    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")", "    counts = Dict{String, Int64}()\n    for c in\
    \ test\n        counts[c] = get(counts, c, 0) + 1\n    end\n    \n    return counts\n\
    end", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n\
    \        histogram[letter] = histogram[letter] + 1\n    end\n    \n    return\
    \ histogram\nend", "    histogram = Dict{String, Int64}()\n    \n    for i in\
    \ split(test)\n        histogram[i] = histogram[i] + 1 if histogram[i] < 1 else\
    \ 1\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<text>\nExercise\nWrite a function\
    \ that takes a string and returns the number of spaces before the given character.\n\
    For example, if the string is \"a b c a b c a b c a b c a b c\", and the character\
    \ is \"a\", then the function should return 3.", "    histogram = Dict{String,\
    \ Int64}()\n    for c in test\n        histogram[c] = histogram.get(c, 0) + 1\n\
    \    end\n    return histogram\nend\n</cell>\n<code language=julia-1.4>\nhistogram(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n", "    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abracadabra\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns the number of characters in the string that are not\
    \ letters.", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in test\n        histogram[letter] = get(histogram, letter, 0) + 1\n    end\n\
    \    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"ab", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in test\n        histogram[letter] = histogram[letter] + 1\n    end\n    \n\
    \    return histogram\nend", "    \n    histogram = Dict{String, Int64}()\n  \
    \  \n    for letter in test\n        histogram[letter] = get(histogram, letter,\
    \ 0) + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"ab", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in test\n        histogram[letter] = get(histogram, letter, 0) + 1\n    end\n\
    \    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c ", "    histogram = Dict{String,\
    \ Int64}()\n    letters = split(test)\n    for letter in letters\n        histogram[letter]\
    \ = get(histogram, letter, 0) + 1\n    end\n    return histogram\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=", "    \n    letters = split(test)\n\
    \    \n    counts = Dict{String, Int64}()\n    \n    for letter in letters\n \
    \       counts[letter] = get(counts, letter, 0) + 1\n    end\n    \n    return\
    \ counts\nend", "    histogram = Dict{String, Int64}()\n    for letter in test\n\
    \        histogram[letter] = get(histogram, letter, 0) + 1\n    end\n    histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n", "    counts\
    \ = Dict{String, Int64}()\n    for c in test\n        counts[c] = get(counts,\
    \ c, 0) + 1\n    end\n    \n    return counts\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t ", "    histogram = Dict{String, Int64}()\n    \n\
    \    for letter in test\n        histogram[letter] = histogram[letter] + 1\n \
    \   end\n    \n    return histogram\nend", "    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")", "    \n    histogram = Dict{String, Int64}()\n  \
    \  \n    for char in test\n        histogram[char] = histogram[char] ? histogram[char]\
    \ + 1 : 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b ", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in test\n        histogram[letter] = histogram[letter] + 1\n    end\n    \n\
    \    return histogram\nend", "    histogram = Dict{String, Int64}()\n    letters\
    \ = split(test)\n    for letter in letters\n        histogram[letter] = histogram[letter]\
    \ ? histogram[letter] + 1 : 1\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a ", "    \n    letters = split(test)\n    \n    counts = Dict{String, Int64}()\n\
    \    \n    for letter in letters\n        counts[letter] = get(counts, letter,\
    \ 0) + 1\n    end\n    \n    return counts\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a ", "    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in test\n        histogram[letter] = histogram[letter] + 1\n    end\n    \n\
    \    return histogram\nend", "    histogram = Dict{String, Int64}()\n    for letter\
    \ in test\n        histogram[letter] = histogram[letter] + 1 if histogram[letter]\
    \ > 0 else 1\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.3>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abracadab", "    histogram = Dict{String, Int64}()\n    \n    for\
    \ i in split(test)\n        histogram[i] = histogram[i] + 1 \n    end\n    \n\
    \    return histogram\nend", "    histogram = Dict{String, Int64}()\n    \n  \
    \  for letter in test\n        histogram[letter] = histogram[letter] + 1\n   \
    \ end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")", "    histogram = Dict{String, Int64}()\n    for letter\
    \ in test\n        histogram[letter] = histogram[letter] + 1\n    end\n    histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>", " \
    \   histogram = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend", "    counts\
    \ = Dict{String, Int64}()\n    for c in test\n        counts[c] = get(counts,\
    \ c, 0) + 1\n    end\n    \n    counts\nend", "    histogram = Dict{String, Int64}()\n\
    \    for c in test\n        histogram[c] = get(histogram, c, 0) + 1\n    end\n\
    \    histogram\nend", "    histogram = Dict{String, Int64}()\n    for c in test\n\
    \        histogram[c] = histogram.get(c, 0) + 1\n    end\n    histogram\nend",
  "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n   \
    \     histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end", "    histogram = Dict{String, Int64}()\n    letters = split(test)\n    \n\
    \    for letter in letters\n        histogram[letter] = histogram[letter] + 1\n\
    \    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b ", "    histogram = Dict{String, Int64}()\n    letters\
    \ = split(test)\n    for letter in letters\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.0>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c ", "    histogram = Dict{String, Int64}()\n    letters =\
    \ split(test)\n    for letter in letters\n        histogram[letter] = get(histogram,\
    \ letter, 0) + 1\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c ", "    histogram = Dict{String, Int64}()\n    letters\
    \ = split(test)\n    for letter in letters\n        histogram[letter] = histogram[letter]\
    \ + 1 if histogram[letter] >= 1 else 1\n    end\n    histogram\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c ", "    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in split(test)\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a ", "    histogram = Dict{String, Int64}()\n    letters = split(test)\n\
    \    for letter in letters\n        histogram[letter] = histogram[letter] + 1\
    \ if letter in histogram else 1\n    end\n    return histogram\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>", "    histogram = Dict{String, Int64}()\n    for\
    \ c in test\n        histogram[c] = histogram.get(c, 0) + 1\n    end\n    histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b ", " \
    \   histogram = Dict{String, Int64}()\n    letters = split(test)\n    for letter\
    \ in letters\n        histogram[letter] = get(histogram, letter, 0) + 1\n    end\n\
    \    return histogram\nend", "    \n    histogram = Dict{String, Int64}()\n  \
    \  \n    for letter in test\n        histogram[letter] = histogram[letter] + 1\n\
    \    end\n    \n    return histogram\nend", "    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")", "    histogram = Dict{String, Int64}()\n    \n  \
    \  for char in test\n        histogram[char] = histogram[char] + 1\n    end\n\
    \    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n", "    histogram = Dict{String, Int64}()\n    \n\
    \    for letter in test\n        histogram[letter] = histogram[letter] + 1\n \
    \   end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")", "    histogram = Dict{String, Int64}()\n    \n  \
    \  for letter in test\n        histogram[letter] = histogram[letter] + 1\n   \
    \ end\n    \n    return histogram\nend", "    counts = Dict{String, Int64}()\n\
    \    for c in test\n        counts[c] = get(counts, c, 0) + 1\n    end\n    \n\
    \    maximum = max(counts.values)\n    \n    counts = Dict{String, Int64}()\n\
    \    for c in test\n        counts[c] = get(counts, c, 0) + 1\n    end\n    \n\
    \    minimum = min(counts.values)\n    \n    counts = Dict{String, Int64}()\n\
    \    for c in test\n        counts[c] = get(counts, c, 0) + 1\n    end\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c ", "    \n    histogram = Dict{String, Int64}()\n    \n\
    \    for letter in test\n        histogram[letter] = histogram[letter] + 1\n \
    \   end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadab", "    \n    histogram = Dict{String, Int64}()\n    \n \
    \   for letter in test\n        histogram[letter] = histogram[letter] + 1\n  \
    \  end\n    \n    return histogram\nend", "    \n    letters = split(test)\n \
    \   \n    histogram = Dict{String, Int64}()\n    \n    for letter in letters\n\
    \        histogram[letter] = get(histogram, letter, 0) + 1\n    end\n    \n  \
    \  return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b ", "    \n    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in split(test)\n        histogram[letter]\
    \ = get(histogram, letter, 0) + 1\n    end\n    \n    return histogram\nend\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"", "    histogram = Dict{String,\
    \ Int64}()\n    letters = split(test)\n    for letter in letters\n        histogram[letter]\
    \ = get(histogram, letter, 0) + 1\n    end\n    return histogram\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"ab", "    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend", "    histogram = Dict{String,\
    \ Int64}()\n    letters = split(test)\n    for letter in letters\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    return histogram\nend", "    \n    histogram\
    \ = Dict{String, Int64}()\n    \n    for i in split(test)\n        histogram[i]\
    \ = histogram[i] + 1 \n    end\n    \n    return histogram\nend", "    histogram\
    \ = Dict{String, Int64}()\n    for letter in test\n        histogram[letter] =\
    \ histogram[letter] + 1 if letter in histogram else 1\n    end\n    return histogram\n\
    end", "    histogram = Dict{String, Int64}()\n    \n    for letter in test\n \
    \       histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")", "    \n  \
    \  histogram = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend", "    \n\
    \    histogram = Dict{String, Int64}()\n    \n    for letter in test\n       \
    \ histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end", "    histogram = Dict{String, Int64}()\n    \n    for letter in test\n \
    \       histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end", "    \n    letters = split(test)\n    \n    letters_count = Dict{String,\
    \ Int64}()\n    \n    for letter in letters\n        letters_count[letter] = get(letters_count,\
    \ letter, 0) + 1\n    end\n    \n    return letters_count\nend", "    \n    letters\
    \ = split(test)\n    \n    counts = Dict{String, Int64}()\n    \n    for letter\
    \ in letters\n        counts[letter] = get(counts, letter, 0) + 1\n    end\n \
    \   \n    return counts\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c ", "    \n   \
    \ letters = split(test)\n    counts = Dict{String, Int64}()\n    for letter in\
    \ letters\n        counts[letter] = get(counts, letter, 0) + 1\n    \n    return\
    \ counts\nend\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b c a b c a b\
    \ c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b c a b c a b\
    \ c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b c a b\
    \ c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b\
    \ c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    a b c a b c a b c a b ", "    \n    histogram = Dict{String, Int64}()\n    \n\
    \    for letter in test\n        histogram[letter] = histogram[letter] + 1\n \
    \   end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadab", "    histogram = Dict{String, Int64}()\n    for letter\
    \ in test\n        histogram[letter] = get(histogram, letter, 0) + 1\n    end\n\
    \    histogram\nend", "    counts = Dict{String, Int64}()\n    for letter in test\n\
    \        counts[letter] = get(counts, letter, 0) + 1\n    end\n    counts\nend\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns the number of characters in the string that are not\
    \ letters.", "    histogram = Dict{String, Int64}()\n    \n    for letter in test\n\
    \        histogram[letter] = histogram[letter] + 1\n    end\n    \n    return\
    \ histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v ", "    \n    letters = split(test)\n    counts = Dict{String, Int64}()\n\
    \    for letter in letters\n        counts[letter] = get(counts, letter, 0) +\
    \ 1\n    end\n    return counts\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a\
    \ b c a b c ", "    \n    letters = split(test)\n    \n    counts = Dict{String,\
    \ Int64}()\n    \n    for letter in letters\n        counts[letter] = get(counts,\
    \ letter, 0) + 1\n    end\n    \n    return counts\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"",
  "    histogram = Dict{String, Int64}()\n    for c in test\n        histogram[c]\
    \ = histogram.get(c, 0) + 1\n    end\n    return histogram\nend", "    \n    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t ", "    \n    histogram =\
    \ Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = get(histogram, letter, 0) + 1\n    end\n    \n    return histogram\nend\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.4>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abba\")\n</cell>\n<code language=", "    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")", "    \n    histogram = Dict{String, Int64}()\n  \
    \  \n    for letter in test\n        histogram[letter] = histogram[letter] + 1\n\
    \    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = get(histogram,\
    \ letter, 0) + 1\n    end\n    \n    return histogram\nend", "    \n    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = get(histogram, letter, 0) + 1\n    end\n    \n    return histogram\nend",
  "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n   \
    \     histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n\
    \        histogram[letter] = histogram[letter] + 1\n    end\n    \n    return\
    \ histogram\nend", "    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in test\n        histogram[letter] = get(histogram, letter, 0) + 1\n    end\n\
    \    \n    return histogram\nend", "    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadab", "    histogram = Dict{String, Int64}()\n    letters =\
    \ split(test)\n    for letter in letters\n        histogram[letter] = histogram[letter]\
    \ + 1 if histogram[letter] == 0\n    end\n    return histogram\nend", "    \n\
    \    histogram = Dict{String, Int64}()\n    \n    for letter in test\n       \
    \ histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end", "    histogram = Dict{String, Int64}()\n    \n    for char in test\n   \
    \     histogram[char] = histogram[char] + 1\n    end\n    \n    return histogram\n\
    end", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n\
    \        histogram[letter] = histogram[letter] + 1\n    end\n    \n    return\
    \ histogram\nend", "    \n    histogram = Dict{String, Int64}()\n    \n    for\
    \ c in test\n        histogram[c] = histogram[c] + 1\n    end\n    \n    return\
    \ histogram\nend", "    \n    letters = split(test)\n    \n    counts = Dict{String,\
    \ Int64}()\n    \n    for letter in letters\n        counts[letter] = get(counts,\
    \ letter, 0) + 1\n    end\n    \n    return counts\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"",
  "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n   \
    \     histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadab", "    \n    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadab", "    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadab", "    \n    histogram = Dict{String, Int64}()\n    \n \
    \   for i in split(test)\n        histogram[i] = histogram[i] + 1 \n        \n\
    \    \n    return histogram\n    \nend", "    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = histogram[letter] +\
    \ 1\n    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in test\n        histogram[letter] = get(histogram,\
    \ letter, 0) + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"ab", "    histogram = Dict{String, Int64}()\n    letters = split(test)\n\
    \    for letter in letters\n        histogram[letter] = histogram[letter] + 1\n\
    \    end\n    return histogram\nend\n</cell>\n<code language=julia-1.0>\nhistogram(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abracadab", "    \n    histogram = Dict{String, Int64}()\n    \n \
    \   for c in test\n        histogram[c] = histogram.get(c, 0) + 1\n    end\n \
    \   \n    return histogram\nend", "    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = get(histogram, letter,\
    \ 0) + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"ab", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in test\n        histogram[letter] = get(histogram, letter, 0) + 1\n    end\n\
    \    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"ab", "    histogram = Dict{String, Int64}()\n    letters = split(test)\n\
    \    for letter in letters\n        histogram[letter] = histogram[letter] + 1\n\
    \    end\n    histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadab", "    \n    letters = split(test)\n    \n    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in letters\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b ", "    histogram = Dict{String, Int64}()\n    \n\
    \    for letter in test\n        histogram[letter] = histogram[letter] + 1\n \
    \   end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")", "    \n    histogram = Dict{String, Int64}()\n  \
    \  \n    for letter in test\n        histogram[letter] = histogram[letter] + 1\n\
    \    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns a string\
    \ with the first letter of each word capitalized.", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for char in test\n        histogram[char] = histogram[char]\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u ", "    histogram = Dict{String, Int64}()\n  \
    \  \n    for letter in test\n        histogram[letter] = histogram[letter] + 1\n\
    \    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c ", "    \n    histogram = Dict{String, Int64}()\n    \n\
    \    for letter in test\n        histogram[letter] = get(histogram, letter, 0)\
    \ + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a ", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter\
    \ in test\n        histogram[letter] = histogram[letter] + 1\n    end\n    \n\
    \    return histogram\nend", "    \n    histogram = Dict{String, Int64}()\n  \
    \  \n    for letter in test\n        histogram[letter] = histogram[letter] + 1\n\
    \    end\n    \n    return histogram\nend", "    histogram = Dict{String, Int64}()\n\
    \    for c in test\n        histogram[c] = histogram[c] ? histogram[c] + 1 : 1\n\
    \    end\n    histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b ", "    counts = Dict{String, Int64}()\n    for c in test\n  \
    \      counts[c] = get(counts, c, 0) + 1\n    \n    return counts\nend", "   \
    \ \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n    \
    \    histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5", "    histogram = Dict{String,\
    \ Int64}()\n    \n    for c in test\n        histogram[c] = histogram.get(c, 0)\
    \ + 1\n    end\n    \n    return histogram\nend", "    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for c in test\n        histogram[c] = histogram.get(c, 0)\
    \ + 1\n    end\n    \n    return histogram\nend", "    histogram = Dict{String,\
    \ Int64}()\n    for letter in test\n        histogram[letter] = get(histogram,\
    \ letter, 0) + 1\n    end\n    return histogram\nend", "    \n    histogram =\
    \ Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = get(histogram, letter, 0) + 1\n    end\n    \n    return histogram\nend",
  "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n   \
    \     histogram[letter] = histogram[letter] + 1\n    end\n    \n    return histogram\n\
    end\n</cell>\n<code language=julia-1.5>\nhistogram(\"a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a ", "    histogram\
    \ = Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend\n</cell>\n\
    <code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.4>\nhistogram(\"abracadabra\")", "    histogram = Dict{String,\
    \ Int64}()\n    for c in test\n        histogram[c] = histogram.get(c, 0) + 1\n\
    \    end\n    histogram\nend", "    \n    histogram = Dict{String, Int64}()\n\
    \    \n    for letter in test\n        histogram[letter] = get(histogram, letter,\
    \ 0) + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=", "    histogram = Dict{String, Int64}()\n    \n    for\
    \ i in split(test)\n        histogram[i] = histogram[i] + 1 \n    end\n    \n\
    \    return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a ", "    \n    histogram = Dict{String, Int64}()\n    \n  \
    \  for letter in split(test)\n        histogram[letter] = get(histogram, letter,\
    \ 0) + 1\n    end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of words in the string. \nThe function should ignore all punctuation and only\
    \ count the letters a-z.", "    \n    histogram = Dict{String, Int64}()\n    \n\
    \    for letter in test\n        histogram[letter] = histogram[letter] + 1\n \
    \   end\n    \n    return histogram\nend\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a ", "    \n    histogram = Dict{String, Int64}()\n    \n  \
    \  for c in test\n        histogram[c] = histogram[c] + 1\n    end\n    \n   \
    \ return histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abracadabra\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abracadabra\"\
    )\n", "    \n    histogram = Dict{String, Int64}()\n    \n    for letter in test\n\
    \        histogram[letter] = histogram[letter] + 1\n    end\n    \n    return\
    \ histogram\nend", "    \n    letters = split(test)\n    \n    histogram = Dict{String,\
    \ Int64}()\n    \n    for letter in letters\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    \n    return histogram\nend", "    histogram = Dict{String,\
    \ Int64}()\n    for c in test\n        histogram[c] = histogram.get(c, 0) + 1\n\
    \    end\n    histogram\nend\n</cell>\n<code language=julia-1.3>\nhistogram(\"\
    abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code\
    \ language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.3>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.3>\nhistogram(\"abba\")", "    histogram = Dict{String,\
    \ Int64}()\n    for letter in test\n        histogram[letter] = histogram[letter]\
    \ + 1\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.5>\nhistogram(\"\
    abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code\
    \ language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba", "    \n    histogram =\
    \ Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend\n</cell>\n\
    <code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.5>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.5>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.5", "    histogram = Dict{String,\
    \ Int64}()\n    for c in test\n        histogram[c] = histogram[c] ? histogram[c]\
    \ + 1 : 1\n    end\n    return histogram\nend\n\"\"\"\n    \n    \n\"\"\"\n  \
    \  \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n    \n    \n    \n\"\"\"\n\
    \    \n    \n    \n\"\"\"\n    \n    \n", "    histogram = Dict{String, Int64}()\n\
    \    for c in test\n        histogram[c] = get(histogram, c, 0) + 1\n    end\n\
    \    histogram\nend\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b c a b\
    \ c a b c a b c\")\n</cell>\n<code language=julia-1.3>\nhistogram(\"a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c ", "    \n    letters = split(test)\n  \
    \  \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n\
    \    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters\
    \ = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n\
    \    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n\
    \    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters\
    \ = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n\
    \    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n\
    \    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters\
    \ = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n\
    \    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n\
    \    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters\
    \ = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n\
    \    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n\
    \    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters\
    \ = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n\
    \    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n\
    \    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters\
    \ = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n\
    \    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n\
    \    letters = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters\
    \ = letters[2:end]\n    \n    letters = letters[2:end]\n    \n    letters = letters[2:end]\n\
    \    \n    letters = letters[2:end]\n    \n    letter", "    \n    histogram =\
    \ Dict{String, Int64}()\n    \n    for letter in test\n        histogram[letter]\
    \ = histogram[letter] + 1\n    end\n    \n    return histogram\nend\n</cell>\n\
    <code language=julia-1.4>\nhistogram(\"abracadabra\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns the number of times each\
    \ letter appears in the string.", "    histogram = Dict{String, Int64}()\n   \
    \ for letter in test\n        histogram[letter] = get(histogram, letter, 0) +\
    \ 1\n    end\n    histogram\nend\n</cell>\n<code language=julia-1.0>\nhistogram(\"\
    abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code\
    \ language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n</cell>\n<code language=julia-1.0>\n\
    histogram(\"abba\")\n</cell>\n<code language=julia-1.0>\nhistogram(\"abba\")\n\
    </cell>\n<code language=julia-1.0>\nhistogram"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

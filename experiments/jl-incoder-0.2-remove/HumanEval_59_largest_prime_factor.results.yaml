language: jl
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n < 2 \n        return n\n    \n    factors = prime_factors(n)\n\
    \    \n    if length(factors) == 1 \n        return factors[1]\n    \n    largest\
    \ = factors[1]\n    \n    for i in 2:length(factors) \n        if factors[i] >\
    \ largest \n            largest = factors[i]\n        end\n    end\n    \n   \
    \ return largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzm6gqtoi.jl:23\nin expression starting at\
    \ /tmp/tmpzm6gqtoi.jl:23\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        local i::Int64 = 1\n\
    \        local j::Int64 = 2\n        while i <= n \n            do \n        \
    \        local k::Int64 = i\n                while k % j == 0 \n             \
    \       do \n                        k = k + 1\n                    end\n    \
    \            if k % j == 0 \n                    then return j\n             \
    \   end\n                j = j + 1\n            end\n            i = i + 1\n \
    \       end\n        return n\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(10^6)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^7)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^8)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^9)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^10)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^11)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^12)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^13)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^14)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^15)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^16)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^17)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^18)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^19)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^20)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(10^21)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^22)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^23)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^24)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_4lr9_b0.jl:5\nin expression starting at /tmp/tmp_4lr9_b0.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor = 1\n    \n    if n % 2 == 0 \n        largest_prime_factor\
    \ = 2\n    \n    for p in prime_factors(n)\n        if p > largest_prime_factor\n\
    \            largest_prime_factor = p\n            \n    return largest_prime_factor\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns all prime factors of\
    \ a given number. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ all prime factors of a given number. Assume n > 1 and is not a prime.\nWrite\
    \ a function that returns all prime factors of a given number. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns all prime factors of a given\
    \ number. Assume n > 1 and is not a prime.\nWrite a function that returns all\
    \ prime factors of a given number. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns all prime factors of a given number. Assume n > 1 and is not a\
    \ prime.\nWrite a function that returns all prime factors of a given number. Assume\
    \ n > 1 and is not a prime.\nWrite a function that returns all prime factors of\
    \ a given number. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ all prime factors of a given number. Assume n > 1 and is not a prime.\nWrite\
    \ a function that returns all prime factors of a given number. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns all prime factors of a given\
    \ number. Assume n > 1 and is not a prime.\nWrite a function that returns all\
    \ prime factors of a given number. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns all prime factors of a given number. Assume n > 1 and is not a\
    \ prime.\nWrite a function that returns all prime factors of a given number. Assume\
    \ n > 1 and is not a prime.\nWrite a function that returns all prime factors of\
    \ a given number. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ all prime factors of a given number. Assume n > 1 and is not a prime.\nWrite\
    \ a function that returns all prime factors of a given number. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns all prime factors of a given\
    \ number. Assume n > 1 and is not a prime.\nWrite a function that returns all\
    \ prime factors of a given number. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns all prime factors of a given number. Assume n > 1 and is not a\
    \ prime.\nWrite a function that returns all prime factors of a given number. Assume\
    \ n > 1 and is not a prime.\nWrite a function that returns all prime factors of\
    \ a given number. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ all prime factors of a given number. Assume n > 1 and is not a prime.\nWrite\
    \ a function that returns all prime factor\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoqxwvcvj.jl:16\nin expression starting at\
    \ /tmp/tmpoqxwvcvj.jl:16\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n      \
    \  then return 2\n    else \n        p := largest_prime_factor(n / 2)\n      \
    \  if n % p == 0 \n            then return p\n        else \n            p :=\
    \ largest_prime_factor(n / p)\n            if n % p == 0 \n                then\
    \ return p\n            else \n                return n\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpev8nsayr.jl:6\nin expression starting at /tmp/tmpev8nsayr.jl:6\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := largest_prime_factor(n / 2)\n        if n\
    \ % p == 0 \n            then return p\n        else return n\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(101)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\nHint: You may want to use the largest_prime_factor function\
    \ you wrote earlier.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpet1g0jyn.jl:5\nin expression starting at /tmp/tmpet1g0jyn.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := largest_prime_factor(n / 2)\n        if n\
    \ % p == 0 \n            then return p\n        else return n\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the smallest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the smallest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the smallest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of \nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwsqad33x.jl:5\nin expression starting at /tmp/tmpwsqad33x.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := 3\n        while p < n \n            do if\
    \ n % p == 0 \n                then return p\n            p := p + 2\n       \
    \ end\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ factors of a given number. Assume n > 1 and is not a prime.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6upg_cae.jl:5\nin expression starting at /tmp/tmp6upg_cae.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 115 == 0 \n        then return 115\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 143 == 0 \n     \
    \   then return 143\n    else if n % 149 == 0 \n        then return 149\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 163 == 0 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt6lf659l.jl:5\nin expression starting at /tmp/tmpt6lf659l.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 139 == 0 \n        then return 139\n    else if n % 143 == 0 \n     \
    \   then return 143\n    else if n % 147 == 0 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxpczxs14.jl:5\nin expression starting at /tmp/tmpxpczxs14.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest <- largest_prime_factor(n / 2)\n      \
    \  if n % largest == 0 \n            then return largest\n        else return\
    \ largest * largest\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the product of all prime factors of n. Assume n > 1 and is not\
    \ a prime.\nWrite a function that returns the sum of all prime factors of n. Assume\
    \ n > 1 and is not a prime.\nWrite a function that returns the product of all\
    \ prime factors of n. Assume n > 1 and is not a prime.\nWrite a function that\
    \ returns the sum of all prime factors of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the product of all prime factors of n. Assume n\
    \ > 1 and is not a prime.\nWrite a function that returns the sum of all prime\
    \ factors of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the product of all prime factors of n. Assume n > 1 and is not a prime.\nWrite\
    \ a function that returns the sum of all prime factors of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the product of all prime factors\
    \ of n. Assume n > 1 and is not a prime.\nWrite a function that returns the sum\
    \ of all prime factors of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the product of all prime factors of n. Assume n > 1 and is not\
    \ a prime.\nWrite a function that returns the sum of all prime factors of n. Assume\
    \ n > 1 and is not a prime.\nWrite a function that returns the product of all\
    \ prime factors of n. Assume n > 1 and is not a prime.\nWrite a function that\
    \ returns the sum of all prime factors of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the product of all prime factors of n. Assume n\
    \ > 1 and is not a prime.\nWrite a function that returns the sum of all prime\
    \ factors of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the product of all prime factors of n. Assume n > 1 and is not a prime.\nWrite\
    \ a function that returns the sum of all prime factors of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the product of all prime factors\
    \ of n. Assume n > 1 and is not a prime.\nWrite a function that returns the sum\
    \ of all prime factors of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the product of all prime factors of n. Assume n > 1 and is not\
    \ a prime.\nWrite a function that returns the sum of all prime factors of n. Assume\
    \ n > 1 and is not a \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq2pbva5y.jl:5\nin expression starting at /tmp/tmpq2pbva5y.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor::Int64 = 1\n    \n    for factor in 2..n \n  \
    \      if n % factor == 0 \n            largest_prime_factor = factor \n     \
    \       break\n            \n    return largest_prime_factor\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmvwdbixd.jl:14\nin expression starting at\
    \ /tmp/tmpmvwdbixd.jl:14\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n      \
    \  then return 2\n    else \n        p := 3\n        i := 2\n        while i *\
    \ i <= n \n            do if n % i == 0 \n                then return i\n    \
    \            p := p + 1\n                i := i + 2\n        return n\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n</cell>\n\
    <code language=juli\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8dyur926.jl:6\nin expression starting at /tmp/tmp8dyur926.jl:6\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2_wgnkm2.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2_wgnkm2.jl:15\n  Test threw exception\n\
    \  Expression: candidate(15) == 5\n  MethodError: no method matching largest_prime_factor(::Float64)\n\
    \  Closest candidates are:\n    largest_prime_factor(!Matched::Int64) at /tmp/tmp2_wgnkm2.jl:3\n\
    \  Stacktrace:\n   [1] largest_prime_factor(n::Int64)\n     @ Main /tmp/tmp2_wgnkm2.jl:7\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2_wgnkm2.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2_wgnkm2.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2_wgnkm2.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(27) == 3\n  MethodError: no method matching largest_prime_factor(::Float64)\n\
    \  Closest candidates are:\n    largest_prime_factor(!Matched::Int64) at /tmp/tmp2_wgnkm2.jl:3\n\
    \  Stacktrace:\n   [1] largest_prime_factor(n::Int64)\n     @ Main /tmp/tmp2_wgnkm2.jl:7\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2_wgnkm2.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2_wgnkm2.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2_wgnkm2.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(63) == 7\n  MethodError: no method matching largest_prime_factor(::Float64)\n\
    \  Closest candidates are:\n    largest_prime_factor(!Matched::Int64) at /tmp/tmp2_wgnkm2.jl:3\n\
    \  Stacktrace:\n   [1] largest_prime_factor(n::Int64)\n     @ Main /tmp/tmp2_wgnkm2.jl:7\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2_wgnkm2.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tm"
  timestamp: 1659805585
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    else if n % 2 == 0 \n        return 2\n\
    \    else if n % 3 == 0 \n        return 3\n    else if n % 5 == 0 \n        return\
    \ 5\n    else if n % 7 == 0 \n        return 7\n    else if n % 11 == 0 \n   \
    \     return 11\n    else if n % 13 == 0 \n        return 13\n    else if n %\
    \ 17 == 0 \n        return 17\n    else if n % 19 == 0 \n        return 19\n \
    \   else if n % 23 == 0 \n        return 23\n    else if n % 29 == 0 \n      \
    \  return 29\n    else if n % 31 == 0 \n        return 31\n    else if n % 37\
    \ == 0 \n        return 37\n    else if n % 41 == 0 \n        return 41\n    else\
    \ if n % 43 == 0 \n        return 43\n    else if n % 47 == 0 \n        return\
    \ 47\n    else if n % 53 == 0 \n        return 53\n    else if n % 59 == 0 \n\
    \        return 59\n    else if n % 61 == 0 \n        return 61\n    else if n\
    \ % 67 == 0 \n        return 67\n    else if n % 71 == 0 \n        return 71\n\
    \    else if n % 73 == 0 \n        return 73\n    else if n % 79 == 0 \n     \
    \   return 79\n    else if n % 83 == 0 \n        return 83\n    else if n % 89\
    \ == 0 \n        return 89\n    else if n % 97 == 0 \n        return 97\n    else\
    \ if n % 101 == 0 \n        return 101\n    else if n % 103 == 0 \n        return\
    \ 103\n    else if n % 107 == 0 \n        return 107\n    else if n % 111 == 0\
    \ \n        return 111\n    else if n % 117 == 0 \n        return 117\n    else\
    \ if n % 121 == 0 \n        return 121\n    else if n % 127 == 0 \n        return\
    \ 127\n    else if n % 131 == 0 \n        return 131\n    else if n % 137 == 0\
    \ \n        return 137\n    else if n % 141 == 0 \n        return 141\n    else\
    \ if n % 147 == 0 \n        return 147\n    else if n % 151 == 0 \n        return\
    \ 151\n    else if n % 157 == 0 \n        return 157\n    else if n % 161 == 0\
    \ \n        return 161\n    else if n % 167 == 0 \n        return 167\n    else\
    \ if n % 173 == 0 \n        return 173\n    else if n % 179 == 0 \n        return\
    \ 179\n    else if n % 183 == 0 \n        return 183\n    else if n % 191 == 0\
    \ \n        return 191\n    else if n % 197 == 0 \n        return 197\n    else\
    \ if n % \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd0bwyopm.jl:6\nin expression starting at /tmp/tmpd0bwyopm.jl:6\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    else if n == 2 \n        return 2\n    else\
    \ if n % 2 == 0 \n        return largest_prime_factor(n/2)\n    else \n      \
    \  return largest_prime_factor(3*n+1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\nHint:\
    \ Use a recursive function and memoization.\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppahz63l3.jl:6\nin expression starting at /tmp/tmppahz63l3.jl:6\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return 1\n    else if n == 2 \n        then return\
    \ 2\n    else \n        local i = 3\n        local prime_factor = 1\n        while\
    \ i <= sqrt(n) \n            do if n % i == 0 \n                then return i\n\
    \                else prime_factor = i\n            end\n            i = i + 2\n\
    \        end\n        return prime_factor\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(210)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(210)\n</cell>\n<code language=juli\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpded9jl1j.jl:5\nin expression starting at /tmp/tmpded9jl1j.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n  \
    \  end\nend\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the nth Fibonacci number. Assume\
    \ n > 0.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfc833sqr.jl:10\nin expression starting at\
    \ /tmp/tmpfc833sqr.jl:10\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    \n    largest = 2\n    \n    for p in prime_factors(n)\
    \ \n        if p > largest \n            largest = p\n    \n    return largest\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 3\nWrite a function prime_factors_iter that returns an iterator\
    \ over prime factors of n.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyg9q9o7n.jl:15\nin expression starting at\
    \ /tmp/tmpyg9q9o7n.jl:15\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1 \n    else if n % 2 == 0 \n        then\
    \ return n \n    else \n        largest_prime_factor(n / 2) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqqszyoyu.jl:5\nin expression starting at /tmp/tmpqqszyoyu.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n < 2 \n        return n\n    \n    largest_prime_factor = 2 \n\
    \    \n    for factor in prime_factors(n) \n        if factor > largest_prime_factor\
    \ \n            largest_prime_factor = factor \n    \n    return largest_prime_factor\
    \ \nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ongw61l.jl:16\nin expression starting at\
    \ /tmp/tmp2ongw61l.jl:16\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0iwjnkkq.jl:5\nin expression starting at /tmp/tmp0iwjnkkq.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n % 2 == 0 \n        then return\
    \ largest_prime_factor(n / 2)\n    else \n        largest = 2\n        for p in\
    \ prime_factors(n) \n            if p > largest \n                then largest\
    \ = p\n        return largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ factors of a given number. Assume n > 1 and is not a prime.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpimjwda_o.jl:5\nin expression starting at /tmp/tmpimjwda_o.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1 \n    else \n        largest = 2 \n   \
    \     while largest < n \n            do \n                largest = largest +\
    \ 1 \n            until largest % largest == 0 \n        return largest \nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9ttm09ko.jl:5\nin expression starting at /tmp/tmp9ttm09ko.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else \n        largest = 1\n     \
    \   for p in prime_factors(n) \n            if p > largest \n                then\
    \ largest = p\n        return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(1_000_000)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that returns the first n prime factors of n.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr9rdxbz2.jl:5\nin expression starting at /tmp/tmpr9rdxbz2.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1 \n    else \n        p <- prime_factors(n)\
    \ \n        if length(p) == 1 \n            then return p[1] \n        else \n\
    \            p <- p[p[1] < p[2]] \n            if length(p) == 1 \n          \
    \      then return p[1] \n            else \n                p <- p[p[1] < p[2]]\
    \ \n                if length(p) == 1 \n                    then return p[1] \n\
    \                else \n                    p <- p[p[1] < p[2]] \n           \
    \         if length(p) == 1 \n                        then return p[1] \n    \
    \                else \n                        p <- p[p[1] < p[2]] \n       \
    \                 if length(p) == 1 \n                            then return\
    \ p[1] \n                        else \n                            p <- p[p[1]\
    \ < p[2]] \n                            if length(p) == 1 \n                 \
    \               then return p[1] \n                            else \n       \
    \                         p <- p[p[1] < p[2]] \n                             \
    \   if length(p) == 1 \n                                    then return p[1] \n\
    \                                else \n                                    p\
    \ <- p[p[1] < p[2]] \n                                    if length(p) == 1 \n\
    \                                        then return p[1] \n                 \
    \                   else \n                                        p <- p[p[1]\
    \ < p[2]] \n                                        if length(p) == 1 \n     \
    \                                       then return p[1] \n                  \
    \                      else \n                                            p <-\
    \ p[p[1] < p[2]] \n                                            if length(p) ==\
    \ 1 \n                                                then return p[1] \n    \
    \                                        else \n                             \
    \                   p <- p[p[1] < p[2]] \n                                   \
    \             if length(p) == 1 \n                                           \
    \         then return p[1] \n                                                else\
    \ \n                                                    p <- p[p[1] < p[2]] \n\
    \                                                    if length(p) == 1 \n    \
    \                                                    then return p[1] \n     \
    \                                               else \n                      \
    \                                  p <- p[p[1] < p[2]] \n                    \
    \                                    if length(p) == 1 \n                    \
    \                                        then return p[1] \n                 \
    \                                       else \n                              \
    \                              p <- p[p[1] < p[2]] \n                        \
    \                                        if length(p) == 1 \n                \
    \                                                    then return p[1] \n     \
    \                                                           else \n          \
    \                                                          p <- p[p[1] < p[2]]\
    \ \n                                                                    if length(p)\
    \ == 1 \n                                                                    \
    \    then return p[1] \n                                                     \
    \               else \n                                                      \
    \                  p <- p[p[1] < p[2]] \n                                    \
    \                                        if length(p) == 1 \n                \
    \                                                                then return p[1]\
    \ \n                                                                         \
    \   else \n                                                                  \
    \              p <- p[p[1] < p[2]] \n                                        \
    \                                        if length(p) == 1 \n                \
    \                                                                    then return\
    \ p[1] \n                                                                    \
    \            else \n                                                         \
    \                           p <- p[p[1] < p[2]] \n                           \
    \                                                         if length(p) == 1 \n\
    \                                                                            \
    \            then return p[1] \n                                             \
    \                                       else \n                              \
    \                                                          p <- p[p[1] < p[2]]\
    \ \n                                                                         \
    \               if \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3u4_3llu.jl:5\nin expression starting at /tmp/tmp3u4_3llu.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    \n    p :: Int64 = 2 \n    \n    while p\
    \ <= n \n        p :: Int64 = p \n        \n        while p <= n \n          \
    \  if n % p == 0 \n                return p \n            p :: Int64 = p \n  \
    \      end\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkc3_nk0t.jl:19\nin expression starting at\
    \ /tmp/tmpkc3_nk0t.jl:19\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest = 2\n        for p in prime_factors(n)\
    \ \n            if p > largest \n                then largest = p\n        return\
    \ largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the first n prime factors\
    \ of n.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9xzjxbuj.jl:5\nin expression starting at /tmp/tmp9xzjxbuj.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else \n        local i::Int64 = 1\n        local factor::Int64 = 1\n\
    \        while i <= n \n            do if n % i == 0 \n                then factor\
    \ = i\n                else\n                    factor = i\n                \
    \    i = i + 1\n                end\n            end\n        return factor\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnkwpod9s.jl:5\nin expression starting at /tmp/tmpnkwpod9s.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        largest_prime_factor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the greatest common\
    \ divisor (GCD) of two positive integers. Assume that both integers are positive.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9k0bf5kk.jl:5\nin expression starting at /tmp/tmp9k0bf5kk.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of prime factors\
    \ of n. Assume n > 1 and is not a prime.\nHint: use the function largest_prime_factor(n::Int64)::Int64\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2_oui5jb.jl:9\nin expression starting at /tmp/tmp2_oui5jb.jl:9\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := largest_prime_factor(n / 2)\n        if n\
    \ % p == 0 \n            then return p\n        else return n\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the greatest common divisor of two numbers.\
    \ Assume that both numbers are positive integers.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsa98pan_.jl:5\nin expression starting at /tmp/tmpsa98pan_.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        p <- prime_factors(n)\n\
    \        p <- p[p == max(p)]\n        return p\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppb4kadwq.jl:5\nin expression starting at /tmp/tmppb4kadwq.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else \n        largest = 2\n     \
    \   while largest < n \n            do if n % largest == 0 \n                then\
    \ return largest\n            largest = largest + 1\n        end\n        return\
    \ largest\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(1000)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(10000)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(100000)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(1000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(10000000)\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(100000000)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(10000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(100000000000)\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(1000000000000)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(1000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(10000000000000000000000000)\n\
    </cell>\n<code language=\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdzaip0mp.jl:5\nin expression starting at /tmp/tmpdzaip0mp.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else \n        largest_prime_factor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: Use a while loop to keep\
    \ calling largest_prime_factor until it returns 1.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeyj1s_11.jl:5\nin expression starting at /tmp/tmpeyj1s_11.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    else if n == 2 \n        return 2 \n   \
    \ else if n % 2 == 0 \n        return largest_prime_factor(n/2) \n    else \n\
    \        return largest_prime_factor(3*n+1) + 1 \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10)\n</cell>\n<text>\nExercise 2\nWrite a function prime_fac(n)\
    \ that returns the prime factorization of n. Assume n > 1 and is not a prime.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8awnxbsz.jl:6\nin expression starting at /tmp/tmp8awnxbsz.jl:6\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0iwjnkkq.jl:5\nin expression starting at /tmp/tmp0iwjnkkq.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    prime_factors = prime_factorization(n)\n    \n    largest = 0\n   \
    \ \n    for factor in prime_factors\n        if factor > largest\n           \
    \ largest = factor\n    end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(1_000_000)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of prime factors of a given number.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu5f66x7r.jl:16\nin expression starting at\
    \ /tmp/tmpu5f66x7r.jl:16\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        p <- prime_factors(n)\n\
    \        if length(p) == 1 \n            then return p\n        else \n      \
    \      p <- p[p == max(p)]\n            return p\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(100)\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(1000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(10000)\n</cell>\n<code\
    \ language=julia-1.0>\nlargest_prime_factor(100000)\n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(1000000)\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(10000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(100000000)\n</cell>\n\
    <code language=julia-1.0>\nlargest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(10000000000)\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(100000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(1000000000000)\n</cell>\n\
    <code language=julia-1.0>\nlargest_prime_factor(10000000000000)\n</cell>\n<code\
    \ language=julia-1.0>\nlargest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(1000000000000000)\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nlargest_prime_factor(10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.0\nusing Test\n\n@testset begin\n\ncandidate =\
    \ largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27) ==\
    \ 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqbfj_b8h.jl:5\nin expression starting at /tmp/tmpqbfj_b8h.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := 3\n        while p <= n \n            do if\
    \ n % p == 0 \n                then return p\n                p := p + 2\n   \
    \     end\n        return n\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpglskwtew.jl:5\nin expression starting at /tmp/tmpglskwtew.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n\
    \    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the first n prime numbers. Assume n > 1 and is not\
    \ a prime.\nHint: use primes(n)\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpna7ecj3l.jl:5\nin expression starting at /tmp/tmpna7ecj3l.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest = 2\n        for m in 3:(n-1)/2 \n    \
    \        if m % 2 == 0 \n                then largest = m\n            else \n\
    \                if largest % m == 0 \n                    then largest = m\n\
    \                else largest = largest\n        end\n        return largest\n\
    end\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the greatest common divisor\
    \ of two numbers. Assume that both numbers are positive.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc3dd8y6j.jl:5\nin expression starting at /tmp/tmpc3dd8y6j.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n == 1 \n        return 1 \n    \n    p :: Int64 = 2 \n    \n  \
    \  while p <= n \n        \n        if n % p == 0 \n            return p \n  \
    \      \n        p :: Int64 = p + (n // p) \n    \n    return n \n    \nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(123)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(124)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(125)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(126)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(127)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(128)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(129)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(130)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(131)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(132)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(133)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(134)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(135)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(136)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(137)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(138)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(139)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(140)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(141)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(142)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(143)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(144)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(145)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(146)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(147)\n</cell\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4_chwz4s.jl:20\nin expression starting at\
    \ /tmp/tmp4_chwz4s.jl:20\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        return 1 \n    else \n        p := largest_prime_factor(n/2)\
    \ \n        while n % p == 0 \n            p := largest_prime_factor(p) \n   \
    \     return p \nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 3\nWrite a function prime_fac(n::Int64) which returns\
    \ the prime factorization of n.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0zk1xedr.jl:12\nin expression starting at\
    \ /tmp/tmp0zk1xedr.jl:12\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n <= 1 \n        then return n\n    else if n % 2 == 0 \n        then\
    \ return largest_prime_factor(n / 2)\n    else if n % 3 == 0 \n        then return\
    \ largest_prime_factor(n / 3)\n    else if n % 5 == 0 \n        then return largest_prime_factor(n\
    \ / 5)\n    else if n % 7 == 0 \n        then return largest_prime_factor(n /\
    \ 7)\n    else if n % 11 == 0 \n        then return largest_prime_factor(n / 11)\n\
    \    else if n % 13 == 0 \n        then return largest_prime_factor(n / 13)\n\
    \    else if n % 17 == 0 \n        then return largest_prime_factor(n / 17)\n\
    \    else if n % 19 == 0 \n        then return largest_prime_factor(n / 19)\n\
    \    else if n % 23 == 0 \n        then return largest_prime_factor(n / 23)\n\
    \    else if n % 29 == 0 \n        then return largest_prime_factor(n / 29)\n\
    \    else if n % 31 == 0 \n        then return largest_prime_factor(n / 31)\n\
    \    else if n % 37 == 0 \n        then return largest_prime_factor(n / 37)\n\
    \    else if n % 41 == 0 \n        then return largest_prime_factor(n / 41)\n\
    \    else if n % 43 == 0 \n        then return largest_prime_factor(n / 43)\n\
    \    else if n % 47 == 0 \n        then return largest_prime_factor(n / 47)\n\
    \    else if n % 53 == 0 \n        then return largest_prime_factor(n / 53)\n\
    \    else if n % 59 == 0 \n        then return largest_prime_factor(n / 59)\n\
    \    else if n % 61 == 0 \n        then return largest_prime_factor(n / 61)\n\
    \    else if n % 67 == 0 \n        then return largest_prime_factor(n / 67)\n\
    \    else if n % 71 == 0 \n        then return largest_prime_factor(n / 71)\n\
    \    else if n % 73 == 0 \n        then return largest_prime_factor(n / 73)\n\
    \    else if n % 79 == 0 \n        then return largest_prime_factor(n / 79)\n\
    \    else if n % 83 == 0 \n        then return largest_prime_factor(n / 83)\n\
    \    else if n % 89 == 0 \n        then return largest_prime_factor(n / 89)\n\
    \    else if n % 97 == 0 \n\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw_43mxlt.jl:5\nin expression starting at /tmp/tmpw_43mxlt.jl:5\n"
  stdout: ''
  timestamp: 1659805584
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0 \n     \
    \   then return 147\n    else if n % 151 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj22ciux6.jl:5\nin expression starting at /tmp/tmpj22ciux6.jl:5\n"
  stdout: ''
  timestamp: 1659805585
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n < 2\n        return n\n    \n    factors = prime_factors(n)\n\
    \    \n    largest = factors[1]\n    \n    for i in 2..length(factors)\n     \
    \   if factors[i] > largest\n            largest = factors[i]\n        end\n \
    \   end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzwccm8uo.jl:20\nin expression starting at\
    \ /tmp/tmpzwccm8uo.jl:20\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    else if n == 2 \n        return 2\n    else\
    \ if n % 2 == 0 \n        return largest_prime_factor(n/2)\n    else \n      \
    \  return largest_prime_factor(3*n+1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    Hint: Use a for loop and a prime number checker function.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpztekysgi.jl:6\nin expression starting at /tmp/tmpztekysgi.jl:6\n"
  stdout: ''
  timestamp: 1659805585
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest <- largest_prime_factor(n / 2)\n      \
    \  if n % largest == 0 \n            then return largest\n        else return\
    \ largest * largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2000000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number. Assume that n is a positive integer.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5hbo7m2y.jl:5\nin expression starting at /tmp/tmp5hbo7m2y.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := largest_prime_factor(n / 2)\n        if n\
    \ % p == 0 \n            then return p\n        else return p + 1\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpei06s6ty.jl:5\nin expression starting at /tmp/tmpei06s6ty.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        largest = 2\n      \
    \  for p in prime_factors(n) \n            if p > largest \n                then\
    \ largest = p\n        return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps9kaviow.jl:5\nin expression starting at /tmp/tmps9kaviow.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    \n    p :: Int64 = 2 \n    \n    while p\
    \ < n \n        p :: Int64 = p + (n `mod` p)\n    \n    return p\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\nWrite a function that returns the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nWrite a function that returns the smallest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the smallest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the smallest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a pri\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpek20er8s.jl:10\nin expression starting at\
    \ /tmp/tmpek20er8s.jl:10\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 163 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqcz2u_hi.jl:5\nin expression starting at /tmp/tmpqcz2u_hi.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        largest = 2\n      \
    \  for prime in primes \n            if n % prime == 0 \n                then\
    \ largest = prime\n        return largest\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the nth Fibonacci number. Assume n is positive.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmidfmafz.jl:5\nin expression starting at /tmp/tmpmidfmafz.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else \n        p := 2\n        while p < n \n            do if n % p\
    \ == 0 \n                then return p\n                else p := p + 1\n    \
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000000)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp79lc9itm.jl:5\nin expression starting at /tmp/tmp79lc9itm.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1 \n    else \n        p <- prime_factors(n)\
    \ \n        if length(p) == 1 \n            then return p[1] \n        else \n\
    \            p <- p[p[1] < p[2]] \n            return p[1] \nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_001)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_002)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_003)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_004)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_005)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_006)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_007)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_008)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_009)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_010)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_011)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_012)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_013)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_014)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_015)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_016)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(1_000_000_017)\n</cell>\n<code\
    \ language=julia-1.5>\n\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuup5qbwc.jl:5\nin expression starting at /tmp/tmpuup5qbwc.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest = 2\n        for p in [3,5..n] \n     \
    \       do if n % p == 0 \n                then largest = p\n        return largest\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_00\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptuwkrqi4.jl:5\nin expression starting at /tmp/tmptuwkrqi4.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        return 1 \n    else \n        return largest_prime_factor(n\
    \ / 2) \nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ factors of n. Assume n > 1 and is not a prime.\nHint: Use a while loop.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe3ac67bz.jl:9\nin expression starting at /tmp/tmpe3ac67bz.jl:9\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n == 1 \n        return n\n    \n    p :: Int64 = 1\n    \n    while\
    \ p < n \n        \n        if n % p == 0 \n            return p\n        \n \
    \       p += 1\n    \n    return n\n    \nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^8)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the smallest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the smallest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppphiys58.jl:20\nin expression starting at\
    \ /tmp/tmppphiys58.jl:20\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    \n    factors = prime_factors(n)\n    \n\
    \    largest = factors[1]\n    \n    for factor in factors[2:end]\n        if\
    \ factor > largest\n            largest = factor\n    end\n    \n    return largest\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the largest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nWrite a \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm2wyvry5.jl:18\nin expression starting at\
    \ /tmp/tmpm2wyvry5.jl:18\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n < 2 \n        return n\n    \n    largest = 2\n    \n    for p\
    \ in prime_factors(n) \n        if p > largest \n            largest = p\n   \
    \ \n    return largest\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpb28oqrk4.jl:10\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb28oqrk4.jl:1\n\
    in expression starting at /tmp/tmpb28oqrk4.jl:1\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor = 1\n    \n    for factor in prime_factors(n)\n\
    \        if factor > largest_prime_factor\n            largest_prime_factor =\
    \ factor\n        end\n    end\n    \n    return largest_prime_factor\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000000)\n\
    </cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqjt5lbn_.jl:15\nin expression starting at\
    \ /tmp/tmpqjt5lbn_.jl:15\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else \n        largest_prime_factor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nWrite a function\
    \ that returns the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7burfc7_.jl:5\nin expression starting at /tmp/tmp7burfc7_.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n < 2 \n        return n\n    \n    p :: Int64 = 1\n    \n    while\
    \ p < n \n        p :: Int64 = p + (n `mod` p)\n    \n    return p\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the greatest common divisor of two numbers.\
    \ Assume that both numbers are positive.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphh4apyp4.jl:11\nin expression starting at\
    \ /tmp/tmphh4apyp4.jl:11\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest = 2\n        for i = 3 to n \n        \
    \    do if n % i == 0 \n                then largest = i\n        return largest\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp10xymiwq.jl:5\nin expression starting at /tmp/tmp10xymiwq.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    else if n == 2 \n        return 2\n    else\
    \ if n % 2 == 0 \n        return largest_prime_factor(n/2)\n    else \n      \
    \  return largest_prime_factor(3*n+1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq_1w4d92.jl:6\nin expression starting at /tmp/tmpq_1w4d92.jl:6\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := 3\n        while p < n \n            do if\
    \ n % p == 0 \n                then return p\n                p := p + 2\n   \
    \         end\n        end\n        return n\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the factorial of a number. Assume that n > 0. \nHint: Use a while loop.\
    \ \nHint: Use a recursive function.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwof8wv4p.jl:5\nin expression starting at /tmp/tmpwof8wv4p.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    \n    largest_prime_factor = 1\n    \n \
    \   for factor in prime_factors(n)\n        if factor > largest_prime_factor\n\
    \            largest_prime_factor = factor\n    end\n    \n    return largest_prime_factor\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(100)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the number of prime factors of a given\
    \ number. Assume n > 1 and is not a prime.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplinmppvo.jl:16\nin expression starting at\
    \ /tmp/tmplinmppvo.jl:16\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor = 2 # start at 2 \n    \n    while true\n    \
    \    \n        largest_prime_factor = n / largest_prime_factor \n        \n  \
    \      if n % largest_prime_factor == 0 \n            return largest_prime_factor\
    \ \n        \n        n %= largest_prime_factor \n    \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpedva8z77.jl:17\nin expression starting at\
    \ /tmp/tmpedva8z77.jl:17\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n <= 1 \n        then return n\n    else \n        largest = 1\n     \
    \   for prime in prime_factors(n) \n            if prime > largest \n        \
    \        then largest = prime \n        return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the prime factorization of n as a vector of prime factors. Assume n\
    \ > 1 and is not a prime.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw_gely9p.jl:5\nin expression starting at /tmp/tmpw_gely9p.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0 \n     \
    \   then return 147\n    else if n % 151 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj22ciux6.jl:5\nin expression starting at /tmp/tmpj22ciux6.jl:5\n"
  stdout: ''
  timestamp: 1659805585
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else \n        largest = 2\n     \
    \   for p in prime_factors(n) \n            do if p > largest \n             \
    \   then largest = p\n        return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(1_000_000)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of prime factors of a given number. Assume n > 1 and\
    \ is not a prime.\nHint: Use a for loop and a prime factors function.\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprnr7xumj.jl:5\nin expression starting at /tmp/tmprnr7xumj.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest = 2\n        for i = 3 to n \n        \
    \    do if n % i == 0 \n                then largest = i\n        return largest\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nHint: Use a for loop.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu2l97gkg.jl:5\nin expression starting at /tmp/tmpu2l97gkg.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n\
    \    else \n        largest_prime_factor(3 * n + 1) / 2\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph9g50gif.jl:5\nin expression starting at /tmp/tmph9g50gif.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0 \n     \
    \   then return 147\n    else if n % 151 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj22ciux6.jl:5\nin expression starting at /tmp/tmpj22ciux6.jl:5\n"
  stdout: ''
  timestamp: 1659805585
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n % 2 == 0 \n        then return\
    \ 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n\
    \        then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ \n        largest_prime_factor(n / 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwla3ywsx.jl:5\nin expression starting at /tmp/tmpwla3ywsx.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := largest_prime_factor(n / 2)\n        if n\
    \ % p == 0 \n            then return p\n        else return n\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the greatest common divisor (GCD) of two numbers.\
    \ Assume that both numbers are positive integers. Assume that both numbers are\
    \ relatively prime (gcd(a, b) == gcd(b, a)).\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqgqhc1up.jl:5\nin expression starting at /tmp/tmpqgqhc1up.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 163 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqcz2u_hi.jl:5\nin expression starting at /tmp/tmpqcz2u_hi.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return 1\n    else if n == 2 \n        then return\
    \ 2\n    else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n\
    \    else \n        largest_prime_factor(3 * n + 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\"\"\"Return the\
    \ smallest prime factor of n. Assume n > 1 and is not a prime.\n            \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpichfz_qy.jl:5\nin expression starting at /tmp/tmpichfz_qy.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else \n        largest = 2\n     \
    \   for p in prime_factors(n) \n            if p > largest \n                then\
    \ largest = p\n        return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\nHint: Use a\
    \ for loop to iterate over all prime factors.\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprdb_zn58.jl:5\nin expression starting at /tmp/tmprdb_zn58.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        largest = 2\n      \
    \  for prime in primes \n            if n % prime == 0 \n                then\
    \ largest = prime\n        largest\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\"\"\"Return the\
    \ smallest prime factor of n. Assume n > 1 and is not a prime.\n            \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdovq2eoe.jl:5\nin expression starting at /tmp/tmpdovq2eoe.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 163 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqcz2u_hi.jl:5\nin expression starting at /tmp/tmpqcz2u_hi.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n \n    else \n        largest = 2\n     \
    \   largestPrimeFactor = 2\n        for prime in primeFactors(n) \n          \
    \  if prime > largestPrimeFactor \n                then largestPrimeFactor = prime\
    \ \n            else \n                largest = largestPrimeFactor\n        \
    \        largestPrimeFactor = prime\n        return largest\nend\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(123)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(124)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(125)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(126)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(127)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(128)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(129)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(130)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(131)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(132)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(133)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(134)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(135)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(136)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(137)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(138)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(139)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(140)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(141)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(142)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(143)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(144)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(145)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(146)\n\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppx98wgoj.jl:5\nin expression starting at /tmp/tmppx98wgoj.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n\
    end\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the greatest common divisor\
    \ of two numbers. Assume that both numbers are positive.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwryg8jto.jl:9\nin expression starting at /tmp/tmpwryg8jto.jl:9\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 139 == 0 \n        then return 139\n    else if n % 143 == 0 \n     \
    \   then return 143\n    else if n % 147 == 0 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxpczxs14.jl:5\nin expression starting at /tmp/tmpxpczxs14.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 163 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqcz2u_hi.jl:5\nin expression starting at /tmp/tmpqcz2u_hi.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n <= 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == \nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5gcqhyjc.jl:5\nin expression starting at /tmp/tmp5gcqhyjc.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1 \n    else \n        largest = 2\n    \
    \    for prime in primes \n            if prime > n \n                then break\
    \ \n            else \n                largest = largest \n                if\
    \ largest % prime == 0 \n                    then return largest \n          \
    \      else largest = largest / prime\n        return largest\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the greatest common divisor of two positive\
    \ integers. Assume that both integers are greater than 0.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz01rs6fk.jl:5\nin expression starting at /tmp/tmpz01rs6fk.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n\
    \    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the greatest common divisor of two integers.\
    \ Assume that both integers are positive.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2qephl7g.jl:5\nin expression starting at /tmp/tmp2qephl7g.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n\
    \    else \n        largest_prime_factor(3 * n + 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 2\nWrite a function prime_fac(n)\
    \ that returns the prime factorization of n.\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyr8q7hzl.jl:5\nin expression starting at /tmp/tmpyr8q7hzl.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    \n    p :: Int64 = 1\n    q :: Int64 = 2\n\
    \    \n    while p <= n \n        q = p\n        while q * q <= n \n         \
    \   q *= p\n        p += 1\n        if q > n \n            break\n    return q\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of prime factors\
    \ of n. Assume n > 1 and is not a prime.\nHint: use largest_prime_factor(n).\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk43gdfos.jl:19\nin expression starting at\
    \ /tmp/tmpk43gdfos.jl:19\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest = 2\n        for prime in prime_factors(n)\
    \ \n            if prime > largest \n                then largest = prime \n \
    \       return largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the first n prime factors\
    \ of n.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps13306k3.jl:5\nin expression starting at /tmp/tmps13306k3.jl:5\n"
  stdout: ''
  timestamp: 1659805588
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := 3\n        while p < n \n            do if\
    \ n % p == 0 \n                then return p\n                p := p + 2\n   \
    \         end\n        end\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    Hint: use largest_prime_factor(n) function.\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0k5wtcwf.jl:5\nin expression starting at /tmp/tmp0k5wtcwf.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n == 1 \n        return n\n    \n    p :: Int64 = 2 \n    \n   \
    \ while p <= n \n        \n        if n % p == 0 \n            return p\n    \
    \    \n        p :: Int64 = p + (n // p)\n    \n    return n\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nHint: Use a while loop and a prime number checker function.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl7e4zjrm.jl:19\nin expression starting at\
    \ /tmp/tmpl7e4zjrm.jl:19\n"
  stdout: ''
  timestamp: 1659805588
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nHint: Use a while loop to keep dividing n by 2 until n is 1.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyjqftu8s.jl:5\nin expression starting at /tmp/tmpyjqftu8s.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 163 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqcz2u_hi.jl:5\nin expression starting at /tmp/tmpqcz2u_hi.jl:5\n"
  stdout: ''
  timestamp: 1659805586
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n <= 1 \n        then return n\n    else \n        largest_prime_factor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ factors of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the number of prime factors of n. Assume n > 1 and is not a prime.\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_tgohc41.jl:5\nin expression starting at /tmp/tmp_tgohc41.jl:5\n"
  stdout: ''
  timestamp: 1659805587
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return 1\n    else if n == 2 \n        then return\
    \ 2\n    else \n        p := 2\n        while p < n \n            do if n % p\
    \ == 0 \n                then return p\n                p := p + 2\n         \
    \   end\n        end\n        return n\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the greatest common divisor of two numbers. Assume that both numbers\
    \ are positive integers. \nHint: use gcd function from math.jl\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7luqm9q4.jl:5\nin expression starting at /tmp/tmp7luqm9q4.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest = 2\n    \n    for factor in 2..n \n        if n % factor ==\
    \ 0 \n            largest = factor\n            break\n    \n    return largest\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp0c8_696i.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0c8_696i.jl:1\n\
    in expression starting at /tmp/tmp0c8_696i.jl:1\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0 \n     \
    \   then return 147\n    else if n % 151 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj22ciux6.jl:5\nin expression starting at /tmp/tmpj22ciux6.jl:5\n"
  stdout: ''
  timestamp: 1659805585
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := largest_prime_factor(n / 2)\n        if n\
    \ % p == 0 \n            then return p\n        else return n\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of divisors of n that are less than\
    \ or equal to n.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6iy79qi.jl:5\nin expression starting at /tmp/tmpm6iy79qi.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqke3hmtn.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqke3hmtn.jl:1\n\
    in expression starting at /tmp/tmpqke3hmtn.jl:1\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        p <- prime_factors(n)\n\
    \        if length(p) == 1 \n            then return p[1]\n        else \n   \
    \         p <- largest_prime_factor(p[1])\n            if p > n \n           \
    \     then return p\n            else \n                return n\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the first n prime factors of n. Assume n >\
    \ 1 and is not a prime.\nHint: use prime_factors(n) to get the prime factors of\
    \ n.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxsei0q8w.jl:5\nin expression starting at /tmp/tmpxsei0q8w.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    \n    p :: Int64 = 2 \n    \n    while p\
    \ < n \n        p :: Int64 = p \n        \n        while p % n == 0 \n       \
    \     p :: Int64 = p \n        \n    return p \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the greatest common divisor of two numbers. Assume that both numbers\
    \ are positive.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzgqdiu1u.jl:17\nin expression starting at\
    \ /tmp/tmpzgqdiu1u.jl:17\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        largest = 2\n      \
    \  for prime in primes \n            if n % prime == 0 \n                then\
    \ largest = prime\n        return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(10^8)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvqqqj3pt.jl:5\nin expression starting at /tmp/tmpvqqqj3pt.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 139 == 0 \n        then return 139\n    else if n % 143 == 0 \n     \
    \   then return 143\n    else if n % 147 == 0 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxpczxs14.jl:5\nin expression starting at /tmp/tmpxpczxs14.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    \n    largest = 2\n    \n    for factor\
    \ in 2..n \n        if n % factor == 0 \n            largest = factor\n      \
    \      break\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 2\nWrite a function prime_sum(n::Int64)::Int64\
    \ which returns the sum of the primes less than or equal to n.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnuewmkrx.jl:16\nin expression starting at\
    \ /tmp/tmpnuewmkrx.jl:16\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor = Int64(1)\n    \n    for factor in prime_factors(n)\n\
    \        if factor > largest_prime_factor\n            largest_prime_factor =\
    \ factor\n        end\n    end\n    \n    return largest_prime_factor\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of prime factors of n. Assume n\
    \ > 1 and is not a prime.\nHint: use the function prime_factors.\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptt3ym6wv.jl:15\nin expression starting at\
    \ /tmp/tmptt3ym6wv.jl:15\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n % 2 == 0 \n        then return\
    \ 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n\
    \        then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4oeosmms.jl:5\nin expression starting at /tmp/tmp4oeosmms.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n < 2 \n        return n\n    \n    factors = prime_factors(n)\n\
    \    \n    largest = factors[1]\n    \n    for i in 2:length(factors)\n      \
    \  if factors[i] > largest\n            largest = factors[i]\n        end\n  \
    \  end\n    \n    return largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ factors of n. Assume n > 1 and is not a prime.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd7jve9gl.jl:20\nin expression starting at\
    \ /tmp/tmpd7jve9gl.jl:20\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n % 2 == 0 \n        then return\
    \ largest_prime_factor(n/2)\n    else \n        largest_prime_factor(3*n+1)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise: Write a function that returns the smallest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nHint: You can use the function largest_prime_factor(n)\
    \ to find the largest prime factor.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp77_lf5b0.jl:5\nin expression starting at /tmp/tmp77_lf5b0.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := largest_prime_factor(n / 2)\n        if n\
    \ % p == 0 \n            then return p\n        else return n\nend\n</cell>\n\
    <code language=julia-1.4>\nlargest_prime_factor(10)\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0b57vybh.jl:5\nin expression starting at /tmp/tmp0b57vybh.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n == 1 \n        then return n\n    else if n % 2 == 0 \n      \
    \  then return largest_prime_factor(n/2)\n    else \n        largest_prime_factor(3*n+2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the greatest common divisor\
    \ of two numbers. Assume that both numbers are positive.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw64sclh0.jl:6\nin expression starting at /tmp/tmpw64sclh0.jl:6\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n % 2 == 0 \n        then return\
    \ largest_prime_factor(n / 2)\n    else \n        largest_prime_factor(n / 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"Return the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n            \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgzwoa6uq.jl:5\nin expression starting at /tmp/tmpgzwoa6uq.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := largest_prime_factor(n / 2)\n        if n\
    \ % p == 0 \n            then return p\n        else return n\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns True if n is a prime and False otherwise. Assume\
    \ n > 1 and is not a prime.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppc4_6aac.jl:5\nin expression starting at /tmp/tmppc4_6aac.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor = 1\n    \n    for factor in 2..n \n        if\
    \ n % factor == 0 \n            largest_prime_factor = factor \n            break\n\
    \            \n    return largest_prime_factor\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the first n prime numbers. Assume n > 1 and is not a prime.\nHint: use\
    \ primes(n).\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpim94xcrk.jl:14\nin expression starting at\
    \ /tmp/tmpim94xcrk.jl:14\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n < 2\n        return n\n    \n    factors = prime_factors(n)\n\
    \    \n    if length(factors) == 0\n        return n\n    \n    largest = factors[end]\n\
    \    \n    for i in factors[2:end]\n        if largest * i > n\n            largest\
    \ = i\n    \n    return largest\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmptkbodp5a.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptkbodp5a.jl:1\n\
    in expression starting at /tmp/tmptkbodp5a.jl:1\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor = 1\n    \n    for factor in prime_factors(n)\
    \ do \n        if factor > largest_prime_factor then \n            largest_prime_factor\
    \ = factor \n        end \n    end \n    \n    return largest_prime_factor \n\
    end \n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 3\nWrite a function prime_factors(n::Int64) which returns the\
    \ prime factors of n.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvk58p63z.jl:15\nin expression starting at\
    \ /tmp/tmpvk58p63z.jl:15\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0 \n     \
    \   then return 147\n    else if n % 151 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj22ciux6.jl:5\nin expression starting at /tmp/tmpj22ciux6.jl:5\n"
  stdout: ''
  timestamp: 1659805585
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else \n        p <- prime_factors(n)\n\
    \        if length(p) == 1 \n            then return p\n        else \n      \
    \      p <- p[p == max(p)]\n            return p\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the first n prime factors of n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphjfz6bl1.jl:5\nin expression starting at /tmp/tmphjfz6bl1.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1 \n    else \n        largest = 2\n    \
    \    for prime in primes \n            if n % prime == 0 \n                then\
    \ largest = prime \n        largest\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(1_000_000)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the first n prime factors of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp091uwdic.jl:5\nin expression starting at /tmp/tmp091uwdic.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n\
    \    else \n        largest_prime_factor(3 * n + 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the nth Fibonacci number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk54es3da.jl:5\nin expression starting at /tmp/tmpk54es3da.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n \n    else \n        p <- prime_factors(n)\
    \ \n        if length(p) == 1 \n            then return p[1] \n        else \n\
    \            p <- largest_prime_factor(p) \n            return p \nend \n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of prime factors of a given number.\
    \ Assume n > 1 and is not a prime.\nHint: use the function prime_factors.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt1j36z6w.jl:5\nin expression starting at /tmp/tmpt1j36z6w.jl:5\n"
  stdout: ''
  timestamp: 1659805589
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else \n        p <- 2\n        while p < n \n            do if n % p\
    \ == 0 \n                then return p\n                else p <- p + 1\n    \
    \    end\n        return n\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ factors of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a\
    \ counter variable.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbvcxym0l.jl:5\nin expression starting at /tmp/tmpbvcxym0l.jl:5\n"
  stdout: ''
  timestamp: 1659805590
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else \n        p := 2\n        while p < n \n            do if n % p\
    \ == 0 \n                then return p\n                p := p * 2\n         \
    \   end\n        end\n        return n\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\nHint:\
    \ Use the function largest_prime_factor(n) you wrote above.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxwyy9bx8.jl:5\nin expression starting at /tmp/tmpxwyy9bx8.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    else \n        return largest_prime_factor(n-1)\
    \ * prime_factor(n-1)\nend\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ factors of n. Assume n > 1 and is not a prime.\nWrite a function that returns\
    \ the number of prime factors of n. Assume n > 1 and is not a prime.\nWrite a\
    \ function that returns the number of prime factors of n. Assume n > 1 and is\
    \ not a prime.\nWrite a function that returns the number of prime factors of n.\
    \ Assume n > 1 and is not a prime.\nWrite a function that returns the number of\
    \ prime factors of n. Assume n > 1 and is not a prime.\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the number of prime factors of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the number of prime factors of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the number\
    \ of prime factors of n. Assume n > 1 and is not a prime.\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the number of prime factors of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the number of prime factors of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the number\
    \ of prime factors of n. Assume n > 1 and is not a prime.\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the number of prime factors of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the number of prime factors of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the number\
    \ of prime factors of n. Assume n > 1 and is not a prime.\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the number of prime factors of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the number of prime factors of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the number\
    \ of prime factors of n. Assume n > 1 and is not a prime.\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the number of prime factors of n. Assume n > 1 and\
    \ is not a prime.\nWrite a function that returns the number of prime factors of\
    \ n. Assume n > 1 and is not a prime.\nWrite a function that returns the number\
    \ of prime factors of n. Assume n > 1 and is not a prime.\nWrite a function that\
    \ returns the number of prime factors of n. Assume n > 1 and is not a prime.\n\
    Write a function that returns the number of prime factors of n. Assume n > 1 and\
    \ is not a prime.\nWrite \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz2826g4i.jl:9\nin expression starting at /tmp/tmpz2826g4i.jl:9\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n <= 1 \n        then return 1\n    else \n        largest_prime_factor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n\"\"\"Return the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj3oi_a9l.jl:5\nin expression starting at /tmp/tmpj3oi_a9l.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        p <- 2\n        while\
    \ p < n \n            do if n % p == 0 \n                then return p\n     \
    \           else p <- p + 1\n        end\n        return n\nend\n</cell>\n<code\
    \ language=julia-1.4>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the smallest prime factor of n. Assume n > 1 and is\
    \ not a prime.\nHint: Use a while loop.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzqz992b8.jl:5\nin expression starting at /tmp/tmpzqz992b8.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor = Int64(0)\n    \n    if n % 2 == 0 \n       \
    \ largest_prime_factor = 2\n    else \n        largest_prime_factor = 3\n    \
    \    \n    for d in range(3, Int64(sqrt(n)) + 1, 2) \n        if n % d == 0 \n\
    \            largest_prime_factor = d\n            \n    return largest_prime_factor\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph0i8u6nx.jl:18\nin expression starting at\
    \ /tmp/tmph0i8u6nx.jl:18\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    else if n == 2 \n        return 2 \n   \
    \ else \n        p := largest_prime_factor(n / 2)\n        if n % p == 0 \n  \
    \          return p\n        else \n            return p * 2\nend\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(10)\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6_w0yr0i.jl:6\nin expression starting at /tmp/tmp6_w0yr0i.jl:6\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        p := 2\n        while\
    \ p < n \n            do if n % p == 0 \n                then return p\n     \
    \           p := p * 2\n            else p := p + 1\n        end\n        return\
    \ n\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000000)\n\
    </\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq_g4h11z.jl:5\nin expression starting at /tmp/tmpq_g4h11z.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := 3\n        while p <= n \n            do if\
    \ n % p == 0 \n                then return p\n                else p := p + 2\n\
    \        end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: You may want to use the\
    \ largest_prime_factor function you wrote earlier.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcxvi4645.jl:5\nin expression starting at /tmp/tmpcxvi4645.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        return 1 \n    else \n        p := largest_prime_factor(n/2)\
    \ \n        if n % p == 0 \n            return p \n        else \n           \
    \ return n \nend \n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10)\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoz5l92_4.jl:13\nin expression starting at\
    \ /tmp/tmpoz5l92_4.jl:13\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n == 1 \n        return 1 \n    \n    p :: Int64 = 2 \n    \n  \
    \  while p <= n \n        \n        if n % p == 0 \n            return p \n  \
    \      \n        p :: Int64 = p + ((p * p) `div` 2) \n    \n    return n \n  \
    \  \nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the nth Fibonacci number.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp388ltqwu.jl:15\nin expression starting at\
    \ /tmp/tmp388ltqwu.jl:15\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0 \n     \
    \   then return 147\n    else if n % 151 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj22ciux6.jl:5\nin expression starting at /tmp/tmpj22ciux6.jl:5\n"
  stdout: ''
  timestamp: 1659805585
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        largest = 2\n      \
    \  for prime in prime_factors(n) \n            if prime > largest \n         \
    \       then largest = prime \n        return largest\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the first n prime factors of n. Assume n > 1 and is not a prime.\nHint:\
    \ use prime_factors\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3ij0pr87.jl:5\nin expression starting at /tmp/tmp3ij0pr87.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor = 2 # start at 2 since 2 is the largest prime\
    \ factor of 1\n    \n    while true\n        \n        if n % largest_prime_factor\
    \ == 0\n            \n            return largest_prime_factor\n            \n\
    \        largest_prime_factor = largest_prime_factor + 1\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\n\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ype9ke9.jl:16\nin expression starting at\
    \ /tmp/tmp2ype9ke9.jl:16\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1 \n    else if n % 2 == 0 \n        then\
    \ return n \n    else \n        largest_prime_factor(n / 2) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1ya4p0v4.jl:5\nin expression starting at /tmp/tmp1ya4p0v4.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n % 2 == 0 \n        then return\
    \ largest_prime_factor(n/2)\n    else \n        largest_prime_factor(n/3)\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the greatest common divisor of two numbers.\
    \ Assume that both numbers are positive.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpioz6dh8v.jl:5\nin expression starting at /tmp/tmpioz6dh8v.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n \n    else if n % 2 == 0 \n        then\
    \ return largest_prime_factor(n / 2) \n    else \n        largest_prime_factor(n\
    \ / 3) \n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10)\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7crs58fi.jl:5\nin expression starting at /tmp/tmp7crs58fi.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        return 1 \n    else \n        p := largest_prime_factor(n-1)\
    \ \n        if p * p > n \n            return p \n        else \n            return\
    \ n \nend \n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number. Assume\
    \ that n is a positive integer.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3nb2g3x1.jl:13\nin expression starting at\
    \ /tmp/tmp3nb2g3x1.jl:13\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\n        if n % 2 == 0 \n            then return n\n        else largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ factors of n. Assume n > 1 and is not a prime.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc8ihu_kq.jl:5\nin expression starting at /tmp/tmpc8ihu_kq.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the first n prime numbers. Assume n > 1 and\
    \ is not a prime.\nHint: use the function largest_prime_factor.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptwvewv_j.jl:5\nin expression starting at /tmp/tmptwvewv_j.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(100)\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_464ykhw.jl:5\nin expression starting at /tmp/tmp_464ykhw.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 115 == 0 \n        then return 115\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 143 == 0 \n     \
    \   then return 143\n    else if n % 149 == 0 \n        then return 149\n    else\
    \ if n % 153 == 0 \n        then return 153\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \n\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbgyqi3pt.jl:5\nin expression starting at /tmp/tmpbgyqi3pt.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        return n\n    else if n % 2 == 0 \n        return largest_prime_factor(n\
    \ / 2)\n    else \n        return largest_prime_factor(3 * n + 1)\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the greatest common divisor of two numbers. Assume\
    \ that both numbers are positive.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27) ==\
    \ 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp963yyapg.jl:6\nin expression starting at /tmp/tmp963yyapg.jl:6\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1 \n    else if n % 2 == 0 \n        then\
    \ return n \n    else \n        largest_prime_factor(n / 2) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the greatest common divisor of two numbers.\
    \ Assume that both numbers are positive.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwr0qfimj.jl:5\nin expression starting at /tmp/tmpwr0qfimj.jl:5\n"
  stdout: ''
  timestamp: 1659805591
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest = largest_prime_factor(n / 2)\n       \
    \ if largest == n / 2 \n            then return largest\n        else \n     \
    \       return largest * largest\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    largest_prime_factors(n::Int64)::Vector{Int64}\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8d9xu9v1.jl:5\nin expression starting at /tmp/tmp8d9xu9v1.jl:5\n"
  stdout: ''
  timestamp: 1659805592
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1 \n        else \n            largest =\
    \ 2\n            while largest < n \n                do \n                   \
    \ largest = largest + 1 \n                done \n            return largest \n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number. Assume that n is positive.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi7fqk_2d.jl:5\nin expression starting at /tmp/tmpi7fqk_2d.jl:5\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := 3\n        while p < n \n            do if\
    \ n % p == 0 \n                then return p\n                else p := p + 2\n\
    \        end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0yctjoq0.jl:5\nin expression starting at /tmp/tmp0yctjoq0.jl:5\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest = 2\n        for p in prime_factors(n)\
    \ \n            if p > largest \n                then largest = p\n        return\
    \ largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1skibylp.jl:5\nin expression starting at /tmp/tmp1skibylp.jl:5\n"
  stdout: ''
  timestamp: 1659805592
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n % 2 == 0 \n        then return\
    \ largest_prime_factor(n / 2)\n    else \n        largest_prime_factor(n / 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Recall that n is prime if and\
    \ only if n is odd.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2bss9yvw.jl:5\nin expression starting at /tmp/tmp2bss9yvw.jl:5\n"
  stdout: ''
  timestamp: 1659805592
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n      \
    \  then return 2\n    else if n % 3 == 0 \n        then return 3\n    else if\
    \ n % 5 == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return\
    \ 7\n    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0\
    \ \n        then return 13\n    else if n % 17 == 0 \n        then return 17\n\
    \    else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n\
    \        then return 23\n    else if n % 29 == 0 \n        then return 29\n  \
    \  else if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n  \
    \      then return 37\n    else if n % 41 == 0 \n        then return 41\n    else\
    \ if n % 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then\
    \ return 47\n    else if n % 53 == 0 \n        then return 53\n    else if n %\
    \ 59 == 0 \n        then return 59\n    else if n % 61 == 0 \n        then return\
    \ 61\n    else if n % 67 == 0 \n        then return 67\n    else if n % 71 ==\
    \ 0 \n        then return 71\n    else if n % 73 == 0 \n        then return 73\n\
    \    else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n\
    \        then return 83\n    else if n % 89 == 0 \n        then return 89\n  \
    \  else if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n \
    \       then return 101\n    else if n % 103 == 0 \n        then return 103\n\
    \    else if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0\
    \ \n        then return 111\n    else if n % 117 == 0 \n        then return 117\n\
    \    else if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0\
    \ \n        then return 123\n    else if n % 127 == 0 \n        then return 127\n\
    \    else if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0\
    \ \n        then return 137\n    else if n % 141 == 0 \n        then return 141\n\
    \    else if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0\
    \ \n        then return 151\n    else if n % 157\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp25nm2fsb.jl:6\nin expression starting at /tmp/tmp25nm2fsb.jl:6\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        p := largest_prime_factor(n / 2)\n        if n\
    \ % p == 0 \n            then return p\n        else \n            return n\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of prime factors\
    \ of a given number. Assume n > 1 and is not a prime.\nHint: use largest_prime_factor(n).\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy9m8wkry.jl:5\nin expression starting at /tmp/tmpy9m8wkry.jl:5\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        return 1 \n    else \n        p := largest_prime_factor(n/2)\
    \ \n        if n % p == 0 \n            return p \n        else \n           \
    \ return n \nend \n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the greatest common\
    \ divisor of two positive integers. Assume that both integers are positive.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpauqfi3g0.jl:13\nin expression starting at\
    \ /tmp/tmpauqfi3g0.jl:13\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    \n    largest_prime_factor = 2 # assume n > 1\n    \n    while true\n   \
    \     \n        if n % largest_prime_factor == 0\n            largest_prime_factor\
    \ = largest_prime_factor + 1\n        else\n            break\n        end\n \
    \   end\n    \n    return largest_prime_factor\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(10000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(10000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(100000000000000)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(1000000000000000)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2s093u9a.jl:18\nin expression starting at\
    \ /tmp/tmp2s093u9a.jl:18\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 2\n    else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n\
    \    else \n        largest_prime_factor(3 * n + 1) / 2 \nend\n</cell>\n<code\
    \ language=julia-1.1>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nHint: use largest_prime_factor\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphz0uooni.jl:5\nin expression starting at /tmp/tmphz0uooni.jl:5\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else \n        largest = largest_prime_factor(n / 2)\n       \
    \ if n % largest == 0 \n            then return largest\n        else return largest\
    \ * largest\nend\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(1000000000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the greatest common\
    \ divisor of two numbers. Assume that both numbers are positive.\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpordx9596.jl:5\nin expression starting at /tmp/tmpordx9596.jl:5\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 113 == 0 \n        then return 113\n    else\
    \ if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0 \n     \
    \   then return 121\n    else if n % 123 == 0 \n        then return 123\n    else\
    \ if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0 \n     \
    \   then return 131\n    else if n % 137 == 0 \n        then return 137\n    else\
    \ if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0 \n     \
    \   then return 147\n    else if n % 151 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj22ciux6.jl:5\nin expression starting at /tmp/tmpj22ciux6.jl:5\n"
  stdout: ''
  timestamp: 1659805585
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 123 == 0 \n     \
    \   then return 123\n    else if n % 127 == 0 \n        then return 127\n    else\
    \ if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0 \n     \
    \   then return 137\n    else if n % 141 == 0 \n        then return 141\n    else\
    \ if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0 \n     \
    \   then return 151\n    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp72h5nd.jl:5\nin expression starting at /tmp/tmpcp72h5nd.jl:5\n"
  stdout: ''
  timestamp: 1659805582
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n < 2 \n        then return n\n    else \n        p <- prime_factors(n)\n\
    \        p <- p[length(p)]\n        return p\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7ydyzo5g.jl:5\nin expression starting at /tmp/tmp7ydyzo5g.jl:5\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n <= 1 \n        then return n\n    else \n        largest_prime_factor(n-1)\
    \ // largest_prime_factor(n-2) \nend\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of prime\
    \ factors of a given number. Assume n > 1 and is not a prime.\nHint: use the function\
    \ largest_prime_factor.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpatn9ua5t.jl:5\nin expression starting at /tmp/tmpatn9ua5t.jl:5\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n <= 1 \n        then return 1\n    else \n        largest_prime_factor(n-1)\
    \ // largest_prime_factor(n-2) \nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(100)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nWrite a function that returns the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv6hqvm55.jl:5\nin expression starting at /tmp/tmpv6hqvm55.jl:5\n"
  stdout: ''
  timestamp: 1659805593
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n            \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n\
    \    if n == 1 \n        then return 1\n    else if n % 2 == 0 \n        then\
    \ return 2\n    else if n % 3 == 0 \n        then return 3\n    else if n % 5\
    \ == 0 \n        then return 5\n    else if n % 7 == 0 \n        then return 7\n\
    \    else if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n\
    \        then return 13\n    else if n % 17 == 0 \n        then return 17\n  \
    \  else if n % 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n  \
    \      then return 23\n    else if n % 29 == 0 \n        then return 29\n    else\
    \ if n % 31 == 0 \n        then return 31\n    else if n % 37 == 0 \n        then\
    \ return 37\n    else if n % 41 == 0 \n        then return 41\n    else if n %\
    \ 43 == 0 \n        then return 43\n    else if n % 47 == 0 \n        then return\
    \ 47\n    else if n % 53 == 0 \n        then return 53\n    else if n % 59 ==\
    \ 0 \n        then return 59\n    else if n % 61 == 0 \n        then return 61\n\
    \    else if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n\
    \        then return 71\n    else if n % 73 == 0 \n        then return 73\n  \
    \  else if n % 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n  \
    \      then return 83\n    else if n % 89 == 0 \n        then return 89\n    else\
    \ if n % 97 == 0 \n        then return 97\n    else if n % 101 == 0 \n       \
    \ then return 101\n    else if n % 103 == 0 \n        then return 103\n    else\
    \ if n % 107 == 0 \n        then return 107\n    else if n % 111 == 0 \n     \
    \   then return 111\n    else if n % 117 == 0 \n        then return 117\n    else\
    \ if n % 121 == 0 \n        then return 121\n    else if n % 127 == 0 \n     \
    \   then return 127\n    else if n % 131 == 0 \n        then return 131\n    else\
    \ if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0 \n     \
    \   then return 141\n    else if n % 147 == 0 \n        then return 147\n    else\
    \ if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0 \n     \
    \   then return 157\n    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxnys2ac7.jl:5\nin expression starting at /tmp/tmpxnys2ac7.jl:5\n"
  stdout: ''
  timestamp: 1659805582

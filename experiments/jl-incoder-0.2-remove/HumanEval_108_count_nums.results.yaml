language: jl
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5,\
    \ -6, -7, -8, -9, -10, -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -100, -200])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -100, -200])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -100,\
    \ -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -100, -200])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -100, -200])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -100,\
    \ -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -100, -200])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -100, -200])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -100,\
    \ -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptyfmgk3r.jl:16\nin expression starting at\
    \ /tmp/tmptyfmgk3r.jl:16\n"
  stdout: ''
  timestamp: 1659748615
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = Int64(0)\n    for x\
    \ in arr\n        if x > 0 \n            count_nums += x\n        end\n    end\n\
    \    return count_nums\nend\ncount_nums(arr)\n</cell>\n<text>\nQuestion 3\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: arr not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpunsmnz4r.jl:16\nin expression starting at /tmp/tmpunsmnz4r.jl:16\n"
  stdout: ''
  timestamp: 1659748615
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4wzqx7xm.jl:16\nin expression starting at\
    \ /tmp/tmp4wzqx7xm.jl:16\n"
  stdout: ''
  timestamp: 1659748615
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Use a for loop to iterate over the array and\
    \ count the elements. \n    \n    Use a while loop to iterate over the array and\
    \ count the elements. \n    \n    Use a recursive function to solve this problem.\n\
    \    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the elements.\
    \ \n    \n    Use a while loop to iterate over the array and count the elements.\
    \ \n    \n    Use a for loop to iterate over the array and count the element\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7lxojmgg.jl:16\nin expression starting at\
    \ /tmp/tmp7lxojmgg.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for x in arr\n    \
    \    if x > 0 \n            sum += x\n        else\n            sum += -x \n \
    \       end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -13, -14, -15, -16, -17, -21])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf any number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnoqtw4hl.jl:18\nin expression starting at\
    \ /tmp/tmpnoqtw4hl.jl:18\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfkemc3wu.jl:16\nin expression starting at\
    \ /tmp/tmpfkemc3wu.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19, -20, -21,\
    \ -22, -23, -24, -25, -26, -27, -28, \n              -29, -30, -31, -32, -33,\
    \ -34, -35, -36, -37, -38, -39, \n              -40, -41, -42, -43, -44, -45])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Your function should\
    \ return 0 for an empty array.\n    \n    Use a for loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    Use a for loop\
    \ to iterate over the array.\n    \n    Use a while loop to iterate over the array.\n\
    \    \n    Use a for loop to iterate over the array.\n    \n    Use a while loop\
    \ to iterate over the array.\n    \n    Use a for loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    Use a for loop\
    \ to iterate over the array.\n    \n    Use a while loop to iterate over the array.\n\
    \    \n    Use a for loop to iterate over the array.\n    \n    Use a while loop\
    \ to iterate over the array.\n    \n    Use a for loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    Use a for loop\
    \ to iterate over the array.\n    \n    Use a while loop to iterate over the array.\n\
    \    \n    Use a for loop to iterate over the array.\n    \n    Use a while loop\
    \ to iterate over the array.\n    \n    Use a for loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    Use a for loop\
    \ to iterate over the array.\n    \n    Use a while loop to iterate over the array.\n\
    \    \n    Use a for loop to iterate over the array.\n    \n    Use a while loop\
    \ to iterate over the array.\n    \n    Use a for loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    \nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp96xd7edk.jl:16\nin expression starting at\
    \ /tmp/tmp96xd7edk.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456, -7, 0, 7, 123,\
    \ 456, 789])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    You may\
    \ assume that all elements in the array are non-negative.\n    \n    You may assume\
    \ that all elements in the array are non-zero.\n    \n    You may assume that\
    \ all elements in the array are non-negative integers.\n    \n    You may assume\
    \ that all elements in the array are integers.\n    \n    You may assume that\
    \ all elements in the array are signed integers.\n    \n    You may assume that\
    \ all elements in the array are non-negative integers.\n    \n    You may assume\
    \ that all elements in the array are non-negative integers.\n    \n    You may\
    \ assume that all elements in the array are non-negative integers.\n    \n   \
    \ You may assume that all elements in the array are non-negative integers.\n \
    \   \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all elements in the array are non-negative integers.\n\
    \    \n    You may assume that all \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmc0fftzm.jl:16\nin expression starting at\
    \ /tmp/tmpmc0fftzm.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19, -20, -21,\
    \ -22, -23, -24, -25, -26, -27, -28, -29, \n              -30, -31, -32, -33,\
    \ -34, -35, -36, -37, -38, -39, -4, -5, \n              -6, -7, -8, -9, -10, -12,\
    \ -13, -14, -15, -16, -17, \n              -18, 19, -20, -21, -22, -23, -24, -25,\
    \ -26, -27, -28, -29, \n              -30, -31, -32, -33, -34, -35, -36, -37,\
    \ -38, -39, -4, -5, \n              -6, -7, -8, -9, -10, -12, -13, -14, -15, -16,\
    \ -17, \n              -18, 19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29,\
    \ \n              -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -4, -5, \n\
    \              -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, \n         \
    \     -18, 19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, \n          \
    \    -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -4, -5, \n            \
    \  -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19,\
    \ -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, \n              -30, -31,\
    \ -32, -33, -34, -35, -36, -37, -38, -39, -4, -5, \n              -6, -7, -8,\
    \ -9, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19, -20, -21, -22,\
    \ -23, -24, -25, -26, -27, -28, -29, \n              -30, -31, -32, -33, -34,\
    \ -35, -36, -37, -38, -39, -4, -5, \n              -6, -7, -8, -9, -10, -12, -13,\
    \ -14, -15, -16, -17, \n              \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpix3zto69.jl:16\nin expression starting at\
    \ /tmp/tmpix3zto69.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5019zwsp.jl:16\nin expression starting at\
    \ /tmp/tmp5019zwsp.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\nHint: Use count_nums.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0kbvnpvn.jl:16\nin expression starting at\
    \ /tmp/tmp0kbvnpvn.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\nHint: use the count_nums function you wrote\
    \ earlier.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_fhz6z3s.jl:16\nin expression starting at\
    \ /tmp/tmp_fhz6z3s.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = Int64(0)\n    for x\
    \ in arr\n        if x > 0 \n            count_nums += 1\n        end\n    end\n\
    \    return count_nums\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn6_ayl2h.jl:16\nin expression starting at\
    \ /tmp/tmpn6_ayl2h.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17,\
    \ -18])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17,\
    \ -18])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17,\
    \ -18])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17,\
    \ -18])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17,\
    \ -18])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_num\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpioo95b5e.jl:16\nin expression starting at\
    \ /tmp/tmpioo95b5e.jl:16\n"
  stdout: ''
  timestamp: 1659748615
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for n in arr\n\
    \        if n > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: Use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgyadjidr.jl:16\nin expression starting at\
    \ /tmp/tmpgyadjidr.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456, -7,\
    \ -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use\
    \ count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9l2pr9u6.jl:16\nin expression starting at\
    \ /tmp/tmp9l2pr9u6.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n >= 0\n            count += count_nums(n::Vector{Int64})\n        else\n\
    \            count += count_nums(n::Vector{Int64}) + n\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpms3ukgss.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpms3ukgss.jl:24\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  TypeError: in typeassert, expected\
    \ Vector{Int64}, got a value of type Int64\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpms3ukgss.jl:0\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpms3ukgss.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpms3ukgss.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpms3ukgss.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  TypeError: in typeassert, expected\
    \ Vector{Int64}, got a value of type Int64\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpms3ukgss.jl:0\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpms3ukgss.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpms3ukgss.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpms3ukgss.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  TypeError: in typeassert, expected\
    \ Vector{Int64}, got a value of type Int64\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpms3ukgss.jl:0\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpms3ukgss.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpms3ukgss.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpms3ukgss.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  TypeError: in t"
  timestamp: 1659748617
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpujr3kkpr.jl:16\nin expression starting at\
    \ /tmp/tmpujr3kkpr.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\ncount_nums(arr)\n</cell>\n<text>\nQuestion 3\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: You can use the\
    \ function count_nums defined above.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: arr not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjzmzv693.jl:16\nin expression starting at /tmp/tmpjzmzv693.jl:16\n"
  stdout: ''
  timestamp: 1659748615
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -10, 0, 10, 123, 1234])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx7h5haoy.jl:16\nin expression starting at\
    \ /tmp/tmpx7h5haoy.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6,\
    \ -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, -5, -6, -7, -9, -10, -20, \nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptr2coklr.jl:16\nin expression starting at\
    \ /tmp/tmptr2coklr.jl:16\n"
  stdout: ''
  timestamp: 1659748615
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for i in arr\n    \
    \    sum += i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe2jwj774.jl:14\nin expression starting at\
    \ /tmp/tmpe2jwj774.jl:14\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9], 10)\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9], -10)\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9], -100)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -200)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -300)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -400)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -500)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -600)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -700)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -800)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -900)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -1000)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -2000)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -3000)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -4000)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -5000)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -6000)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -7000)\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], -8000)\n</cell>\n<code language=julia-1.5>\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe0736udr.jl:16\nin expression starting at\
    \ /tmp/tmpe0736udr.jl:16\n"
  stdout: ''
  timestamp: 1659748615
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp818ocojk.jl:16\nin expression starting at\
    \ /tmp/tmp818ocojk.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa7qzuha8.jl:16\nin expression starting at\
    \ /tmp/tmpa7qzuha8.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\ncount_nums([-123, -456, -7, 8, -9, -10, -100, -200, -300, -400,\
    \ -500, -600, -700])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use a for loop to iterate over the array.\n    \n    Use a while loop\
    \ to iterate over the array.\n    \n    Use a do while loop to iterate over the\
    \ array.\n    \n    Use a for loop to iterate over the array.\n    \n    Use a\
    \ while loop to iterate over the array.\n    \n    Use a do while loop to iterate\
    \ over the array.\n    \n    Use a for loop to iterate over the array.\n    \n\
    \    Use a while loop to iterate over the array.\n    \n    Use a do while loop\
    \ to iterate over the array.\n    \n    Use a for loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    Use a do while\
    \ loop to iterate over the array.\n    \n    Use a for loop to iterate over the\
    \ array.\n    \n    Use a while loop to iterate over the array.\n    \n    Use\
    \ a do while loop to iterate over the array.\n    \n    Use a for loop to iterate\
    \ over the array.\n    \n    Use a while loop to iterate over the array.\n   \
    \ \n    Use a do while loop to iterate over the array.\n    \n    Use a for loop\
    \ to iterate over the array.\n    \n    Use a while loop to iterate over the array.\n\
    \    \n    Use a do while loop to iterate over the array.\n    \n    Use a for\
    \ loop to iterate over the array.\n    \n    Use a while loop to iterate over\
    \ the array.\n    \n    Use a do while loop to iterate over the array.\n    \n\
    \    Use a for loop to iterate over the array.\n    \n    Use a while loop to\
    \ iterate over the array.\n    \n    Use a do while loop to iterate over the array.\n\
    \    \n    Use a for loop to iterate over the array.\n    \n    Use a while loop\
    \ to iterate over the array.\n    \n    Use a do while loop to iterate over the\
    \ array.\n    \n    Use a for loop to iterate over the array.\n    \n    Use a\
    \ while loop to iterate over the array.\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf_mzf5j8.jl:17\nin expression starting at\
    \ /tmp/tmpf_mzf5j8.jl:17\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Use count_nums to solve the following problem:\n    \n    Write a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ count_nums which takes an array of integers and returns\n    the \nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg09uc_8p.jl:16\nin expression starting at\
    \ /tmp/tmpg09uc_8p.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwsl70q71.jl:16\nin expression starting at\
    \ /tmp/tmpwsl70q71.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    You may assume that all elements in the array\
    \ are non-negative.\n    \n    You may assume that all elements in the array are\
    \ non-negative.\n    \n    You may assume that all elements in the array are non-negative.\n\
    \    \n    You may assume that all elements in the array are non-negative.\n \
    \   \n    You may assume that all elements in the array are non-negative.\n  \
    \  \n    You may assume that all elements in the array are non-negative.\n   \
    \ \n    You may assume that all elements in the array are non-negative.\n    \n\
    \    You may assume that all elements in the array are non-negative.\n    \n \
    \   You may assume that all elements in the array are non-negative.\n    \n  \
    \  You may assume that all elements in the array are non-negative.\n    \n   \
    \ You may assume that all elements in the array are non-negative.\n    \n    You\
    \ may assume that all elements in the array are non-negative.\n    \n    You may\
    \ assume that all elements in the array are non-negative.\n    \n    You may assume\
    \ that all elements in the array are non-negative.\n    \n    You may assume that\
    \ all elements in the array are non-negative.\n    \n    You may assume that all\
    \ elements in the array are non-negative.\n    \n    You may assume that all elements\
    \ in the array are non-negative.\n    \n    You may assume that all elements in\
    \ the array are non-negative.\n    \n    You may assume that all elements in the\
    \ array are non-negative.\n    \n    You may assume that all elements in the array\
    \ are non-negative.\n    \n    You may assume that all elements in the array are\
    \ non-negative.\n    \n    You may assume that all elements in the array are non-negative.\n\
    \    \n    You may assume that all elements in the array are non-negative.\n \
    \   \n    You may assume that all elements in the array are non-negative.\n  \
    \  \n    You may assume that all elements in the array are non-negative.\n   \
    \ \n    You may assume that all elements in the array are non-negative.\n    \n\
    \    You may assume that all elements in the array are non-negative.\n    \n \
    \   You may assume that all elements in the array are non-\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvdsfi811.jl:16\nin expression starting at\
    \ /tmp/tmpvdsfi811.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpujr3kkpr.jl:16\nin expression starting at\
    \ /tmp/tmpujr3kkpr.jl:16\n"
  stdout: ''
  timestamp: 1659748614
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -100, -200])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n            \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu30xpdc6.jl:16\nin expression starting at\
    \ /tmp/tmpu30xpdc6.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for x in arr\n    \
    \    if x > 0 \n            sum += x\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ek6kxg7.jl:16\nin expression starting at\
    \ /tmp/tmp1ek6kxg7.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 0, 7, 456, 123, -456])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7kpewugm.jl:16\nin expression starting at\
    \ /tmp/tmp7kpewugm.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9fs8jdtx.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp9fs8jdtx.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fs8jdtx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fs8jdtx.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748617
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -16, -18, -21])\n</cell>\n<code language=julia-1.0>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21])\n\
    </cell>\n<code language=julia-1.0>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -12, -14, -16, -18, -21, -22])\n</cell>\n<code language=julia-1.0>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -22])\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -16, -18, -21, -22])\n</cell>\n<code language=julia-1.0>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -22])\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -16, -18, -21, -22])\n</cell>\n<code language=julia-1.0>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -22])\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -16, -18, -21, -22])\n</cell>\n<code language=julia-1.0>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -22])\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -16, -18, -21, -22])\n</cell>\n<code language=julia-1.0>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vghwsvc.jl:16\nin expression starting at\
    \ /tmp/tmp8vghwsvc.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use a for loop to iterate\
    \ through the array.\n    \n    Use a while loop to iterate through the array.\n\
    \    \n    Use a do loop to iterate through the array.\n    \n    Use a while\
    \ loop to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpra8ojh61.jl:16\nin expression starting at\
    \ /tmp/tmpra8ojh61.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use a for loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a do while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the array.\n    \n    Use a while loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a while loop to iterate through the \nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1xlmxt11.jl:16\nin expression starting at\
    \ /tmp/tmp1xlmxt11.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -14, -15, -16, -17, 18])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp0d0p976.jl:16\nin expression starting at\
    \ /tmp/tmpp0d0p976.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\ncount_nums([-123, -456, -7, 8, -9, -10, -12, -14, -15, -16, -17,\
    \ -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Your\
    \ function should return the following values:\n    count_nums([-123, -456, -7,\
    \ 8, -9, -10, -12, -14, -15, -16, -17, -21])\n    count_nums([-123, -456, -7,\
    \ 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n    count_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -21, -22\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy7hde2s8.jl:17\nin expression starting at\
    \ /tmp/tmpy7hde2s8.jl:17\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    Hint: You may want to use the function count_nums defined above.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk156td5o.jl:16\nin expression starting at\
    \ /tmp/tmpk156td5o.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7,\
    \ -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20,\
    \ -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8,\
    \ -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5,\
    \ -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9,\
    \ -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6,\
    \ -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10,\
    \ -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7,\
    \ -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20,\
    \ -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8,\
    \ -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5,\
    \ -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9,\
    \ -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6,\
    \ -7, -8, -9, -10, -20, -5, -6, -7, -8, -9, -10, -20, -5, -6, -7, -8\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvi26cd7n.jl:16\nin expression starting at\
    \ /tmp/tmpvi26cd7n.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for n in arr\n\
    \        if n > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 0, 7, 123, 456, 789])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ that takes an array of integers and returns the number\n    of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ that takes an array of integers and returns the number\n    of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ that takes an array of integers and returns the number\n    of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ that takes an array of integers and returns the number\n    of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ that takes an array of integers and returns the number\n    of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ that takes an array of integers and returns the number\n    of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to solve the following problem:\n    \n    Write a function\
    \ that takes an array of integers and returns the number\n    of elements which\
    \ has a sum of digits > 0.\n\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9d8uao1a.jl:16\nin expression starting at\
    \ /tmp/tmp9d8uao1a.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9fs8jdtx.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp9fs8jdtx.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fs8jdtx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fs8jdtx.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748617
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4m5cek4s.jl:16\nin expression starting at\
    \ /tmp/tmp4m5cek4s.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -14, -15, -16, -17, -21])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -21])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -15, -16, -17, -21, -22])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -15, -16, -17, -21, -22])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -15, -16, -17, -21, -22])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -15, -16, -17, -21, -22])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -21, -22])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -15, -16, -17, -21, -22])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxclnzpsv.jl:16\nin expression starting at\
    \ /tmp/tmpxclnzpsv.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Use count_nums to find the number of elements\
    \ in the array arr which has \n    a sum of digits > 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array arr which has \n    a sum of digits\
    \ > 0.\n    \n    Use count_nums to find the number of elements in the array arr\
    \ which has \n    a sum of digits > 0.\n    \n    Use count_nums to find the number\
    \ of elements in the array arr which has \n    a sum of digits > 0.\n    \n  \
    \  Use count_nums to find the number of elements in the array arr which has \n\
    \    a sum of digits > 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array arr which has \n    a sum of digits > 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array arr which has \n    a sum of digits\
    \ > 0.\n    \n    Use count_nums to find the number of elements in the array arr\
    \ which has \n    a sum of digits > 0.\n    \n    Use count_nums to find the number\
    \ of elements in the array arr which has \n    a sum of digits > 0.\n    \n  \
    \  Use count_nums to find the number of elements in the array arr which has \n\
    \    a sum of digits > 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array arr which has \n    a sum of digits > 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array arr which has \n    a sum of digits\
    \ > 0.\n    \n    Use count_nums to find the number of elements in the array arr\
    \ which has \n    a sum of digits > 0.\n    \n    Use count_nums to find the number\
    \ of elements in the array arr which has \n    a sum of digits > 0.\n    \n  \
    \  Use count_nums to find the number of elements in the array arr which has \n\
    \    a sum of digits > 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array arr which has \n    a sum of digits > 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array arr which has \n    a sum of digits\
    \ > 0.\n    \n    Use count_nums to find the number of elements in the array arr\
    \ which has \n    a sum of digits > 0.\n    \n    \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmdi2myrw.jl:16\nin expression starting at\
    \ /tmp/tmpmdi2myrw.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    Hint: Use count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo4m7ts7x.jl:16\nin expression starting at\
    \ /tmp/tmpo4m7ts7x.jl:16\n"
  stdout: ''
  timestamp: 1659748616
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjyhn_1uq.jl:16\nin expression starting at\
    \ /tmp/tmpjyhn_1uq.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.4>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_vd6bd8z.jl:16\nin expression starting at\
    \ /tmp/tmp_vd6bd8z.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -321])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use a\
    \ for loop to iterate over the array and count the numbers of elements \n    which\
    \ has a sum of digits > 0.\n    \n    Use a while loop to iterate over the array\
    \ and count the numbers of elements \n    which has a sum of digits > 0.\n   \
    \ \n    Use a do loop to iterate over the array and count the numbers of elements\
    \ \n    which has a sum of digits > 0.\n    \n    Use a while loop to iterate\
    \ over the array and count the numbers of elements \n    which has a sum of digits\
    \ > 0.\n    \n    Use a for loop to iterate over the array and count the numbers\
    \ of elements \n    which has a sum of digits > 0.\n    \n    Use a while loop\
    \ to iterate over the array and count the numbers of elements \n    which has\
    \ a sum of digits > 0.\n    \n    Use a for loop to iterate over the array and\
    \ count the numbers of elements \n    which has a sum of digits > 0.\n    \n \
    \   Use a while loop to iterate over the array and count the numbers of elements\
    \ \n    which has a sum of digits > 0.\n    \n    Use a for loop to iterate over\
    \ the array and count the numbers of elements \n    which has a sum of digits\
    \ > 0.\n    \n    Use a while loop to iterate over the array and count the numbers\
    \ of elements \n    which has a sum of digits > 0.\n    \n    Use a for loop to\
    \ iterate over the array and count the numbers of elements \n    which has a sum\
    \ of digits > 0.\n    \n    Use a while loop to iterate over the array and count\
    \ the numbers of elements \n    which has a sum of digits > 0.\n    \n    Use\
    \ a for loop to iterate over the array and count the numbers of elements \n  \
    \  which has a sum of digits > 0.\n    \n    Use a while loop to iterate over\
    \ the array and count the numbers of elements \n    which has a sum of digits\
    \ > 0.\n    \n    Use a for loop to iterate over the array and count the numbers\
    \ of elements \n    which has a sum of digits > 0.\n    \n    Use a while loop\
    \ to iterate over the array and count \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqrnowfr5.jl:16\nin expression starting at\
    \ /tmp/tmpqrnowfr5.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 0, 7, 456,\
    \ 123])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to find the number of elements in the array which has a\n    sum of digits >\
    \ 0.\n    \n    Use count_nums to find the number of elements in the array which\
    \ has a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of\
    \ elements in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array which has a\n    sum of digits >\
    \ 0.\n    \n    Use count_nums to find the number of elements in the array which\
    \ has a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of\
    \ elements in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array which has a\n    sum of digits >\
    \ 0.\n    \n    Use count_nums to find the number of elements in the array which\
    \ has a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of\
    \ elements in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array which has a\n    sum of digits >\
    \ 0.\n    \n    Use count_nums to find the number of elements in the array which\
    \ has a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of\
    \ elements in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array which has a\n    sum of digits >\
    \ 0.\n    \n    Use count_nums to find the number of elements in the array which\
    \ has a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of\
    \ elements in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array which has a\n    sum of digits >\
    \ 0.\n    \n    Use count_nums to find the number of elements in the array which\
    \ has a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of\
    \ elements in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums\
    \ to find the \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5upqpx8p.jl:16\nin expression starting at\
    \ /tmp/tmp5upqpx8p.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255])\n\
    </cell>\n\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpadl80yx_.jl:16\nin expression starting at\
    \ /tmp/tmpadl80yx_.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpluol4njt.jl:16\nin expression starting at\
    \ /tmp/tmpluol4njt.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7,8])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpidsute_1.jl:16\nin expression starting at\
    \ /tmp/tmpidsute_1.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -20, -100, -200])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n            \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9n_rce66.jl:16\nin expression starting at\
    \ /tmp/tmp9n_rce66.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 0, 7, 123,\
    \ 456, 789])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Your\
    \ function should return -1 if the array is empty.\n    \n    You can assume that\
    \ all elements in the array are non-negative.\n    \n    You can assume that all\
    \ elements in the array are non-zero.\n    \n    You can assume that all elements\
    \ in the array are non-negative.\n    \n    You can assume that all elements in\
    \ the array are non-zero.\n    \n    You can assume that all elements in the array\
    \ are non-negative.\n    \n    You can assume that all elements in the array are\
    \ non-zero.\n    \n    You can assume that all elements in the array are non-negative.\n\
    \    \n    You can assume that all elements in the array are non-zero.\n    \n\
    \    You can assume that all elements in the array are non-negative.\n    \n \
    \   You can assume that all elements in the array are non-zero.\n    \n    You\
    \ can assume that all elements in the array are non-negative.\n    \n    You can\
    \ assume that all elements in the array are non-zero.\n    \n    You can assume\
    \ that all elements in the array are non-negative.\n    \n    You can assume that\
    \ all elements in the array are non-zero.\n    \n    You can assume that all elements\
    \ in the array are non-negative.\n    \n    You can assume that all elements in\
    \ the array are non-zero.\n    \n    You can assume that all elements in the array\
    \ are non-negative.\n    \n    You can assume that all elements in the array are\
    \ non-zero.\n    \n    You can assume that all elements in the array are non-negative.\n\
    \    \n    You can assume that all elements in the array are non-zero.\n    \n\
    \    You can assume that all elements in the array are non-negative.\n    \n \
    \   You can assume that all elements in the array are non-zero.\n    \n    You\
    \ can assume that all elements in the array are non-negative.\n    \n    You can\
    \ assume that all elements in the array are non-zero.\n    \n    You can assume\
    \ that all elements in the array are non-negative.\n    \n    You can assume that\
    \ all elements in the array are non-zero.\n    \n    You can assume that all elements\
    \ in the array are \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2opnrrtu.jl:16\nin expression starting at\
    \ /tmp/tmp2opnrrtu.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe9d5v3cm.jl:16\nin expression starting at\
    \ /tmp/tmpe9d5v3cm.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7,\
    \ 0, 7, 123, 456])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Your function should return 0 if the array is empty.\n    \n    You can assume\
    \ that all elements in the array are non-negative.\n    \n    You can assume that\
    \ all elements in the array are non-zero.\n    \n    You can assume that all elements\
    \ in the array are integers.\n    \n    You can assume that all elements in the\
    \ array are non-negative integers.\n    \n    You can assume that all elements\
    \ in the array are non-zero integers.\n    \n    You can assume that all elements\
    \ in the array are integers.\n    \n    You can assume that all elements in the\
    \ array are non-negative integers.\n    \n    You can assume that all elements\
    \ in the array are non-zero integers.\n    \n    You can assume that all elements\
    \ in the array are integers.\n    \n    You can assume that all elements in the\
    \ array are non-negative integers.\n    \n    You can assume that all elements\
    \ in the array are non-zero integers.\n    \n    You can assume that all elements\
    \ in the array are integers.\n    \n    You can assume that all elements in the\
    \ array are non-negative integers.\n    \n    You can assume that all elements\
    \ in the array are non-zero integers.\n    \n    You can assume that all elements\
    \ in the array are integers.\n    \n    You can assume that all elements in the\
    \ array are non-negative integers.\n    \n    You can assume that all elements\
    \ in the array are non-zero integers.\n    \n    You can assume that all elements\
    \ in the array are integers.\n    \n    You can assume that all elements in the\
    \ array are non-negative integers.\n    \n    You can assume that all elements\
    \ in the array are non-zero integers.\n    \n    You can assume that all elements\
    \ in the array are integers.\n    \n    You can assume that all elements in the\
    \ array are non-negative integers.\n    \n    You can assume that all elements\
    \ in the array are non-zero integers.\n    \n    You can assume that all elements\
    \ in the array are integers.\n    \n    You can assume that all elements in the\
    \ array are non-negative integers.\n    \n    You can assume that all element\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2uw421is.jl:16\nin expression starting at\
    \ /tmp/tmp2uw421is.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits < 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq9k528xo.jl:16\nin expression starting at\
    \ /tmp/tmpq9k528xo.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    Hint: Use count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo5u084qy.jl:16\nin expression starting at\
    \ /tmp/tmpo5u084qy.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.0>\ncount_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n\
    </cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, 8, -9, -10, -12,\
    \ -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.0>\ncount_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n\
    </cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, 8, -9, -10, -12,\
    \ -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.0>\ncount_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n\
    </cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, 8, -9, -10, -12,\
    \ -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.0>\ncount_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, -\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy0yo9smf.jl:16\nin expression starting at\
    \ /tmp/tmpy0yo9smf.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to count the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ count the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to count the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ count the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to count the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ count the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to count the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ count the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to count the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ count the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to count the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ count the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcn8lo5nr.jl:16\nin expression starting at\
    \ /tmp/tmpcn8lo5nr.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 0, 7, 123,\
    \ 456])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to solve the following problem:\n    \n    Write a Julia function that takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to solve the following problem:\n    \n    Write a Julia function that takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to solve the following problem:\n    \n    Write a Julia function that takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to solve the following problem:\n    \n    Write a Julia function that takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to solve the following problem:\n    \n    Write a Julia function that takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to solve the following problem:\n    \n    Write a Julia function that takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to solve the following problem:\n    \n    Write a Julia function that takes\
    \ an array of integers and returns\n    the number of elements which has a \n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9mquk9vn.jl:16\nin expression starting at\
    \ /tmp/tmp9mquk9vn.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2tz7r9ch.jl:16\nin expression starting at\
    \ /tmp/tmp2tz7r9ch.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -14, -15, -16, -17, 18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use a for loop to iterate through the array.\n    \n    Use a while\
    \ loop to iterate through the array.\n    \n    Use a do while loop to iterate\
    \ through the array.\n    \n    Use a for loop to iterate through the array.\n\
    \    \n    Use a while loop to iterate through the array.\n    \n    Use a do\
    \ while loop to iterate through the array.\n    \n    Use a for loop to iterate\
    \ through the array.\n    \n    Use a while loop to iterate through the array.\n\
    \    \n    Use a do while loop to iterate through the array.\n    \n    Use a\
    \ for loop to iterate through the array.\n    \n    Use a while loop to iterate\
    \ through the array.\n    \n    Use a do while loop to iterate through the array.\n\
    \    \n    Use a for loop to iterate through the array.\n    \n    Use a while\
    \ loop to iterate through the array.\n    \n    Use a do while loop to iterate\
    \ through the array.\n    \n    Use a for loop to iterate through the array.\n\
    \    \n    Use a while loop to iterate through the array.\n    \n    Use a do\
    \ while loop to iterate through the array.\n    \n    Use a for loop to iterate\
    \ through the array.\n    \n    Use a while loop to iterate through the array.\n\
    \    \n    Use a do while loop to iterate through the array.\n    \n    Use a\
    \ for loop to iterate through the array.\n    \n    Use a while loop to iterate\
    \ through the array.\n    \n    Use a do while loop to iterate through the array.\n\
    \    \n    Use a for loop to iterate through the array.\n    \n    Use a while\
    \ loop to iterate through the array.\n    \n    Use a do while loop to iterate\
    \ through the array.\n    \n    Use a for loop to iterate through the array.\n\
    \    \n    Use a while loop to iterate through the array.\n    \n    Use a do\
    \ while loop to iterate through the array.\n    \n    Use a for loop to iterate\
    \ through the array.\n    \n    Use a while loop to iterate through the array.\n\
    \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy_662ijs.jl:16\nin expression starting at\
    \ /tmp/tmpy_662ijs.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = Int64(0)\n    for num\
    \ in arr\n        if num < 0\n            count_nums -= 1\n        else\n    \
    \        count_nums += 1\n        end\n    end\n    return count_nums\nend\ncount_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpahx7xga3.jl:43\nin expression starting at\
    \ /tmp/tmpahx7xga3.jl:43\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, 18, 19, 20, -20, -21, 22, 23,\
    \ -24, 25, -26, 27, -28, 29, -3, 30, 31, 32, 33, 34, 35, -36, 37, -38, 39, -4,\
    \ 40, 41, 42, 43, 44, -45, 46, 47, -48, 49, -5, 50, 51, 52, 53, 54, -55, 56, 57,\
    \ -58, 59, -6, 60, 61, 62, 63, 64, 65, -66, 67, 68, -69, 70, 71, 72, 73, 74, -75,\
    \ 76, 77, -78, 79, -9, 80, 81, 82, 83, 84, 85, -86, 87, 88, -89, 90, 91, 92, 93,\
    \ 94, -95])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Your\
    \ function should return the following values:\n    count_nums([-123, -456, -7,\
    \ 8, -9, -10, -12, -13, -14, -15, -16, -17, 18, 19, 20, -20, -21, 22, 23, -24,\
    \ 25, -26, 27, -28, 29, -3, 30, 31, 32, 33, 34, 35, -36, 37, -38, 39, -4, 40,\
    \ 41, 42, 43, 44, -45, 46, 47, -48, 49, -5, 50, 51, 52, 53, 54, -55, 56, 57, -58,\
    \ 59, -6, 60, 61, 62, 63, 64, 65, -66, 67, 68, -69, 70, 71, 72, 73, 74, -75, 76,\
    \ 77, -78, 79, -9, 80, 81, 82, 83, 84, 85, -86, 87, 88, -89, 90, 91, 92, 93, 94,\
    \ -95])\n    count_nums([-123, -456, -7, 8, -9, -10, -12, -13, -14, -15, -16,\
    \ -17, 18, 19, 20, -20, -21, 22, 23, -24, 25, -26, 27, -28, 29, -3, 30, 31, 32,\
    \ 33, 34, 35, -36, 37, -38, 39, -4, 40, 41, 42, 43, 44, -45, 46, 47, -48, 49,\
    \ -5, 50, 51, 52, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqe63t1jl.jl:16\nin expression starting at\
    \ /tmp/tmpqe63t1jl.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmbqhr3vc.jl:16\nin expression starting at\
    \ /tmp/tmpmbqhr3vc.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Your function should return a vector of length\
    \ length(arr).\n    \n    For example, count_nums([-1, 2, -3, 4, -5, -6, -7, -8])\
    \ should return a vector\n    of length 8: [1, 1, 2, 1, 1, 2, 1, 1, 2]\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwyyj12pa.jl:16\nin expression starting at\
    \ /tmp/tmpwyyj12pa.jl:16\n"
  stdout: ''
  timestamp: 1659748618
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -100, -200, -300, -400, -500, -600, -700, -800, -900])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Use a for loop to iterate through the array\
    \ and count the number\n    of elements which has a sum of digits > 0.\n    \n\
    \    Use a while loop to iterate through the array and count the number\n    of\
    \ elements which has a sum of digits > 0.\n    \n    Use a do while loop to iterate\
    \ through the array and count the number\n    of elements which has a sum of digits\
    \ > 0.\n    \n    Use a for loop to iterate through the array and count the number\n\
    \    of elements which has a sum of digits > 0.\n    \n    Use a while loop to\
    \ iterate through the array and count the number\n    of elements which has a\
    \ sum of digits > 0.\n    \n    Use a do while loop to iterate through the array\
    \ and count the number\n    of elements which has a sum of digits > 0.\n    \n\
    \    Use a for loop to iterate through the array and count the number\n    of\
    \ elements which has a sum of digits > 0.\n    \n    Use a while loop to iterate\
    \ through the array and count the number\n    of elements which has a sum of digits\
    \ > 0.\n    \n    Use a do while loop to iterate through the array and count the\
    \ number\n    of elements which has a sum of digits > 0.\n    \n    Use a for\
    \ loop to iterate through the array and count the number\n    of elements which\
    \ has a sum of digits > 0.\n    \n    Use a while loop to iterate through the\
    \ array and count the number\n    of elements which has a sum of digits > 0.\n\
    \    \n    Use a do while loop to iterate through the array and count the number\n\
    \    of elements which has a sum of digits > 0.\n    \n    Use a for loop to iterate\
    \ through the array and count the number\n    of elements which has a sum of digits\
    \ > 0.\n    \n    Use a while loop to iterate through the array and count the\
    \ number\n    of elements which has a sum of digits > 0.\n    \n    Use a do while\
    \ loop to iterate through the array and count the number\n    of elements which\
    \ has a sum of digits > 0.\n    \n    Use a for loop\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxig2fq2j.jl:16\nin expression starting at\
    \ /tmp/tmpxig2fq2j.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\nHint: Use count_nums.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0pj01f4s.jl:16\nin expression starting at\
    \ /tmp/tmp0pj01f4s.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = Int64(0)\n    for x\
    \ in arr\n        if x > 0 \n            count_nums += x\n        end\n    end\n\
    \    return count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 8, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7,\
    \ -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5,\
    \ -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb2h4vtse.jl:16\nin expression starting at\
    \ /tmp/tmpb2h4vtse.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, 9])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3,\
    \ -4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5,\
    \ 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3,\
    \ -4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5,\
    \ 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3,\
    \ -4, -5, 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5,\
    \ 6])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, 6])\n</cell\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj_cp0juh.jl:16\nin expression starting at\
    \ /tmp/tmpj_cp0juh.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, 18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to find the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ find the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to find the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ find the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to find the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ find the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to find the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ find the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to find the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ find the number of elements in the array which has a\n    sum of digits > 0.\n\
    \    \n    Use count_nums to find the number of elements in the array which has\
    \ a\n    sum of digits > 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array which has a\n    sum of digits > 0.\n    \n    Use count_nums to\
    \ find the number of elements in the array which has a\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpquowa1ze.jl:16\nin expression starting at\
    \ /tmp/tmpquowa1ze.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\ncount_nums(arr)\n</cell>\n<text>\nQuestion 3\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits > 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: Use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: arr not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpelqwzds6.jl:16\nin expression starting at /tmp/tmpelqwzds6.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: Use a for loop to\
    \ iterate through the array.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyaq17g_p.jl:16\nin expression starting at\
    \ /tmp/tmpyaq17g_p.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    Hint: use count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp29l2gl81.jl:16\nin expression starting at\
    \ /tmp/tmp29l2gl81.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpup92mya4.jl:16\nin expression starting at\
    \ /tmp/tmpup92mya4.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -14, -16, -18, 19])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use a for loop to iterate over the array and count the number of elements\
    \ \n    which has a sum of digits > 0.\n    \n    Use a while loop to iterate\
    \ over the array and count the number of elements \n    which has a sum of digits\
    \ > 0.\n    \n    Use a do while loop to iterate over the array and count the\
    \ number of elements \n    which has a sum of digits > 0.\n    \n    Use a for\
    \ loop to iterate over the array and count the number of elements \n    which\
    \ has a sum of digits > 0.\n    \n    Use a while loop to iterate over the array\
    \ and count the number of elements \n    which has a sum of digits > 0.\n    \n\
    \    Use a do while loop to iterate over the array and count the number of elements\
    \ \n    which has a sum of digits > 0.\n    \n    Use a for loop to iterate over\
    \ the array and count the number of elements \n    which has a sum of digits >\
    \ 0.\n    \n    Use a while loop to iterate over the array and count the number\
    \ of elements \n    which has a sum of digits > 0.\n    \n    Use a do while loop\
    \ to iterate over the array and count the number of elements \n    which has a\
    \ sum of digits > 0.\n    \n    Use a for loop to iterate over the array and count\
    \ the number of elements \n    which has a sum of digits > 0.\n    \n    Use a\
    \ while loop to iterate over the array and count the number of elements \n   \
    \ which has a sum of digits > 0.\n    \n    Use a do while loop to iterate over\
    \ the array and count the number of elements \n    which has a sum of digits >\
    \ 0.\n    \n    Use a for loop to iterate over the array and count the number\
    \ of elements \n    which has a sum of digits > 0.\n    \n    Use a while loop\
    \ to iterate over the array and count the number of elements \n    which has a\
    \ sum of digits > 0.\n    \n    Use a do while loop to iterate over the array\
    \ and count the number of elements \n    which has a sum of digits > 0.\n    \n\
    \    Use a for loop to iterate over the array and count the number of elements\
    \ \n    which has a sum of digits > 0.\n    \n    Use a while \nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx2sd05dq.jl:16\nin expression starting at\
    \ /tmp/tmpx2sd05dq.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv6lzb0n0.jl:16\nin expression starting at\
    \ /tmp/tmpv6lzb0n0.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for num in arr\n\
    \        if num > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -15, -16, -17, -21])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20,\
    \ -21])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -13, -14, -15, -16, -17, -18, -19, -20, -21, -22])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17,\
    \ -18, -19, -20, -21, -22])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20,\
    \ -21, -22])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5,\
    \ -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -13, -14, -15, -16, -17, -18, -19, -20, -21, -22])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17,\
    \ -18, -\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi4narmwb.jl:16\nin expression starting at\
    \ /tmp/tmpi4narmwb.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    Hint: You can use the function count_nums.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0o98zg96.jl:16\nin expression starting at\
    \ /tmp/tmp0o98zg96.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\ncount_nums(arr)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: arr not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp563a1mct.jl:16\nin expression starting at /tmp/tmp563a1mct.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    Hint: use count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwownmxkg.jl:16\nin expression starting at\
    \ /tmp/tmpwownmxkg.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456, -7, 0, 7, 123,\
    \ 456, 789])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use a\
    \ for loop to iterate over the array.\n    Use a while loop to iterate over the\
    \ array.\n    Use a do loop to iterate over the array.\n    Use a while loop to\
    \ iterate over the array.\n    Use a for loop to iterate over the array.\n   \
    \ Use a while loop to iterate over the array.\n    Use a for loop to iterate over\
    \ the array.\n    Use a while loop to iterate over the array.\n    Use a for loop\
    \ to iterate over the array.\n    Use a while loop to iterate over the array.\n\
    \    Use a for loop to iterate over the array.\n    Use a while loop to iterate\
    \ over the array.\n    Use a for loop to iterate over the array.\n    Use a while\
    \ loop to iterate over the array.\n    Use a for loop to iterate over the array.\n\
    \    Use a while loop to iterate over the array.\n    Use a for loop to iterate\
    \ over the array.\n    Use a while loop to iterate over the array.\n    Use a\
    \ for loop to iterate over the array.\n    Use a while loop to iterate over the\
    \ array.\n    Use a for loop to iterate over the array.\n    Use a while loop\
    \ to iterate over the array.\n    Use a for loop to iterate over the array.\n\
    \    Use a while loop to iterate over the array.\n    Use a for loop to iterate\
    \ over the array.\n    Use a while loop to iterate over the array.\n    Use a\
    \ for loop to iterate over the array.\n    Use a while loop to iterate over the\
    \ array.\n    Use a for loop to iterate over the array.\n    Use a while loop\
    \ to iterate over the array.\n    Use a for loop to iterate over the array.\n\
    \    Use a while loop to iterate over the array.\n    Use a for loop to iterate\
    \ over the array.\n    Use a while loop to iterate over the array.\n    Use a\
    \ for loop to iterate over the array.\n    Use a while loop to iterate over the\
    \ array.\n    Use a for loop to iterate over the array.\n    Use a while loop\
    \ to iterate over the array.\n    Use a for loop to iterate over the array.\n\
    \    Use a while loop to iterate over the array.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5846r598.jl:16\nin expression starting at\
    \ /tmp/tmp5846r598.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, 18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqlc5bxw8.jl:16\nin expression starting at\
    \ /tmp/tmpqlc5bxw8.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Your function should return a vector of integers, one for each element\
    \ in\n    the input array. Your function should also return an error if any of\
    \ the\n    elements in the input array are negative.\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqxhjcsxu.jl:16\nin expression starting at\
    \ /tmp/tmpqxhjcsxu.jl:16\n"
  stdout: ''
  timestamp: 1659748620
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppgg8he_y.jl:16\nin expression starting at\
    \ /tmp/tmppgg8he_y.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, -3, 4])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, -3, 4])\n</\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp007lnjx8.jl:16\nin expression starting at\
    \ /tmp/tmp007lnjx8.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 0, 7, 123, 456, 789])\n</cell>\n<text>\nExercise 2\nWrite a function count_digits(arr::Vector{Int64})::Int64\
    \ which returns the number of digits in each element of arr. \nThe function should\
    \ return an array of integers, where each element is the number of digits in that\
    \ element.\nFor example, count_digits([-123, -456, -7, 0, 7, 123, 456, 789]) should\
    \ return [3, 3, 2, 2, 1, 4, 1, 1]. \nThe function should work for negative numbers\
    \ as well.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4rc3h67x.jl:16\nin expression starting at\
    \ /tmp/tmp4rc3h67x.jl:16\n"
  stdout: ''
  timestamp: 1659748620
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19, -20, -10,\
    \ -12, -13, -14, -15, -16, -17, \n              -18, 19, -20, -10, -12, -13, -14,\
    \ -15, -16, -17, \n              -18, 19, -20, -10, -12, -13, -14, -15, -16, -17,\
    \ \n              -18, 19, -20, -10, -12, -13, -14, -15, -16, -17, \n        \
    \      -18, 19, -20, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19,\
    \ -20, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19, -20, -10, -12,\
    \ -13, -14, -15, -16, -17, \n              -18, 19, -20, -10, -12, -13, -14, -15,\
    \ -16, -17, \n              -18, 19, -20, -10, -12, -13, -14, -15, -16, -17, \n\
    \              -18, 19, -20, -10, -12, -13, -14, -15, -16, -17, \n           \
    \   -18, 19, -20, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19,\
    \ -20, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19, -20, -10, -12,\
    \ -13, -14, -15, -16, -17, \n              -18, 19, -20, -10, -12, -13, -14, -15,\
    \ -16, -17, \n              -18, 19, -20, -10, -12, -13, -14, -15, -16, -17, \n\
    \              -18, 19, -20, -10, -12, -13, -14, -15, -16, -17, \n           \
    \   -18, 19, -20, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19,\
    \ -20, -10, -12, -13, -14, -15, -16, -17, \n              -18, 19, -20, -10, -12,\
    \ -13, -14, -15, -16, -17, \n              -18, 19, -20, -10, -12, -13, -14, -15,\
    \ -16, -17, \n              -18, 19, -20, -10, -12, -13, -14, -15, -16, -17, \n\
    \              -18, 19\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv7ukr7_x.jl:16\nin expression starting at\
    \ /tmp/tmpv7ukr7_x.jl:16\n"
  stdout: ''
  timestamp: 1659748620
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Your function should return a vector of integers\
    \ containing the number of elements \n    which has a sum of digits > 0.\n   \
    \ \n    For example, count_nums([1, 2, -3, 4, -5, 6]) should return a vector of\n\
    \    integers [1, 1, 2, 1, 1, 1]\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpry3eklq_.jl:16\nin expression starting at\
    \ /tmp/tmpry3eklq_.jl:16\n"
  stdout: ''
  timestamp: 1659748620
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr1)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr2)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr3)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr4)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr5)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr6)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr7)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr8)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr9)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr10)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr11)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr12)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr13)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr14)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr15)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr16)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr17)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr18)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr19)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr20)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr21)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr22)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr23)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr24)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr25)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr26)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr27)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr28)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr29)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr30)\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdpihubyb.jl:16\nin expression starting at\
    \ /tmp/tmpdpihubyb.jl:16\n"
  stdout: ''
  timestamp: 1659748620
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzx9p7gmo.jl:16\nin expression starting at\
    \ /tmp/tmpzx9p7gmo.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphb_dfr67.jl:16\nin expression starting at\
    \ /tmp/tmphb_dfr67.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits < 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpju0pnbdb.jl:16\nin expression starting at\
    \ /tmp/tmpju0pnbdb.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvna_cbi5.jl:16\nin expression starting at\
    \ /tmp/tmpvna_cbi5.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\ncount_nums(arr)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits > 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: arr not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi6_ugfid.jl:16\nin expression starting at /tmp/tmpi6_ugfid.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -12, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-123, -456, -7, 8, -9, -10, -12, -14, -15,\
    \ -16, -17, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -12, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-123, -456, -7, 8, -9, -10, -12, -14, -15,\
    \ -16, -17, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -12, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-123, -456, -7, 8, -9, -10, -12, -14, -15,\
    \ -16, -17, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -12, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-123, -456, -7, \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfy0xnf_j.jl:16\nin expression starting at\
    \ /tmp/tmpfy0xnf_j.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits < 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph1pk2txx.jl:16\nin expression starting at\
    \ /tmp/tmph1pk2txx.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for num in arr\n\
    \        if num < 0\n            count_nums += 1\n        else\n            count_nums\
    \ += count_digits(num)\n        end\n    end\n    return count_nums\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-123, -456, -7, -9, -10, -100, -200, -300,\
    \ -400, -500, -600])\n</cell>\n<text>\nExercise 2\nWrite a function count_digits(n)\
    \ that returns the number of digits in n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwwsn728w.jl:18\nin expression starting at\
    \ /tmp/tmpwwsn728w.jl:18\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 0, 7, 123, 456, 789])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm7o5j4d_.jl:16\nin expression starting at\
    \ /tmp/tmpm7o5j4d_.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Use a for loop to iterate through the array.\n\
    \    \n    Use a while loop to iterate through the array.\n    \n    Use a do\
    \ loop to iterate through the array.\n    \n    Use a for loop to iterate through\
    \ the array.\n    \n    Use a while loop to iterate through the array.\n    \n\
    \    Use a do loop to iterate through the array.\n    \n    Use a for loop to\
    \ iterate through the array.\n    \n    Use a while loop to iterate through the\
    \ array.\n    \n    Use a do loop to iterate through the array.\n    \n    Use\
    \ a for loop to iterate through the array.\n    \n    Use a while loop to iterate\
    \ through the array.\n    \n    Use a do loop to iterate through the array.\n\
    \    \n    Use a for loop to iterate through the array.\n    \n    Use a while\
    \ loop to iterate through the array.\n    \n    Use a do loop to iterate through\
    \ the array.\n    \n    Use a for loop to iterate through the array.\n    \n \
    \   Use a while loop to iterate through the array.\n    \n    Use a do loop to\
    \ iterate through the array.\n    \n    Use a for loop to iterate through the\
    \ array.\n    \n    Use a while loop to iterate through the array.\n    \n   \
    \ Use a do loop to iterate through the array.\n    \n    Use a for loop to iterate\
    \ through the array.\n    \n    Use a while loop to iterate through the array.\n\
    \    \n    Use a do loop to iterate through the array.\n    \n    Use a for loop\
    \ to iterate through the array.\n    \n    Use a while loop to iterate through\
    \ the array.\n    \n    Use a do loop to iterate through the array.\n    \n  \
    \  Use a for loop to iterate through the array.\n    \n    Use a while loop to\
    \ iterate through the array.\n    \n    Use a do loop to iterate through the array.\n\
    \    \n    Use a for loop to iterate through the array.\n    \n    Use a while\
    \ loop to iterate through the array.\n    \n    Use a do loop to iterate through\
    \ the array.\n    \n    Use a for loop to iterate through the array.\n    \n \
    \   Use a while loop to iterate \nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp210gb4tx.jl:16\nin expression starting at\
    \ /tmp/tmp210gb4tx.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for x in arr\n    \
    \    if x > 0 \n            sum += x\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.3>\ncount_nums([-123, -456, -7, 8, 9])\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([1, 2, -3, 4])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy4ongvtu.jl:16\nin expression starting at\
    \ /tmp/tmpy4ongvtu.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr1)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr2)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr3)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr4)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr5)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr6)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr7)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr8)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr9)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr10)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr11)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr12)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr13)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr14)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr15)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr16)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr17)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr18)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr19)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr20)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr21)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr22)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr23)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr24)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr25)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr26)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr27)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr28)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr29)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphsu4_zu6.jl:16\nin expression starting at\
    \ /tmp/tmphsu4_zu6.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\
    \ 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,\
    \ 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Use a while loop to iterate through the array.\
    \ \n    \n    Use a for loop to iterate through the array. \n    \n    Use a for\
    \ loop to iterate through the array. \n    \n    Use a while loop to iterate through\
    \ the array. \n    \n    Use a while loop to iterate through the array. \n   \
    \ \n    Use a while loop to iterate through the array. \n    \n    Use a while\
    \ loop to iterate through the array. \n    \n    Use a while loop to iterate through\
    \ the array. \n    \n    Use a while loop to iterate through the array. \n   \
    \ \n    Use a while loop to iterate through the array. \n    \n    Use a while\
    \ loop to iterate through the array. \n    \n    Use a while loop to iterate through\
    \ the array. \n    \n    Use a while loop to iterate through the array. \n   \
    \ \n    Use a while loop to iterate through the array. \n    \n    Use a while\
    \ loop to iterate through the array. \n    \n    Use a while loop to iterate through\
    \ the array. \n    \n    Use a while loop to iterate through the array. \n   \
    \ \n    Use a while loop to iterate through the array. \n    \n    Use a while\
    \ loop to iterate through the array. \n    \n    Use a while loop to iterate through\
    \ the array. \n    \n    Use a while loop to iterate through the array. \n   \
    \ \n    Use \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6iewp7d6.jl:16\nin expression starting at\
    \ /tmp/tmp6iewp7d6.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -13, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 8, -9, -10, -13, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -13, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10, -13, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -13, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -13, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10, -13, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -13, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -13, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10, -13, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -13, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, 8, -9, -10, -13, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeia9tisx.jl:16\nin expression starting at\
    \ /tmp/tmpeia9tisx.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for n in arr\n\
    \        if n > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\ncount_nums(arr)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: arr not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl4tah93k.jl:16\nin expression starting at /tmp/tmpl4tah93k.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for num in arr\n\
    \        if num < 0\n            count_nums += 1\n        elseif num == 0\n  \
    \          count_nums += 1\n        else\n            count_nums += count_digits(num)\n\
    \        end\n    end\n    return count_nums\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -10, 0, 10, 123, 234])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use\
    \ count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0u0qwxiy.jl:20\nin expression starting at\
    \ /tmp/tmp0u0qwxiy.jl:20\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits < 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\nHint: Use count_nums.\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3vt4x7u_.jl:16\nin expression starting at\
    \ /tmp/tmp3vt4x7u_.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, 18])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use a for loop to iterate over the array and count the number of elements\n\
    \    which has a sum of digits > 0.\n    \n    Use a while loop to iterate over\
    \ the array and count the number of elements\n    which has a sum of digits >\
    \ 0.\n    \n    Use a do loop to iterate over the array and count the number of\
    \ elements\n    which has a sum of digits > 0.\n    \n    Use a for loop to iterate\
    \ over the array and count the number of elements\n    which has a sum of digits\
    \ > 0.\n    \n    Use a while loop to iterate over the array and count the number\
    \ of elements\n    which has a sum of digits > 0.\n    \n    Use a do loop to\
    \ iterate over the array and count the number of elements\n    which has a sum\
    \ of digits > 0.\n    \n    Use a for loop to iterate over the array and count\
    \ the number of elements\n    which has a sum of digits > 0.\n    \n    Use a\
    \ while loop to iterate over the array and count the number of elements\n    which\
    \ has a sum of digits > 0.\n    \n    Use a do loop to iterate over the array\
    \ and count the number of elements\n    which has a sum of digits > 0.\n    \n\
    \    Use a for loop to iterate over the array and count the number of elements\n\
    \    which has a sum of digits > 0.\n    \n    Use a while loop to iterate over\
    \ the array and count the number of elements\n    which has a sum of digits >\
    \ 0.\n    \n    Use a do loop to iterate over the array and count the number of\
    \ elements\n    which has a sum of digits > 0.\n    \n    Use a for loop to iterate\
    \ over the array and count the number of elements\n    which has a sum of digits\
    \ > 0.\n    \n    Use a while loop to iterate over the array and count the number\
    \ of elements\n    which has a sum of digits > 0.\n    \n    Use a do loop to\
    \ iterate over the array and count the number of elements\n    which has a sum\
    \ of digits > 0.\n    \n    Use a for loop to iterate over the array and count\
    \ the number of elements\n    which has a sum of digits > 0.\n    \n    Use a\
    \ while loop to \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0x4tirqh.jl:16\nin expression starting at\
    \ /tmp/tmp0x4tirqh.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for n in arr\n    \
    \    if n > 0\n            sum += n\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10, -12,\
    \ -13, -14, -15, -16, -17, -18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits > 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjj7joghl.jl:16\nin expression starting at\
    \ /tmp/tmpjj7joghl.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -18])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -12, -14, -15, -16, -17, -18, -19])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -18,\
    \ -19, -20, -21])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -18, -19, -20, -21, -22])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -12, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23])\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -18,\
    \ -19, -20, -21, -22, -23, -24, -25])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -18, -19, -20, -21,\
    \ -22, -23, -24, -25, -26])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -15, -16, -17, -18, -19, -20, -21,\
    \ -22, -23, -\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx2j3bs0_.jl:16\nin expression starting at\
    \ /tmp/tmpx2j3bs0_.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -16, -18, -21])\n</cell>\n<code language=julia-1.3>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21])\n\
    </cell>\n<code language=julia-1.3>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -12, -14, -16, -18, -21, -23])\n</cell>\n<code language=julia-1.3>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -23, -24])\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12,\
    \ -14, -16, -18, -21, -23, -24, -25])\n</cell>\n<code language=julia-1.3>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -23, -24, -25, -26])\n\
    </cell>\n<code language=julia-1.3>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9,\
    \ -10, -12, -14, -16, -18, -21, -23, -24, -25, -26, -27])\n</cell>\n<code language=julia-1.3>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -23,\
    \ -24, -25, -26, -27, -28])\n</cell>\n<code language=julia-1.3>\ncount_nums([1,\
    \ 2, 3, -4, -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -23, -24, -25, -26,\
    \ -27, -28, -29])\n</cell>\n<code language=julia-1.3>\ncount_nums([1, 2, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -23, -24, -25, -26, -27, -28,\
    \ -29, -30])\n</cell>\n<code language=julia-1.3>\ncount_nums([1, 2, 3, -\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4oxcd40p.jl:16\nin expression starting at\
    \ /tmp/tmp4oxcd40p.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for num in arr\n\
    \        if num < 0\n            count_nums += 1\n        else\n            count_nums\
    \ += count_digits(num)\n        end\n    end\n    return count_nums\nend\ncount_nums(arr::Vector{Int64})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Int}) = count_nums(arr)\ncount_nums(arr::Vector{Int8})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{UInt8}) = count_nums(arr)\ncount_nums(arr::Vector{Int16})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{UInt16}) = count_nums(arr)\ncount_nums(arr::Vector{Int32})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{UInt32}) = count_nums(arr)\ncount_nums(arr::Vector{Float32})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Float64}) = count_nums(arr)\ncount_nums(arr::Vector{Complex64})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Complex128}) = count_nums(arr)\ncount_nums(arr::Vector{Bool})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{String}) = count_nums(arr)\ncount_nums(arr::Vector{Symbol})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Any}) = count_nums(arr)\ncount_nums(arr::Vector{Any})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Any}) = count_nums(arr)\ncount_nums(arr::Vector{Any})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Any}) = count_nums(arr)\ncount_nums(arr::Vector{Any})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Any}) = count_nums(arr)\ncount_nums(arr::Vector{Any})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Any}) = count_nums(arr)\ncount_nums(arr::Vector{Any})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Any}) = count_nums(arr)\ncount_nums(arr::Vector{Any})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Any}) = count_nums(arr)\ncount_nums(arr::Vector{Any})\
    \ = count_nums(arr)\ncount_nums(arr::Vector{Any}) = count_nums(arr)\ncount_nums(arr::Vector{Any})\
    \ = \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: Complex64 not defined\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmp90_hxdg4.jl:28\nin expression starting at /tmp/tmp90_hxdg4.jl:28\n"
  stdout: ''
  timestamp: 1659748622
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums(arr1)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\nHint: use count_nums.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmw1gqslq.jl:16\nin expression starting at\
    \ /tmp/tmpmw1gqslq.jl:16\n"
  stdout: ''
  timestamp: 1659748622
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 0, 7, 123,\
    \ 456, 789])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to solve the problem below.\n    \n    arr = [-7, 0, 7, 123, 456, 789]\n   \
    \ count_nums(arr)\n    \n    arr = [-7, 0, 7, 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n\
    \    \n    arr = [-7, 0, 7, 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n  \
    \  \n    arr = [-7, 0, 7, 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n    \n\
    \    arr = [-7, 0, 7, 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n    \n  \
    \  arr = [-7, 0, 7, 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n    \n    arr\
    \ = [-7, 0, 7, 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n    \n    arr =\
    \ [-7, 0, 7, 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n    \n    arr = [-7,\
    \ 0, 7, 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n    \n    arr = [-7, 0,\
    \ 7, 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n    \n    arr = [-7, 0, 7,\
    \ 123, 456, 789, -1, 2, 3]\n    count_nums(arr)\n    \n    arr = [-7, 0, 7, 123,\
    \ 456, 789, -1, 2, 3]\n    count_nums(arr)\n    \n    arr = [-7, 0, 7, 123, 456,\
    \ 789, -1, 2, 3]\n    count_nums(arr)\n    \n    arr = [-7, 0, 7, 123, 456, 789,\
    \ -1, 2, 3]\n    count_nums(arr)\n    \n    arr = [-7, 0, 7, 123, 456, 789, -1,\
    \ 2, 3]\n    count_nums(arr)\n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw0kdogxv.jl:16\nin expression starting at\
    \ /tmp/tmpw0kdogxv.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\nHint: use the function count_nums defined above.\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpimooj4u7.jl:16\nin expression starting at\
    \ /tmp/tmpimooj4u7.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Your function should return -1 for an empty array.\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9c69o7hd.jl:16\nin expression starting at\
    \ /tmp/tmp9c69o7hd.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -13, -14, -15, -16, -17, 18, 19, 20, -20, -21])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Use a for loop to iterate through the array\
    \ and count the number of elements \n    which has a sum of digits > 0.\n    \n\
    \    Use a while loop to iterate through the array and count the number of elements\
    \ \n    which has a sum of digits > 0.\n    \n    Use a do while loop to iterate\
    \ through the array and count the number of elements \n    which has a sum of\
    \ digits > 0.\n    \n    Use a for loop to iterate through the array and count\
    \ the number of elements \n    which has a sum of digits > 0.\n    \n    Use a\
    \ while loop to iterate through the array and count the number of elements \n\
    \    which has a sum of digits > 0.\n    \n    Use a do while loop to iterate\
    \ through the array and count the number of elements \n    which has a sum of\
    \ digits > 0.\n    \n    Use a for loop to iterate through the array and count\
    \ the number of elements \n    which has a sum of digits > 0.\n    \n    Use a\
    \ while loop to iterate through the array and count the number of elements \n\
    \    which has a sum of digits > 0.\n    \n    Use a do while loop to iterate\
    \ through the array and count the number of elements \n    which has a sum of\
    \ digits > 0.\n    \n    Use a for loop to iterate through the array and count\
    \ the number of elements \n    which has a sum of digits > 0.\n    \n    Use a\
    \ while loop to iterate through the array and count the number of elements \n\
    \    which has a sum of digits > 0.\n    \n    Use a do while loop to iterate\
    \ through the array and count the number of elements \n    which has a sum of\
    \ digits > 0.\n    \n    Use a for loop to iterate through the array and count\
    \ the number of elements \n    which has a sum of digits > 0.\n    \n    Use a\
    \ while loop to iterate through the array and count the number of elements \n\
    \    which has a sum of digits > 0.\n    \n    Use a do while loop to iterate\
    \ through the array and count the number of elements \n    which has a sum of\
    \ digits > 0.\n    \n    Use a for loop to iterate through the array and count\
    \ the number of elements \n    \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprrkltrka.jl:16\nin expression starting at\
    \ /tmp/tmprrkltrka.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for n in arr\n\
    \        if n > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use a for loop to iterate over the array. \n    \n    Use a while loop\
    \ to iterate over the array. \n    \n    Use a do while loop to iterate over the\
    \ array. \n    \n    Use a for loop to iterate over the array. \n    \n    Use\
    \ a while loop to iterate over the array. \n    \n    Use a do while loop to iterate\
    \ over the array. \n    \n    Use a for loop to iterate over the array. \n   \
    \ \n    Use a while loop to iterate over the array. \n    \n    Use a do while\
    \ loop to iterate over the array. \n    \n    Use a for loop to iterate over the\
    \ array. \n    \n    Use a while loop to iterate over the array. \n    \n    Use\
    \ a do while loop to iterate over the array. \n    \n    Use a for loop to iterate\
    \ over the array. \n    \n    Use a while loop to iterate over the array. \n \
    \   \n    Use a do while loop to iterate over the array. \n    \n    Use a for\
    \ loop to iterate over the array. \n    \n    Use a while loop to iterate over\
    \ the array. \n    \n    Use a do while loop to iterate over the array. \n   \
    \ \n    Use a for loop to iterate over the array. \n    \n    Use a while loop\
    \ to iterate over the array. \n    \n    Use a do while loop to iterate over the\
    \ array. \n    \n    Use a for loop to iterate over the array. \n    \n    Use\
    \ a while loop to iterate over the array. \n    \n    Use a do while loop to iterate\
    \ over the array. \n    \n    Use a for loop to iterate over the array. \n   \
    \ \n    Use a while loop to iterate over the array. \n    \n    Use a do while\
    \ loop to iterate over the array. \n    \n    Use a for loop to iterate over the\
    \ array. \n    \n    Use a while loop to iterate over the array. \n    \n    Use\
    \ a do \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4y8lpemk.jl:16\nin expression starting at\
    \ /tmp/tmp4y8lpemk.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, 18, 19, 20, -20, 21, 22, 23, 24,\
    \ 25, -25, -26, 27, 28, 29, 30, -30, 31, 32, 33, 34, 35, 36, 37, 38, 39, -40,\
    \ -41, 42, 43, 44, 45, 46, 47, 48, 49, 50, -50, -51, 52, 53, 54, 55, 56, 57, 58,\
    \ 59, 60, 61, 62, 63, 64, 65, -65])\n</cell>\n<text>\nQuestion 2.2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a Julia\
    \ function to find the number of positive integers whose digits sum to 0.\n  \
    \  \n    For example, count_nums([123, 456, -7, 8, -9, -10, -12, -13, -14, -15,\
    \ -16, -17, 18, 19, 20, -20, 21, 22, 23, 24, 25, -25, -26, 27, 28, 29, 30, -30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, -40, -41, 42, 43, 44, 45, 46, 47, 48, 49,\
    \ 50, -50, -51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, -65])\
    \ should return 5.\n    \n    Use count_nums to solve the following problem:\n\
    \    \n    Write a Julia function to find the number of positive integers whose\
    \ digits sum to 0.\n    \n    For example, count_nums([123, 456, -7, 8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, 18, 19, 20, -20, 21, 22, 23, 24, 25, -25, -26,\
    \ 27, 28, 29, 30, -30, 31, 32, 33, 34, 35, 36, 37, 38, 39, -40, -41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, -50, -51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,\
    \ 63, 64, 65, -65]) should return 5.\n    \n    Use count_nums to solve the following\
    \ problem:\n    \n    Write a Julia function to find the number of positive integers\
    \ whose digits sum to 0.\n    \n    For example, count_nums([123, 456, -7, \n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpersdyjb1.jl:16\nin expression starting at\
    \ /tmp/tmpersdyjb1.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 0, 7, 123, 456, 789])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpphumts_z.jl:16\nin expression starting at\
    \ /tmp/tmpphumts_z.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpemp4wput.jl:16\nin expression starting at\
    \ /tmp/tmpemp4wput.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Use count_nums to count the number of elements in the array which has\
    \ \n    a sum of digits > 0.\n    \n    Use count_nums to count the number of\
    \ elements in the array which has \n    a sum of digits > 0.\n    \n    Use count_nums\
    \ to count the number of elements in the array which has \n    a sum of digits\
    \ > 0.\n    \n    Use count_nums to count the number of elements in the array\
    \ which has \n    a sum of digits > 0.\n    \n    Use count_nums to count the\
    \ number of elements in the array which has \n    a sum of digits > 0.\n    \n\
    \    Use count_nums to count the number of elements in the array which has \n\
    \    a sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has \n    a sum of digits > 0.\n    \n    Use count_nums\
    \ to count the number of elements in the array which has \n    a sum of digits\
    \ > 0.\n    \n    Use count_nums to count the number of elements in the array\
    \ which has \n    a sum of digits > 0.\n    \n    Use count_nums to count the\
    \ number of elements in the array which has \n    a sum of digits > 0.\n    \n\
    \    Use count_nums to count the number of elements in the array which has \n\
    \    a sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has \n    a sum of digits > 0.\n    \n    Use count_nums\
    \ to count the number of elements in the array which has \n    a sum of digits\
    \ > 0.\n    \n    Use count_nums to count the number of elements in the array\
    \ which has \n    a sum of digits > 0.\n    \n    Use count_nums to count the\
    \ number of elements in the array which has \n    a sum of digits > 0.\n    \n\
    \    Use count_nums to count the number of elements in the array which has \n\
    \    a sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has \n    a sum of digits > 0.\n    \n    Use count_nums\
    \ to count the number of elements in the array which has \n    a sum of digits\
    \ > 0.\n    \n    Use count_nums to count the number of elements in the array\
    \ which has \n    a sum of digits > 0.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkg48mxrq.jl:16\nin expression starting at\
    \ /tmp/tmpkg48mxrq.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use a while loop to\
    \ iterate through the array and count the number\n    of elements which has a\
    \ sum of digits > 0.\n    \n    Use a for loop to iterate through the array and\
    \ count the number\n    of elements which has a sum of digits > 0.\n    \n   \
    \ Use a for loop to iterate through the array and count the number\n    of elements\
    \ which has a sum of digits > 0.\n    \n    Use a while loop to iterate through\
    \ the array and count the number\n    of elements which has a sum of digits >\
    \ 0.\n    \n    Use a while loop to iterate through the array and count the number\n\
    \    of elements which has a sum of digits > 0.\n    \n    Use a while loop to\
    \ iterate through the array and count the number\n    of elements which has a\
    \ sum of digits > 0.\n    \n    Use a while loop to iterate through the array\
    \ and count the number\n    of elements which has a sum of digits > 0.\n    \n\
    \    Use a while loop to iterate through the array and count the number\n    of\
    \ elements which has a sum of digits > 0.\n    \n    Use a while loop to iterate\
    \ through the array and count the number\n    of elements which has a sum of digits\
    \ > 0.\n    \n    Use a while loop to iterate through the array and count the\
    \ number\n    of elements which has a sum of digits > 0.\n    \n    Use a while\
    \ loop to iterate through the array and count the number\n    of elements which\
    \ has a sum of digits > 0.\n    \n    Use a while loop to iterate through the\
    \ array and count the number\n    of elements which has a sum of digits > 0.\n\
    \    \n    Use a while loop to iterate through the array and count the number\n\
    \    of elements which has a sum of digits > 0.\n    \n    Use a while loop to\
    \ iterate through the array and count the number\n    of elements which has a\
    \ sum of digits > 0.\n    \n    Use a while loop to iterate through the array\
    \ and count the number\n    of elements which has a sum of digits > 0.\n    \n\
    \    Use a while loop to iterate through the array and count the number\n    of\
    \ elements which has a sum of \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp284c5ma7.jl:16\nin expression starting at\
    \ /tmp/tmp284c5ma7.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -45\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9pujbmkv.jl:16\nin expression starting at\
    \ /tmp/tmp9pujbmkv.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr1)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr2)\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeaib0s7l.jl:16\nin expression starting at\
    \ /tmp/tmpeaib0s7l.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8gj09leh.jl:16\nin expression starting at\
    \ /tmp/tmp8gj09leh.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppgg8he_y.jl:16\nin expression starting at\
    \ /tmp/tmppgg8he_y.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9fs8jdtx.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp9fs8jdtx.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fs8jdtx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fs8jdtx.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748617
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -13, -14, -15, -16, -17, -23, -24, -25, -26, -27, -28, -29, -32,\
    \ -33, -34, -35, -36, -37, -38, -39, -44, -45])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr1lgb3x6.jl:16\nin expression starting at\
    \ /tmp/tmpr1lgb3x6.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for n in arr\n\
    \        if n > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_digits(arr::Vector{Int64})::Int64 which returns the number of digits in\
    \ each element of arr. \nThe function should return an array of length length(arr).\n\
    For example, count_digits([-123, -456, -7, -9, -10, -20, -100, -200]) should return\
    \ [3, 3, 2, 1, 1, 2, 2].\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptljl_hmf.jl:16\nin expression starting at\
    \ /tmp/tmptljl_hmf.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoyk9_z6x.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpoyk9_z6x.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoyk9_z6x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoyk9_z6x.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to find the number of elements in the array which has\
    \ the\n    following sum: -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15,\
    \ -16, -17, \n    -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29,\
    \ -30, -31, -32, -33, \n    -34, -35, -36, -37, -38, -39, -40, -41, -42, -43,\
    \ -44, -45\n    \n    Use count_nums to find the number of elements in the array\
    \ which has the\n    following sum: -4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14, -15, -16, -17, \n    -18, -19, -20, -21, -22, -23, -24, -25, -26, -27,\
    \ -28, -29, -30, -31, -32, -33, \n    -34, -35, -36, -37, -38, -39, -40, -41,\
    \ -42, -43, -44, -45\n    \n    Use count_nums to find the number of elements\
    \ in the array which has the\n    following sum: -4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13, -14, -15, -16, -17, \n    -18, -19, -20, -21, -22, -23, -24,\
    \ -25, -26, -27, -28, -29, -30, -31, -32, -33, \n    -34, -35, -36, -37, -38,\
    \ -39, -40, -41, -42, -43, -44, -45\n    \n    Use count_nums to find the number\
    \ of elements in the array which has the\n    following sum: -4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, -13, -14, -15, -16, -17, \n    -18, -19, -20, -21, -22, -23,\
    \ -24, -25, -26, -27, -28, -29, -30, -31, -32, \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp68xoj4vo.jl:16\nin expression starting at\
    \ /tmp/tmp68xoj4vo.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: Use\
    \ count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplzw1zuhk.jl:16\nin expression starting at\
    \ /tmp/tmplzw1zuhk.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: Use\
    \ count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8iki22nb.jl:16\nin expression starting at\
    \ /tmp/tmp8iki22nb.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, 0, 7, 123,\
    \ 456, 789])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to find the number of elements in the array which has a\n    sum of digits >\
    \ 0.\n    \n    Use count_nums to find the number of elements in the array which\
    \ has a\n    sum of digits < 0.\n    \n    Use count_nums to find the number of\
    \ elements in the array which has a\n    sum of digits == 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array which has a\n    sum of digits ==\
    \ 0.\n    \n    Use count_nums to find the number of elements in the array which\
    \ has a\n    sum of digits == 0.\n    \n    Use count_nums to find the number\
    \ of elements in the array which has a\n    sum of digits == 0.\n    \n    Use\
    \ count_nums to find the number of elements in the array which has a\n    sum\
    \ of digits == 0.\n    \n    Use count_nums to find the number of elements in\
    \ the array which has a\n    sum of digits == 0.\n    \n    Use count_nums to\
    \ find the number of elements in the array which has a\n    sum of digits == 0.\n\
    \    \n    Use count_nums to find the number of elements in the array which has\
    \ a\n    sum of digits == 0.\n    \n    Use count_nums to find the number of elements\
    \ in the array which has a\n    sum of digits == 0.\n    \n    Use count_nums\
    \ to find the number of elements in the array which has a\n    sum of digits ==\
    \ 0.\n    \n    Use count_nums to find the number of elements in the array which\
    \ has a\n    sum of digits == 0.\n    \n    Use count_nums to find the number\
    \ of elements in the array which has a\n    sum of digits == 0.\n    \n    Use\
    \ count_nums to find the number of elements in the array which has a\n    sum\
    \ of digits == 0.\n    \n    Use count_nums to find the number of elements in\
    \ the array which has a\n    sum of digits == 0.\n    \n    Use count_nums to\
    \ find the number of elements in the array which has a\n    sum of digits == 0.\n\
    \    \n    Use count_nums to find the number of elements in the array which has\
    \ a\n    sum of digits == 0.\n    \n    Use count_\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphkl9a0c_.jl:16\nin expression starting at\
    \ /tmp/tmphkl9a0c_.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -13, -14, -15, -16, -17, 18])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Use count_nums to solve the following problem:\n\
    \    \n    Write a function that takes an array of integers and returns the number\n\
    \    of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \n    Use count_nums to solve the following problem:\n  \
    \  \n    Write a function that takes an array of integers and returns the number\n\
    \    of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \n    Use count_nums to solve the following problem:\n  \
    \  \n    Write a function that takes an array of integers and returns the number\n\
    \    of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \n    Use count_nums to solve the following problem:\n  \
    \  \n    Write a function that takes an array of integers and returns the number\n\
    \    of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \n    Use count_nums to solve the following problem:\n  \
    \  \n    Write a function that takes an array of integers and returns the number\n\
    \    of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \n    Use count_nums to solve the following problem:\n  \
    \  \n    Write a function that takes an array of integers and returns the number\n\
    \    of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \n    Use count_nums to solve the following problem:\n  \
    \  \n    Write a function that takes an array of integers and returns the number\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj9krkzbw.jl:16\nin expression starting at\
    \ /tmp/tmpj9krkzbw.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9fs8jdtx.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp9fs8jdtx.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fs8jdtx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fs8jdtx.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748617
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums = count_nums + 1\n        end\n   \
    \ end\n    return count_nums\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-123,\
    \ -456, -321])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Use a for loop to iterate through the array and count the number\n    of elements\
    \ which has a sum of digits > 0.\n    \n    Use a while loop to iterate through\
    \ the array and count the number\n    of elements which has a sum of digits >\
    \ 0.\n    \n    Use a do while loop to iterate through the array and count the\
    \ number\n    of elements which has a sum of digits > 0.\n    \n    Use a while\
    \ loop to iterate through the array and count the number\n    of elements which\
    \ has a sum of digits > 0.\n    \n    Use a for loop to iterate through the array\
    \ and count the number\n    of elements which has a sum of digits > 0.\n    \n\
    \    Use a while loop to iterate through the array and count the number\n    of\
    \ elements which has a sum of digits > 0.\n    \n    Use a for loop to iterate\
    \ through the array and count the number\n    of elements which has a sum of digits\
    \ > 0.\n    \n    Use a while loop to iterate through the array and count the\
    \ number\n    of elements which has a sum of digits > 0.\n    \n    Use a for\
    \ loop to iterate through the array and count the number\n    of elements which\
    \ has a sum of digits > 0.\n    \n    Use a while loop to iterate through the\
    \ array and count the number\n    of elements which has a sum of digits > 0.\n\
    \    \n    Use a for loop to iterate through the array and count the number\n\
    \    of elements which has a sum of digits > 0.\n    \n    Use a while loop to\
    \ iterate through the array and count the number\n    of elements which has a\
    \ sum of digits > 0.\n    \n    Use a for loop to iterate through the array and\
    \ count the number\n    of elements which has a sum of digits > 0.\n    \n   \
    \ Use a while loop to iterate through the array and count the number\n    of elements\
    \ which has a sum of digits > 0.\n    \n    Use a for loop to iterate through\
    \ the array and count the number\n    of elements which has a sum of digits >\
    \ 0.\n    \n    Use a while loop to iterate through the array and count the number\n\
    \    of elements which has a sum of digits > \nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphkg9_idq.jl:16\nin expression starting at\
    \ /tmp/tmphkg9_idq.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -20, -30, -100, -200])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30, -100, -200])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20,\
    \ -30, -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3,\
    \ -4, -5, -6, -7, -8, -9, -10, -20, -30, -100, -200])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30, -100, -200])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20,\
    \ -30, -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3,\
    \ -4, -5, -6, -7, -8, -9, -10, -20, -30, -100, -200])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30, -100, -200])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20,\
    \ -30, -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3,\
    \ -4, -5, -6, -7, -8, -9, -10, -20, -30, -100, -200])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20, -30, -100, -200])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 2, 3, -4, -5, -6, -7, -8, -9, -10, -20,\
    \ -30, -100, -200])\n</cell>\n<code language=julia-1.5>\ncount_nums([1, 2, 3,\
    \ -4, -5, -6, -7, -8, -9, -10, -\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiakxeckf.jl:16\nin expression starting at\
    \ /tmp/tmpiakxeckf.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = sum(a -> a > 0, arr)\n\
    \    return count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr1wh3gif.jl:11\nin expression starting at\
    \ /tmp/tmpr1wh3gif.jl:11\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456, -7, 0, 7, 123,\
    \ 456, 789])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\nHint: Use count_nums.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj3zt294f.jl:16\nin expression starting at\
    \ /tmp/tmpj3zt294f.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -13, -14, -15, -16, -17, -18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfp0fo_pa.jl:16\nin expression starting at\
    \ /tmp/tmpfp0fo_pa.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -12, -13, -14, -15,\
    \ -16, -17, \n            -18, 19, -20, -12, -13, -14, -15, -16, -17, \n     \
    \       -18, 19, -20, -12, -13, -14, -15, -16, -17, \n            -18, 19, -20,\
    \ -12, -13, -14, -15, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0_xs031t.jl:16\nin expression starting at\
    \ /tmp/tmp0_xs031t.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, \n            -18, 19, -20, -20, -20, -20, -20,\
    \ -20, -20, -20, -20, -20, \n            -20, -20, -20, -20, -20, -20, -20, -20,\
    \ -20, -20, -20, -20, \n            -20, -20, -20, -20, -20, -20, -20, -20, -20,\
    \ -20, -20, -20, \n            -20, -20, -20, -20, -20, -20, -20, -20, -20, -20,\
    \ -20, -20, \n            -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20,\
    \ -20, \n            -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20,\
    \ \n            -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, \n\
    \            -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, \n  \
    \          -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, \n    \
    \        -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, \n      \
    \      -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, \n        \
    \    -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, \n          \
    \  -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, \n            -20,\
    \ -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, \n            -20, -20,\
    \ -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, \n            -20, -20, -20,\
    \ -20, -20, -20, -20, -20, -20, -20, -20, -20, \n            -20, -20, -20, -20,\
    \ -20, -20, -20, -20, -20, -20, -20, -20, \n            -20, -20, -20, -20, -\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp005zs_jk.jl:16\nin expression starting at\
    \ /tmp/tmp005zs_jk.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for num in arr\n\
    \        if num > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_eltvadh.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp_eltvadh.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_eltvadh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_eltvadh.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748625
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, \n              -18, 19, -20, -20, -21, -22, -23,\
    \ -24, 25, -26, 27, -28, \n              -29, 30, -31, -32, -33, 34, -50, -51,\
    \ -52, -53, -54, -55, -56])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: Use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwwde0ffm.jl:16\nin expression starting at\
    \ /tmp/tmpwwde0ffm.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoyk9_z6x.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpoyk9_z6x.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoyk9_z6x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoyk9_z6x.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for x in arr\n    \
    \    if x > 0 \n            sum += x\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -13,\
    \ -14, -15, -16, -17, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgmhn1ojp.jl:16\nin expression starting at\
    \ /tmp/tmpgmhn1ojp.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Your function should return -1 for an empty array.\n    \n    Use a for\
    \ loop to iterate over the array.\n    \n    Use a while loop to iterate over\
    \ the array.\n    \n    Use a do loop to iterate over the array.\n    \n    Use\
    \ a while loop to iterate over the array.\n    \n    Use a while loop to iterate\
    \ over the array.\n    \n    Use a while loop to iterate over the array.\n   \
    \ \n    Use a while loop to iterate over the array.\n    \n    Use a while loop\
    \ to iterate over the array.\n    \n    Use a while loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    Use a while\
    \ loop to iterate over the array.\n    \n    Use a while loop to iterate over\
    \ the array.\n    \n    Use a while loop to iterate over the array.\n    \n  \
    \  Use a while loop to iterate over the array.\n    \n    Use a while loop to\
    \ iterate over the array.\n    \n    Use a while loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    Use a while\
    \ loop to iterate over the array.\n    \n    Use a while loop to iterate over\
    \ the array.\n    \n    Use a while loop to iterate over the array.\n    \n  \
    \  Use a while loop to iterate over the array.\n    \n    Use a while loop to\
    \ iterate over the array.\n    \n    Use a while loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    Use a while\
    \ loop to iterate over the array.\n    \n    Use a while loop to iterate over\
    \ the array.\n    \n    Use a while loop to iterate over the array.\n    \n  \
    \  Use a while loop to iterate over the array.\n    \n    Use a while loop to\
    \ iterate over the array.\n    \n    Use a while loop to iterate over the array.\n\
    \    \n    Use a while loop to iterate over the array.\n    \n    Use a while\
    \ loop to iterate over the array.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfql135yi.jl:16\nin expression starting at\
    \ /tmp/tmpfql135yi.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo6stkphm.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpo6stkphm.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6stkphm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6stkphm.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748625
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 0, 7, 123, 456, 789])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpphumts_z.jl:16\nin expression starting at\
    \ /tmp/tmpphumts_z.jl:16\n"
  stdout: ''
  timestamp: 1659748623
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -14, -15,\
    \ -16, -17, 18])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -14, -15, -16, -17, 18])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -12, -14, -15,\
    \ -16, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwtpfpami.jl:16\nin expression starting at\
    \ /tmp/tmpwtpfpami.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr1)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr2)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr3)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr4)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr5)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr6)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr7)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr8)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr9)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr10)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr11)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr12)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr13)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr14)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr15)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr16)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr17)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr18)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr19)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr20)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr21)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr22)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr23)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr24)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr25)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr26)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr27)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr28)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr29)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr30)\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdpihubyb.jl:16\nin expression starting at\
    \ /tmp/tmpdpihubyb.jl:16\n"
  stdout: ''
  timestamp: 1659748620
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for n in arr\n\
    \        if n > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -13, -14, -15, -16, -17, -21])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90wusbeg.jl:16\nin expression starting at\
    \ /tmp/tmp90wusbeg.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20, -10, -20,\
    \ -10, -20, -10, -20, -10, -20, -10, -20, \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpempdzggf.jl:16\nin expression starting at\
    \ /tmp/tmpempdzggf.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -100, -1000, -10000])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprkqpayza.jl:16\nin expression starting at\
    \ /tmp/tmprkqpayza.jl:16\n"
  stdout: ''
  timestamp: 1659748625
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n            \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3ysszra0.jl:16\nin expression starting at\
    \ /tmp/tmp3ysszra0.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -13, -14, -15, -16, -17, -21])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \n    Your function should also work for an array of floats.\n\
    \    \n    Your function should also work for an array of complex numbers.\n \
    \   \n    Your function should also work for an array of strings.\n    \n    Your\
    \ function should also work for an array of tuples.\n    \n    Your function should\
    \ also work for an array of arrays.\n    \n    Your function should also work\
    \ for an array of dictionaries.\n    \n    Your function should also work for\
    \ an array of sets, sets of tuples, sets of arrays, sets of dictionaries, sets\
    \ of sets, sets of arrays, sets of dictionaries, sets of sets, sets of arrays,\
    \ sets of dictionaries, sets of sets, sets of arrays, sets of dictionaries, sets\
    \ of sets, sets of arrays, sets of dictionaries, sets of sets, sets of arrays,\
    \ sets of dictionaries, sets of sets, sets of arrays, sets of dictionaries, sets\
    \ of sets, sets of arrays, sets of dictionaries, sets of sets, sets of arrays,\
    \ sets of dictionaries, sets of sets, sets of arrays, sets of dictionaries, sets\
    \ of sets, sets of arrays, sets of dictionaries, sets of sets, sets of arrays,\
    \ sets of dictionaries, sets of sets, sets of arrays, sets of dictionaries, sets\
    \ of sets, sets of arrays, sets of dictionaries, sets of sets, sets of arrays,\
    \ sets of dictionaries, sets of sets, sets of arrays, sets of dictionaries, sets\
    \ of sets, sets of arrays, sets of dictionaries, sets of sets, sets of arrays,\
    \ sets of dictionaries, sets of sets, sets of arrays, sets of dictionaries, sets\
    \ of sets, sets of arrays, sets of dictionaries, sets of sets, sets of arrays,\
    \ sets of dictionaries, sets of sets, sets of arrays, sets of dictionaries, sets\
    \ of sets, sets of arrays, sets of dictionaries, sets of sets, sets of arrays,\
    \ sets of dictionaries, sets of sets, sets of arrays, sets of dictionaries, sets\
    \ of sets, sets of array\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa7eug3pn.jl:16\nin expression starting at\
    \ /tmp/tmpa7eug3pn.jl:16\n"
  stdout: ''
  timestamp: 1659748625
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoyk9_z6x.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpoyk9_z6x.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoyk9_z6x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoyk9_z6x.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for n in arr\n\
    \        if n >= 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -100, -1000, -10000])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use\
    \ count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2fp0micg.jl:16\nin expression starting at\
    \ /tmp/tmp2fp0micg.jl:16\n"
  stdout: ''
  timestamp: 1659748625
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Use count_nums to solve the following problem:\n    \n    Write a function that\
    \ takes an array of integers and returns the number\n    of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Use count_nums to solve the following problem:\n    \n    Write a function that\
    \ takes an array of integers and returns the number\n    of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Use count_nums to solve the following problem:\n    \n    Write a function that\
    \ takes an array of integers and returns the number\n    of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Use count_nums to solve the following problem:\n    \n    Write a function that\
    \ takes an array of integers and returns the number\n    of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Use count_nums to solve the following problem:\n    \n    Write a function that\
    \ takes an array of integers and returns the number\n    of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Use count_nums to solve the following problem:\n    \n    Write a function that\
    \ takes an array of integers and returns the number\n    of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n   \
    \ Use count_nums to solve the following problem:\n    \n    Write a function that\
    \ takes an array of integers and returns the number\n    of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe3wg97o6.jl:16\nin expression starting at\
    \ /tmp/tmpe3wg97o6.jl:16\n"
  stdout: ''
  timestamp: 1659748624
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \n    Use count_nums to find the number of elements in the\
    \ array which have \n    the first digit greater than zero.\n    \n    For example,\
    \ count_nums([-123, -456, -7, 8, -9, -10, -12, -14, -16, -18, -21]) should return\
    \ 3.\n    \n    Use count_nums to find the number of elements in the array which\
    \ have \n    the first digit greater than zero.\n    \n    For example, count_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -14, -16, -18, -21]) should return 3.\n    \n   \
    \ Use count_nums to find the number of elements in the array which have \n   \
    \ the first digit greater than zero.\n    \n    For example, count_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -14, -16, -18, -21]) should return 3.\n    \n   \
    \ Use count_nums to find the number of elements in the array which have \n   \
    \ the first digit greater than zero.\n    \n    For example, count_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -14, -16, -18, -21]) should return 3.\n    \n   \
    \ Use count_nums to find the number of elements in the array which have \n   \
    \ the first digit greater than zero.\n    \n    For example, count_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -14, -16, -18, -21]) should return 3.\n    \n   \
    \ Use count_nums to find the number of elements in the array which have \n   \
    \ the first digit greater than zero.\n    \n    For example, count_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -14, -16, -18, -21]) should return 3.\n    \n   \
    \ Use count_nums to find the number of elements in the array which have \n   \
    \ the first digit greater than zero.\n    \n    For example, count_nums([-123,\
    \ -456, -7, 8, -9, -10, -12, -14, -16, -18, -21]) should \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5jr1giuv.jl:16\nin expression starting at\
    \ /tmp/tmp5jr1giuv.jl:16\n"
  stdout: ''
  timestamp: 1659748625
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.0>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use a for loop to iterate\
    \ over the array. \n    \n    Use a while loop to iterate over the array. \n \
    \   \n    Use a do loop to iterate over the array. \n    \n    Use a for loop\
    \ to iterate over the array. \n    \n    Use a while loop to iterate over the\
    \ array. \n    \n    Use a do loop to iterate over the array. \n    \n    Use\
    \ a for loop to iterate over the array. \n    \n    Use a while loop to iterate\
    \ over the array. \n    \n    Use a do loop to iterate over the array. \n    \n\
    \    Use a for loop to iterate over the array. \n    \n    Use a while loop to\
    \ iterate over the array. \n    \n    Use a do loop to iterate over the array.\
    \ \n    \n    Use a for loop to iterate over the array. \n    \n    Use a while\
    \ loop to iterate over the array. \n    \n    Use a do loop to iterate over the\
    \ array. \n    \n    Use a for loop to iterate over the array. \n    \n    Use\
    \ a while loop to iterate over the array. \n    \n    Use a do loop to iterate\
    \ over the array. \n    \n    Use a for loop to iterate over the array. \n   \
    \ \n    Use a while loop to iterate over the array. \n    \n    Use a do loop\
    \ to iterate over the array. \n    \n    Use a for loop to iterate over the array.\
    \ \n    \n    Use a while loop to iterate over the array. \n    \n    Use a do\
    \ loop to iterate over the array. \n    \n    Use a for loop to iterate over the\
    \ array. \n    \n    Use a while loop to iterate over the array. \n    \n    Use\
    \ a do loop to iterate over the array. \n    \n    Use a for loop to iterate over\
    \ the array. \n    \n    Use a while loop to iterate over the array. \n    \n\
    \    Use a do loop to iterate over the array. \n    \n    Use a for loop to iterate\
    \ over the array. \n    \n    Use a while loop to \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6lp1kn2e.jl:16\nin expression starting at\
    \ /tmp/tmp6lp1kn2e.jl:16\n"
  stdout: ''
  timestamp: 1659748625
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Your function should also handle negative numbers by adding the\n    absolute\
    \ value of the number to the first digit.\n    e.g. -456 becomes -456.\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpukkzpgkc.jl:16\nin expression starting at\
    \ /tmp/tmpukkzpgkc.jl:16\n"
  stdout: ''
  timestamp: 1659748625
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456, -7,\
    \ -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<text>\nExercise 3\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    \n    Use count_nums to count the number of elements in the\
    \ array which has \n    the first digit greater than 0.\n    \n    For example,\
    \ count_nums([-123, -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18]) should\
    \ return 4.\n    \n    Use count_nums to count the number of elements in the array\
    \ which has \n    the first digit greater than 0.\n    \n    For example, count_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18]) should return 4.\n  \
    \  \n    Use count_nums to count the number of elements in the array which has\
    \ \n    the first digit greater than 0.\n    \n    For example, count_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18]) should return 4.\n  \
    \  \n    Use count_nums to count the number of elements in the array which has\
    \ \n    the first digit greater than 0.\n    \n    For example, count_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18]) should return 4.\n  \
    \  \n    Use count_nums to count the number of elements in the array which has\
    \ \n    the first digit greater than 0.\n    \n    For example, count_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18]) should return 4.\n  \
    \  \n    Use count_nums to count the number of elements in the array which has\
    \ \n    the first digit greater than 0.\n    \n    For example, count_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18]) should return 4.\n  \
    \  \n    Use count_nums to count the number of elements in the array which has\
    \ \n    the first digit greater than 0.\n    \n    For example, count_nums([-123,\
    \ -456, -7, -9, -10, -12, \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf8s1x7ul.jl:16\nin expression starting at\
    \ /tmp/tmpf8s1x7ul.jl:16\n"
  stdout: ''
  timestamp: 1659748625
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr1)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr2)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr3)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr4)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr5)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr6)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr7)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr8)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr9)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr10)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr11)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr12)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr13)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr14)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr15)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr16)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr17)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr18)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr19)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr20)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr21)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr22)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr23)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr24)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr25)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr26)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(arr27)\n</cell>\n<code language=julia-1.5>\ncount_nums(arr28)\n</cell>\n\
    <code language=julia-1.5>\ncount_nums(arr29)\n</cell>\n<code language=julia-1.5>\n\
    count_nums(\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphsu4_zu6.jl:16\nin expression starting at\
    \ /tmp/tmphsu4_zu6.jl:16\n"
  stdout: ''
  timestamp: 1659748621
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -100, -200, -300, -400, -500, -600, -700, -800, -900, -1000])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -100,\
    \ -200, -300, -400, -500, -600, -700, -800, -900, -1000])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -100, -200, -300, -400, -500, -600, -700,\
    \ -800, -900, -1000])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -100, -200, -300, -400, -500, -600, -700, -800, -900, -1000])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -100,\
    \ -200, -300, -400, -500, -600, -700, -800, -900, -1000])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -100, -200, -300, -400, -500, -600, -700,\
    \ -800, -900, -1000])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -100, -200, -300, -400, -500, -600, -700, -800, -900, -1000])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10, -100,\
    \ -200, -300, -400, -500, -600, -700, -800, -900, -1000])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-123, -456, -7, -9, -10, -100, -200, -300, -400, -500, -600, -700,\
    \ -800, -900, -1000])\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -100, -200, -300, -400, -500, -600, -700, -800, -900, -1000])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums(\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ayfzajp.jl:16\nin expression starting at\
    \ /tmp/tmp_ayfzajp.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456, -7,\
    \ 8, -9, -10, -100, -1000, -10000])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Your function should also handle negative numbers by adding the\n \
    \   absolute value of the number to the first digit.\n    \n    For example, count_nums([-1,\
    \ -2, -3]) should return 3.\n    \n    Use a while loop to iterate through the\
    \ array.\n    \n    Use a for loop to iterate through the array.\n    \n    Use\
    \ a for loop to iterate through the array.\n    \n    Use a for loop to iterate\
    \ through the array.\n    \n    Use a for loop to iterate through the array.\n\
    \    \n    Use a for loop to iterate through the array.\n    \n    Use a for loop\
    \ to iterate through the array.\n    \n    Use a for loop to iterate through the\
    \ array.\n    \n    Use a for loop to iterate through the array.\n    \n    Use\
    \ a for loop to iterate through the array.\n    \n    Use a for loop to iterate\
    \ through the array.\n    \n    Use a for loop to iterate through the array.\n\
    \    \n    Use a for loop to iterate through the array.\n    \n    Use a for loop\
    \ to iterate through the array.\n    \n    Use a for loop to iterate through the\
    \ array.\n    \n    Use a for loop to iterate through the array.\n    \n    Use\
    \ a for loop to iterate through the array.\n    \n    Use a for loop to iterate\
    \ through the array.\n    \n    Use a for loop to iterate through the array.\n\
    \    \n    Use a for loop to iterate through the array.\n    \n    Use a for loop\
    \ to iterate through the array.\n    \n    Use a for loop to iterate through the\
    \ array.\n    \n    Use a for loop to iterate through the array.\n    \n    Use\
    \ a for loop to iterate through the array.\n    \n    Use a for loop to iterate\
    \ through the array.\n    \n    Use a for loop to iterate through the array.\n\
    \    \n    Use a for loop to iterate through the array.\n    \n    Use a for loop\
    \ to iterate through the array.\n    \n    Use a for loop to iterate through the\
    \ array.\n    \n    Use a for loop to iterate \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4rl2nbwz.jl:16\nin expression starting at\
    \ /tmp/tmp4rl2nbwz.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: Use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsfh55wbi.jl:16\nin expression starting at\
    \ /tmp/tmpsfh55wbi.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9fs8jdtx.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp9fs8jdtx.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fs8jdtx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fs8jdtx.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748617
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -13, -14, -15, -16, -17, -18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjwfe8s7u.jl:16\nin expression starting at\
    \ /tmp/tmpjwfe8s7u.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7,8])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,1,2,3,4,5,6,7,8,9,10,\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp84dwdozx.jl:16\nin expression starting at\
    \ /tmp/tmp84dwdozx.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for n in arr\n\
    \        if n > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\ncount_nums([-123, -456, -7, 0, 7, 123, 456])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\nHint: Use count_nums.\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyw8n3mit.jl:17\nin expression starting at\
    \ /tmp/tmpyw8n3mit.jl:17\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456,\
    \ -7, 0, 7, 123, 456, 789])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Your function should return the following values:\n    count_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789])\n    count_nums([-123, -456, -7, 0, 7, 123,\
    \ 456, 789, 987])\n    count_nums([-123, -456, -7, 0, 7, 123, 456, 789, 987, 654])\n\
    \    count_nums([-123, -456, -7, 0, 7, 123, 456, 789, 987, 654, 321])\n    count_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789, 987, 654, 321, 987])\n    count_nums([-123, -456,\
    \ -7, 0, 7, 123, 456, 789, 987, 654, 321, 987, 321])\n    count_nums([-123, -456,\
    \ -7, 0, 7, 123, 456, 789, 987, 654, 321, 987, 321, 654])\n    count_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789, 987, 654, 321, 987, 321, 654, 321])\n    count_nums([-123,\
    \ -456, -7, 0, 7, 123, 456, 789, 987, 654, 321, 987, 321, 654, 321, 987])\n  \
    \  count_nums([-123, -456, -7, 0, 7, 123, 456, 789, 987, 654, 321, 987, 321, 654,\
    \ 321, 987, 321])\n    count_nums([-123, -456, -7, 0, 7, 123, 456, 789, 987, 654,\
    \ 321, 987, 321, 654, 321, 987, 321, 654])\n    count_nums([-123, -456, -7, 0,\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpen74g5zt.jl:16\nin expression starting at\
    \ /tmp/tmpen74g5zt.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9fs8jdtx.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp9fs8jdtx.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fs8jdtx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fs8jdtx.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748617
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.0>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums to solve\
    \ the problem below.\n    \n    arr = [-12, -34, -56]\n    count_nums(arr)\n \
    \   should return 2\n    \n    arr = [-12, -34, -56]\n    count_nums(arr)\n  \
    \  should return 2\n    \n    arr = [-12, -34, -56]\n    count_nums(arr)\n   \
    \ should return 2\n    \n    arr = [-12, -34, -56]\n    count_nums(arr)\n    should\
    \ return 2\n    \n    arr = [-12, -34, -56]\n    count_nums(arr)\n    should return\
    \ 2\n    \n    arr = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n\
    \    \n    arr = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n \
    \   \n    arr = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n  \
    \  \n    arr = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n   \
    \ \n    arr = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n    \n\
    \    arr = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n    \n \
    \   arr = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n    \n  \
    \  arr = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n    \n   \
    \ arr = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n    \n    arr\
    \ = [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n    \n    arr =\
    \ [-12, -34, -56]\n    count_nums(arr)\n    should return 2\n    \n    arr = [-12,\
    \ -34, -56]\n    count_\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxwdb4xne.jl:16\nin expression starting at\
    \ /tmp/tmpxwdb4xne.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpowr5n_su.jl:16\nin expression starting at\
    \ /tmp/tmpowr5n_su.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a Julia\
    \ function that takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a Julia\
    \ function that takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a Julia\
    \ function that takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a Julia\
    \ function that takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a Julia\
    \ function that takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a Julia\
    \ function that takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to solve the following problem:\n    \n    Write a Julia\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiekhjuiu.jl:16\nin expression starting at\
    \ /tmp/tmpiekhjuiu.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \n    Your function should also work for an array of floats.\n    \n    Your\
    \ function should also work for an array of strings.\n    \n    Your function\
    \ should also work for an array of arrays of integers or floats.\n    \n    Your\
    \ function should also work for an array of arrays of strings or floats.\n   \
    \ \n    Your function should also work for an array of arrays of arrays of integers\
    \ or floats.\n    \n    Your function should also work for an array of arrays\
    \ of arrays of strings or floats.\n    \n    Your function should also work for\
    \ an array of arrays of arrays of arrays of integers or floats.\n    \n    Your\
    \ function should also work for an array of arrays of arrays of arrays of strings\
    \ or floats.\n    \n    Your function should also work for an array of arrays\
    \ of arrays of arrays of arrays of integers or floats.\n    \n    Your function\
    \ should also work for an array of arrays of arrays of arrays of arrays of strings\
    \ or floats.\n    \n    Your function should also work for an array of arrays\
    \ of arrays of arrays of arrays of arrays of integers or floats.\n    \n    Your\
    \ function should also work for an array of arrays of arrays of arrays of arrays\
    \ of arrays of strings or floats.\n    \n    Your function should also work for\
    \ an array of arrays of arrays of arrays of arrays of arrays of arrays of integers\
    \ or floats.\n    \n    Your function should also work for an array of arrays\
    \ of arrays of arrays of arrays of arrays of arrays of strings or floats.\n  \
    \  \n    Your function should also work for an array of arrays of arrays of arrays\
    \ of arrays of arrays of arrays of arrays of integers or floats.\n    \n    Your\
    \ function should also work for an array of arrays of arrays of arrays of arrays\
    \ of arrays of arrays of arrays of strings or floats.\n    \n    Your function\
    \ should also work for an array of arrays of arrays of arrays of arrays of arrays\
    \ of arrays of arrays of arrays of integers or floats.\n    \n    Your function\
    \ should also work for an array of arrays of arrays of arrays of arrays of arrays\
    \ of arrays of arrays of arrays of strings or floats.\n    \n    Your function\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6vgc33qe.jl:16\nin expression starting at\
    \ /tmp/tmp6vgc33qe.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8ff1mrvm.jl:16\nin expression starting at\
    \ /tmp/tmp8ff1mrvm.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n >= 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -20, -100, -200])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n            \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqpscmsrb.jl:16\nin expression starting at\
    \ /tmp/tmpqpscmsrb.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9,\
    \ -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6,\
    \ -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -6, -7, -9, -10,\
    \ -5, -6, -7, -9, -10, -5, -6, -7, -9, -10, -5, -\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfo98b0xr.jl:16\nin expression starting at\
    \ /tmp/tmpfo98b0xr.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -14, -15, -16, -17, 18])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Your function should return -1 for an empty array.\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnriwqxbv.jl:16\nin expression starting at\
    \ /tmp/tmpnriwqxbv.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -14, -16, -18, 19])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\nHint: use count_nums.\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5xuyz5zc.jl:16\nin expression starting at\
    \ /tmp/tmp5xuyz5zc.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -14, -16, -18, 19])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnzgcgrh3.jl:16\nin expression starting at\
    \ /tmp/tmpnzgcgrh3.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for x in arr\n    \
    \    if x > 0 \n            sum += x\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, -9, -10, -100,\
    \ -200])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Your\
    \ function should return 0 if the array is empty.\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcxyihui7.jl:16\nin expression starting at\
    \ /tmp/tmpcxyihui7.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\nHint: use count_nums.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppgg8he_y.jl:16\nin expression starting at\
    \ /tmp/tmppgg8he_y.jl:16\n"
  stdout: ''
  timestamp: 1659748619
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.0>\ncount_nums(arr1)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr2)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr3)\n</cell>\n<code language=julia-1.0>\ncount_nums(arr4)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr5)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr6)\n</cell>\n<code language=julia-1.0>\ncount_nums(arr7)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr8)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr9)\n</cell>\n<code language=julia-1.0>\ncount_nums(arr10)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr11)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr12)\n</cell>\n<code language=julia-1.0>\ncount_nums(arr13)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr14)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr15)\n</cell>\n<code language=julia-1.0>\ncount_nums(arr16)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr17)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr18)\n</cell>\n<code language=julia-1.0>\ncount_nums(arr19)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr20)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr21)\n</cell>\n<code language=julia-1.0>\ncount_nums(arr22)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr23)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr24)\n</cell>\n<code language=julia-1.0>\ncount_nums(arr25)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr26)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(arr27)\n</cell>\n<code language=julia-1.0>\ncount_nums(arr28)\n</cell>\n\
    <code language=julia-1.0>\ncount_nums(arr29)\n</cell>\n<code language=julia-1.0>\n\
    count_nums(\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpklitwt8_.jl:16\nin expression starting at\
    \ /tmp/tmpklitwt8_.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    \n    Use count_nums to count the number of elements in the array which has\
    \ a \n    sum of digits > 0.\n    \n    Use count_nums to count the number of\
    \ elements in the array which has a \n    sum of digits > 0.\n    \n    Use count_nums\
    \ to count the number of elements in the array which has a \n    sum of digits\
    \ > 0.\n    \n    Use count_nums to count the number of elements in the array\
    \ which has a \n    sum of digits > 0.\n    \n    Use count_nums to count the\
    \ number of elements in the array which has a \n    sum of digits > 0.\n    \n\
    \    Use count_nums to count the number of elements in the array which has a \n\
    \    sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has a \n    sum of digits > 0.\n    \n    Use count_nums\
    \ to count the number of elements in the array which has a \n    sum of digits\
    \ > 0.\n    \n    Use count_nums to count the number of elements in the array\
    \ which has a \n    sum of digits > 0.\n    \n    Use count_nums to count the\
    \ number of elements in the array which has a \n    sum of digits > 0.\n    \n\
    \    Use count_nums to count the number of elements in the array which has a \n\
    \    sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has a \n    sum of digits > 0.\n    \n    Use count_nums\
    \ to count the number of elements in the array which has a \n    sum of digits\
    \ > 0.\n    \n    Use count_nums to count the number of elements in the array\
    \ which has a \n    sum of digits > 0.\n    \n    Use count_nums to count the\
    \ number of elements in the array which has a \n    sum of digits > 0.\n    \n\
    \    Use count_nums to count the number of elements in the array which has a \n\
    \    sum of digits > 0.\n    \n    Use count_nums to count the number of elements\
    \ in the array which has a \n    sum of digits > 0.\n    \n    Use count_nums\
    \ to count the number of elements in the array which has a \n    sum of digits\
    \ > 0.\n    \n    Use count_nums to count the number of elements in the array\
    \ which \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0x9u8s2_.jl:16\nin expression starting at\
    \ /tmp/tmp0x9u8s2_.jl:16\n"
  stdout: ''
  timestamp: 1659748626
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0 \n    for n in arr\
    \ \n        if n >= 0 \n            count_nums += n \n        else \n        \
    \    count_nums += abs(n) \n    end\n    return count_nums\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-123, -456, -7, -9, -10, -12, -13, -14, -15,\
    \ -16, -17, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-123, -456,\
    \ -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-123, -456, -7, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-123, -456, -7, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-123, -456, -7, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\ncount_nums([-123,\
    \ -456, -7, -9, -10, -12, -13, -14, -15, -16, -17, -18])\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-123, -456, -7, -9, -10, -12, -13, -14, \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwez_xpu7.jl:17\nin expression starting at\
    \ /tmp/tmpwez_xpu7.jl:17\n"
  stdout: ''
  timestamp: 1659748627
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for x in arr\n\
    \        if x > 0 \n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.0>\ncount_nums(arr)\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6k70_9w7.jl:16\nin expression starting at\
    \ /tmp/tmp6k70_9w7.jl:16\n"
  stdout: ''
  timestamp: 1659748627
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(arr)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    \n    Your function should also work for arrays of\
    \ any length.\n    \n    You can use the count_nums function you wrote in the\
    \ previous exercise.\n    \n    You can use the function sum to get the sum of\
    \ an array in Julia.\n    \n    You can use the function first to get the first\
    \ element of an array in Julia.\n    \n    You can use the function last to get\
    \ the last element of an array in Julia.\n    \n    You can use the function length\
    \ to get the length of an array in Julia.\n    \n    You can use the function\
    \ first to get the first element of an array in Julia.\n    \n    You can use\
    \ the function last to get the last element of an array in Julia.\n    \n    You\
    \ can use the function length to get the length of an array in Julia.\n    \n\
    \    You can use the function first to get the first element of an array in Julia.\n\
    \    \n    You can use the function last to get the last element of an array in\
    \ Julia.\n    \n    You can use the function length to get the length of an array\
    \ in Julia.\n    \n    You can use the function first to get the first element\
    \ of an array in Julia.\n    \n    You can use the function last to get the last\
    \ element of an array in Julia.\n    \n    You can use the function length to\
    \ get the length of an array in Julia.\n    \n    You can use the function first\
    \ to get the first element of an array in Julia.\n    \n    You can use the function\
    \ last to get the last element of an array in Julia.\n    \n    You can use the\
    \ function length to get the length of an array in Julia.\n    \n    You can use\
    \ the function first to get the first element of an array in Julia.\n    \n  \
    \  You can use the function last to get the last element of an array in Julia.\n\
    \    \n    You can use the function length to get the length of an array in Julia.\n\
    \    \n    You can use the function first to get the first element of an array\
    \ in Julia.\n    \n    You can use the function last to get the last element of\
    \ an array in Julia.\n    \n    You can use the function length to get the length\
    \ of an array in Julia.\n    \n    You can use the function first to get the first\
    \ element of an array in Julia.\n    \n    You can use the function last to get\
    \ the last element of an array in Julia.\n    \n    You can use the function length\
    \ to get the length of an array in \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6cjg7i4y.jl:16\nin expression starting at\
    \ /tmp/tmp6cjg7i4y.jl:16\n"
  stdout: ''
  timestamp: 1659748627
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-123, -456, -7, 0, 7, 123,\
    \ 456, 789])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums\
    \ to solve the following problem:\n    \n    Write a function that takes an array\
    \ of integers and returns the number\n    of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums to solve\
    \ the following problem:\n    \n    Write a function that takes an array of integers\
    \ and returns the number\n    of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums to solve\
    \ the following problem:\n    \n    Write a function that takes an array of integers\
    \ and returns the number\n    of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums to solve\
    \ the following problem:\n    \n    Write a function that takes an array of integers\
    \ and returns the number\n    of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums to solve\
    \ the following problem:\n    \n    Write a function that takes an array of integers\
    \ and returns the number\n    of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums to solve\
    \ the following problem:\n    \n    Write a function that takes an array of integers\
    \ and returns the number\n    of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    \n    Use count_nums to solve\
    \ the following problem:\n    \n    Write a function that takes an array of integers\
    \ and returns the number\n    of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk32bcwmw.jl:16\nin expression starting at\
    \ /tmp/tmpk32bcwmw.jl:16\n"
  stdout: ''
  timestamp: 1659748627
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for num in arr\n\
    \        if num > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-123, -456,\
    \ -7, 8, -9, -10, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_digits(arr::Vector{Int64})::Int64 which returns the number of digits in\
    \ an array.\nFor example, count_digits([-123, -456, -7, 8, -9, -10, -5, -6, -7,\
    \ -8]) should return 8.\nHint: Use count_nums.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplmqqz2r7.jl:16\nin expression starting at\
    \ /tmp/tmplmqqz2r7.jl:16\n"
  stdout: ''
  timestamp: 1659748627
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpao7q_sfe.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpao7q_sfe.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpao7q_sfe.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpao7q_sfe.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748628
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n    for n in arr\n  \
    \      if n > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-123, -456, -7, -9, -10,\
    \ -100, -200])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu_yoyi76.jl:16\nin expression starting at\
    \ /tmp/tmpu_yoyi76.jl:16\n"
  stdout: ''
  timestamp: 1659748627
- exit_code: 1
  program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n                \"\"\"\nfunction\
    \ count_nums(arr::Vector{Int64})::Int64 \n    count_nums = 0\n    for n in arr\n\
    \        if n > 0\n            count_nums += 1\n        end\n    end\n    return\
    \ count_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq33popbk.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpq33popbk.jl:26\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq33popbk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq33popbk.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659748628

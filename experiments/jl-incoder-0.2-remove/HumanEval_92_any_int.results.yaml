language: jl
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp74k_qudl.jl:21\nin expression starting at\
    \ /tmp/tmp74k_qudl.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0tcn1b0p.jl:21\nin expression starting at\
    \ /tmp/tmp0tcn1b0p.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    elseif\
    \ y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nany_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(\nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo2hr52q5.jl:23\nin expression starting at\
    \ /tmp/tmpo2hr52q5.jl:23\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpjfifjmt3.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpjfifjmt3.jl:26\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjfifjmt3.jl:26 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjfifjmt3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjfifjmt3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpjfifjmt3.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpjfifjmt3.jl:27 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjfifjmt3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjfifjmt3.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpjfifjmt3.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpjfifjmt3.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjfifjmt3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjfifjmt3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,4,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,5,5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,6,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,7,7)\n</cell>\n<code language=julia-1.5>\nany_int(1,8,8)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,9,9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,10,10)\n</cell>\n<code language=julia-1.5>\nany_int(1,11,11)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,12,12)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,13,13)\n</cell>\n<code language=julia-1.5>\nany_int(1,14,14)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,15,15)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,16,16)\n</cell>\n<code language=julia-1.5>\nany_int(1,17,17)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,18,18)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,19,19)\n</cell>\n<code language=julia-1.5>\nany_int(1,20,20)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,21,21)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,22,22)\n</cell>\n<code language=julia-1.5>\nany_int(1,23,23)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,24,24)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,25,25)\n</cell>\n<code language=julia-1.5>\nany_int(1,26,26)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,27,27)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,28,28)\n</cell>\n<code language=julia-1.5>\nany_int(1,29,29)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,30,30)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphs0umai3.jl:21\nin expression starting at\
    \ /tmp/tmphs0umai3.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkt6tsg4o.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error
    During Test at /tmp/tmpkt6tsg4o.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0 \n       \
    \ return true\n    else \n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mnm_hoo.jl:21\nin expression starting at\
    \ /tmp/tmp1mnm_hoo.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdu7dhaa4.jl:21\nin expression starting at\
    \ /tmp/tmpdu7dhaa4.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.1>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.1>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.1>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.1>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.1>\nany_int(1,2,34)\n</cell>\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphmqyuvxs.jl:21\nin expression starting at\
    \ /tmp/tmphmqyuvxs.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0 \n       \
    \ true\n    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpvhga7ztw.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpvhga7ztw.jl:26\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpvhga7ztw.jl:26 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvhga7ztw.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpvhga7ztw.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpvhga7ztw.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpvhga7ztw.jl:27 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvhga7ztw.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpvhga7ztw.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpvhga7ztw.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpvhga7ztw.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvhga7ztw.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpvhga7ztw.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2.0,3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg0akm71k.jl:21\nin expression starting at\
    \ /tmp/tmpg0akm71k.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    end\n    if x + y == z\n        return true\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,7)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,10)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,13)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,16)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,19)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,22)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,25)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,28)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,31)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n<code language=julia-1.5>\n\
    any_\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvzeckom7.jl:23\nin expression starting at\
    \ /tmp/tmpvzeckom7.jl:23\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0 \n       \
    \ true \n    else \n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1po_ru7l.jl:21\nin expression starting at\
    \ /tmp/tmp1po_ru7l.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,4,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,5,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,6,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,7,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,8,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,9,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,10,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,11,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,12,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,13,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,14,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,15,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,16,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,17,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,18,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,19,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,20,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,21,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,22,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,23,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,24,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,25,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,26,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,27,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,28,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,29,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_hdyvqnh.jl:21\nin expression starting at\
    \ /tmp/tmp_hdyvqnh.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkt6tsg4o.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error
    During Test at /tmp/tmpkt6tsg4o.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpenpwj2l_.jl:21\nin expression starting at\
    \ /tmp/tmpenpwj2l_.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,7)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,8)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,10)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,11)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,12)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,13)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,14)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,15)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,16)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,17)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,18)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,19)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,20)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,21)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,22)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,23)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,24)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,25)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,26)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,27)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,28)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,29)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,30)\n</cell>\n<code language=juli\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgvp4orft.jl:21\nin expression starting at\
    \ /tmp/tmpgvp4orft.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpq4ndqfsc.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpq4ndqfsc.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpq4ndqfsc.jl:25\ntest set: Error During Test at
    /tmp/tmpq4ndqfsc.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpq4ndqfsc.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpq4ndqfsc.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpq4ndqfsc.jl:25\ntest set: Error
    During Test at /tmp/tmpq4ndqfsc.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpq4ndqfsc.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpq4ndqfsc.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpq4ndqfsc.jl:25\ntest set: Error During Test at
    /tmp/tmpq4ndqfsc.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0 \n       \
    \ return true\n    else \n        return false\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp5j9b3wj_.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp5j9b3wj_.jl:26\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmp5j9b3wj_.jl:26 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5j9b3wj_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5j9b3wj_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmp5j9b3wj_.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp5j9b3wj_.jl:27 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5j9b3wj_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5j9b3wj_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmp5j9b3wj_.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp5j9b3wj_.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5j9b3wj_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5j9b3wj_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphc6df6hr.jl:21\nin expression starting at\
    \ /tmp/tmphc6df6hr.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkjg72sdt.jl:21\nin expression starting at\
    \ /tmp/tmpkjg72sdt.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.5,3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.5,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.5,4.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.5,4.6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.5,4.7)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.5,4.8)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.5,4.9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.5,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.5,5.1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.5,5.2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.5,5.3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.5,5.4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.5,5.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.5,5.6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.5,5.7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.5,5.8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.5,5.9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.5,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.5,6.1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.5,6.2)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.5,6.3)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.5,6.4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.5,6.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.5,6.6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.5,6.7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv3h7ihwq.jl:21\nin expression starting at\
    \ /tmp/tmpv3h7ihwq.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,1,1)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,4,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,5,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,6,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,7,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,8,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,9,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,10,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,11,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,12,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,13,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,14,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,15,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,16,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,17,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,18,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,19,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,20,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,21,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,22,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,23,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,24,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,25,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,26,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,27,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,28,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,29,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,\nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvzwuhq1j.jl:21\nin expression starting at\
    \ /tmp/tmpvzwuhq1j.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,4,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,4,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,5,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,6,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,7,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,8,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,9,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,10,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,11,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,12,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,13,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,14,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,15,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,16,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,17,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,18,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,19,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,20,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,21,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,22,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,23,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,24,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,25,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,26,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,27,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,28,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,29,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpav0fgyk6.jl:21\nin expression starting at\
    \ /tmp/tmpav0fgyk6.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkt6tsg4o.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error
    During Test at /tmp/tmpkt6tsg4o.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,4,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,4,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,5,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,6,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,6,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,7,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,7,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,7,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,8,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,9,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,10,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,11,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,12,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,13,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,14,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,15,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,16,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,17,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,18,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,19,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,20,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,21,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,22,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,23,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,24,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqjwmhch2.jl:21\nin expression starting at\
    \ /tmp/tmpqjwmhch2.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else \n        return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqk8uq_ee.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqk8uq_ee.jl:1\n\
    in expression starting at /tmp/tmpqk8uq_ee.jl:1\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else \n        return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqk8uq_ee.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqk8uq_ee.jl:1\n\
    in expression starting at /tmp/tmpqk8uq_ee.jl:1\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        true\n\
    \    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp_dqceak_.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp_dqceak_.jl:26\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmp_dqceak_.jl:26 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_dqceak_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_dqceak_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmp_dqceak_.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp_dqceak_.jl:27 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_dqceak_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_dqceak_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmp_dqceak_.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp_dqceak_.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_dqceak_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_dqceak_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    elseif\
    \ y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nany_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(\nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo2hr52q5.jl:23\nin expression starting at\
    \ /tmp/tmpo2hr52q5.jl:23\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,7)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,8)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,10)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,11)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,12)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,13)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,14)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,15)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,16)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,17)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,18)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,19)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,20)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,21)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,22)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,23)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,24)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,25)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,26)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,27)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,28)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,29)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,30)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp44ogjlsw.jl:21\nin expression starting at\
    \ /tmp/tmp44ogjlsw.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkt6tsg4o.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error
    During Test at /tmp/tmpkt6tsg4o.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpenpwj2l_.jl:21\nin expression starting at\
    \ /tmp/tmpenpwj2l_.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.4>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.4>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.4>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9f64u86l.jl:21\nin expression starting at\
    \ /tmp/tmp9f64u86l.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkt6tsg4o.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error
    During Test at /tmp/tmpkt6tsg4o.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp95eu7xyj.jl:21\nin expression starting at\
    \ /tmp/tmp95eu7xyj.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else \n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8ekpqt6t.jl:21\nin expression starting at\
    \ /tmp/tmp8ekpqt6t.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    elseif x == y || x == z || y == z\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpeb0x70wf.jl:28\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpeb0x70wf.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpeb0x70wf.jl:27\ntest set: Error During Test at
    /tmp/tmpeb0x70wf.jl:29\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpeb0x70wf.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpeb0x70wf.jl:29 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeb0x70wf.jl:27\ntest set: Error
    During Test at /tmp/tmpeb0x70wf.jl:30\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpeb0x70wf.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpeb0x70wf.jl:30 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpeb0x70wf.jl:27\ntest set: Error During Test at
    /tmp/tmpeb0x70wf.jl:31\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprc1daat6.jl:20\nin expression starting at\
    \ /tmp/tmprc1daat6.jl:20\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmlc73ti3.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpmlc73ti3.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error
    During Test at /tmp/tmpmlc73ti3.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else \n        return false\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpwe9z8h0d.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpwe9z8h0d.jl:26\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpwe9z8h0d.jl:26 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwe9z8h0d.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwe9z8h0d.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpwe9z8h0d.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpwe9z8h0d.jl:27 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwe9z8h0d.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwe9z8h0d.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpwe9z8h0d.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpwe9z8h0d.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwe9z8h0d.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwe9z8h0d.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978544
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkt6tsg4o.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error
    During Test at /tmp/tmpkt6tsg4o.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,31)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphynhxtd3.jl:21\nin expression starting at\
    \ /tmp/tmphynhxtd3.jl:21\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0tcn1b0p.jl:21\nin expression starting at\
    \ /tmp/tmp0tcn1b0p.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.3>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.3>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.3>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppqvb240z.jl:21\nin expression starting at\
    \ /tmp/tmppqvb240z.jl:21\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    end\n    if x + y == z\n        return true\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpdj_6pu21.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpdj_6pu21.jl:28\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpdj_6pu21.jl:28 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdj_6pu21.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpdj_6pu21.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpdj_6pu21.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpdj_6pu21.jl:29 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdj_6pu21.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpdj_6pu21.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpdj_6pu21.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpdj_6pu21.jl:30 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdj_6pu21.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpdj_6pu21.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978544
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        true\n\
    \    else\n        if x == y || x == z\n            true\n        else\n     \
    \       if y == z\n                true\n            else\n                if\
    \ x < y && y < z && x < z\n                    true\n                else\n  \
    \                  if y < x && y < z && x < z\n                        true\n\
    \                    else\n                        if x < y && y < z && z < x\n\
    \                            true\n                        else\n            \
    \                if y < x && z < x && x < z\n                                true\n\
    \                            else\n                                if x < y &&\
    \ z < x && z < y\n                                    true\n                 \
    \               else\n                                    false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpudztdt35.jl:30\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpudztdt35.jl:1\n\
    in expression starting at /tmp/tmpudztdt35.jl:1\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp52euqexx.jl:21\nin expression starting at\
    \ /tmp/tmp52euqexx.jl:21\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,1)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1.5,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1.5,1.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy2iqno2y.jl:21\nin expression starting at\
    \ /tmp/tmpy2iqno2y.jl:21\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        true\n\
    \    else\n        if x == y || y == z || z == x\n            true\n        else\n\
    \            if x != y && y != z && z != x\n                false\n          \
    \  else\n                true\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnsylwy5t.jl:28\nin expression starting at\
    \ /tmp/tmpnsylwy5t.jl:28\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    end\n    \n    if x + y == z\n        return true\n    end\n    \n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp37gh9u_y.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp37gh9u_y.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmp37gh9u_y.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp37gh9u_y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp37gh9u_y.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmp37gh9u_y.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp37gh9u_y.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp37gh9u_y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp37gh9u_y.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmp37gh9u_y.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp37gh9u_y.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp37gh9u_y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp37gh9u_y.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978544
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else \n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8ekpqt6t.jl:21\nin expression starting at\
    \ /tmp/tmp8ekpqt6t.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,7)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,8)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,10)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,11)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,12)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,13)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,14)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,15)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,16)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,17)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,18)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,19)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,20)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,21)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,22)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,23)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,24)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,25)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,26)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,27)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,28)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,29)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,30)\n</cell>\n<code language=julia-\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpczokx2qc.jl:20\nin expression starting at\
    \ /tmp/tmpczokx2qc.jl:20\n"
  stdout: ''
  timestamp: 1659978542
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        true\n\
    \    elseif x == y || x == z || y == z\n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,1,1)\n</cell>\n<code\
    \ language=julia-1.5>\nany_int(1,1,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,1,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,31)\n</cell>\n<code language=juli\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8lvycosu.jl:23\nin expression starting at\
    \ /tmp/tmp8lvycosu.jl:23\n"
  stdout: ''
  timestamp: 1659978542
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0tcn1b0p.jl:21\nin expression starting at\
    \ /tmp/tmp0tcn1b0p.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0 \n       \
    \ return true\n    else \n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mnm_hoo.jl:21\nin expression starting at\
    \ /tmp/tmp1mnm_hoo.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmlc73ti3.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpmlc73ti3.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error
    During Test at /tmp/tmpmlc73ti3.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmlc73ti3.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpmlc73ti3.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error
    During Test at /tmp/tmpmlc73ti3.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978543
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    end\n    if x + y == z\n        return true\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,7)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,10)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,13)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,16)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,19)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,22)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,25)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,28)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,31)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n<code language=julia-1.5>\n\
    any_\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvzeckom7.jl:23\nin expression starting at\
    \ /tmp/tmpvzeckom7.jl:23\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        true\n\
    \    else\n        if x == y || x == z\n            true\n        else\n     \
    \       if y == z\n                true\n            else\n                if\
    \ x != 0 || y != 0 || z != 0\n                    false\n                else\n\
    \                    false\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4che_e67.jl:31\nin expression starting at\
    \ /tmp/tmp4che_e67.jl:31\n"
  stdout: ''
  timestamp: 1659978542
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmlc73ti3.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpmlc73ti3.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error
    During Test at /tmp/tmpmlc73ti3.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0 \n       \
    \ true\n    else \n        false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpeiy4e0nv.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpeiy4e0nv.jl:26\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpeiy4e0nv.jl:26 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeiy4e0nv.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpeiy4e0nv.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpeiy4e0nv.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpeiy4e0nv.jl:27 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeiy4e0nv.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpeiy4e0nv.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpeiy4e0nv.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpeiy4e0nv.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeiy4e0nv.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpeiy4e0nv.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978545
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkt6tsg4o.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error
    During Test at /tmp/tmpkt6tsg4o.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpkt6tsg4o.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpkt6tsg4o.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpkt6tsg4o.jl:25\ntest set: Error During Test at
    /tmp/tmpkt6tsg4o.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpjfifjmt3.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpjfifjmt3.jl:26\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjfifjmt3.jl:26 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjfifjmt3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjfifjmt3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpjfifjmt3.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpjfifjmt3.jl:27 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjfifjmt3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjfifjmt3.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpjfifjmt3.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpjfifjmt3.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjfifjmt3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjfifjmt3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,1,1)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,2)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,30)\n</cell>\n<code language=juli\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5w598fzj.jl:21\nin expression starting at\
    \ /tmp/tmp5w598fzj.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2.0,3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_\nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuebtl030.jl:21\nin expression starting at\
    \ /tmp/tmpuebtl030.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,3,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,3,31)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphynhxtd3.jl:21\nin expression starting at\
    \ /tmp/tmphynhxtd3.jl:21\n"
  stdout: ''
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmlc73ti3.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpmlc73ti3.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error
    During Test at /tmp/tmpmlc73ti3.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978543
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    \    Returns false in any other cases.\n    \n    Examples\n        \n    \n \
    \       \n      \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd_pyc1tz.jl:21\nin expression starting at\
    \ /tmp/tmpd_pyc1tz.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,1)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,4)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,7)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,8)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,10)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,11)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,12)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,13)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,14)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,15)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,16)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,17)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,18)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,19)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,20)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,21)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,22)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,23)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,24)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,25)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,26)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,27)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,28)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,29)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,1,30)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,1,31)\n</cell>\n<code language=julia-1.5>\nany_int(1,1,32)\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnu2bo4ol.jl:21\nin expression starting at\
    \ /tmp/tmpnu2bo4ol.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3mzwmmw2.jl:21\nin expression starting at\
    \ /tmp/tmp3mzwmmw2.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp95eu7xyj.jl:21\nin expression starting at\
    \ /tmp/tmp95eu7xyj.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.5)\n</cell>\n<code language=julia-1.5>\n\
    any_\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmploosgz5u.jl:21\nin expression starting at\
    \ /tmp/tmploosgz5u.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2.0,3)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2.0,3.0)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,3.0)\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"3\"\
    )\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"3.1\")\n</cell>\n<code\
    \ language=julia-1.5>\nany_int(1.0,2.0,\"3.2\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,\"3.3\")\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"\
    3.4\")\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"3.5\")\n</cell>\n\
    <code language=julia-1.5>\nany_int(1.0,2.0,\"3.6\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,\"3.7\")\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"\
    3.8\")\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"3.9\")\n</cell>\n\
    <code language=julia-1.5>\nany_int(1.0,2.0,\"3.10\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,\"3.11\")\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"\
    3.12\")\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"3.13\")\n</cell>\n\
    <code language=julia-1.5>\nany_int(1.0,2.0,\"3.14\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,\"3.15\")\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"\
    3.16\")\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"3.17\")\n</cell>\n\
    <code language=julia-1.5>\nany_int(1.0,2.0,\"3.18\")\n</cell>\n<code language=julia-1.5>\n\
    any_int(1.0,2.0,\"3.19\")\n</cell>\n<code language=julia-1.5>\nany_int(1.0,2.0,\"\
    3.20\")\n</cell>\n<code language=julia-1.5>\n\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp30bp3cxj.jl:21\nin expression starting at\
    \ /tmp/tmp30bp3cxj.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        true\n\
    \    else\n        if x == y || x == z\n            true\n        else\n     \
    \       if y == z\n                true\n            else\n                if\
    \ x < y && y < z && x < z\n                    true\n                else\n  \
    \                  false\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,3,2)\n</cell>\n\
    <code language=julia-1.5>\nany_int(2,3,1)\n</cell>\n<code language=julia-1.5>\n\
    any_int(2,1,3)\n</cell>\n<code language=julia-1.5>\nany_int(2,3,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(2,3,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(2,3,6)\n</cell>\n<code language=julia-1.5>\nany_int(2,3,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(2,3,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(2,3,9)\n</cell>\n<code language=julia-1.5>\nany_int(2,3,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(2,3,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(2,3,12)\n</cell>\n<code language=julia-1.5>\nany_int(2,3,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(2,3,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(2,3,15)\n</cell>\n<code language=julia-1.5>\nany_int(2,3,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(2,3,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(2,3,18)\n</cell>\n<code language=julia-1.5>\nany_int(2,3,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(2,3,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(2,3,21)\n</cell>\n<code language=julia-1.5>\nany_int(2,3,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(2,3,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(2,3,24)\n</cell>\n<code language=julia-1.5>\nany_int(2,3,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(2,3,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(2,3,27)\n</\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t\
    @test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcb81n0zs.jl:31\nin expression starting at\
    \ /tmp/tmpcb81n0zs.jl:31\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true \n    else \n        false \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf4tbu0qx.jl:21\nin expression starting at\
    \ /tmp/tmpf4tbu0qx.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        true\n\
    \    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp_dqceak_.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp_dqceak_.jl:26\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmp_dqceak_.jl:26 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_dqceak_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_dqceak_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmp_dqceak_.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp_dqceak_.jl:27 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_dqceak_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_dqceak_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmp_dqceak_.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp_dqceak_.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_dqceak_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_dqceak_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    end\n    if x == y || x == z || y == z\n        return true\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp6auflu5k.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp6auflu5k.jl:28\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmp6auflu5k.jl:28 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6auflu5k.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6auflu5k.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmp6auflu5k.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp6auflu5k.jl:29 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6auflu5k.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6auflu5k.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmp6auflu5k.jl:14\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp6auflu5k.jl:30 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6auflu5k.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6auflu5k.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978546
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(1,2,3)\n\
    </cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,5)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,8)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,9)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,11)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,12)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,14)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,15)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,17)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,18)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,20)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,21)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,23)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,24)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,26)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,27)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,29)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,30)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,32)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,33)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1_nknxp.jl:21\nin expression starting at\
    \ /tmp/tmpk1_nknxp.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ return true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpq4ndqfsc.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpq4ndqfsc.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpq4ndqfsc.jl:25\ntest set: Error During Test at
    /tmp/tmpq4ndqfsc.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpq4ndqfsc.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpq4ndqfsc.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpq4ndqfsc.jl:25\ntest set: Error
    During Test at /tmp/tmpq4ndqfsc.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpq4ndqfsc.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpq4ndqfsc.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpq4ndqfsc.jl:25\ntest set: Error During Test at
    /tmp/tmpq4ndqfsc.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        true\n    else\n\
    \        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpilx_27a0.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpilx_27a0.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error
    During Test at /tmp/tmpilx_27a0.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpilx_27a0.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpilx_27a0.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpilx_27a0.jl:25\ntest set: Error During Test at
    /tmp/tmpilx_27a0.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmlc73ti3.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpmlc73ti3.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error
    During Test at /tmp/tmpmlc73ti3.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978543
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphwtjimer.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmphwtjimer.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error
    During Test at /tmp/tmphwtjimer.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmphwtjimer.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmphwtjimer.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmphwtjimer.jl:25\ntest set: Error During Test at
    /tmp/tmphwtjimer.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        true\n\
    \    else\n        false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmlc73ti3.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpmlc73ti3.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error
    During Test at /tmp/tmpmlc73ti3.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpmlc73ti3.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpmlc73ti3.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpmlc73ti3.jl:25\ntest set: Error During Test at
    /tmp/tmpmlc73ti3.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp95eu7xyj.jl:21\nin expression starting at\
    \ /tmp/tmp95eu7xyj.jl:21\n"
  stdout: ''
  timestamp: 1659978540
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == 0 || y == 0 || z == 0\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3mzwmmw2.jl:21\nin expression starting at\
    \ /tmp/tmp3mzwmmw2.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z \n       \
    \ true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9d7zqc9o.jl:21\nin expression starting at\
    \ /tmp/tmp9d7zqc9o.jl:21\n"
  stdout: ''
  timestamp: 1659978543
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnp9of77w.jl:21\nin expression starting at\
    \ /tmp/tmpnp9of77w.jl:21\n"
  stdout: ''
  timestamp: 1659978538
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjblqck2n.jl:26\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:26 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:27\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpjblqck2n.jl:27 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error
    During Test at /tmp/tmpjblqck2n.jl:28\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpjblqck2n.jl:14\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpjblqck2n.jl:28 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpjblqck2n.jl:25\ntest set: Error During Test at
    /tmp/tmpjblqck2n.jl:29\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978541
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \       \n    \n        \n      \n\n    \n    \"\"\"\nfunction any_int(x::Float64,\
    \ y::Float64, z::Float64)::Bool \n    if x == y || x == z || y == z\n        return\
    \ true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,3)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,5)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,6)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,7)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,9)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,10)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,11)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,12)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,13)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,14)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,15)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,16)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,17)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,18)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,19)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,20)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,21)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,22)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,23)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,24)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,25)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,26)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,27)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,28)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,29)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,30)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,31)\n</cell>\n\
    <code language=julia-1.5>\nany_int(1,2,32)\n</cell>\n<code language=julia-1.5>\n\
    any_int(1,2,33)\n</cell>\n<code language=julia-1.5>\nany_int(1,2,34)\n</\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfc294s2.jl:21\nin expression starting at\
    \ /tmp/tmppfc294s2.jl:21\n"
  stdout: ''
  timestamp: 1659978538

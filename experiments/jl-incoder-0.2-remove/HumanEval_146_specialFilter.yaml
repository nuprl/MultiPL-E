name: HumanEval_146_specialFilter
language: jl
prompt: "\"\"\"Write a function that takes an array of numbers as input and returns\
  \ \n    the number of elements in the array that are greater than 10 and both \n\
  \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
  \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
  \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
  \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
  \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
  \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
completions: ["    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ mod(n, 2) == 1\n                count += 1\n            end\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\
    \ \n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n# Run your function on some test cases\nspecialFilter(1:10)\n\
    </cell>\n<text>\nQuestion 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in\
    \ nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 ==\
    \ 1 && n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in\
    \ nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 ==\
    \ 1 && n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums \n        if n > 10 &&\
    \ n % 2 != 0 && n % 2 != 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.3>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (2, 4, 6,\
    \ 8, 10).\n    For example:\n            \"\"\"", "    count = 0\n    for n in\
    \ nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 ==\
    \ 1 && n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\
    \ && num % 2 != 0 && num % 3 != 0 && num % 5 != 0 && num % 7 != 0 && num % 9 !=\
    \ 0\n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if mod(n, 2) == 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7)\
    \ == 1 && mod(n, 9) == 1\n                count += 1\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend",
  "    count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 && num\
    \ % 2 != 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (2, 4, 6,\
    \ 8, 10).\n    For example:\n            \"\"\"", "    count = 0\n    for n in\
    \ nums\n        if n > 10\n            if n % 2 == 1\n                count +=\
    \ 1\n            end\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n     \
    \           count += 1\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:100)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:1000)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter(1:10000)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:100000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:1000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:100000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:1000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:100000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:1000000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000001)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000002)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000003)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000004)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000005)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000006)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000007)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000008)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000009)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:100", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1\n                if num % 3\
    \ == 0\n                    if num % 5 == 0\n                        count +=\
    \ 1\n                    end\n                end\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-", "    count = 0\n    for\
    \ n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n\
    \ % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for num in nums\n       \
    \ if num > 10\n            if num % 2 == 0\n                if num % 3 == 0\n\
    \                    if num % 5 == 0\n                        count += 1\n   \
    \                 end\n                end\n            end\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n# Run your function\
    \ on the vector [1,2,3,4,5,6,7,8,9,10]\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if n % 2 == 1\n                count += 1\n            end\n     \
    \       if n % 2 == 0\n                if n % 4 == 0\n                    count\
    \ += 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for n in nums\n        if n > 10\n        \
    \    if n % 2 == 1\n                if n % 4 == 1\n                    count +=\
    \ 1\n                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:10000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:100000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:100000000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000000000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:10000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:100000000000000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000000000000)\n\
    </", "    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 && n % 5 == 1 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n  \
    \  for num in nums\n        if num > 10\n            if num % 2 == 0\n       \
    \         if num % 3 == 0\n                    if num % 5 == 0\n             \
    \           if num % 7 == 0\n                            if num % 9 == 0\n   \
    \                             count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           count += 1\n            if n % 2 == 1 && n % 3 == 1 && n % 5 == 1\
    \ && n % 7 == 1 && n % 9 == 1\n                count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype ", " \
    \   count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 1 && num % 3 == 1 && num % 5 ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:100)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\nspecialFilter(nums)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if n % 2 == 1\n                if n % 4 == 1\n                   \
    \ count += 1\n                end\n            end\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                count += 1\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 1\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10]) == 4\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums\n        if\
    \ n > 10\n            if mod(n,2) == 1 && mod(n,3) == 1\n                count\
    \ += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \          \"\"\"", "    count = 0\n    for n in nums \n        if n > 10 && n\
    \ % 2 == 1 && n % 3 == 1 && n % 5 == 1 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                count += 1\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    # Run your function on the given array\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (2, 4, 6, 8, 10).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums\n        if\
    \ n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n         \
    \           count += 1\n                end\n            end\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <text>\nExercise: Write a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums\n        if\
    \ n > 10\n            if n % 2 == 1\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                count += 1\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n     \
    \           count += 1\n            end\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 && n % 5 == 1 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run your function on some\
    \ test cases\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = ", "    count = 0\n    for n in nums\n        if n > 10 && n % 2\
    \ == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (2, 4, 6,\
    \ 8, 10).\n    For example:\n            \"\"\"", "    count = 0\n    for n in\
    \ nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n        \
    \    count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 ==\
    \ 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 != 0 && n % 2 != 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10])\
    \ == 5\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in\
    \ nums\n        if num > 10\n            if num % 2 == 0 && num % 3 != 0\n   \
    \             count += 1\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend",
  "    count = 0\n    for n in nums\n        if n > 10\n            if mod(n,2) ==\
    \ 1 && mod(n,3) == 1 && mod(n,5) == 1 && mod(n,7) == 1 && mod(n,9) == 1\n    \
    \            count += 1\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if n % 2 == 1\n                count += 1\n            end\n     \
    \   end\n    end\n    return count\nend", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n     \
    \           count += 1\n            end\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for num in nums\n        if num > 10\n            if\
    \ num % 2 == 0 && num % 2 != 1\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            if num % 2 == 1\n\
    \                if num % 3 == 0\n                    if num % 5 == 0\n      \
    \                  count += 1\n                    end\n                end\n\
    \            end\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10\n            if n\
    \ % 2 == 1\n                count += 1\n            end\n            if n % 2\
    \ == 0\n                if n % 4 == 1\n                    count += 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>", "    count = 0\n    for n in nums\n        if n > 10\n\
    \            if mod(n, 2) == 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7)\
    \ == 1 && mod(n, 9) == 1\n                count += 1\n            end\n      \
    \  end\n    end\n    return count\nend", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n   \
    \         count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1\n \
    \           count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums\n        if\
    \ n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n         \
    \           count += 1\n                end\n            end\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 0 && num % 3 != 0 && num % 5 !=\
    \ 0\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 &&\
    \ n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n\"\"\"\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n  \
    \  for n in nums\n        if n > 10\n            if n % 2 == 1\n             \
    \   if n % 4 == 1\n                    count += 1\n                end\n     \
    \       end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for num in nums\n        if num > 10\n            if num %\
    \ 2 == 0 && num % 2 != 1\n                count += 1\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend", "    count = 0\n    for n in nums \n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 1 \n            count += 1\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n           \
    \ \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ mod(n, 2) == 1\n                count += 1\n            end\n        end\n \
    \   end\n    return count\nend", "    count = 0\n    for n in nums\n        if\
    \ n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n \
    \       end\n    end\n    return count\nend", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for num in nums\n        if num > 10\n            if\
    \ num % 2 == 0 && num % 2 != 1\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2)\
    \ == 1\n                count += 1\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000)\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:1000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:100000000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:100000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:1000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10000000000000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000000000000)\n\
    </cell", "    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 0 && num % 3 != 0 && num % 5 != 0\n                count += 1\n\
    \            end\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n\
    \ % 2 != 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 &&\
    \ num % 9 == 1\n                count += 1\n            end\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for num in nums\n        if num > 10\n            if num %\
    \ 2 == 1\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 && n %\
    \ 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend", "    count = 0\n    for n in nums\n        if\
    \ n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n \
    \       end\n    end\n    return count\nend", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                count += 1\n  \
    \          end\n        end\n    end\n    return count\nend", "    count = 0\n\
    \    for num in nums\n        if num > 10\n            if num % 2 == 0\n     \
    \           if num % 3 == 0\n                    if num % 5 == 0\n           \
    \             count += 1\n                    end\n                end\n     \
    \       end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native ", "    count = 0\n    for n\
    \ in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n %\
    \ 7 == 1 && n % 9 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run your function on some\
    \ test cases\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10]) == 6\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\
    \ == 10\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\
    \ == 100\n</cell>\n<text>\nExtra Credit\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n  \
    \  for n in nums\n        if n > 10\n            if n % 2 == 1\n             \
    \   count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            count += 1\n            if num % 2 == 1 && num % 3 == 1 && num %\
    \ 5 == 1\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend", "    count = 0\n    for n in nums\n        if n > 10\
    \ && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if n % 2 == 1\n                count += 1\n            end\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-", "    count = 0\n    for n in nums\n        if\
    \ n > 10\n            if n % 2 == 1\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10\n            if n\
    \ % 2 == 1\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    count = 0\n    for n in nums\n        if\
    \ n > 10 && n % 2 != 0 && n % 2 != 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 !=\
    \ 0 && n % 2 != 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run your function on some test cases\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = special", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 0 && num % 2 != 1\n          \
    \      count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n# Run your function on the given array\nspecialFilter(nums)\n\
    </cell>\n<text>\nQuestion 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-", "    count = 0\n    for\
    \ n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 0\n            count += 1\n        end\n    end\n    return count\nend",
  "    count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums\n        if\
    \ n > 10\n            if n % 2 == 1\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n#\
    \ Run your function with the example numbers\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if n % 2 == 1\n                count += 1\n            end\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1\n                if num % 3 == 0\n              \
    \      if num % 5 == 0\n                        count += 1\n                 \
    \   end\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for num in nums\n        if num > 10\n    \
    \        if num % 2 == 0 && num % 3 != 0 && num % 5 != 0\n                count\
    \ += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \          \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n   \
    \         if mod(n, 2) == 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7) ==\
    \ 1 && mod(n, 9) == 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 &&\
    \ n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 ==\
    \ 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 5\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums \n        if\
    \ n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 \n            count += 1\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 && num % 3 !=\
    \ 0 && num % 5 != 0 && num % 7 != 0 && num % 9 != 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\n\"\"\"\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 0 && num % 2 != 1\n          \
    \      count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10\n            if num % 2 == 0 && num % 2 != 1\n          \
    \      count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run your function on the given array\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (2, 4, 6,\
    \ 8, 10).\n    For example:\n            \"\"\"", "    count = 0\n    for n in\
    \ nums \n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7\
    \ == 1 && n % 9 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n  \
    \  for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\
    \ && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 &&\
    \ n % 9 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\nspecialFilter(1:100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if n % 2 == 1\n                count += 1\n            end\n     \
    \       if n % 2 == 0\n                if n % 4 == 0\n                    count\
    \ += 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for n in nums\n        if n > 10 && n % 2 ==\
    \ 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10 && num % 2 == 1 && num % 2 == 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for num in nums\n        if num > 10\n            if num % 2 == 0\n\
    \                if num % 3 == 0\n                    if num % 5 == 0\n      \
    \                  count += 1\n                    end\n                end\n\
    \            end\n        end\n    end\n    return count\nend", "    count = 0\n\
    \    for num in nums\n        if num > 10\n            if num % 2 == 0 && num\
    \ % 2 != 1\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter([1,2,3,4,5,6,7,8,9,10]) == 4\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10\n            if mod(n,\
    \ 2) == 1\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                count += 1\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n\"\"\"", "    count = 0\n    for num\
    \ in nums\n        if num > 10\n            if num % 2 == 1\n                if\
    \ num % 3 == 0\n                    if num % 5 == 0\n                        count\
    \ += 1\n                    end\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n#\
    \ Run this cell to test your function\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10])\
    \ == 5\n@assert specialFilter([1,3,5,7,9]) == 3\n@assert specialFilter([1,3,5,7,8,9,10])\
    \ == 4\n@assert specialFilter([1,3,5,7,8,9,10,11,12,13,14]) == 0\n</cell>\n<text>\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \          \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n   \
    \         if n % 2 == 1\n                count += 1\n            end\n       \
    \ end\n    end\n    return count\nend", "    count = 0\n    for n in nums\n  \
    \      if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for num in nums\n        if num > 10 && num % 2 ==\
    \ 1 && num % 3 == 1 && num % 5 == 1\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<text>\nExercise: Write a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in nums\n\
    \        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n       \
    \     count += 1\n        end\n    end\n    return count\nend\n\"\"\"\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if n % 2 == 1\n                count += 1\n            end\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<text>\nExercise: Write a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums\n        if\
    \ n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1\n           \
    \ count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n       \
    \     count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for num in nums\n        if num > 10\n            if\
    \ num % 2 == 0\n                if num % 3 == 0\n                    if num %\
    \ 5 == 0\n                        count += 1\n                    end\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10])\
    \ == 5\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\
    \ == 10\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\
    \ == 10\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\
    \ == 10\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n  \
    \  for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 2 == 0 \n  \
    \          count += 1\n        end\n    end\n    return count\nend\n\"\"\"\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    count = 0\n    for n in nums\n        if\
    \ n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n \
    \       end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-", "    count = 0\n    for\
    \ n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n\"\"\"\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</", "    count = 0\n    for n in nums\n \
    \       if n > 10\n            if n % 2 == 1\n                if n % 4 == 1\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n     \
    \           count += 1\n            end\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for n in nums\n        if n > 10\n            if mod(n,\
    \ 2) == 1\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in\
    \ nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n        \
    \    count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) == 1\n \
    \               if mod(n, 3) == 1\n                    count += 1\n          \
    \      end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if n % 2 == 1\n                count += 1\n            end\n     \
    \       if n % 2 == 0\n                if n % 4 == 0\n                    count\
    \ += 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter(1:10)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>", "    count = 0\n    for n in nums\n     \
    \   if n > 10\n            if n % 2 == 1\n                count += 1\n       \
    \     end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if mod(n, 2) == 1\n                count += 1\n\
    \            end\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1 \n            count += 1\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10\n            if n % 2 == 1\n                count += 1\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1\n                if num % 3 == 0\n              \
    \      if num % 5 == 0\n                        count += 1\n                 \
    \   end\n                end\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for num in nums\n       \
    \ if num > 10\n            if num % 2 == 1\n                if num % 3 == 0\n\
    \                    if num % 5 == 0\n                        count += 1\n   \
    \                 end\n                end\n            end\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:1000)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:1000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:100000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:1000000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10000000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000001)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000002)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000003)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000004)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000005)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000006)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000007)\n\
    </cell>\n<code language=julia-1.5", "    count = 0\n    for n in nums\n      \
    \  if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n\
    \        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n           \
    \ \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n     \
    \           count += 1\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\n@time specialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums\n        if\
    \ n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n \
    \       end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums\n        if\
    \ n > 10 && n % 2 == 1 && n % 2 == 0\n            count += 1\n        end\n  \
    \  end\n    return count\nend", "    count = 0\n    for n in nums\n        if\
    \ n > 10\n            if mod(n, 2) == 1\n                count += 1\n        \
    \    end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10)\
    \ == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10)\
    \ == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10)\
    \ == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10)\
    \ == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5", "    count = 0\n\
    \    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 ==\
    \ 1\n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"", "    count = 0\n    for n in nums\n        if\
    \ n > 10\n            if n % 2 == 1\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10\n \
    \           if n % 2 == 1\n                if n % 4 == 1\n                   \
    \ count += 1\n                end\n            end\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 0 && num % 3 == 0\n                count += 1\n   \
    \         end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 != 0 && n % 2 != 1\n            count += 1\n     \
    \   end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter(nums)\n</cell>\n<text>\nExercise: Write a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5",
  "    count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 != 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<text>\nExercise: Write a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in nums\n\
    \        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run your function on the array\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n    for num in\
    \ nums\n        if num > 10\n            if num % 2 == 1\n                if num\
    \ % 3 == 0\n                    if num % 5 == 0\n                        count\
    \ += 1\n                    end\n                end\n            end\n      \
    \  end\n    end\n    return count\nend", "    count = 0\n    for n in nums\n \
    \       if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter([1,2,3,4,5,6,7,8,9,10]) == 5\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for n in nums\n        if n > 10 &&\
    \ n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n# Run your\
    \ function on the given array\nspecialFilter(nums)\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"", "    count = 0\n    for num in nums\n        if num > 10\n\
    \            if num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n               \
    \ count += 1\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:", "    count = 0\n    for\
    \ n in nums\n        if n > 10\n            count += 1\n            if n % 2 ==\
    \ 1\n                count += 1\n                if n % 3 == 1\n             \
    \       count += 1\n                    if n % 5 == 1\n                      \
    \  count += 1\n                        if n % 7 == 1\n                       \
    \     count += 1\n                            if n % 9 == 1\n                \
    \                count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.0>\n@", "    count = 0\n    for num in nums\n\
    \        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n       \
    \     count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"", "    count = 0\n    for n in nums\n        if n > 10\n            if n\
    \ % 2 == 1\n                if n % 4 == 1\n                    count += 1\n  \
    \              end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", " \
    \   count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 && num\
    \ % 3 != 0 && num % 5 != 0 && num % 7 != 0 && num % 9 != 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"", "    count\
    \ = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n %\
    \ 5 == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10])\
    \ == 5\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"", "    count = 0\n    for n in\
    \ nums\n        if n > 10\n            count += 1\n            if n % 2 == 1\n\
    \                count += 1\n                if n % 4 == 1\n                 \
    \   count += 1\n        end\n    end\n    return count\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_27_flip_case
language: jl
prompt: "\"\"\" For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n        \"\"\"\nfunction flip_case(string::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
  \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
  These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\")\nend\n"
completions: ["    \n    local result = \"\"\n    \n    for char in string:gmatch(\"\
    %c\") do \n        if char == \"a\" then \n            result = \"A\"\n      \
    \  elseif char == \"b\" then \n            result = \"B\"\n        elseif char\
    \ == \"c\" then \n            result = \"C\"\n        elseif char == \"d\" then\
    \ \n            result = \"D\"\n        elseif char == \"e\" then \n         \
    \   result = \"E\"\n        elseif char == \"f\" then \n            result = \"\
    F\"\n        elseif char == \"g\" then \n            result = \"G\"\n        elseif\
    \ char == \"h\" then \n            result = \"H\"\n        elseif char == \"i\"\
    \ then \n            result = \"I\"\n        elseif char == \"j\" then \n    \
    \        result = \"J\"\n        elseif char == \"k\" then \n            result\
    \ = \"K\"\n        elseif char == \"l\" then \n            result = \"L\"\n  \
    \      elseif char == \"m\" then \n            result = \"M\"\n        elseif\
    \ char == \"n\" then \n            result = \"N\"\n        elseif char == \"o\"\
    \ then \n            result = \"O\"\n        elseif char == \"p\" then \n    \
    \        result = \"P\"\n        elseif char == \"q\" then \n            result\
    \ = \"Q\"\n        elseif char == \"r\" then \n            result = \"R\"\n  \
    \      elseif char == \"s\" then \n            result = \"S\"\n        elseif\
    \ char == \"t\" then \n            result = \"T\"\n        elseif char == \"u\"\
    \ then \n            result = \"U\"\n        elseif char == \"v\" then \n    \
    \        result = \"V\"\n        elseif char == \"w\" then \n            result\
    \ = \"W\"\n        elseif char == \"x\" then \n            result = \"X\"\n  \
    \      elseif char == \"y\" then \n            result = \"Y\"\n        elseif\
    \ char == \"z\" then \n            result = \"Z\"\n        elseif char == \"A\"\
    \ then \n            result = \"a\"\n        elseif char == \"B\" then \n    \
    \        result = \"b\"\n        elseif char == \"C\" then \n            result\
    \ = \"c\"\n        elseif char == \"D\" then \n            result = \"d\"\n  \
    \      elseif char == \"E\" then \n            result = \"e\"\n        elseif\
    \ char == \"F\" then \n            result = \"f\"\n        elseif char == \"G\"\
    \ then \n            result = \"g\"\n        elseif char == \"H\" then \n    \
    \        result = \"h\"\n        elseif char == \"I\" then \n            result\
    \ = \"i\"\n        elseif char == \"J\" then \n            result = \"j\"\n  \
    \      elseif char == \"K\" then \n            result = \"k\"\n        elseif\
    \ char == \"L\" then \n            result = \"l\"\n        elseif char == \"M\"\
    \ ", "    \n    str = string.lower()\n    str = str.capitalize()\n    str = str.upper()\n\
    \    str = str.lower()\n    return str\nend", "    local result = \"\"\n    for\
    \ char in string:gmatch(\"%c\") do\n        if char == toupper(char) then\n  \
    \          result = result .. tolower(char)\n        elseif char == tolower(char)\
    \ then\n            result = result .. toupper(char)\n        else\n         \
    \   result = result .. char\n        end\n    end\n    return result\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    local result = \"\"\n    \n    for char\
    \ in string:\n        if char == toupper(char):\n            result = result +\
    \ tolower(char)\n        elseif char == tolower(char):\n            result = result\
    \ + toupper(char)\n        else\n            result = result + char\n        end\n\
    \    end\n    \n    return result\nend", "    local result = \"\"\n    for c in\
    \ string:gmatch(\"[%a]\") do \n        if c == \"a\" then \n            result\
    \ = \"A\" \n        elseif c == \"A\" then \n            result = \"a\" \n   \
    \     else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend\n</cell>\n<code language=julia-1.5>", "    \n    local result =\
    \ \"\"\n    \n    for char in string:\n        if char == char:\n            result\
    \ = result + char\n        elseif char == char:\n            result = result +\
    \ char\n        elseif char == char:\n            result = result + char\n   \
    \     elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = ", "    \n    uppercase = string.uppercase()\n    lowercase\
    \ = string.lowercase()\n    \n    if uppercase == lowercase\n        return string\n\
    \    else\n        return lowercase\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\n\
    @time flip_case(\"Hello World\")\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"\
    Hello World\")\n</cell>\n<text>\nExercise: Write a function that takes a string\
    \ and returns a string where all characters are lowercase except for the first\
    \ and last character. For example, \"Hello World\" -> \"hELLO wORLD\".", "   \
    \ \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n \
    \   \n    if uppercase == lowercase\n        return string\n    \n    uppercase\
    \ = uppercase.replace(lowercase, uppercase)\n    lowercase = lowercase.replace(uppercase,\
    \ lowercase)\n    \n    return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\n\
    # Test the function\nprintln(flip_case(\"Hello World\"))\nprintln(flip_case(\"\
    Hello World!\"))\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns the number of characters in the string.", "    \n    local result\
    \ = \"\"\n    \n    for char in string:\n        if char == char:\n          \
    \  result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char:\n            result += char\n\
    \        else if char == char:\n            result += char\n        else if char\
    \ == char:\n            result += char\n        else if char == char:\n      \
    \      result += char\n        else if char == char", "    \n    local result\
    \ = \"\"\n    \n    for char in string:\n        if char == char:\n          \
    \  result = result + char\n        else\n            result = result + char.upper()\n\
    \        end\n    end\n    \n    return result\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    str = string\n\
    \    str = str.replace(\" \", \"\")\n    str = str.replace(\"\\n\", \"\")\n  \
    \  str = str.replace(\"\\t\", \"\")\n    str = str.replace(\"!\", \"\")\n    str\
    \ = str.replace(\"?\", \"\")\n    str = str.replace(\",\", \"\")\n    str = str.replace(\"\
    '\", \"\")\n    str = str.replace(\"\\\"\", \"\")\n    str = str.replace(\"(\"\
    , \"\")\n    str = str.replace(\")\", \"\")\n    str = str.replace(\"[\", \"\"\
    )\n    str = str.replace(\"]\", \"\")\n    str = str.replace(\"{\", \"\")\n  \
    \  str = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n    str\
    \ = str.replace(\"}\", \"\")\n    str = str.replace(\":\", \"\")\n    str = str.replace(\"\
    ;\", \"\")\n    str = str.replace(\"!\", \"\")\n    str = str.replace(\"?\", \"\
    \")\n    str = str.replace(\",\", \"\")\n    str = str.replace(\"'\", \"\")\n\
    \    str = str.replace(\"\\\"\", \"\")\n    str = str.replace(\"(\", \"\")\n \
    \   str = str.replace(\")\", \"\")\n    str = str.replace(\"[\", \"\")\n    str\
    \ = str.replace(\"]\", \"\")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"\
    }\", \"\")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\
    \")\n    str = str.replace(\":\", \"\")\n    str = str.replace(\";\", \"\")\n\
    \    str = str.replace(\"!\", \"\")\n    str = str.replace(\"?\", \"\")\n    str\
    \ = str.replace(\",\", \"\")\n    str = str.replace(\"'\", \"\")\n    str = str.replace(\"\
    \\\"\", \"\")\n    str = str.replace(\"(\", \"\")\n    str = str.replace(\")\"\
    , \"\")\n    str = str.replace(\"[\", \"\")\n    str = str.replace(\"]\", \"\"\
    )\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n  \
    \  str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str\
    \ = str.replace(\":\", \"\")\n    str = str.replace(\";\", \"\")\n    str = str.replace(\"\
    !\", \"\")\n    str = str.replace(\"?\", \"\")\n    str = str.replace(\",\", \"\
    \")\n    str = str.replace(\"'\", \"\")\n    str = str.replace(\"\\\"\", \"\"\
    )\n    str = str.replace(\"(\", \"\")\n    str = str.replace(\")\", \"\")\n  \
    \  str = str.replace(\"[\", \"\")\n    str = str.replace(\"]\", \"\")\n    str\
    \ = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"\
    {\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\":\", \"\
    \")\n    str = str.replace(\";\", \"\")\n    str = str.replace(\"!\", \"\")\n\
    \    str = str.replace(\"?\", \"\")\n    str = str.replace(\",\", \"\")\n    str\
    \ = str.replace(\"'\", \"\")\n    str = str.replace(\"\\\"\", \"\")\n    str =\
    \ str.replace(\"(\", \"\")\n    str = str.replace(\")\", \"\")\n    str = str.replace(\"\
    [\", \"\")\n    ", "    \n    uppercase = string.uppercase()\n    lowercase =\
    \ string.lowercase()\n    \n    if uppercase == lowercase\n        return string\n\
    \    \n    return lowercase\nend", "    local result = \"\"\n    for char in string:gmatch(\"\
    %a\") do\n        if char == \"a\" then\n            char = \"A\"\n        elseif\
    \ char == \"A\" then\n            char = \"a\"\n        end\n        result =\
    \ result .. char\n    end\n    return result\nend\n</code>\n<|/ a tags=string,lowercase,uppercase,lua\
    \ |>\n<| a tags=string,lowercase,uppercase,lua |>\n<code>", "    \n    local result\
    \ = \"\"\n    for char in string:gmatch(\"%c\") do\n        if char == toupper(char)\
    \ then\n            result = result .. tolower(char)\n        elseif char == tolower(char)\
    \ then\n            result = result .. toupper(char)\n        else\n         \
    \   result = result .. char\n        end\n    end\n    return result\nend\n</cell>\n\
    <code language=julia-1.5>", "    local result = \"\"\n    for c in string:gmatch(\"\
    [%a]\") do \n        result = result .. tostring((c:lower()):upper()) \n    end\n\
    \    return result\nend\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"\
    Hello World!\")\n</cell>\n<text>\nExercise\nWrite a function that takes a string\
    \ and returns the string with all lowercase letters converted to uppercase. \n\
    Write a function that takes a string and returns the string with all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase. \nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase and all uppercase\
    \ letters converted to lowercase", "    local result = \"\"\n    for char in string:gmatch(\"\
    %a\"):gmatch(\"%A\"):gmatch(\"%c\"):gmatch(\"%C\"):gmatch(\"%d\"):gmatch(\"%D\"\
    ):gmatch(\"%f\"):gmatch(\"%F\"):gmatch(\"%g\"):gmatch(\"%G\"):gmatch(\"%h\"):gmatch(\"\
    %H\"):gmatch(\"%i\"):gmatch(\"%I\"):gmatch(\"%j\"):gmatch(\"%J\"):gmatch(\"%k\"\
    ):gmatch(\"%K\"):gmatch(\"%l\"):gmatch(\"%L\"):gmatch(\"%m\"):gmatch(\"%M\"):gmatch(\"\
    %n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"%P\"):gmatch(\"%q\"):gmatch(\"%Q\"\
    ):gmatch(\"%r\"):gmatch(\"%R\"):gmatch(\"%s\"):gmatch(\"%S\"):gmatch(\"%t\"):gmatch(\"\
    %T\"):gmatch(\"%u\"):gmatch(\"%U\"):gmatch(\"%v\"):gmatch(\"%V\"):gmatch(\"%w\"\
    ):gmatch(\"%W\"):gmatch(\"%x\"):gmatch(\"%X\"):gmatch(\"%y\"):gmatch(\"%Y\"):gmatch(\"\
    %z\"):gmatch(\"%Z\"):gmatch(\"%A\"):gmatch(\"%a\"):gmatch(\"%c\"):gmatch(\"%C\"\
    ):gmatch(\"%d\"):gmatch(\"%D\"):gmatch(\"%f\"):gmatch(\"%F\"):gmatch(\"%g\"):gmatch(\"\
    %G\"):gmatch(\"%h\"):gmatch(\"%H\"):gmatch(\"%i\"):gmatch(\"%I\"):gmatch(\"%j\"\
    ):gmatch(\"%J\"):gmatch(\"%k\"):gmatch(\"%K\"):gmatch(\"%l\"):gmatch(\"%L\"):gmatch(\"\
    %m\"):gmatch(\"%M\"):gmatch(\"%n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"%P\"\
    ):gmatch(\"%q\"):gmatch(\"%Q\"):gmatch(\"%r\"):gmatch(\"%R\"):gmatch(\"%s\"):gmatch(\"\
    %S\"):gmatch(\"%t\"):gmatch(\"%T\"):gmatch(\"%u\"):gmatch(\"%U\"):gmatch(\"%v\"\
    ):gmatch(\"%V\"):gmatch(\"%w\"):gmatch(\"%W\"):gmatch(\"%x", "    \n    local\
    \ result = \"\"\n    for char in string:gmatch(\"%c\") do \n        if char ==\
    \ \"a\" then \n            char = \"A\"\n        elseif char == \"A\" then \n\
    \            char = \"a\"\n        end\n        result = result .. char\n    end\n\
    \    return result\nend\n</cell>\n<code language=julia-1.5>", "    \n    local\
    \ result = \"\"\n    \n    for char in string:\n        if char == char:\n   \
    \         result = result + char\n        elseif char == char:\n            result\
    \ = result + char\n        elseif char == char:\n            result = result +\
    \ char\n        elseif char == char:\n            result = result + char\n   \
    \     elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = ", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return string\n    \n    return lowercase\nend", "    \n    uppercase =\
    \ string.uppercase()\n    lowercase = string.lowercase()\n    \n    if uppercase\
    \ == lowercase\n        return uppercase\n    else\n        return lowercase\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return string\n    \n    return lowercase\nend\n</cell>\n<code language=julia-1.1>",
  "    \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    if uppercase == lowercase\n        return uppercase\n    \n    return\
    \ lowercase\nend", "    \n    local result = \"\"\n    \n    for char in string:\n\
    \        if char == char:\n            result = result + char\n        else\n\
    \            result = result + char.upper()\n        end\n    end\n    \n    return\
    \ result\nend\n</cell>\n<code language=julia-1.5>", "    \n    local result =\
    \ \"\"\n    for char in string:gmatch(\"%c\") do \n        if char == toupper(char)\
    \ then \n            result = result .. tolower(char) \n        else \n      \
    \      result = result .. toupper(char) \n        end\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.5>", "    local result = \"\"\n    for char\
    \ in string:gmatch(\"%c\") do \n        if char >= \"a\" and char <= \"z\" then\
    \ \n            char = \"A\"\n        elseif char >= \"A\" and char <= \"Z\" then\
    \ \n            char = \"a\"\n        elseif char >= \"0\" and char <= \"9\" then\
    \ \n            char = \"0\"\n        end\n        result = result .. char\n \
    \   end\n    return result\nend\n</cell>\n<code language=julia-1.5>", "    \n\
    \    local result = \"\"\n    for char in string:gmatch(\"%c\") do \n        if\
    \ char == \"a\" then \n            result = \"A\"\n        elseif char == \"b\"\
    \ then \n            result = \"B\"\n        elseif char == \"c\" then \n    \
    \        result = \"C\"\n        elseif char == \"d\" then \n            result\
    \ = \"D\"\n        elseif char == \"e\" then \n            result = \"E\"\n  \
    \      elseif char == \"f\" then \n            result = \"F\"\n        elseif\
    \ char == \"g\" then \n            result = \"G\"\n        elseif char == \"h\"\
    \ then \n            result = \"H\"\n        elseif char == \"i\" then \n    \
    \        result = \"I\"\n        elseif char == \"j\" then \n            result\
    \ = \"J\"\n        elseif char == \"k\" then \n            result = \"K\"\n  \
    \      elseif char == \"l\" then \n            result = \"L\"\n        elseif\
    \ char == \"m\" then \n            result = \"M\"\n        elseif char == \"n\"\
    \ then \n            result = \"N\"\n        elseif char == \"o\" then \n    \
    \        result = \"O\"\n        elseif char == \"p\" then \n            result\
    \ = \"P\"\n        elseif char == \"q\" then \n            result = \"Q\"\n  \
    \      elseif char == \"r\" then \n            result = \"R\"\n        elseif\
    \ char == \"s\" then \n            result = \"S\"\n        elseif char == \"t\"\
    \ then \n            result = \"T\"\n        elseif char == \"u\" then \n    \
    \        result = \"U\"\n        elseif char == \"v\" then \n            result\
    \ = \"V\"\n        elseif char == \"w\" then \n            result = \"W\"\n  \
    \      elseif char == \"x\" then \n            result = \"X\"\n        elseif\
    \ char == \"y\" then \n            result = \"Y\"\n        elseif char == \"z\"\
    \ then \n            result = \"Z\"\n        elseif char == \"A\" then \n    \
    \        result = \"a\"\n        elseif char == \"B\" then \n            result\
    \ = \"b\"\n        elseif char == \"C\" then \n            result = \"c\"\n  \
    \      elseif char == \"D\" then \n            result = \"d\"\n        elseif\
    \ char == \"E\" then \n            result = \"e\"\n        elseif char == \"F\"\
    \ then \n            result = \"f\"\n        elseif char == \"G\" then \n    \
    \        result = \"g\"\n        elseif char == \"H\" then \n            result\
    \ = \"h\"\n        elseif char == \"I\" then \n            result = \"i\"\n  \
    \      elseif char == \"J\" then \n            result = \"j\"\n        elseif\
    \ char == \"K\" then \n            result = \"k\"\n        elseif char == \"L\"\
    \ then \n            result = \"l\"\n        elseif char == \"M\" then \n", " \
    \   local result = \"\"\n    for char in string:gmatch(\"%c\") do \n        if\
    \ char == toupper(char) then \n            result = result .. tolower(char) \n\
    \        else \n            result = result .. toupper(char) \n        end\n \
    \   end\n    return result\nend\n</cell>\n<code language=julia-1.5>", "    \n\
    \    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n    \n\
    \    return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\n#\
    \ Test the function\nprintln(flip_case(\"hello\"))\nprintln(flip_case(\"HELLO\"\
    ))\nprintln(flip_case(\"HellO\"))\nprintln(flip_case(\"HELLO WORLD\"))\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the string\
    \ with all uppercase letters replaced by their lowercase counterparts.", "   \
    \ str = string.lower()\n    str = str.capitalize()\n    return str\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    local result = \"\"\n    \n    for char\
    \ in string:gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch", "    \n    local result = \"\"\n    for char in\
    \ string:gmatch(\"%c\") do \n        if char == \"a\" then \n            result\
    \ = \"A\"\n        elseif char == \"b\" then \n            result = \"B\"\n  \
    \      elseif char == \"c\" then \n            result = \"C\"\n        elseif\
    \ char == \"d\" then \n            result = \"D\"\n        elseif char == \"e\"\
    \ then \n            result = \"E\"\n        elseif char == \"f\" then \n    \
    \        result = \"F\"\n        elseif char == \"g\" then \n            result\
    \ = \"G\"\n        elseif char == \"h\" then \n            result = \"H\"\n  \
    \      elseif char == \"i\" then \n            result = \"I\"\n        elseif\
    \ char == \"j\" then \n            result = \"J\"\n        elseif char == \"k\"\
    \ then \n            result = \"K\"\n        elseif char == \"l\" then \n    \
    \        result = \"L\"\n        elseif char == \"m\" then \n            result\
    \ = \"M\"\n        elseif char == \"n\" then \n            result = \"N\"\n  \
    \      elseif char == \"o\" then \n            result = \"O\"\n        elseif\
    \ char == \"p\" then \n            result = \"P\"\n        elseif char == \"q\"\
    \ then \n            result = \"Q\"\n        elseif char == \"r\" then \n    \
    \        result = \"R\"\n        elseif char == \"s\" then \n            result\
    \ = \"S\"\n        elseif char == \"t\" then \n            result = \"T\"\n  \
    \      elseif char == \"u\" then \n            result = \"U\"\n        elseif\
    \ char == \"v\" then \n            result = \"V\"\n        elseif char == \"w\"\
    \ then \n            result = \"W\"\n        elseif char == \"x\" then \n    \
    \        result = \"X\"\n        elseif char == \"y\" then \n            result\
    \ = \"Y\"\n        elseif char == \"z\" then \n            result = \"Z\"\n  \
    \      elseif char == \"A\" then \n            result = \"a\"\n        elseif\
    \ char == \"B\" then \n            result = \"b\"\n        elseif char == \"C\"\
    \ then \n            result = \"c\"\n        elseif char == \"D\" then \n    \
    \        result = \"d\"\n        elseif char == \"E\" then \n            result\
    \ = \"e\"\n        elseif char == \"F\" then \n            result = \"f\"\n  \
    \      elseif char == \"G\" then \n            result = \"g\"\n        elseif\
    \ char == \"H\" then \n            result = \"h\"\n        elseif char == \"I\"\
    \ then \n            result = \"i\"\n        elseif char == \"J\" then \n    \
    \        result = \"j\"\n        elseif char == \"K\" then \n            result\
    \ = \"k\"\n        elseif char == \"L\" then \n            result = \"l\"\n  \
    \      elseif char == \"M\" then \n", "    local result = \"\"\n    for char in\
    \ string:gmatch(\"%c\") do \n        if char == \"a\" then \n            result\
    \ = \"A\"\n        elseif char == \"b\" then \n            result = \"B\"\n  \
    \      elseif char == \"c\" then \n            result = \"C\"\n        elseif\
    \ char == \"d\" then \n            result = \"D\"\n        elseif char == \"e\"\
    \ then \n            result = \"E\"\n        elseif char == \"f\" then \n    \
    \        result = \"F\"\n        elseif char == \"g\" then \n            result\
    \ = \"G\"\n        elseif char == \"h\" then \n            result = \"H\"\n  \
    \      elseif char == \"i\" then \n            result = \"I\"\n        elseif\
    \ char == \"j\" then \n            result = \"J\"\n        elseif char == \"k\"\
    \ then \n            result = \"K\"\n        elseif char == \"l\" then \n    \
    \        result = \"L\"\n        elseif char == \"m\" then \n            result\
    \ = \"M\"\n        elseif char == \"n\" then \n            result = \"N\"\n  \
    \      elseif char == \"o\" then \n            result = \"O\"\n        elseif\
    \ char == \"p\" then \n            result = \"P\"\n        elseif char == \"q\"\
    \ then \n            result = \"Q\"\n        elseif char == \"r\" then \n    \
    \        result = \"R\"\n        elseif char == \"s\" then \n            result\
    \ = \"S\"\n        elseif char == \"t\" then \n            result = \"T\"\n  \
    \      elseif char == \"u\" then \n            result = \"U\"\n        elseif\
    \ char == \"v\" then \n            result = \"V\"\n        elseif char == \"w\"\
    \ then \n            result = \"W\"\n        elseif char == \"x\" then \n    \
    \        result = \"X\"\n        elseif char == \"y\" then \n            result\
    \ = \"Y\"\n        elseif char == \"z\" then \n            result = \"Z\"\n  \
    \      elseif char == \"A\" then \n            result = \"a\"\n        elseif\
    \ char == \"B\" then \n            result = \"b\"\n        elseif char == \"C\"\
    \ then \n            result = \"c\"\n        elseif char == \"D\" then \n    \
    \        result = \"d\"\n        elseif char == \"E\" then \n            result\
    \ = \"e\"\n        elseif char == \"F\" then \n            result = \"f\"\n  \
    \      elseif char == \"G\" then \n            result = \"g\"\n        elseif\
    \ char == \"H\" then \n            result = \"h\"\n        elseif char == \"I\"\
    \ then \n            result = \"i\"\n        elseif char == \"J\" then \n    \
    \        result = \"j\"\n        elseif char == \"K\" then \n            result\
    \ = \"k\"\n        elseif char == \"L\" then \n            result = \"l\"\n  \
    \      elseif char == \"M\" then \n            result = \"", "    str = string.lower()\n\
    \    str = string.upper()\n    return str\nend\n</cell>\n<code language=julia-1.5>",
  "    local result = \"\"\n    for char in string:gmatch(\"%c\") do \n        if\
    \ char == \"a\" then \n            result = \"A\"\n        elseif char == \"b\"\
    \ then \n            result = \"B\"\n        elseif char == \"c\" then \n    \
    \        result = \"C\"\n        elseif char == \"d\" then \n            result\
    \ = \"D\"\n        elseif char == \"e\" then \n            result = \"E\"\n  \
    \      elseif char == \"f\" then \n            result = \"F\"\n        elseif\
    \ char == \"g\" then \n            result = \"G\"\n        elseif char == \"h\"\
    \ then \n            result = \"H\"\n        elseif char == \"i\" then \n    \
    \        result = \"I\"\n        elseif char == \"j\" then \n            result\
    \ = \"J\"\n        elseif char == \"k\" then \n            result = \"K\"\n  \
    \      elseif char == \"l\" then \n            result = \"L\"\n        elseif\
    \ char == \"m\" then \n            result = \"M\"\n        elseif char == \"n\"\
    \ then \n            result = \"N\"\n        elseif char == \"o\" then \n    \
    \        result = \"O\"\n        elseif char == \"p\" then \n            result\
    \ = \"P\"\n        elseif char == \"q\" then \n            result = \"Q\"\n  \
    \      elseif char == \"r\" then \n            result = \"R\"\n        elseif\
    \ char == \"s\" then \n            result = \"S\"\n        elseif char == \"t\"\
    \ then \n            result = \"T\"\n        elseif char == \"u\" then \n    \
    \        result = \"U\"\n        elseif char == \"v\" then \n            result\
    \ = \"V\"\n        elseif char == \"w\" then \n            result = \"W\"\n  \
    \      elseif char == \"x\" then \n            result = \"X\"\n        elseif\
    \ char == \"y\" then \n            result = \"Y\"\n        elseif char == \"z\"\
    \ then \n            result = \"Z\"\n        elseif char == \"A\" then \n    \
    \        result = \"a\"\n        elseif char == \"B\" then \n            result\
    \ = \"b\"\n        elseif char == \"C\" then \n            result = \"c\"\n  \
    \      elseif char == \"D\" then \n            result = \"d\"\n        elseif\
    \ char == \"E\" then \n            result = \"e\"\n        elseif char == \"F\"\
    \ then \n            result = \"f\"\n        elseif char == \"G\" then \n    \
    \        result = \"g\"\n        elseif char == \"H\" then \n            result\
    \ = \"h\"\n        elseif char == \"I\" then \n            result = \"i\"\n  \
    \      elseif char == \"J\" then \n            result = \"j\"\n        elseif\
    \ char == \"K\" then \n            result = \"k\"\n        elseif char == \"L\"\
    \ then \n            result = \"l\"\n        elseif char == \"M\" then \n    \
    \        result = \"", "    local result = \"\"\n    for c in string:gmatch(\"\
    [%a]\") do \n        result = result .. tostring((tostring(c):lower())) \n   \
    \ end\n    return result\nend\n</cell>\n<code language=julia-1.5>\nflip_case(\"\
    hello\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of characters in the string. \nWrite a function that takes\
    \ a string and returns the number of uppercase characters in the string. \nWrite\
    \ a function that takes a string and returns the number of lowercase characters\
    \ in the string. \nWrite a function that takes a string and returns the number\
    \ of words in the string. \nWrite a function that takes a string and returns the\
    \ number of characters in the string that are not letters. \nWrite a function\
    \ that takes a string and returns the number of words in the string that are not\
    \ letters. \nWrite a function that takes a string and returns the number of characters\
    \ in the string that are not letters or words. \nWrite a function that takes a\
    \ string and returns the number of words in the string that are not letters or\
    \ words. \nWrite a function that takes a string and returns the number of characters\
    \ in the string that are not letters or words or numbers. \nWrite a function that\
    \ takes a string and returns the number of words in the string that are not letters\
    \ or words or numbers. \nWrite a function that takes a string and returns the\
    \ number of characters in the string that are not letters or words or numbers\
    \ or spaces. \nWrite a function that takes a string and returns the number of\
    \ words in the string that are not letters or words or numbers or spaces. \nWrite\
    \ a function that takes a string and returns the number of characters in the string\
    \ that are not letters or words or numbers or spaces or punctuation. \nWrite a\
    \ function that takes a string and returns the number of words in the string that\
    \ are not letters or words or numbers or spaces or punctuation. \nWrite a function\
    \ that takes a string and returns the number of characters in the string that\
    \ are not letters or words or numbers or spaces or punctuation or numbers. \n\
    Write a function that takes a string and returns the number of words in the string\
    \ that are not letters or words or numbers or spaces or punctuation or numbers.\
    \ \nWrite a function that takes a string and returns the number of characters\
    \ in the string that are not letters or words or numbers or spaces or punctuation\
    \ or numbers or spaces. \nWrite a function that takes a string and returns the\
    \ number of words in the string that are not letters or words or numbers or spaces\
    \ or punctuation or numbers or spaces. \nWrite a function that takes a string\
    \ and returns the number of characters in the string that are not letters or words\
    \ or numbers or spaces or punctuation or numbers or spaces or punctuation. \n\
    Write a function that takes a string and returns the number of words in the string\
    \ that are not letters or words or numbers or spaces or punctuation or numbers\
    \ or spaces or punctuation. \nWrite a function that takes a string and returns\
    \ the number of characters in the string that are not letters or ", "    \n  \
    \  lowercase_string = string.lower()\n    uppercase_string = string.upper()\n\
    \    \n    return uppercase_string\nend", "    \n    local result = \"\"\n   \
    \ \n    for char in string:\n        if char == char:\n            result += char\n\
    \        else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    \n    return result\nend", "    local result = \"\"\
    \n    for char in string:gmatch(\"%c\") do \n        if char == toupper(char)\
    \ then \n            result = result .. tolower(char) \n        else \n      \
    \      result = result .. toupper(char) \n        end\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    uppercase = string.upcase()\n\
    \    lowercase = string.lower()\n    \n    return lowercase\nend", "    local\
    \ result = \"\"\n    for char in string:gmatch(\"%c\"):gmatch(\"%C\"):gmatch(\"\
    %w\"):gmatch(\"%W\"):gmatch(\"%x\"):gmatch(\"%X\"):gmatch(\"%b\"):gmatch(\"%B\"\
    ):gmatch(\"%n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"%P\"):gmatch(\"%e\"):gmatch(\"\
    %E\"):gmatch(\"%g\"):gmatch(\"%G\"):gmatch(\"%a\"):gmatch(\"%A\"):gmatch(\"%h\"\
    ):gmatch(\"%H\"):gmatch(\"%i\"):gmatch(\"%I\"):gmatch(\"%o\"):gmatch(\"%O\"):gmatch(\"\
    %c\"):gmatch(\"%C\"):gmatch(\"%w\"):gmatch(\"%W\"):gmatch(\"%x\"):gmatch(\"%X\"\
    ):gmatch(\"%b\"):gmatch(\"%B\"):gmatch(\"%n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"\
    %P\"):gmatch(\"%e\"):gmatch(\"%E\"):gmatch(\"%g\"):gmatch(\"%G\"):gmatch(\"%a\"\
    ):gmatch(\"%A\"):gmatch(\"%h\"):gmatch(\"%H\"):gmatch(\"%i\"):gmatch(\"%I\"):gmatch(\"\
    %o\"):gmatch(\"%O\"):gmatch(\"%c\"):gmatch(\"%C\"):gmatch(\"%w\"):gmatch(\"%W\"\
    ):gmatch(\"%x\"):gmatch(\"%X\"):gmatch(\"%b\"):gmatch(\"%B\"):gmatch(\"%n\"):gmatch(\"\
    %N\"):gmatch(\"%p\"):gmatch(\"%P\"):gmatch(\"%e\"):gmatch(\"%E\"):gmatch(\"%g\"\
    ):gmatch(\"%G\"):gmatch(\"%a\"):gmatch(\"%A\"):gmatch(\"%h\"):gmatch(\"%H\"):gmatch(\"\
    %i\"):gmatch(\"%I\"):gmatch(\"%o\"):gmatch(\"%O\"):gmatch(\"%c\"):gmatch(\"%C\"\
    ):gmatch(\"%w\"):gmatch(\"%W\"):gmatch(\"%x\"):gmatch(\"%X\"):gmatch(\"%b\"):gmatch(\"\
    %B\"):gmatch(\"%n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"%P\"):gmatch(\"%e\"\
    ):", "    \n    local result = \"\"\n    for char in string:gmatch(\"%c\") do\
    \ \n        if char == toupper(char) then \n            result = result .. tolower(char)\
    \ \n        else \n            result = result .. toupper(char) \n        end\n\
    \    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"\
    Hello World\")\n</cell>\n<text>\nExercise\nWrite a function that takes a string\
    \ and returns the string with all uppercase letters replaced with their lowercase\
    \ counterparts.", "    \n    local result = \"\"\n    \n    for char in string:\n\
    \        if char == char:\n            result = result + char\n        else\n\
    \            result = result + char.upper()\n        end\n    end\n    \n    return\
    \ result\nend", "    local result = \"\"\n    for char in string:gmatch(\"%c\"\
    ) do \n        if char == \"a\" then \n            result = \"A\" \n        elseif\
    \ char == \"b\" then \n            result = \"B\" \n        elseif char == \"\
    c\" then \n            result = \"C\" \n        elseif char == \"d\" then \n \
    \           result = \"D\" \n        elseif char == \"e\" then \n            result\
    \ = \"E\" \n        elseif char == \"f\" then \n            result = \"F\" \n\
    \        elseif char == \"g\" then \n            result = \"G\" \n        elseif\
    \ char == \"h\" then \n            result = \"H\" \n        elseif char == \"\
    i\" then \n            result = \"I\" \n        elseif char == \"j\" then \n \
    \           result = \"J\" \n        elseif char == \"k\" then \n            result\
    \ = \"K\" \n        elseif char == \"l\" then \n            result = \"L\" \n\
    \        elseif char == \"m\" then \n            result = \"M\" \n        elseif\
    \ char == \"n\" then \n            result = \"N\" \n        elseif char == \"\
    o\" then \n            result = \"O\" \n        elseif char == \"p\" then \n \
    \           result = \"P\" \n        elseif char == \"q\" then \n            result\
    \ = \"Q\" \n        elseif char == \"r\" then \n            result = \"R\" \n\
    \        elseif char == \"s\" then \n            result = \"S\" \n        elseif\
    \ char == \"t\" then \n            result = \"T\" \n        elseif char == \"\
    u\" then \n            result = \"U\" \n        elseif char == \"v\" then \n \
    \           result = \"V\" \n        elseif char == \"w\" then \n            result\
    \ = \"W\" \n        elseif char == \"x\" then \n            result = \"X\" \n\
    \        elseif char == \"y\" then \n            result = \"Y\" \n        elseif\
    \ char == \"z\" then \n            result = \"Z\" \n        elseif char == \"\
    A\" then \n            result = \"a\" \n        elseif char == \"B\" then \n \
    \           result = \"b\" \n        elseif char == \"C\" then \n            result\
    \ = \"c\" \n        elseif char == \"D\" then \n            result = \"d\" \n\
    \        elseif char == \"E\" then \n            result = \"e\" \n        elseif\
    \ char == \"F\" then \n            result = \"f\" \n        elseif char == \"\
    G\" then \n            result = \"g\" \n        elseif char == \"H\" then \n \
    \           result = \"h\" \n        elseif char == \"I\" then \n            result\
    \ = \"i\" \n        elseif char == \"J\" then \n            result = \"j\" \n\
    \        elseif char == \"K\" then \n            result = \"k\" \n        elseif\
    \ char == \"L\" then \n            result = \"l\" \n        elseif char == \"",
  "    \n    lowercase = string.lower()\n    uppercase = string.upper()\n    \n  \
    \  return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>", " \
    \   \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    if uppercase == lowercase\n        return uppercase\n    else\n   \
    \     return lowercase\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   \n    local result = \"\"\n    \n    for char in string:\n        if char\
    \ == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = ", "    local result = \"\"\
    \n    for char in string:gmatch(\"%c\") do \n        if char == \"a\" then \n\
    \            char = \"A\"\n        elseif char == \"A\" then \n            char\
    \ = \"a\"\n        end\n        result = result .. char\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.5>", "    local result = \"\"\n    for c\
    \ in string.gmatch(\"%a\") do \n        if c == \"a\" then \n            result\
    \ = \"A\" \n        else \n            result = result .. tostring(c) \n     \
    \   end\n    end\n    return result\nend\n</code>\n<|/ a tags=string,lowercase,uppercase,julia\
    \ |>\n<| a dscore=2 |>\n<code>", "    local result = \"\"\n    for char in string:gmatch(\"\
    %c\") do \n        if char >= \"a\" and char <= \"z\" then \n            char\
    \ = char - \"a\"\n        elseif char >= \"A\" and char <= \"Z\" then \n     \
    \       char = char - \"A\"\n        else\n            char = char\n        end\n\
    \        result = result .. char\n    end\n    return result\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    local result = \"\"\n    for char in string:gmatch(\"\
    %c\") do \n        if char == toupper(char) then\n            result = result\
    \ .. tolower(char)\n        elseif char == tolower(char) then\n            result\
    \ = result .. toupper(char)\n        end\n    end\n    return result\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    local result = \"\"\n    \n    for char\
    \ in string:\n        if char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char:\n            result += char\n        elseif char == char:\n  \
    \          result += char\n        elseif char == char:\n            result +=\
    \ char\n        elseif char == char:\n            result += char\n        elseif\
    \ char == char", "    str = string.downcase()\n    str = str.upcase()\n    return\
    \ str\nend\n</cell>\n<code language=julia-1.5>", "    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    local result = \"\"\n    \n    for\
    \ char in string:\n        if char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char.upper()\n  \
    \      elseif char == char:\n            result = result + char.lower()\n    \
    \    end\n    end\n    \n    return result\nend\n</cell>\n<code language=julia-1.5>",
  "    local result = \"\"\n    for char in string:gmatch(\"%c\") do \n        if\
    \ char == toupper(char) then\n            result = result .. tolower(char)\n \
    \       elseif char == tolower(char) then\n            result = result .. toupper(char)\n\
    \        else\n            result = result .. char\n        end\n    end\n   \
    \ return result\nend\n</cell>\n<code language=julia-1.5>", "    \n    local result\
    \ = \"\"\n    for char in string:gmatch(\"%a\") do \n        local new_char =\
    \ char:lower()\n        if new_char == char then\n            new_char = char:upper()\n\
    \        end\n        result = result .. new_char\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.5>", "    local result = \"\"\n    for char\
    \ in string:gmatch(\"%c\") do \n        local upper = char:upper()\n        local\
    \ lower = char:lower()\n        result = result .. upper .. lower\n    end\n \
    \   return result\nend\n</code>\n<|/ a tags=string,lua |>\n<| c |>\nThis doesn't\
    \ work. `string.gmatch` returns an array of matches, not a single string. Also,\
    \ `string.gsub` doesn't replace anything, it just replaces substrings.\n<|/ c\
    \ |>\n<| c |>\nThanks for pointing that out. I've fixed my answer.\n<|/ c |>\n\
    <| a tags=string,lua |>\n<code>", "    \n    local result = \"\"\n    \n    for\
    \ char in string:\n        if char == char:\n            result += \"-\"\n   \
    \     else\n            result += char\n        end\n    end\n    \n    return\
    \ result\nend", "    \n    local result = \"\"\n    \n    for char in string:gmatch(\"\
    %c\") do \n        if char == \"a\" then \n            result = \"A\"\n      \
    \  elseif char == \"b\" then \n            result = \"B\"\n        elseif char\
    \ == \"c\" then \n            result = \"C\"\n        elseif char == \"d\" then\
    \ \n            result = \"D\"\n        elseif char == \"e\" then \n         \
    \   result = \"E\"\n        elseif char == \"f\" then \n            result = \"\
    F\"\n        elseif char == \"g\" then \n            result = \"G\"\n        elseif\
    \ char == \"h\" then \n            result = \"H\"\n        elseif char == \"i\"\
    \ then \n            result = \"I\"\n        elseif char == \"j\" then \n    \
    \        result = \"J\"\n        elseif char == \"k\" then \n            result\
    \ = \"K\"\n        elseif char == \"l\" then \n            result = \"L\"\n  \
    \      elseif char == \"m\" then \n            result = \"M\"\n        elseif\
    \ char == \"n\" then \n            result = \"N\"\n        elseif char == \"o\"\
    \ then \n            result = \"O\"\n        elseif char == \"p\" then \n    \
    \        result = \"P\"\n        elseif char == \"q\" then \n            result\
    \ = \"Q\"\n        elseif char == \"r\" then \n            result = \"R\"\n  \
    \      elseif char == \"s\" then \n            result = \"S\"\n        elseif\
    \ char == \"t\" then \n            result = \"T\"\n        elseif char == \"u\"\
    \ then \n            result = \"U\"\n        elseif char == \"v\" then \n    \
    \        result = \"V\"\n        elseif char == \"w\" then \n            result\
    \ = \"W\"\n        elseif char == \"x\" then \n            result = \"X\"\n  \
    \      elseif char == \"y\" then \n            result = \"Y\"\n        elseif\
    \ char == \"z\" then \n            result = \"Z\"\n        elseif char == \"A\"\
    \ then \n            result = \"a\"\n        elseif char == \"B\" then \n    \
    \        result = \"b\"\n        elseif char == \"C\" then \n            result\
    \ = \"c\"\n        elseif char == \"D\" then \n            result = \"d\"\n  \
    \      elseif char == \"E\" then \n            result = \"e\"\n        elseif\
    \ char == \"F\" then \n            result = \"f\"\n        elseif char == \"G\"\
    \ then \n            result = \"g\"\n        elseif char == \"H\" then \n    \
    \        result = \"h\"\n        elseif char == \"I\" then \n            result\
    \ = \"i\"\n        elseif char == \"J\" then \n            result = \"j\"\n  \
    \      elseif char == \"K\" then \n            result = \"k\"\n        elseif\
    \ char == \"L\" then \n            result = \"l\"\n        elseif char == \"M\"\
    \ ", "    \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"HELLO\") == \"\
    hello\"\n@assert flip_case(\"HellO\") == \"hello\"\n@assert flip_case(\"HellO\"\
    ) == \"HELLO\"\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns the string with all lowercase letters replaced by uppercase letters.",
  "    str = string.downcase()\n    str = string.upcase()\n    return str\nend", " \
    \   \n    uppercase = string.upcase()\n    lowercase = string.lower()\n    \n\
    \    return lowercase\nend\n</cell>\n<code language=julia-1.5>\n# Test the function\
    \ above\nprintln(flip_case(\"Hello World\"))\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns a string where all characters have\
    \ been converted to lowercase except for the first character which is converted\
    \ to uppercase. For example, the string \"HelloWorld\" should return \"HeLlOwOrLd\"\
    .", "    local result = \"\"\n    for char in string:gmatch(\"%c\") do \n    \
    \    if char == \"a\" then \n            char = \"A\"\n        elseif char ==\
    \ \"A\" then \n            char = \"a\"\n        end\n        result = result\
    \ .. char\n    end\n    return result\nend\n</code>\n<|/ a tags=string,lua,lowercase,uppercase,lua-patterns\
    \ |>\n<| a tags=string,lua,lowercase,uppercase,lua-patterns |>\n<code>", "   \
    \ \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n \
    \   \n    if uppercase == lowercase\n        return uppercase\n    \n    return\
    \ lowercase\nend\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"hello\"\
    ) == \"HELLO\"\n@assert flip_case(\"HELLO\") == \"hello\"\n@assert flip_case(\"\
    HellO\") == \"hello\"\n@assert flip_case(\"HellO\") == \"HELLO\"\n</cell>\n<text>\n\
    Exercise: Write a function that takes a string and returns a new string where\
    \ all characters are reversed.\nHint: Use reverse.", "    \n    local result =\
    \ \"\"\n    \n    for char in string:\n        if char == toupper(char):\n   \
    \         result = result + tolower(char)\n        else\n            result =\
    \ result + char\n        end\n    end\n    \n    return result\nend\n</cell>\n\
    <code language=julia-1.5>", "    local result = \"\"\n    for char in string:gmatch(\"\
    %a\") do \n        local upper = char:upper()\n        local lower = char:lower()\n\
    \        result = result .. upper .. lower\n    end\n    return result\nend",
  "    \n    local result = \"\"\n    \n    for char in string:\n        if char ==\
    \ char:\n            result = result + char\n        elseif char == char:\n  \
    \          result = result + char\n        elseif char == char:\n            result\
    \ = result + char\n        elseif char == char:\n            result = result +\
    \ char\n        elseif char == char:\n            result = result + char\n   \
    \     elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = ", "    local result = \"\"\
    \n    for char in string:gmatch(\"%c\") do \n        if char >= \"a\" and char\
    \ <= \"z\" then \n            char = \"A\"\n        elseif char >= \"A\" and char\
    \ <= \"Z\" then \n            char = \"a\"\n        end\n        result = result\
    \ .. char\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    local result = \"\"\n    \n    for char in string:\n        if char ==\
    \ char.toLower()\n            then\n                result = result .. char.toUpper()\n\
    \            else\n                result = result .. char\n        end\n    end\n\
    \    \n    return result\nend\n</cell>\n<code language=julia-1.4>", "    \n  \
    \  local result = \"\"\n    for char in string:gmatch(\"%a\"):gmatch(\"%A\"):gmatch(\"\
    %c\"):gmatch(\"%C\"):gmatch(\"%w\"):gmatch(\"%W\"):gmatch(\"%x\"):gmatch(\"%X\"\
    ):gmatch(\"%n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"%P\"):gmatch(\"%e\"):gmatch(\"\
    %E\"):gmatch(\"%g\"):gmatch(\"%G\"):gmatch(\"%a\"):gmatch(\"%A\"):gmatch(\"%c\"\
    ):gmatch(\"%C\"):gmatch(\"%w\"):gmatch(\"%W\"):gmatch(\"%x\"):gmatch(\"%X\"):gmatch(\"\
    %n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"%P\"):gmatch(\"%e\"):gmatch(\"%E\"\
    ):gmatch(\"%g\"):gmatch(\"%G\"):\n        if char == char:\n            char =\
    \ char:upper()\n        elif char == char:\n            char = char:lower()\n\
    \        end\n        result = result .. char\n    end\n    return result\nend",
  "    \n    lowercase_chars = string.chars()\n    uppercase_chars = string.chars().map(|c|\
    \ if c.is_upper() then c else c.to_uppercase())\n    \n    string.chars().zip(lowercase_chars).zip(uppercase_chars).collect::<String>\n\
    end\n</cell>\n<code language=julia-1.5>\nflip_case(\"hello\")\n</cell>\n<text>\n\
    Exercise\nWrite a function that takes a string and returns a new string where\
    \ all characters are lowercase, but the first character is uppercase. For example,\
    \ if the input string is \"hello\", the output should be \"HeLlO\".", "    \n\
    \    local result = \"\"\n    \n    for char in string:gmatch(\"%c\") do\n   \
    \     if char == toupper(char) then\n            result = result .. tolower(char)\n\
    \        elseif char == tolower(char) then\n            result = result .. toupper(char)\n\
    \        end\n    end\n    \n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    @time flip_case(\"Hello World\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of characters in the string.", " \
    \   local result = \"\"\n    for char in string:gmatch(\"%a\") do \n        if\
    \ char == \"a\" then \n            char = \"A\"\n        elseif char == \"A\"\
    \ then \n            char = \"a\"\n        end\n        result = result .. char\n\
    \    end\n    return result\nend\n</cell>\n<code language=julia-1.5>", "    local\
    \ result = \"\"\n    for c in string:gmatch(\"%c\") do \n        if c:lower()\
    \ == c then \n            result = result .. c:upper()\n        else \n      \
    \      result = result .. c:lower()\n        end\n    end\n    return result\n\
    end", "    local result = \"\"\n    for char in string:gmatch(\"%c\") do \n  \
    \      if char >= \"a\" and char <= \"z\" then \n            char = char - 32\n\
    \        end\n        result = result .. char\n    end\n    return result\nend\n\
    </cell>\n<code language=julia-1.5>", "    str = string.lower()\n    str = string.upper()\n\
    \    return str\nend", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    if uppercase == lowercase\n        return string\n    \n    return\
    \ lowercase\nend", "    \n    uppercase = string.uppercase()\n    lowercase =\
    \ string.lowercase()\n    \n    if uppercase == lowercase\n        return uppercase\n\
    \    else\n        return lowercase\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    string\nend", "    \n    lowercase = string.lower()\n    uppercase =\
    \ string.upper()\n    \n    return lowercase + uppercase\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time flip_case(\"Hello World!\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns the string with all vowels\
    \ replaced by \"*\".", "    \n    lowercase_chars = string.chars\n    uppercase_chars\
    \ = string.chars.map(char.upper)\n    \n    return \"\".join(lowercase_chars)\
    \ + \"\".join(uppercase_chars)\nend", "    local result = \"\"\n    for char in\
    \ string:gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):", "    local result = \"\"\n    for char\
    \ in string:gmatch(\"%c\") do \n        if char == toupper(char) then\n      \
    \      result = result .. tolower(char)\n        elseif char == tolower(char)\
    \ then\n            result = result .. toupper(char)\n        end\n    end\n \
    \   return result\nend", "    \n    uppercase = string.upcase()\n    lowercase\
    \ = string.lower()\n    \n    return lowercase\nend", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return uppercase\n    else\n        return lowercase\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    local result = \"\"\n    for char in string:gmatch(\"\
    %c\") do \n        if char == \"a\" then \n            result = \"A\"\n      \
    \  elseif char == \"b\" then \n            result = \"B\"\n        elseif char\
    \ == \"c\" then \n            result = \"C\"\n        elseif char == \"d\" then\
    \ \n            result = \"D\"\n        elseif char == \"e\" then \n         \
    \   result = \"E\"\n        elseif char == \"f\" then \n            result = \"\
    F\"\n        elseif char == \"g\" then \n            result = \"G\"\n        elseif\
    \ char == \"h\" then \n            result = \"H\"\n        elseif char == \"i\"\
    \ then \n            result = \"I\"\n        elseif char == \"j\" then \n    \
    \        result = \"J\"\n        elseif char == \"k\" then \n            result\
    \ = \"K\"\n        elseif char == \"l\" then \n            result = \"L\"\n  \
    \      elseif char == \"m\" then \n            result = \"M\"\n        elseif\
    \ char == \"n\" then \n            result = \"N\"\n        elseif char == \"o\"\
    \ then \n            result = \"O\"\n        elseif char == \"p\" then \n    \
    \        result = \"P\"\n        elseif char == \"q\" then \n            result\
    \ = \"Q\"\n        elseif char == \"r\" then \n            result = \"R\"\n  \
    \      elseif char == \"s\" then \n            result = \"S\"\n        elseif\
    \ char == \"t\" then \n            result = \"T\"\n        elseif char == \"u\"\
    \ then \n            result = \"U\"\n        elseif char == \"v\" then \n    \
    \        result = \"V\"\n        elseif char == \"w\" then \n            result\
    \ = \"W\"\n        elseif char == \"x\" then \n            result = \"X\"\n  \
    \      elseif char == \"y\" then \n            result = \"Y\"\n        elseif\
    \ char == \"z\" then \n            result = \"Z\"\n        elseif char == \"A\"\
    \ then \n            result = \"a\"\n        elseif char == \"B\" then \n    \
    \        result = \"b\"\n        elseif char == \"C\" then \n            result\
    \ = \"c\"\n        elseif char == \"D\" then \n            result = \"d\"\n  \
    \      elseif char == \"E\" then \n            result = \"e\"\n        elseif\
    \ char == \"F\" then \n            result = \"f\"\n        elseif char == \"G\"\
    \ then \n            result = \"g\"\n        elseif char == \"H\" then \n    \
    \        result = \"h\"\n        elseif char == \"I\" then \n            result\
    \ = \"i\"\n        elseif char == \"J\" then \n            result = \"j\"\n  \
    \      elseif char == \"K\" then \n            result = \"k\"\n        elseif\
    \ char == \"L\" then \n            result = \"l\"\n        elseif char == \"M\"\
    \ then \n", "    \n    lowercase_string = string.lower()\n    uppercase_string\
    \ = string.upper()\n    \n    return uppercase_string + lowercase_string\nend\n\
    </cell>\n<code language=julia-1.5>\n@time flip_case(\"Hello World\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the string\
    \ with all spaces replaced with underscores.", "    local result = \"\"\n    for\
    \ char in string:gmatch(\"%c\") do \n        if char == \"a\" then \n        \
    \    result = \"A\"\n        elseif char == \"b\" then \n            result =\
    \ \"B\"\n        elseif char == \"c\" then \n            result = \"C\"\n    \
    \    elseif char == \"d\" then \n            result = \"D\"\n        elseif char\
    \ == \"e\" then \n            result = \"E\"\n        elseif char == \"f\" then\
    \ \n            result = \"F\"\n        elseif char == \"g\" then \n         \
    \   result = \"G\"\n        elseif char == \"h\" then \n            result = \"\
    H\"\n        elseif char == \"i\" then \n            result = \"I\"\n        elseif\
    \ char == \"j\" then \n            result = \"J\"\n        elseif char == \"k\"\
    \ then \n            result = \"K\"\n        elseif char == \"l\" then \n    \
    \        result = \"L\"\n        elseif char == \"m\" then \n            result\
    \ = \"M\"\n        elseif char == \"n\" then \n            result = \"N\"\n  \
    \      elseif char == \"o\" then \n            result = \"O\"\n        elseif\
    \ char == \"p\" then \n            result = \"P\"\n        elseif char == \"q\"\
    \ then \n            result = \"Q\"\n        elseif char == \"r\" then \n    \
    \        result = \"R\"\n        elseif char == \"s\" then \n            result\
    \ = \"S\"\n        elseif char == \"t\" then \n            result = \"T\"\n  \
    \      elseif char == \"u\" then \n            result = \"U\"\n        elseif\
    \ char == \"v\" then \n            result = \"V\"\n        elseif char == \"w\"\
    \ then \n            result = \"W\"\n        elseif char == \"x\" then \n    \
    \        result = \"X\"\n        elseif char == \"y\" then \n            result\
    \ = \"Y\"\n        elseif char == \"z\" then \n            result = \"Z\"\n  \
    \      elseif char == \"A\" then \n            result = \"a\"\n        elseif\
    \ char == \"B\" then \n            result = \"b\"\n        elseif char == \"C\"\
    \ then \n            result = \"c\"\n        elseif char == \"D\" then \n    \
    \        result = \"d\"\n        elseif char == \"E\" then \n            result\
    \ = \"e\"\n        elseif char == \"F\" then \n            result = \"f\"\n  \
    \      elseif char == \"G\" then \n            result = \"g\"\n        elseif\
    \ char == \"H\" then \n            result = \"h\"\n        elseif char == \"I\"\
    \ then \n            result = \"i\"\n        elseif char == \"J\" then \n    \
    \        result = \"j\"\n        elseif char == \"K\" then \n            result\
    \ = \"k\"\n        elseif char == \"L\" then \n            result = \"l\"\n  \
    \      elseif char == \"M\" then \n            result = \"", "    local result\
    \ = \"\"\n    for char in string:gmatch(\"%c\") do \n        if char == toupper(char)\
    \ then\n            result = result .. tolower(char)\n        elseif char == tolower(char)\
    \ then\n            result = result .. toupper(char)\n        end\n    end\n \
    \   return result\nend\n</cell>\n<code language=julia-1.5>\nflip_case(\"Hello\
    \ World\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the string with all vowels replaced by \"y\".", "    \n\
    \    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n    \n\
    \    return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ flip_case(\"Hello World\")\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"\
    Hello World\")\n</cell>\n<text>\nExercise: Write a function that takes a string\
    \ and returns the string with all lowercase letters replaced by uppercase letters.",
  "    \n    local result = \"\"\n    for char in string:gmatch(\"%c\") do \n    \
    \    if char == \"a\" then \n            result = \"A\"\n        elseif char ==\
    \ \"b\" then \n            result = \"B\"\n        elseif char == \"c\" then \n\
    \            result = \"C\"\n        elseif char == \"d\" then \n            result\
    \ = \"D\"\n        elseif char == \"e\" then \n            result = \"E\"\n  \
    \      elseif char == \"f\" then \n            result = \"F\"\n        elseif\
    \ char == \"g\" then \n            result = \"G\"\n        elseif char == \"h\"\
    \ then \n            result = \"H\"\n        elseif char == \"i\" then \n    \
    \        result = \"I\"\n        elseif char == \"j\" then \n            result\
    \ = \"J\"\n        elseif char == \"k\" then \n            result = \"K\"\n  \
    \      elseif char == \"l\" then \n            result = \"L\"\n        elseif\
    \ char == \"m\" then \n            result = \"M\"\n        elseif char == \"n\"\
    \ then \n            result = \"N\"\n        elseif char == \"o\" then \n    \
    \        result = \"O\"\n        elseif char == \"p\" then \n            result\
    \ = \"P\"\n        elseif char == \"q\" then \n            result = \"Q\"\n  \
    \      elseif char == \"r\" then \n            result = \"R\"\n        elseif\
    \ char == \"s\" then \n            result = \"S\"\n        elseif char == \"t\"\
    \ then \n            result = \"T\"\n        elseif char == \"u\" then \n    \
    \        result = \"U\"\n        elseif char == \"v\" then \n            result\
    \ = \"V\"\n        elseif char == \"w\" then \n            result = \"W\"\n  \
    \      elseif char == \"x\" then \n            result = \"X\"\n        elseif\
    \ char == \"y\" then \n            result = \"Y\"\n        elseif char == \"z\"\
    \ then \n            result = \"Z\"\n        elseif char == \"A\" then \n    \
    \        result = \"a\"\n        elseif char == \"B\" then \n            result\
    \ = \"b\"\n        elseif char == \"C\" then \n            result = \"c\"\n  \
    \      elseif char == \"D\" then \n            result = \"d\"\n        elseif\
    \ char == \"E\" then \n            result = \"e\"\n        elseif char == \"F\"\
    \ then \n            result = \"f\"\n        elseif char == \"G\" then \n    \
    \        result = \"g\"\n        elseif char == \"H\" then \n            result\
    \ = \"h\"\n        elseif char == \"I\" then \n            result = \"i\"\n  \
    \      elseif char == \"J\" then \n            result = \"j\"\n        elseif\
    \ char == \"K\" then \n            result = \"k\"\n        elseif char == \"L\"\
    \ then \n            result = \"l\"\n        elseif char == \"M\" then \n", " \
    \   \n    local result = \"\"\n    \n    for char in string:\n        if char\
    \ == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char.upper()\n        elseif char == char:\n  \
    \          result = result + char.lower()\n        end\n    end\n    \n    return\
    \ result\nend\n</cell>\n<code language=julia-1.5>", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return string\n    else\n        return uppercase + lowercase\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert\
    \ flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\
    \n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"\
    HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"hello\"\
    ) == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"\
    hello\") == \"HEL", "    \n    lowercase_chars = string.chars()\n    uppercase_chars\
    \ = string.chars().map(|c| if c >= 'a' && c <= 'z' then c - ('a' - 'A') else c)\n\
    \    \n    string.extend(uppercase_chars)\n    string.extend(lowercase_chars)\n\
    \    \n    return string\nend", "    \n    uppercase = string.upcase()\n    lowercase\
    \ = string.lower()\n    \n    return lowercase\nend\n</cell>\n<code language=julia-1.5>",
  "    local result = \"\"\n    for char in string:gmatch(\"%a\") do \n        if\
    \ char == \"a\" then \n            char = \"A\"\n        elseif char == \"A\"\
    \ then \n            char = \"a\"\n        end\n        result = result .. char\n\
    \    end\n    return result\nend\n</cell>\n<code language=julia-1.5>", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    local result = \"\"\n\
    \    for char in string:gmatch(\"%c\") do \n        if char == \"a\" then \n \
    \           char = \"A\"\n        elseif char == \"A\" then \n            char\
    \ = \"a\"\n        end\n        result = result .. char\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.4>", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return uppercase\n    else\n        return lowercase\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    if uppercase == lowercase\n        return uppercase\n    \n    else\n\
    \        return lowercase\nend\n</cell>\n<code language=julia-1.5>", "    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return uppercase\n    \n    return lowercase\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"HELLO\") == \"\
    hello\"\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the string with all lowercase letters converted to uppercase. For example,\
    \ \"hello\" becomes \"HELLO\".", "    \n    uppercase = string.uppercase()\n \
    \   lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n    \
    \    return uppercase\n    \n    lowercase = lowercase\n    uppercase = uppercase\n\
    \    \n    return lowercase\nend", "    \n    local result = \"\"\n    \n    for\
    \ char in string:\n        if char == char.toUpper():\n            result = result\
    \ .. char.toLower()\n        elseif char == char.toLower():\n            result\
    \ = result .. char.toUpper()\n        else\n            result = result .. char\n\
    \        end\n    end\n    \n    return result\nend", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return string\n    else\n        return uppercase\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    to_lower(string::String)::String", "    \n    uppercase = string.upcase()\n\
    \    lowercase = string.lower()\n    \n    return lowercase\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    uppercase = string.upcase()\n    lowercase\
    \ = string.lower()\n    \n    return lowercase + uppercase\nend\n</cell>\n<code\
    \ language=julia-1.5>\n# Test the function\nprintln(flip_case(\"Hello World\"\
    ))\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the string with all spaces replaced by underscores.", "    \n    uppercase =\
    \ string.uppercase()\n    lowercase = string.lowercase()\n    \n    if uppercase\
    \ == lowercase\n        return string\n    else\n        return lowercase\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"Hello World\"\
    )\n</cell>\n<text>\nExercise: Write a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase. \nHint: Use string.uppercase()",
  "    str = string.lower()\n    str = str.replace(\" \", \"\")\n    str = str.replace(\"\
    \\n\", \"\")\n    str = str.replace(\"\\t\", \"\")\n    str = str.replace(\"!\"\
    , \"\")\n    str = str.replace(\"\\\"\", \"\")\n    str = str.replace(\"'\", \"\
    \")\n    str = str.replace(\"(\", \"\")\n    str = str.replace(\")\", \"\")\n\
    \    str = str.replace(\",\", \"\")\n    str = str.replace(\"?\", \"\")\n    str\
    \ = str.replace(\"%\", \"\")\n    str = str.replace(\"$\", \"\")\n    str = str.replace(\"\
    &\", \"\")\n    str = str.replace(\"'\", \"\")\n    str = str.replace(\"(\", \"\
    \")\n    str = str.replace(\")\", \"\")\n    str = str.replace(\"[\", \"\")\n\
    \    str = str.replace(\"]\", \"\")\n    str = str.replace(\"{\", \"\")\n    str\
    \ = str.replace(\"}\", \"\")\n    str = str.replace(\":\", \"\")\n    str = str.replace(\"\
    ;\", \"\")\n    str = str.replace(\"<\", \"\")\n    str = str.replace(\">\", \"\
    \")\n    str = str.replace(\"?\", \"\")\n    str = str.replace(\"!\", \"\")\n\
    \    str = str.replace(\",\", \"\")\n    str = str.replace(\";\", \"\")\n    str\
    \ = str.replace(\":\", \"\")\n    str = str.replace(\"=\", \"\")\n    str = str.replace(\"\
    +\", \"\")\n    str = str.replace(\"/\", \"\")\n    str = str.replace(\"*\", \"\
    \")\n    str = str.replace(\"?\", \"\")\n    str = str.replace(\"!\", \"\")\n\
    \    str = str.replace(\",\", \"\")\n    str = str.replace(\";\", \"\")\n    str\
    \ = str.replace(\":\", \"\")\n    str = str.replace(\"=\", \"\")\n    str = str.replace(\"\
    +\", \"\")\n    str = str.replace(\"/\", \"\")\n    str = str.replace(\"*\", \"\
    \")\n    str = str.replace(\"?\", \"\")\n    str = str.replace(\"!\", \"\")\n\
    \    str = str.replace(\",\", \"\")\n    str = str.replace(\";\", \"\")\n    str\
    \ = str.replace(\":\", \"\")\n    str = str.replace(\"=\", \"\")\n    str = str.replace(\"\
    +\", \"\")\n    str = str.replace(\"/\", \"\")\n    str = str.replace(\"*\", \"\
    \")\n    str = str.replace(\"?\", \"\")\n    str = str.replace(\"!\", \"\")\n\
    \    str = str.replace(\",\", \"\")\n    str = str.replace(\";\", \"\")\n    str\
    \ = str.replace(\":\", \"\")\n    str = str.replace(\"=\", \"\")\n    str = str.replace(\"\
    +\", \"\")\n    str = str.replace(\"/\", \"\")\n    str = str.replace(\"*\", \"\
    \")\n    str = str.replace(\"?\", \"\")\n    str = str.replace(\"!\", \"\")\n\
    \    str = str.replace(\",\", \"\")\n    str = str.replace(\";\", \"\")\n    str\
    \ = str.replace(\":\", \"\")\n    str = str.replace(\"=\", \"\")\n    str = str.replace(\"\
    +\", \"\")\n    str = str.replace(\"/\", \"\")\n    str = str.replace(\"*\", \"\
    \")\n    str = str.replace(\"?\", \"\")\n    str = str.replace(\"!\", \"\")\n\
    \    str = ", "    \n    lowercase_string = string.lower()\n    uppercase_string\
    \ = string.upper()\n    \n    return uppercase_string + lowercase_string\nend",
  "    str = string.lower()\n    str = str.upper()\n    str = str.lower()\n    return\
    \ str\nend\n</cell>\n<code language=julia-1.5>", "    \n    lowercase = string.lower()\n\
    \    uppercase = string.upper()\n    \n    return lowercase + uppercase\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert flip_case(\"hello\") == \"HELLO\"\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all vowels replaced by \"*\". For example, \"hello\" becomes\
    \ \"h*ll*\".", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    local result = \"\"\n    \n    for char in string:\n        if char\
    \ == char:\n            result = result + char\n        else\n            result\
    \ = result + char.upper()\n        end\n    end\n    \n    return result\nend",
  "    local result = \"\"\n    for char in string:gmatch(\"%c\") do \n        if\
    \ char == toupper(char) then \n            result = result .. tolower(char) \n\
    \        else \n            result = result .. toupper(char) \n        end\n \
    \   end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    to_lower(string::String)::String\n    \n    Convert a string to lowercase.\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"ABC\")\n    \"abc\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"abC\")\n    \"abc\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBc\")\n    \"abc\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aBcD\")\n    \"abcd\"\n    ```\n\
    \    \n    ```jldoctest\n    julia> to_lower(\"aB", "    local result = \"\"\n\
    \    for char in string:gmatch(\"%c\") do \n        if char >= \"a\" and char\
    \ <= \"z\" then \n            char = char - \"a\" + 26\n        elseif char >=\
    \ \"A\" and char <= \"Z\" then \n            char = char - \"A\" + 26\n      \
    \  else \n            char = char\n        end\n        result = result .. char\n\
    \    end\n    return result\nend\n</code>\n<|/ a tags=string,lua |>\n<| c |>\n\
    Thanks, this was helpful. I'm still trying to figure out how to get it to work\
    \ with a variable number of arguments. I tried to do this:", "    \n    local\
    \ result = \"\"\n    \n    for char in string:gmatch(\"%c\") do \n        if char\
    \ == \"a\" then\n            result = \"A\"\n        elseif char == \"b\" then\n\
    \            result = \"B\"\n        elseif char == \"c\" then\n            result\
    \ = \"C\"\n        elseif char == \"d\" then\n            result = \"D\"\n   \
    \     elseif char == \"e\" then\n            result = \"E\"\n        elseif char\
    \ == \"f\" then\n            result = \"F\"\n        elseif char == \"g\" then\n\
    \            result = \"G\"\n        elseif char == \"h\" then\n            result\
    \ = \"H\"\n        elseif char == \"i\" then\n            result = \"I\"\n   \
    \     elseif char == \"j\" then\n            result = \"J\"\n        elseif char\
    \ == \"k\" then\n            result = \"K\"\n        elseif char == \"l\" then\n\
    \            result = \"L\"\n        elseif char == \"m\" then\n            result\
    \ = \"M\"\n        elseif char == \"n\" then\n            result = \"N\"\n   \
    \     elseif char == \"o\" then\n            result = \"O\"\n        elseif char\
    \ == \"p\" then\n            result = \"P\"\n        elseif char == \"q\" then\n\
    \            result = \"Q\"\n        elseif char == \"r\" then\n            result\
    \ = \"R\"\n        elseif char == \"s\" then\n            result = \"S\"\n   \
    \     elseif char == \"t\" then\n            result = \"T\"\n        elseif char\
    \ == \"u\" then\n            result = \"U\"\n        elseif char == \"v\" then\n\
    \            result = \"V\"\n        elseif char == \"w\" then\n            result\
    \ = \"W\"\n        elseif char == \"x\" then\n            result = \"X\"\n   \
    \     elseif char == \"y\" then\n            result = \"Y\"\n        elseif char\
    \ == \"z\" then\n            result = \"Z\"\n        elseif char == \"A\" then\n\
    \            result = \"a\"\n        elseif char == \"B\" then\n            result\
    \ = \"b\"\n        elseif char == \"C\" then\n            result = \"c\"\n   \
    \     elseif char == \"D\" then\n            result = \"d\"\n        elseif char\
    \ == \"E\" then\n            result = \"e\"\n        elseif char == \"F\" then\n\
    \            result = \"f\"\n        elseif char == \"G\" then\n            result\
    \ = \"g\"\n        elseif char == \"H\" then\n            result = \"h\"\n   \
    \     elseif char == \"I\" then\n            result = \"i\"\n        elseif char\
    \ == \"J\" then\n            result = \"j\"\n        elseif char == \"K\" then\n\
    \            result = \"k\"\n        elseif char == \"L\" then\n            result\
    \ = \"l\"\n        elseif char == \"M\" ", "    local result = \"\"\n    for char\
    \ in string:gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"\
    ):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"%c\"):gmatch(\"\
    %c\"):gmatch(\"%c\"):gmatch(\"%c\"):", "    local result = \"\"\n    for char\
    \ in string:gmatch(\"%c\") do\n        if char == toupper(char) then\n       \
    \     result = result .. tolower(char)\n        elseif char == tolower(char) then\n\
    \            result = result .. toupper(char)\n        else\n            result\
    \ = result .. char\n        end\n    end\n    return result\nend\n</code>\n<|/\
    \ a tags=string,lua |>\n<| c |>\nThis doesn't work for all cases. For example,\
    \ it doesn't work for `'\xDF'`.\n<|/ c |>\n<| c |>\nI added a version that works\
    \ for all cases.\n<|/ c |>\n<| c |>\nThis doesn't work for all cases. For example,\
    \ it doesn't work for `'\xDF'`.\n<|/ c |>\n<| c |>\nI added a version that works\
    \ for all cases.\n<|/ c |>\n<| c |>\nThis doesn't work for all cases. For example,\
    \ it doesn't work for `'\xDF'`.\n<|/ c |>\n<| a |>\n<code>", "    \n    local\
    \ result = \"\"\n    \n    for char in string:\n        if char == char:\n   \
    \         result += \"_\"\n        else:\n            result += char\n    \n \
    \   return result\nend", "    \n    uppercase = string.upcase()\n    lowercase\
    \ = string.lower()\n    \n    return lowercase\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    local result = \"\"\n    for char in string:gmatch(\"%a\") do \n    \
    \    if char == \"a\" then \n            char = \"A\"\n        elseif char ==\
    \ \"A\" then \n            char = \"a\"\n        end\n        result = result\
    \ .. char\n    end\n    return result\nend", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return string\n    \n    uppercase = uppercase.replace(uppercase,lowercase)\n\
    \    lowercase = lowercase.replace(lowercase,uppercase)\n    \n    return lowercase\n\
    end\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"Hello World\")\n</cell>\n\
    <text>\nExercise: Write a function that flips uppercase characters to lowercase\
    \ and lowercase to uppercase.", "    \n    local result = \"\"\n    \n    for\
    \ char in string:gmatch(\"%a\") do\n        if char == \"a\" then\n          \
    \  char = \"A\"\n        elseif char == \"A\" then\n            char = \"a\"\n\
    \        end\n        result = result .. char\n    end\n    \n    return result\n\
    end", "    \n    local result = \"\"\n    \n    for char in string:gmatch(\"%c\"\
    ) do \n        \n        if char == toupper(char) then\n            \n       \
    \     result = result .. tolower(char)\n            \n        elseif char == tolower(char)\
    \ then\n            \n            result = result .. toupper(char)\n         \
    \   \n        else\n            \n            result = result .. char\n      \
    \      \n        end\n        \n    end\n    \n    return result\nend\n</cell>\n\
    <code language=julia-1.5>", "    local result = \"\"\n    for char in string:gmatch(\"\
    %a\"):gmatch(\"%A\"):gmatch(\"%c\"):gmatch(\"%C\"):gmatch(\"%w\"):gmatch(\"%W\"\
    ):gmatch(\"%x\"):gmatch(\"%X\"):gmatch(\"%n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"\
    %P\"):gmatch(\"%e\"):gmatch(\"%E\"):gmatch(\"%g\"):gmatch(\"%G\"):gmatch(\"%a\"\
    ):gmatch(\"%A\"):gmatch(\"%c\"):gmatch(\"%C\"):gmatch(\"%w\"):gmatch(\"%W\"):gmatch(\"\
    %x\"):gmatch(\"%X\"):gmatch(\"%n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"%P\"\
    ):gmatch(\"%e\"):gmatch(\"%E\"):gmatch(\"%g\"):gmatch(\"%G\"):\n        if char\
    \ == \" \":\n            result += \"_\"\n        else\n            result +=\
    \ \"a\"\n        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    local result = \"\"\n    \n    for char in string:\n        if char ==\
    \ char:\n            result += char\n        else\n            result += char.upper()\n\
    \            result += char.lower()\n        end\n    end\n    \n    return result\n\
    end", "    \n    local result = \"\"\n    for char in string:gmatch(\"%c\") do\
    \ \n        if char == toupper(char) then\n            result = result .. tolower(char)\n\
    \        elseif char == tolower(char) then\n            result = result .. toupper(char)\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    print(flip_case(\"Hello World\"))\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of characters in the string.", " \
    \   \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    return lowercase+uppercase\nend\n</cell>\n<code language=julia-1.5>\n\
    # Test the function \nprintln(flip_case(\"Hello World\"))\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns the number of characters\
    \ in the string.", "    str = string\n    str = str.replace(\" \", \"\")\n   \
    \ str = str.replace(\"-\", \"\")\n    str = str.replace(\"_\", \"\")\n    str\
    \ = str.replace(\"'\", \"\")\n    str = str.replace(\"\\\"\", \"\")\n    str =\
    \ str.replace(\",\", \"\")\n    str = str.replace(\":\", \"\")\n    str = str.replace(\"\
    ;\", \"\")\n    str = str.replace(\"?\", \"\")\n    str = str.replace(\"!\", \"\
    \")\n    str = str.replace(\"(\", \"\")\n    str = str.replace(\")\", \"\")\n\
    \    str = str.replace(\"[\", \"\")\n    str = str.replace(\"]\", \"\")\n    str\
    \ = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"\
    {\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"[\", \"\
    \")\n    str = str.replace(\"]\", \"\")\n    str = str.replace(\"(\", \"\")\n\
    \    str = str.replace(\")\", \"\")\n    str = str.replace(\"{\", \"\")\n    str\
    \ = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"\
    }\", \"\")\n    str = str.replace(\"[\", \"\")\n    str = str.replace(\"]\", \"\
    \")\n    str = str.replace(\"(\", \"\")\n    str = str.replace(\")\", \"\")\n\
    \    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str\
    \ = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"\
    [\", \"\")\n    str = str.replace(\"]\", \"\")\n    str = str.replace(\"(\", \"\
    \")\n    str = str.replace(\")\", \"\")\n    str = str.replace(\"{\", \"\")\n\
    \    str = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n    str\
    \ = str.replace(\"}\", \"\")\n    str = str.replace(\"[\", \"\")\n    str = str.replace(\"\
    ]\", \"\")\n    str = str.replace(\"(\", \"\")\n    str = str.replace(\")\", \"\
    \")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n\
    \    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str\
    \ = str.replace(\"[\", \"\")\n    str = str.replace(\"]\", \"\")\n    str = str.replace(\"\
    (\", \"\")\n    str = str.replace(\")\", \"\")\n    str = str.replace(\"{\", \"\
    \")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n\
    \    str = str.replace(\"}\", \"\")\n    str = str.replace(\"[\", \"\")\n    str\
    \ = str.replace(\"]\", \"\")\n    str = str.replace(\"(\", \"\")\n    str = str.replace(\"\
    )\", \"\")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\
    \")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n\
    \    str = str.replace(\"[\", \"\")\n    str = str.replace(\"]\", \"\")\n    str\
    \ = str.replace(\"(\", \"\")\n    str = str.replace(\")\", \"\")\n    str = str.replace(\"\
    {\", \"\")\n    str = ", "    str = string.downcase()\n    str = string.upcase()\n\
    \    return str\nend\n</cell>\n<code language=julia-1.5>\n# Test the function\n\
    println(flip_case(\"Hello World\"))\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the string with all spaces replaced by underscores.",
  "    \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\n\
    @test flip_case(\"hello\") \u2248 \"HELLO\"\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a string and returns the string with all lowercase letters\
    \ converted to uppercase and all uppercase letters converted to lowercase. Test\
    \ your function with @test. How many tests did it take to run your function?",
  "    \n    lowercase = string.lower()\n    uppercase = string.upper()\n    \n  \
    \  return lowercase + uppercase\nend", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return uppercase\n    else\n        return lowercase\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    uppercase = string.uppercase()\n    lowercase\
    \ = string.lowercase()\n    \n    if uppercase == lowercase\n        return uppercase\n\
    \    else\n        return lowercase\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    if uppercase == lowercase\n        return uppercase\n    else\n   \
    \     return lowercase\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   \n    local result = \"\"\n    for char in string:gmatch(\"%c\") do \n   \
    \     if char == \"a\" then \n            result = \"A\" \n        else if char\
    \ == \"b\" then \n            result = \"B\" \n        else if char == \"c\" then\
    \ \n            result = \"C\" \n        else if char == \"d\" then \n       \
    \     result = \"D\" \n        else if char == \"e\" then \n            result\
    \ = \"E\" \n        else if char == \"f\" then \n            result = \"F\" \n\
    \        else if char == \"g\" then \n            result = \"G\" \n        else\
    \ if char == \"h\" then \n            result = \"H\" \n        else if char ==\
    \ \"i\" then \n            result = \"I\" \n        else if char == \"j\" then\
    \ \n            result = \"J\" \n        else if char == \"k\" then \n       \
    \     result = \"K\" \n        else if char == \"l\" then \n            result\
    \ = \"L\" \n        else if char == \"m\" then \n            result = \"M\" \n\
    \        else if char == \"n\" then \n            result = \"N\" \n        else\
    \ if char == \"o\" then \n            result = \"O\" \n        else if char ==\
    \ \"p\" then \n            result = \"P\" \n        else if char == \"q\" then\
    \ \n            result = \"Q\" \n        else if char == \"r\" then \n       \
    \     result = \"R\" \n        else if char == \"s\" then \n            result\
    \ = \"S\" \n        else if char == \"t\" then \n            result = \"T\" \n\
    \        else if char == \"u\" then \n            result = \"U\" \n        else\
    \ if char == \"v\" then \n            result = \"V\" \n        else if char ==\
    \ \"w\" then \n            result = \"W\" \n        else if char == \"x\" then\
    \ \n            result = \"X\" \n        else if char == \"y\" then \n       \
    \     result = \"Y\" \n        else if char == \"z\" then \n            result\
    \ = \"Z\" \n        else \n            result = char \n        end\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for char in string:gmatch(\"\
    %a\"):gmatch(\"%A\"):gmatch(\"%c\"):gmatch(\"%C\"):gmatch(\"%d\"):gmatch(\"%D\"\
    ):gmatch(\"%f\"):gmatch(\"%F\"):gmatch(\"%g\"):gmatch(\"%G\"):gmatch(\"%h\"):gmatch(\"\
    %H\"):gmatch(\"%i\"):gmatch(\"%I\"):gmatch(\"%j\"):gmatch(\"%J\"):gmatch(\"%k\"\
    ):gmatch(\"%K\"):gmatch(\"%l\"):gmatch(\"%L\"):gmatch(\"%m\"):gmatch(\"%M\"):gmatch(\"\
    %n\"):gmatch(\"%N\"):gmatch(\"%p\"):gmatch(\"%P\"):gmatch(\"%q\"):gmatch(\"%Q\"\
    ):gmatch(\"%r\"):gmatch(\"%R\"):gmatch(\"%s\"):gmatch(\"%S\"):gmatch(\"%t\"):gmatch(\"\
    %T\"):gmatch(\"%u\"):gmatch(\"%U\"):gmatch(\"%v\"):gmatch(\"%V\"):gmatch(\"%w\"\
    ):gmatch(\"%W\"):gmatch(\"%x\"):gmatch(\"%X\"):gmatch(\"%y\"):gmatch(\"%Y\"):gmatch(\"\
    %z\"):gmatch(\"%Z\"):gmatch(\"%A\"):gmatch(\"%a\"):gmatch(\"%C\"):gmatch(\"%D\"\
    ):gmatch(\"%F\"):gmatch(\"%G\"):gmatch(\"%h\"):gmatch(\"%H\"):gmatch(\"%i\"):gmatch(\"\
    %I\"):gmatch(\"%j\"):gmatch(\"%J\"):gmatch(\"%k\"):gmatch(\"%K\"):gmatch(\"%l\"\
    ):gmatch(\"%L\"):gmatch(\"%m\"):gmatch(\"%M\"):gmatch(\"%n\"):gmatch(\"%N\"):gmatch(\"\
    %p\"):gmatch(\"%P\"):gmatch(\"%q\"):gmatch(\"%Q\"):gmatch(\"%r\"):gmatch(\"%R\"\
    ):gmatch(\"%s\"):gmatch(\"%S\"):gmatch(\"%t\"):gmatch(\"%T\"):gmatch(\"%u\"):gmatch(\"\
    %U\"):gmatch(\"%v\"):gmatch(\"%V\"):gmatch(\"%w\"):gmatch(\"%W\"):gmatch(\"%x\"\
    ):gmatch(\"%X\"):gmatch(\"%y\"):gmatch(\"%Y\"):gmatch(\"%", "    \n    local result\
    \ = \"\"\n    \n    for char in string:gmatch(\"%c\") do \n        if char ==\
    \ toupper(char) then\n            result = result .. tolower(char)\n        elseif\
    \ char == tolower(char) then\n            result = result .. toupper(char)\n \
    \       end\n    end\n    \n    return result\nend", "    \n    local result =\
    \ \"\"\n    for char in string:gmatch(\"%c\") do \n        if char == toupper(char)\
    \ then\n            result = result .. tolower(char)\n        elseif char == tolower(char)\
    \ then\n            result = result .. toupper(char)\n        end\n    end\n \
    \   return result\nend", "    \n    local result = \"\"\n    \n    for char in\
    \ string:\n        if char == \"a\" or char == \"A\":\n            char = \"A\"\
    \n        elif char == \"b\" or char == \"B\":\n            char = \"B\"\n   \
    \     elif char == \"c\" or char == \"C\":\n            char = \"C\"\n       \
    \ elif char == \"d\" or char == \"D\":\n            char = \"D\"\n        elif\
    \ char == \"e\" or char == \"E\":\n            char = \"E\"\n        elif char\
    \ == \"f\" or char == \"F\":\n            char = \"F\"\n        elif char == \"\
    g\" or char == \"G\":\n            char = \"G\"\n        elif char == \"h\" or\
    \ char == \"H\":\n            char = \"H\"\n        elif char == \"i\" or char\
    \ == \"I\":\n            char = \"I\"\n        elif char == \"j\" or char == \"\
    J\":\n            char = \"J\"\n        elif char == \"k\" or char == \"K\":\n\
    \            char = \"K\"\n        elif char == \"l\" or char == \"L\":\n    \
    \        char = \"L\"\n        elif char == \"m\" or char == \"M\":\n        \
    \    char = \"M\"\n        elif char == \"n\" or char == \"N\":\n            char\
    \ = \"N\"\n        elif char == \"o\" or char == \"O\":\n            char = \"\
    O\"\n        elif char == \"p\" or char == \"P\":\n            char = \"P\"\n\
    \        elif char == \"q\" or char == \"Q\":\n            char = \"Q\"\n    \
    \    elif char == \"r\" or char == \"R\":\n            char = \"R\"\n        elif\
    \ char == \"s\" or char == \"S\":\n            char = \"S\"\n        elif char\
    \ == \"t\" or char == \"T\":\n            char = \"T\"\n        elif char == \"\
    u\" or char == \"U\":\n            char = \"U\"\n        elif char == \"v\" or\
    \ char == \"V\":\n            char = \"V\"\n        elif char == \"w\" or char\
    \ == \"W\":\n            char = \"W\"\n        elif char == \"x\" or char == \"\
    X\":\n            char = \"X\"\n        elif char == \"y\" or char == \"Y\":\n\
    \            char = \"Y\"\n        elif char == \"z\" or char == \"Z\":\n    \
    \        char = \"Z\"\n        else \n            char = \"\"\n        end\n \
    \       result = result .. char\n    end\n    \n    return result\nend", "   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    uppercase\
    \ = string.uppercase()\n    lowercase = string.lowercase()\n    \n    return lowercase+uppercase\n\
    end\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"Hello World!\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the string\
    \ with all vowels replaced by an underscore.", "    \n    local result = \"\"\n\
    \    for char in string:gmatch(\"%c\") do \n        if char == toupper(char) then\
    \ \n            result = result .. tolower(char) \n        else \n           \
    \ result = result .. toupper(char) \n        end\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    local result = \"\"\n   \
    \ \n    for char in string:gmatch(\"%c\") do\n        if char == \"a\" then\n\
    \            char = \"A\"\n        elseif char == \"b\" then\n            char\
    \ = \"B\"\n        elseif char == \"c\" then\n            char = \"C\"\n     \
    \   elseif char == \"d\" then\n            char = \"D\"\n        elseif char ==\
    \ \"e\" then\n            char = \"E\"\n        elseif char == \"f\" then\n  \
    \          char = \"F\"\n        elseif char == \"g\" then\n            char =\
    \ \"G\"\n        elseif char == \"h\" then\n            char = \"H\"\n       \
    \ elseif char == \"i\" then\n            char = \"I\"\n        elseif char ==\
    \ \"j\" then\n            char = \"J\"\n        elseif char == \"k\" then\n  \
    \          char = \"K\"\n        elseif char == \"l\" then\n            char =\
    \ \"L\"\n        elseif char == \"m\" then\n            char = \"M\"\n       \
    \ elseif char == \"n\" then\n            char = \"N\"\n        elseif char ==\
    \ \"o\" then\n            char = \"O\"\n        elseif char == \"p\" then\n  \
    \          char = \"P\"\n        elseif char == \"q\" then\n            char =\
    \ \"Q\"\n        elseif char == \"r\" then\n            char = \"R\"\n       \
    \ elseif char == \"s\" then\n            char = \"S\"\n        elseif char ==\
    \ \"t\" then\n            char = \"T\"\n        elseif char == \"u\" then\n  \
    \          char = \"U\"\n        elseif char == \"v\" then\n            char =\
    \ \"V\"\n        elseif char == \"w\" then\n            char = \"W\"\n       \
    \ elseif char == \"x\" then\n            char = \"X\"\n        elseif char ==\
    \ \"y\" then\n            char = \"Y\"\n        elseif char == \"z\" then\n  \
    \          char = \"Z\"\n        else\n            char = char\n        end\n\
    \        \n        result = result .. char\n    end\n    \n    return result\n\
    end\n</cell>\n<code language=julia-1.5>", "    local result = \"\"\n    for char\
    \ in string:gmatch(\"%a\") do\n        if char == \"a\" then\n            char\
    \ = \"A\"\n        elseif char == \"A\" then\n            char = \"a\"\n     \
    \   end\n        result = result .. char\n    end\n    return result\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    lowercase_chars = string.chars\n    uppercase_chars\
    \ = string.chars.map(&:upcase)\n    \n    string.chars = uppercase_chars\n   \
    \ string.chars = lowercase_chars\n    \n    return string\nend", "    local result\
    \ = \"\"\n    for c in string:gmatch(\"%c\") do \n        if c:lower() == c then\
    \ \n            result = result .. c:upper()\n        elseif c:upper() == c then\
    \ \n            result = result .. c:lower()\n        else\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "    \n    uppercase\
    \ = string.uppercase()\n    lowercase = string.lowercase()\n    \n    return lowercase+uppercase\n\
    end\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"Hello World\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the string\
    \ with only the first letter capitalized.", "    local result = \"\"\n    for\
    \ char in string:gmatch(\"%c\") do \n        if char == \"a\" then \n        \
    \    result = \"A\" \n        else if char == \"b\" then \n            result\
    \ = \"B\" \n        else if char == \"c\" then \n            result = \"C\" \n\
    \        else if char == \"d\" then \n            result = \"D\" \n        else\
    \ if char == \"e\" then \n            result = \"E\" \n        else if char ==\
    \ \"f\" then \n            result = \"F\" \n        else if char == \"g\" then\
    \ \n            result = \"G\" \n        else if char == \"h\" then \n       \
    \     result = \"H\" \n        else if char == \"i\" then \n            result\
    \ = \"I\" \n        else if char == \"j\" then \n            result = \"J\" \n\
    \        else if char == \"k\" then \n            result = \"K\" \n        else\
    \ if char == \"l\" then \n            result = \"L\" \n        else if char ==\
    \ \"m\" then \n            result = \"M\" \n        else if char == \"n\" then\
    \ \n            result = \"N\" \n        else if char == \"o\" then \n       \
    \     result = \"O\" \n        else if char == \"p\" then \n            result\
    \ = \"P\" \n        else if char == \"q\" then \n            result = \"Q\" \n\
    \        else if char == \"r\" then \n            result = \"R\" \n        else\
    \ if char == \"s\" then \n            result = \"S\" \n        else if char ==\
    \ \"t\" then \n            result = \"T\" \n        else if char == \"u\" then\
    \ \n            result = \"U\" \n        else if char == \"v\" then \n       \
    \     result = \"V\" \n        else if char == \"w\" then \n            result\
    \ = \"W\" \n        else if char == \"x\" then \n            result = \"X\" \n\
    \        else if char == \"y\" then \n            result = \"Y\" \n        else\
    \ if char == \"z\" then \n            result = \"Z\" \n        else \n       \
    \     result = char \n        end \n    end \n    return result\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThanks for the answer! I didn't know about `gmatch`\
    \ so I learned something new. Unfortunately this doesn't solve my problem because\
    \ I still need to flip lowercase to uppercase and vice versa. My question was\
    \ more about how to write this in a more elegant way than how to flip lowercase\
    \ to uppercase and vice versa. Thanks again though!\n<|/ c |>\n<| c |>\nI added\
    \ a function that does what you want.\n<|/ c |>\n<| c |>\nThanks again! I appreciate\
    \ your help!\n<|/ c |>\n<| a tags=julia |>\nI ", "    local result = \"\"\n  \
    \  for char in string:gmatch(\"%a\") do \n        local upper = char:upper()\n\
    \        local lower = char:lower()\n        result = result .. lower .. upper\n\
    \    end\n    return result\nend\n</cell>\n<code language=julia-1.4>\nflip_case(\"\
    Hello World\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns the number of characters in the string.", "    \n    local result\
    \ = \"\"\n    \n    for char in string:\n        if char == char:\n          \
    \  result += char\n        else\n            result += char.upper()\n        end\n\
    \    end\n    \n    return result\nend\n</cell>\n<code language=julia-1.5>", " \
    \   \n    local result = \"\"\n    \n    for char in string:\n        if char\
    \ == toupper(char):\n            result = result + tolower(char)\n        elseif\
    \ char == tolower(char):\n            result = result + toupper(char)\n      \
    \  else\n            result = result + char\n        end\n    end\n    \n    return\
    \ result\nend\n</cell>\n<code language=julia-1.5>", "    local result = \"\"\n\
    \    for char in string:gmatch(\"%c\") do \n        if char == toupper(char) then\
    \ \n            result = result .. tolower(char) \n        else \n           \
    \ result = result .. toupper(char) \n        end\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.4>", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return uppercase\n    \n    return lowercase\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert flip_case(\"hello\") == \"HELLO\"\n@assert flip_case(\"HELLO\") == \"\
    hello\"\n@assert flip_case(\"HellO\") == \"hello\"\n@assert flip_case(\"HellO\"\
    ) == \"HELLO\"\n@assert flip_case(\"HellO\") == \"HELLO\"\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns the string with all uppercase\
    \ letters replaced by their lowercase counterparts. For example, \"hello\" becomes\
    \ \"hELLO\".", "    local result = \"\"\n    for char in string:gmatch(\"%c\"\
    ) do\n        if char == toupper(char) then\n            result = result .. tolower(char)\n\
    \        elseif char == tolower(char) then\n            result = result .. toupper(char)\n\
    \        else\n            result = result .. char\n        end\n    end\n   \
    \ return result\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    to_lower(string::String)::String\n\
    \    \n    Convert a string to lowercase.\n    \n    ```\n    julia> to_lower(\"\
    Hello World\")\n    \"hello world\"\n    ```\n    \n    ```\n    julia> to_lower(\"\
    Hello World!\")\n    \"hello world!\"\n    ```\n    \n    ```\n    julia> to_lower(\"\
    Hello World!!\")\n    \"hello world!!\"\n    ```\n    \n    ```\n    julia> to_lower(\"\
    Hello World!!!\")\n    \"hello world!!!\"\n    ```\n    \n    ```\n    julia>\
    \ to_lower(\"Hello World!!!!\")\n    \"hello world!!!!\"\n    ```\n    \n    ```\n\
    \    julia> to_lower(\"Hello World!!!!!\")\n    \"hello world!!!!!\"\n    ```\n\
    \    \n    ```\n    julia> to_lower(\"Hello World!!!!!!\")\n    \"hello world!!!!!!\"\
    \n    ```\n    \n    ```\n    julia> to_lower(\"Hello World!!!!!!!\")\n    \"\
    hello world!!!!!!!\"\n    ```\n    \n    ```\n    julia> to_lower(\"Hello World!!!!!!!1\"\
    )\n    \"hello world!!!!!!01\"\n    ```\n    \n    ```\n    julia> to_lower(\"\
    Hello World!!!!!!!2\")\n    \"hello world!!!!!!02\"\n    ```\n    \n    ```\n\
    \    julia> to_lower(\"Hello World!!!!!!!3\")\n    \"hello world!!!!!!03\"\n \
    \   ```\n    \n    ```\n    julia> to_lower(\"Hello World!!!!!!!4\")\n    \"hello\
    \ world!!!!!!04\"\n    ```\n    \n    ```\n    julia> to_lower(\"Hello World!!!!!!!5\"\
    )\n    \"hello world!!!!!!05\"\n    ```\n    \n    ```\n    julia> to_lower(\"\
    Hello World!!!!!!!6\")\n    \"hello world!!!!!!06\"\n    ```\n    \n    ```\n\
    \    julia> to_lower(\"Hello World!!!!!!!7\")\n    \"hello world!!!!!!07\"\n \
    \   ```\n    \n    ", "    str = string.downcase()\n    str = string.upcase()\n\
    \    return str\nend\n</cell>\n<code language=julia-1.5>", "    \n    uppercase\
    \ = string.uppercase()\n    lowercase = string.lowercase()\n    \n    if uppercase\
    \ == lowercase\n        return string\n    else\n        return lowercase\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"hello\")\
    \ == \"HELLO\"\n@assert flip_case(\"HELLO\") == \"hello\"\n@assert flip_case(\"\
    HellO\") == \"hello\"\n@assert flip_case(\"HellO\") == \"HELLO\"\n</cell>\n<text>\n\
    Exercise: Write a function that takes a string and returns the string with all\
    \ lowercase letters converted to uppercase and all uppercase letters converted\
    \ to lowercase.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    lowercase_string = string.lower()\n    uppercase_string = string.upper()\n\
    \    \n    return uppercase_string\nend", "    \n    str = string.lower()\n  \
    \  str = str.replace(\" \", \"\")\n    str = str.replace(\",\", \"\")\n    str\
    \ = str.replace(\"'\", \"\")\n    str = str.replace(\"\\\"\", \"\")\n    str =\
    \ str.replace(\"(\", \"\")\n    str = str.replace(\")\", \"\")\n    str = str.replace(\"\
    [\", \"\")\n    str = str.replace(\"]\", \"\")\n    str = str.replace(\"{\", \"\
    \")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"!\", \"\")\n\
    \    str = str.replace(\"?\", \"\")\n    str = str.replace(\":\", \"\")\n    str\
    \ = str.replace(\";\", \"\")\n    str = str.replace(\"-\", \"\")\n    str = str.replace(\"\
    _\", \"\")\n    str = str.replace(\"=\", \"\")\n    str = str.replace(\"+\", \"\
    \")\n    str = str.replace(\"*\", \"\")\n    str = str.replace(\"%\", \"\")\n\
    \    str = str.replace(\"^\", \"\")\n    str = str.replace(\"~\", \"\")\n    str\
    \ = str.replace(\"<\", \"\")\n    str = str.replace(\">\", \"\")\n    str = str.replace(\"\
    |\", \"\")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\
    \")\n    str = str.replace(\"[\", \"\")\n    str = str.replace(\"]\", \"\")\n\
    \    str = str.replace(\"(\", \"\")\n    str = str.replace(\")\", \"\")\n    str\
    \ = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"\
    [\", \"\")\n    str = str.replace(\"]\", \"\")\n    str = str.replace(\"{\", \"\
    \")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n\
    \    str = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n    str\
    \ = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"\
    }\", \"\")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\
    \")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n\
    \    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str\
    \ = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"\
    {\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\
    \")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n\
    \    str = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n    str\
    \ = str.replace(\"}\", \"\")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"\
    }\", \"\")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\
    \")\n    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n\
    \    str = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str\
    \ = str.replace(\"{\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"\
    {\", \"\")\n    str = str.replace(\"}\", \"\")\n    str = str.replace(\"", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    str = string.to_lowercase()\n\
    \    str = str.capitalize()\n    return str\nend", "    \n    lowercase = string.lower()\n\
    \    uppercase = string.upper()\n    \n    if lowercase == uppercase\n       \
    \ lowercase\n    else\n        uppercase\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    str = string.lower()\n    str = str.upper()\n    str = str.lower()\n\
    \    \n    return str\nend", "    \n    uppercase = string.uppercase()\n    lowercase\
    \ = string.lowercase()\n    \n    if uppercase == lowercase\n        return uppercase\n\
    \    \n    return lowercase\nend\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    hello\") \u2248 \"HELLO\"\n</cell>", "    local result = \"\"\n    for char in\
    \ string:gmatch(\"%a\") do \n        if char == \"a\" then \n            char\
    \ = \"A\"\n        elseif char == \"A\" then \n            char = \"a\"\n    \
    \    end\n        result = result .. char\n    end\n    return result\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    lowercase_chars = string.chars\n    uppercase_chars\
    \ = string.chars.map(char.upcase)\n    \n    return String.from_utf8(String.from_utf8(String.from_utf8(lowercase_chars))\
    \ |> String.concat uppercase_chars)\nend", "    \n    local result = \"\"\n  \
    \  for char in string:gmatch(\"%c\") do \n        if char == \"a\" then \n   \
    \         result = \"A\" \n        else if char == \"b\" then \n            result\
    \ = \"B\" \n        else if char == \"c\" then \n            result = \"C\" \n\
    \        else if char == \"d\" then \n            result = \"D\" \n        else\
    \ if char == \"e\" then \n            result = \"E\" \n        else if char ==\
    \ \"f\" then \n            result = \"F\" \n        else if char == \"g\" then\
    \ \n            result = \"G\" \n        else if char == \"h\" then \n       \
    \     result = \"H\" \n        else if char == \"i\" then \n            result\
    \ = \"I\" \n        else if char == \"j\" then \n            result = \"J\" \n\
    \        else if char == \"k\" then \n            result = \"K\" \n        else\
    \ if char == \"l\" then \n            result = \"L\" \n        else if char ==\
    \ \"m\" then \n            result = \"M\" \n        else if char == \"n\" then\
    \ \n            result = \"N\" \n        else if char == \"o\" then \n       \
    \     result = \"O\" \n        else if char == \"p\" then \n            result\
    \ = \"P\" \n        else if char == \"q\" then \n            result = \"Q\" \n\
    \        else if char == \"r\" then \n            result = \"R\" \n        else\
    \ if char == \"s\" then \n            result = \"S\" \n        else if char ==\
    \ \"t\" then \n            result = \"T\" \n        else if char == \"u\" then\
    \ \n            result = \"U\" \n        else if char == \"v\" then \n       \
    \     result = \"V\" \n        else if char == \"w\" then \n            result\
    \ = \"W\" \n        else if char == \"x\" then \n            result = \"X\" \n\
    \        else if char == \"y\" then \n            result = \"Y\" \n        else\
    \ if char == \"z\" then \n            result = \"Z\" \n        else if char ==\
    \ \"A\" then \n            result = \"a\" \n        else if char == \"B\" then\
    \ \n            result = \"b\" \n        else if char == \"C\" then \n       \
    \     result = \"c\" \n        else if char == \"D\" then \n            result\
    \ = \"d\" \n        else if char == \"E\" then \n            result = \"e\" \n\
    \        else if char == \"F\" then \n            result = \"f\" \n        else\
    \ if char == \"G\" then \n            result = \"g\" \n        else if char ==\
    \ \"H\" then \n            result = \"h\" \n        else if char == \"I\" then\
    \ \n            result = \"i\" \n        else if char == \"J\" then \n       \
    \     result = \"j\" \n        else if char == \"K\" then \n            result\
    \ = \"k\" \n        else if char == \"L\" then \n            result = \"l\" \n\
    \        else if ", "    \n    uppercase = string.uppercase()\n    lowercase =\
    \ string.lowercase()\n    \n    if uppercase == lowercase\n        return string\n\
    \    else\n        return uppercase\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    to_lower(string::String)", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return uppercase\n    \n    return lowercase\nend", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    lowercase_chars = string.chars()\n\
    \    uppercase_chars = string.chars().map(&:upcase)\n    \n    string.chars().zip(string.chars().map(&:downcase)).map(&:join)\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    local result = \"\"\n   \
    \ for c in string:gmatch(\"[%a]\") do \n        if c:lower() == c then \n    \
    \        result = result .. c:upper()\n        elseif c:upper() == c then \n \
    \           result = result .. c:lower()\n        else\n            result = result\
    \ .. c\n        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    uppercase = string.upcase()\n    lowercase = string.lower()\n    \n \
    \   return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ flip_case(\"hello world\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns the string with all the characters in alphabetical\
    \ order.", "    \n    local result = \"\"\n    for char in string:gmatch(\"%c\"\
    ) do \n        if char == \"a\" then \n            result = \"A\"\n        elseif\
    \ char == \"b\" then \n            result = \"B\"\n        elseif char == \"c\"\
    \ then \n            result = \"C\"\n        elseif char == \"d\" then \n    \
    \        result = \"D\"\n        elseif char == \"e\" then \n            result\
    \ = \"E\"\n        elseif char == \"f\" then \n            result = \"F\"\n  \
    \      elseif char == \"g\" then \n            result = \"G\"\n        elseif\
    \ char == \"h\" then \n            result = \"H\"\n        elseif char == \"i\"\
    \ then \n            result = \"I\"\n        elseif char == \"j\" then \n    \
    \        result = \"J\"\n        elseif char == \"k\" then \n            result\
    \ = \"K\"\n        elseif char == \"l\" then \n            result = \"L\"\n  \
    \      elseif char == \"m\" then \n            result = \"M\"\n        elseif\
    \ char == \"n\" then \n            result = \"N\"\n        elseif char == \"o\"\
    \ then \n            result = \"O\"\n        elseif char == \"p\" then \n    \
    \        result = \"P\"\n        elseif char == \"q\" then \n            result\
    \ = \"Q\"\n        elseif char == \"r\" then \n            result = \"R\"\n  \
    \      elseif char == \"s\" then \n            result = \"S\"\n        elseif\
    \ char == \"t\" then \n            result = \"T\"\n        elseif char == \"u\"\
    \ then \n            result = \"U\"\n        elseif char == \"v\" then \n    \
    \        result = \"V\"\n        elseif char == \"w\" then \n            result\
    \ = \"W\"\n        elseif char == \"x\" then \n            result = \"X\"\n  \
    \      elseif char == \"y\" then \n            result = \"Y\"\n        elseif\
    \ char == \"z\" then \n            result = \"Z\"\n        elseif char == \"A\"\
    \ then \n            result = \"a\"\n        elseif char == \"B\" then \n    \
    \        result = \"b\"\n        elseif char == \"C\" then \n            result\
    \ = \"c\"\n        elseif char == \"D\" then \n            result = \"d\"\n  \
    \      elseif char == \"E\" then \n            result = \"e\"\n        elseif\
    \ char == \"F\" then \n            result = \"f\"\n        elseif char == \"G\"\
    \ then \n            result = \"g\"\n        elseif char == \"H\" then \n    \
    \        result = \"h\"\n        elseif char == \"I\" then \n            result\
    \ = \"i\"\n        elseif char == \"J\" then \n            result = \"j\"\n  \
    \      elseif char == \"K\" then \n            result = \"k\"\n        elseif\
    \ char == \"L\" then \n            result = \"l\"\n        elseif char == \"M\"\
    \ then \n", "    \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    if uppercase == lowercase\n        return string\n    \n    return\
    \ lowercase\nend\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"abcde\"\
    ) == \"ABCDE\"\n@assert flip_case(\"ABCDE\") == \"abcde\"\n@assert flip_case(\"\
    aBcDe\") == \"aBcDe\"\n@assert flip_case(\"aBcDe\") == \"aBcDe\"\n@assert flip_case(\"\
    aBcDe\") == \"aBcDe\"\n</cell>\n<text>\nExercise: Write a function that takes\
    \ a string and returns the string with all uppercase letters replaced by lowercase\
    \ letters.", "    local result = \"\"\n    for char in string:gmatch(\"%c\") do\
    \ \n        if char == \"a\" then \n            result = \"A\"\n        elseif\
    \ char == \"A\" then \n            result = \"a\"\n        elseif char == \"b\"\
    \ then \n            result = \"B\"\n        elseif char == \"B\" then \n    \
    \        result = \"b\"\n        elseif char == \"c\" then \n            result\
    \ = \"C\"\n        elseif char == \"C\" then \n            result = \"c\"\n  \
    \      elseif char == \"d\" then \n            result = \"D\"\n        elseif\
    \ char == \"D\" then \n            result = \"d\"\n        elseif char == \"e\"\
    \ then \n            result = \"E\"\n        elseif char == \"E\" then \n    \
    \        result = \"e\"\n        elseif char == \"f\" then \n            result\
    \ = \"F\"\n        elseif char == \"F\" then \n            result = \"f\"\n  \
    \      elseif char == \"g\" then \n            result = \"G\"\n        elseif\
    \ char == \"G\" then \n            result = \"g\"\n        elseif char == \"h\"\
    \ then \n            result = \"H\"\n        elseif char == \"H\" then \n    \
    \        result = \"h\"\n        elseif char == \"i\" then \n            result\
    \ = \"I\"\n        elseif char == \"I\" then \n            result = \"i\"\n  \
    \      elseif char == \"j\" then \n            result = \"J\"\n        elseif\
    \ char == \"J\" then \n            result = \"j\"\n        elseif char == \"k\"\
    \ then \n            result = \"K\"\n        elseif char == \"K\" then \n    \
    \        result = \"k\"\n        elseif char == \"l\" then \n            result\
    \ = \"L\"\n        elseif char == \"L\" then \n            result = \"l\"\n  \
    \      elseif char == \"m\" then \n            result = \"M\"\n        elseif\
    \ char == \"M\" then \n            result = \"m\"\n        elseif char == \"n\"\
    \ then \n            result = \"N\"\n        elseif char == \"N\" then \n    \
    \        result = \"n\"\n        elseif char == \"o\" then \n            result\
    \ = \"O\"\n        elseif char == \"O\" then \n            result = \"o\"\n  \
    \      elseif char == \"p\" then \n            result = \"P\"\n        elseif\
    \ char == \"P\" then \n            result = \"p\"\n        elseif char == \"q\"\
    \ then \n            result = \"Q\"\n        elseif char == \"Q\" then \n    \
    \        result = \"q\"\n        elseif char == \"r\" then \n            result\
    \ = \"R\"\n        elseif char == \"R\" then \n            result = \"r\"\n  \
    \      elseif char == \"s\" then \n            result = \"S\"\n        elseif\
    \ char == \"S\" then \n            result = \"s\"\n        elseif char == \"t\"\
    \ then \n            result = \"T\"\n", "    \n    local result = \"\"\n    for\
    \ char in string:gmatch(\"%c\") do \n        if char == toupper(char) then\n \
    \           result = result .. tolower(char)\n        elseif char == tolower(char)\
    \ then\n            result = result .. toupper(char)\n        else\n         \
    \   result = result .. char\n        end\n    end\n    return result\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    uppercase = string.uppercase()\n    lowercase\
    \ = string.lowercase()\n    \n    return lowercase..uppercase\nend\n</cell>\n\
    <code language=julia-1.5>\n@time flip_case(\"hello\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns the string with all lowercase\
    \ letters replaced by uppercase letters.", "    \n    local result = \"\"\n  \
    \  for char in string:gmatch(\"%c\") do \n        if char == \"a\" then \n   \
    \         result = \"A\"\n        elseif char == \"b\" then \n            result\
    \ = \"B\"\n        elseif char == \"c\" then \n            result = \"C\"\n  \
    \      elseif char == \"d\" then \n            result = \"D\"\n        elseif\
    \ char == \"e\" then \n            result = \"E\"\n        elseif char == \"f\"\
    \ then \n            result = \"F\"\n        elseif char == \"g\" then \n    \
    \        result = \"G\"\n        elseif char == \"h\" then \n            result\
    \ = \"H\"\n        elseif char == \"i\" then \n            result = \"I\"\n  \
    \      elseif char == \"j\" then \n            result = \"J\"\n        elseif\
    \ char == \"k\" then \n            result = \"K\"\n        elseif char == \"l\"\
    \ then \n            result = \"L\"\n        elseif char == \"m\" then \n    \
    \        result = \"M\"\n        elseif char == \"n\" then \n            result\
    \ = \"N\"\n        elseif char == \"o\" then \n            result = \"O\"\n  \
    \      elseif char == \"p\" then \n            result = \"P\"\n        elseif\
    \ char == \"q\" then \n            result = \"Q\"\n        elseif char == \"r\"\
    \ then \n            result = \"R\"\n        elseif char == \"s\" then \n    \
    \        result = \"S\"\n        elseif char == \"t\" then \n            result\
    \ = \"T\"\n        elseif char == \"u\" then \n            result = \"U\"\n  \
    \      elseif char == \"v\" then \n            result = \"V\"\n        elseif\
    \ char == \"w\" then \n            result = \"W\"\n        elseif char == \"x\"\
    \ then \n            result = \"X\"\n        elseif char == \"y\" then \n    \
    \        result = \"Y\"\n        elseif char == \"z\" then \n            result\
    \ = \"Z\"\n        elseif char == \"A\" then \n            result = \"a\"\n  \
    \      elseif char == \"B\" then \n            result = \"b\"\n        elseif\
    \ char == \"C\" then \n            result = \"c\"\n        elseif char == \"D\"\
    \ then \n            result = \"d\"\n        elseif char == \"E\" then \n    \
    \        result = \"e\"\n        elseif char == \"F\" then \n            result\
    \ = \"f\"\n        elseif char == \"G\" then \n            result = \"g\"\n  \
    \      elseif char == \"H\" then \n            result = \"h\"\n        elseif\
    \ char == \"I\" then \n            result = \"i\"\n        elseif char == \"J\"\
    \ then \n            result = \"j\"\n        elseif char == \"K\" then \n    \
    \        result = \"k\"\n        elseif char == \"L\" then \n            result\
    \ = \"l\"\n        elseif char == \"M\" then \n", "    local result = \"\"\n \
    \   for c in string:gmatch(\"%c\") do \n        if c:lower() == c then \n    \
    \        result = result .. c:upper()\n        else \n            result = result\
    \ .. c:lower()\n        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.4>\n\
    @time flip_case(\"Hello World!\")\n</cell>\n<text>\nExercise: Write a function\
    \ that takes a string and returns the string with all lowercase letters converted\
    \ to uppercase. For example, if the input string is \"Hello World!\", the output\
    \ should be \"HELLO WORLD!\"", "    \n    local result = \"\"\n    for char in\
    \ string:gmatch(\"%c\") do \n        if char == \"a\" then \n            result\
    \ = \"A\" \n        else if char == \"b\" then \n            result = \"B\" \n\
    \        else if char == \"c\" then \n            result = \"C\" \n        else\
    \ if char == \"d\" then \n            result = \"D\" \n        else if char ==\
    \ \"e\" then \n            result = \"E\" \n        else if char == \"f\" then\
    \ \n            result = \"F\" \n        else if char == \"g\" then \n       \
    \     result = \"G\" \n        else if char == \"h\" then \n            result\
    \ = \"H\" \n        else if char == \"i\" then \n            result = \"I\" \n\
    \        else if char == \"j\" then \n            result = \"J\" \n        else\
    \ if char == \"k\" then \n            result = \"K\" \n        else if char ==\
    \ \"l\" then \n            result = \"L\" \n        else if char == \"m\" then\
    \ \n            result = \"M\" \n        else if char == \"n\" then \n       \
    \     result = \"N\" \n        else if char == \"o\" then \n            result\
    \ = \"O\" \n        else if char == \"p\" then \n            result = \"P\" \n\
    \        else if char == \"q\" then \n            result = \"Q\" \n        else\
    \ if char == \"r\" then \n            result = \"R\" \n        else if char ==\
    \ \"s\" then \n            result = \"S\" \n        else if char == \"t\" then\
    \ \n            result = \"T\" \n        else if char == \"u\" then \n       \
    \     result = \"U\" \n        else if char == \"v\" then \n            result\
    \ = \"V\" \n        else if char == \"w\" then \n            result = \"W\" \n\
    \        else if char == \"x\" then \n            result = \"X\" \n        else\
    \ if char == \"y\" then \n            result = \"Y\" \n        else if char ==\
    \ \"z\" then \n            result = \"Z\" \n        else if char == \"A\" then\
    \ \n            result = \"a\" \n        else if char == \"B\" then \n       \
    \     result = \"b\" \n        else if char == \"C\" then \n            result\
    \ = \"c\" \n        else if char == \"D\" then \n            result = \"d\" \n\
    \        else if char == \"E\" then \n            result = \"e\" \n        else\
    \ if char == \"F\" then \n            result = \"f\" \n        else if char ==\
    \ \"G\" then \n            result = \"g\" \n        else if char == \"H\" then\
    \ \n            result = \"h\" \n        else if char == \"I\" then \n       \
    \     result = \"i\" \n        else if char == \"J\" then \n            result\
    \ = \"j\" \n        else if char == \"K\" then \n            result = \"k\" \n\
    \        else if char == \"L\" then \n            result = \"l\" \n        else\
    \ if ", "    \n    uppercase = string.upcase()\n    lowercase = string.lower()\n\
    \    \n    return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\n\
    @time flip_case(\"Hello World\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the string with all vowels replaced by an underscore.",
  "    \n    uppercase = string.uppercase()\n    lowercase = string.lowercase()\n\
    \    \n    if uppercase == lowercase\n        return string\n    \n    return\
    \ uppercase + lowercase\nend\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"\
    hello\") == \"HELLO\"\n@assert flip_case(\"HELLO\") == \"hello\"\n@assert flip_case(\"\
    HellO\") == \"hello\"\n@assert flip_case(\"HellO\") == \"HELLO\"\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the string with all\
    \ spaces replaced by underscores.", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    if uppercase == lowercase\n   \
    \     return string\n    \n    return lowercase\nend\n</cell>\n<code language=julia-1.5>",
  "    str = string.downcase()\n    str = string.upcase()\n    return str\nend\n</cell>\n\
    <code language=julia-1.5>", "    local result = \"\"\n    for c in string:gmatch(\"\
    %c\") do \n        if c == \"a\" then c = \"A\" \n        if c == \"A\" then c\
    \ = \"a\" \n        result = result .. c\n    end\n    return result\nend\n</code>\n\
    <|/ a tags=julia |>\n<| a dscore=0 |>\n<code>", "    local result = \"\"\n   \
    \ for char in string:gmatch(\"%c\") do \n        local new_char = char:lower()\n\
    \        if new_char == char then\n            new_char = char:upper()\n     \
    \   end\n        result = result .. new_char\n    end\n    return result\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\nThe function below will convert\
    \ all lowercase letters to uppercase and all uppercase letters to lowercase:\n\
    <code>", "    \n    local result = \"\"\n    \n    for char in string:\n     \
    \   if char == char:\n            result = result + char\n        else\n     \
    \       result = result + char.upper()\n        end\n    end\n    \n    return\
    \ result\nend", "    \n    local result = \"\"\n    \n    for char in string:\n\
    \        if char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = result + char\n\
    \        elseif char == char:\n            result = result + char\n        elseif\
    \ char == char:\n            result = result + char\n        elseif char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char\n        elseif char == char:\n            result =\
    \ result + char\n        elseif char == char:\n            result = ", "    \n\
    \    local result = \"\"\n    \n    for char in string:gmatch(\"%c\") do\n   \
    \     if char >= \"a\" and char <= \"z\" then\n            char = char.upcase()\n\
    \        elseif char >= \"A\" and char <= \"Z\" then\n            char = char.downcase()\n\
    \        end\n        result = result .. char\n    end\n    \n    return result\n\
    end\n</cell>\n<code language=julia-1.3>", "    str = string.lower()\n    str =\
    \ str.capitalize()\n    return str\nend", "    \n    local result = \"\"\n   \
    \ for char in string:gmatch(\"%c\") do\n        if char == toupper(char) then\n\
    \            char = tolower(char)\n        elseif char == tolower(char) then\n\
    \            char = toupper(char)\n        end\n        result = result .. char\n\
    \    end\n    return result\nend\n</cell>\n<code language=julia-1.5>", "    \n\
    \    local result = \"\"\n    \n    for char in string:\n        if char == char:\n\
    \            result = result + char\n        elseif char == char:\n          \
    \  result = result + char.upper()\n        elseif char == char:\n            result\
    \ = result + char.lower()\n        end\n    end\n    \n    return result\nend\n\
    </cell>\n<code language=julia-1.5>", "    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase..uppercase\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

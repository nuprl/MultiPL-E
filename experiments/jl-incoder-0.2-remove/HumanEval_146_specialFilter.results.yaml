language: jl
name: HumanEval_146_specialFilter
results:
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnofxqxmc.jl:17\nin expression starting at\
    \ /tmp/tmpnofxqxmc.jl:17\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run your function\
    \ on some test cases\nspecialFilter(1:10)\n</cell>\n<text>\nQuestion 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n           \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwxflrboy.jl:15\nin expression starting at\
    \ /tmp/tmpwxflrboy.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp44_vdqm7.jl:15\nin expression starting at\
    \ /tmp/tmp44_vdqm7.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2kqqmt6v.jl:15\nin expression starting at\
    \ /tmp/tmp2kqqmt6v.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 != 0 && n % 2 != 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (2, 4, 6, 8, 10).\n    For example:\n \
    \           \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn0cbqtch.jl:15\nin expression starting at\
    \ /tmp/tmpn0cbqtch.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1qn_lq0r.jl:15\nin expression starting at\
    \ /tmp/tmp1qn_lq0r.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 && num %\
    \ 3 != 0 && num % 5 != 0 && num % 7 != 0 && num % 9 != 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpht5g368j.jl:15\nin expression starting at\
    \ /tmp/tmpht5g368j.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7) == 1 && mod(n, 9) == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfv8ca5l5.jl:17\nin expression starting at\
    \ /tmp/tmpfv8ca5l5.jl:17\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 && num %\
    \ 2 != 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (2, 4, 6,\
    \ 8, 10).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd76drc54.jl:15\nin expression starting at\
    \ /tmp/tmpd76drc54.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyobjy_d6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyobjy_d6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:100)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:1000)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter(1:10000)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:100000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:1000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:100000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:1000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:100000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:1000000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000000)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000001)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000002)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000003)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000004)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000005)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000006)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000007)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000008)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10000000000009)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:100\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1zu_lqma.jl:17\nin expression starting at\
    \ /tmp/tmp1zu_lqma.jl:17\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:100)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa47sohs_.jl:15\nin expression starting at\
    \ /tmp/tmpa47sohs_.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ysn38fm.jl:15\nin expression starting at\
    \ /tmp/tmp5ysn38fm.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 4\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \          \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy0uc65ud.jl:15\nin expression starting at\
    \ /tmp/tmpy0uc65ud.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvq44m43h.jl:15\nin expression starting at\
    \ /tmp/tmpvq44m43h.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw7ibc0ca.jl:15\nin expression starting at\
    \ /tmp/tmpw7ibc0ca.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9xolr94x.jl:21\nin expression starting at\
    \ /tmp/tmp9xolr94x.jl:21\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsh_sk0oc.jl:15\nin expression starting at\
    \ /tmp/tmpsh_sk0oc.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n# Run your function on the vector [1,2,3,4,5,6,7,8,9,10]\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt1lgz07r.jl:21\nin expression starting at\
    \ /tmp/tmpt1lgz07r.jl:21\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n            if n % 2 == 0\n    \
    \            if n % 4 == 0\n                    count += 1\n                end\n\
    \            end\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi7dk7quj.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpi7dk7quj.jl:29\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7dk7quj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7dk7quj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpi7dk7quj.jl:30\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7dk7quj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7dk7quj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpi7dk7quj.jl:31\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpi7dk7quj.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7dk7quj.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\n@code_warntype specialFilter(nums)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsnoux4yi.jl:19\nin expression starting at\
    \ /tmp/tmpsnoux4yi.jl:19\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:100)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:1000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:100000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000)\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:100000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10000000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:100000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000000000000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:1000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:100000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:100000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:1000000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10000000000000000000000000000)\n</\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr8a_lrj2.jl:15\nin expression starting at\
    \ /tmp/tmpr8a_lrj2.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph_8ibkvz.jl:15\nin expression starting at\
    \ /tmp/tmph_8ibkvz.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        if num % 7 == 0\n                            if num %\
    \ 9 == 0\n                                count += 1\n            end\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5vkpt288.jl:21\nin expression starting at\
    \ /tmp/tmp5vkpt288.jl:21\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ysn38fm.jl:15\nin expression starting at\
    \ /tmp/tmp5ysn38fm.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2qznmsz9.jl:15\nin expression starting at\
    \ /tmp/tmp2qznmsz9.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgjedq9bs.jl:15\nin expression starting at\
    \ /tmp/tmpgjedq9bs.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            count += 1\n  \
    \          if n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 ==\
    \ 1\n                count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype \nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw7h3nm4z.jl:17\nin expression starting at\
    \ /tmp/tmpw7h3nm4z.jl:17\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9kec40wh.jl:19\nin expression starting at\
    \ /tmp/tmp9kec40wh.jl:19\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn3n2hodx.jl:15\nin expression starting at\
    \ /tmp/tmpn3n2hodx.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1 && num % 3 == 1 && num % 5 == 1\n                count += 1\n         \
    \   end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiysf06xg.jl:17\nin expression starting at\
    \ /tmp/tmpiysf06xg.jl:17\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprqu1c01d.jl:15\nin expression starting at\
    \ /tmp/tmprqu1c01d.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9ljypo6o.jl:15\nin expression starting at\
    \ /tmp/tmp9ljypo6o.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9ljypo6o.jl:15\nin expression starting at\
    \ /tmp/tmp9ljypo6o.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ho5h7mq.jl:15\nin expression starting at\
    \ /tmp/tmp1ho5h7mq.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9am1td3j.jl:19\nin expression starting at\
    \ /tmp/tmp9am1td3j.jl:19\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmi7pqa21.jl:17\nin expression starting at\
    \ /tmp/tmpmi7pqa21.jl:17\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10]) == 4\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4rd6et0v.jl:15\nin expression starting at\
    \ /tmp/tmp4rd6et0v.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n,2) ==\
    \ 1 && mod(n,3) == 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphmdnfs13.jl:17\nin expression starting at\
    \ /tmp/tmphmdnfs13.jl:17\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz6f7q6fr.jl:15\nin expression starting at\
    \ /tmp/tmpz6f7q6fr.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n# Run your function on the given\
    \ array\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (2, 4, 6, 8, 10).\n    For example:\n            \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpni5igx5g.jl:17\nin expression starting at\
    \ /tmp/tmpni5igx5g.jl:17\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<text>\nExercise: Write a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpicg1e6zx.jl:19\nin expression starting at\
    \ /tmp/tmpicg1e6zx.jl:19\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyobjy_d6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyobjy_d6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7uq9dw3n.jl:17\nin expression starting at\
    \ /tmp/tmp7uq9dw3n.jl:17\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyobjy_d6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyobjy_d6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run your function on some test cases\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = \nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqu1d6y1g.jl:15\nin expression starting at\
    \ /tmp/tmpqu1d6y1g.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (2, 4, 6, 8, 10).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4xly0eh7.jl:15\nin expression starting at\
    \ /tmp/tmp4xly0eh7.jl:15\n"
  stdout: ''
  timestamp: 1659749165
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpubxmog3e.jl:15\nin expression starting at\
    \ /tmp/tmpubxmog3e.jl:15\n"
  stdout: ''
  timestamp: 1659749165
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpytkuo1fc.jl:15\nin expression starting at\
    \ /tmp/tmpytkuo1fc.jl:15\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10]) == 5\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnves7x70.jl:15\nin expression starting at\
    \ /tmp/tmpnves7x70.jl:15\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 3 != 0\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe5w07tvp.jl:17\nin expression starting at\
    \ /tmp/tmpe5w07tvp.jl:17\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2qznmsz9.jl:15\nin expression starting at\
    \ /tmp/tmp2qznmsz9.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n,2) ==\
    \ 1 && mod(n,3) == 1 && mod(n,5) == 1 && mod(n,7) == 1 && mod(n,9) == 1\n    \
    \            count += 1\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.3>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp01inwwpo.jl:17\nin expression starting at\
    \ /tmp/tmp01inwwpo.jl:17\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyobjy_d6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyobjy_d6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdxp9mm8_.jl:15\nin expression starting at\
    \ /tmp/tmpdxp9mm8_.jl:15\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyobjy_d6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyobjy_d6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 != 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1dd017mh.jl:17\nin expression starting at\
    \ /tmp/tmp1dd017mh.jl:17\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp48e66r9_.jl:21\nin expression starting at\
    \ /tmp/tmp48e66r9_.jl:21\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n            if n % 2 == 0\n    \
    \            if n % 4 == 1\n                    count += 1\n                end\n\
    \            end\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbv1163hq.jl:22\nin expression starting at\
    \ /tmp/tmpbv1163hq.jl:22\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7) == 1 && mod(n, 9) == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpinmk3qyi.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpinmk3qyi.jl:23\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpinmk3qyi.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpinmk3qyi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpinmk3qyi.jl:24\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpinmk3qyi.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpinmk3qyi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpinmk3qyi.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpinmk3qyi.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpinmk3qyi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpinmk3qyi.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpinmk3qyi.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpinmk3qyi.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749167
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptxitbwtv.jl:15\nin expression starting at\
    \ /tmp/tmptxitbwtv.jl:15\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdg3l57oy.jl:15\nin expression starting at\
    \ /tmp/tmpdg3l57oy.jl:15\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpavd9zdpv.jl:19\nin expression starting at\
    \ /tmp/tmpavd9zdpv.jl:19\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 3 != 0 && num % 5 != 0\n                count += 1\n         \
    \   end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4xtl1cgj.jl:17\nin expression starting at\
    \ /tmp/tmp4xtl1cgj.jl:17\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n\"\"\"\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpk8dy46mx.jl:15\nin expression starting at /tmp/tmpk8dy46mx.jl:15\n"
  stdout: ''
  timestamp: 1659749167
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp453l6vu8.jl:19\nin expression starting at\
    \ /tmp/tmp453l6vu8.jl:19\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0rycjck_.jl:19\nin expression starting at\
    \ /tmp/tmp0rycjck_.jl:19\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ngiphwk.jl:15\nin expression starting at\
    \ /tmp/tmp2ngiphwk.jl:15\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 != 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzynwxbhz.jl:17\nin expression starting at\
    \ /tmp/tmpzynwxbhz.jl:17\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt3ucotv1.jl:17\nin expression starting at\
    \ /tmp/tmpt3ucotv1.jl:17\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd473vfj3.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpd473vfj3.jl:25\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd473vfj3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd473vfj3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd473vfj3.jl:26\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd473vfj3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd473vfj3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd473vfj3.jl:28\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpd473vfj3.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd473vfj3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749167
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 2 == 1\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprlxfesd_.jl:15\nin expression starting at\
    \ /tmp/tmprlxfesd_.jl:15\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpziya6o85.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpziya6o85.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziya6o85.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziya6o85.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpziya6o85.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziya6o85.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziya6o85.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpziya6o85.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpziya6o85.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziya6o85.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbjyq4ygl.jl:15\nin expression starting at\
    \ /tmp/tmpbjyq4ygl.jl:15\n"
  stdout: ''
  timestamp: 1659749167
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 != 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt3251_gq.jl:17\nin expression starting at\
    \ /tmp/tmpt3251_gq.jl:17\n"
  stdout: ''
  timestamp: 1659749167
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:100)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000)\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:1000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:100000000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:100000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nspecialFilter(1:1000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10000000000000000000)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:100000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:1000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10000000000000000000000000000)\n\
    </cell\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9qcs1ka5.jl:17\nin expression starting at\
    \ /tmp/tmp9qcs1ka5.jl:17\n"
  stdout: ''
  timestamp: 1659749167
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 3 != 0 && num % 5 != 0\n                count += 1\n         \
    \   end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdu_ey0w8.jl:17\nin expression starting at\
    \ /tmp/tmpdu_ey0w8.jl:17\n"
  stdout: ''
  timestamp: 1659749167
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyad7fyqk.jl:15\nin expression starting at\
    \ /tmp/tmpyad7fyqk.jl:15\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1 && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 && num % 9 == 1\n     \
    \           count += 1\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpydy7nxm4.jl:17\nin expression starting at\
    \ /tmp/tmpydy7nxm4.jl:17\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnvqoy9da.jl:21\nin expression starting at\
    \ /tmp/tmpnvqoy9da.jl:21\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyobjy_d6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyobjy_d6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptnn44uck.jl:21\nin expression starting at\
    \ /tmp/tmptnn44uck.jl:21\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgjedq9bs.jl:15\nin expression starting at\
    \ /tmp/tmpgjedq9bs.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_native specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_native \nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t\
    @test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) ==\
    \ 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk_ihd_nq.jl:15\nin expression starting at\
    \ /tmp/tmpk_ihd_nq.jl:15\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run your\
    \ function on some test cases\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10]) ==\
    \ 6\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\
    \ == 10\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\
    \ == 100\n</cell>\n<text>\nExtra Credit\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\
    \t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45,\
    \ 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprn_0xs5f.jl:15\nin expression starting at\
    \ /tmp/tmprn_0xs5f.jl:15\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3qorvpt0.jl:17\nin expression starting at\
    \ /tmp/tmp3qorvpt0.jl:17\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            count += 1\n\
    \            if num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n               \
    \ count += 1\n            end\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7lp25bib.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp7lp25bib.jl:24\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7lp25bib.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7lp25bib.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7lp25bib.jl:25\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7lp25bib.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7lp25bib.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7lp25bib.jl:26\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7lp25bib.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7lp25bib.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7lp25bib.jl:27\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7lp25bib.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7lp25bib.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6_1az9m_.jl:15\nin expression starting at\
    \ /tmp/tmp6_1az9m_.jl:15\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\nspecialFilter(1:10)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphcg_gvo4.jl:17\nin expression starting at\
    \ /tmp/tmphcg_gvo4.jl:17\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\
    \t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45,\
    \ 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpic69_nyt.jl:17\nin expression starting at\
    \ /tmp/tmpic69_nyt.jl:17\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxtij6v81.jl:17\nin expression starting at\
    \ /tmp/tmpxtij6v81.jl:17\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe5ivndvk.jl:15\nin expression starting at\
    \ /tmp/tmpe5ivndvk.jl:15\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyobjy_d6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyobjy_d6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n# Run your function on some test cases\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = specialFilter(nums)\n\
    @time count = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count\
    \ = specialFilter(nums)\n@time count = specialFilter(nums)\n@time count = special\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphcviisl2.jl:15\nin expression starting at\
    \ /tmp/tmphcviisl2.jl:15\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2kqqmt6v.jl:15\nin expression starting at\
    \ /tmp/tmp2kqqmt6v.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2kqqmt6v.jl:15\nin expression starting at\
    \ /tmp/tmp2kqqmt6v.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 != 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n# Run your\
    \ function on the given array\nspecialFilter(nums)\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpku1896b7.jl:17\nin expression starting at\
    \ /tmp/tmpku1896b7.jl:17\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8pm6y4s5.jl:15\nin expression starting at\
    \ /tmp/tmp8pm6y4s5.jl:15\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpomqndrs0.jl:15\nin expression starting at\
    \ /tmp/tmpomqndrs0.jl:15\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphs25f6p7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmphs25f6p7.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs25f6p7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs25f6p7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmphs25f6p7.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs25f6p7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs25f6p7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmphs25f6p7.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs25f6p7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs25f6p7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmphs25f6p7.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphs25f6p7.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs25f6p7.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpujp_tjgp.jl:17\nin expression starting at\
    \ /tmp/tmpujp_tjgp.jl:17\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\nspecialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpji_6rzxy.jl:17\nin expression starting at\
    \ /tmp/tmpji_6rzxy.jl:17\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2kqqmt6v.jl:15\nin expression starting at\
    \ /tmp/tmp2kqqmt6v.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n# Run your function with the example numbers\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsvzxjbcp.jl:19\nin expression starting at\
    \ /tmp/tmpsvzxjbcp.jl:19\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpujp_tjgp.jl:17\nin expression starting at\
    \ /tmp/tmpujp_tjgp.jl:17\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ysn38fm.jl:15\nin expression starting at\
    \ /tmp/tmp5ysn38fm.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyhrudviw.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpyhrudviw.jl:28\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyhrudviw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyhrudviw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyhrudviw.jl:29\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyhrudviw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyhrudviw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyhrudviw.jl:30\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyhrudviw.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyhrudviw.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 3 != 0 && num % 5 != 0\n                count += 1\n         \
    \   end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb2zeziza.jl:17\nin expression starting at\
    \ /tmp/tmpb2zeziza.jl:17\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7) == 1 && mod(n, 9) == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp96t9lzd7.jl:17\nin expression starting at\
    \ /tmp/tmp96t9lzd7.jl:17\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe19i5hqx.jl:15\nin expression starting at\
    \ /tmp/tmpe19i5hqx.jl:15\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpocuybytu.jl:15\nin expression starting at\
    \ /tmp/tmpocuybytu.jl:15\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 5\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_qhqrthy.jl:15\nin expression starting at\
    \ /tmp/tmp_qhqrthy.jl:15\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq5zjdjmz.jl:15\nin expression starting at\
    \ /tmp/tmpq5zjdjmz.jl:15\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 && num %\
    \ 3 != 0 && num % 5 != 0 && num % 7 != 0 && num % 9 != 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n\"\"\"\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmplc9jg3hg.jl:15\nin expression starting at /tmp/tmplc9jg3hg.jl:15\n"
  stdout: ''
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpow1mpa0m.jl:19\nin expression starting at\
    \ /tmp/tmpow1mpa0m.jl:19\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 != 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb9irv2v8.jl:17\nin expression starting at\
    \ /tmp/tmpb9irv2v8.jl:17\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 != 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run your\
    \ function on the given array\nspecialFilter(nums)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (2, 4, 6, 8, 10).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8gg2_dh9.jl:17\nin expression starting at\
    \ /tmp/tmp8gg2_dh9.jl:17\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1pafud3b.jl:15\nin expression starting at\
    \ /tmp/tmp1pafud3b.jl:15\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2kqqmt6v.jl:15\nin expression starting at\
    \ /tmp/tmp2kqqmt6v.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpah70_un7.jl:15\nin expression starting at\
    \ /tmp/tmpah70_un7.jl:15\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n\
    specialFilter(1:100)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoi_8g7ax.jl:15\nin expression starting at\
    \ /tmp/tmpoi_8g7ax.jl:15\n"
  stdout: ''
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n            if n % 2 == 0\n    \
    \            if n % 4 == 0\n                    count += 1\n                end\n\
    \            end\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi7dk7quj.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpi7dk7quj.jl:29\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7dk7quj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7dk7quj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpi7dk7quj.jl:30\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7dk7quj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7dk7quj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpi7dk7quj.jl:31\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpi7dk7quj.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7dk7quj.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpriz0ibse.jl:15\nin expression starting at\
    \ /tmp/tmpriz0ibse.jl:15\n"
  stdout: ''
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 && num %\
    \ 2 == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy63cd1l3.jl:15\nin expression starting at\
    \ /tmp/tmpy63cd1l3.jl:15\n"
  stdout: ''
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp69l_bnzh.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp69l_bnzh.jl:27\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69l_bnzh.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69l_bnzh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp69l_bnzh.jl:28\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69l_bnzh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69l_bnzh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp69l_bnzh.jl:29\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69l_bnzh.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69l_bnzh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp69l_bnzh.jl:30\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp69l_bnzh.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69l_bnzh.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 != 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5l7yylrj.jl:17\nin expression starting at\
    \ /tmp/tmp5l7yylrj.jl:17\n"
  stdout: ''
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10]) == 4\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppsyi2685.jl:19\nin expression starting at\
    \ /tmp/tmppsyi2685.jl:19\n"
  stdout: ''
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpndpjuuc3.jl:17\nin expression starting at\
    \ /tmp/tmpndpjuuc3.jl:17\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmi7pqa21.jl:17\nin expression starting at\
    \ /tmp/tmpmi7pqa21.jl:17\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpocuybytu.jl:15\nin expression starting at\
    \ /tmp/tmpocuybytu.jl:15\n"
  stdout: ''
  timestamp: 1659749169
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n\"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfa4pq5li.jl:15\nin expression starting at\
    \ /tmp/tmpfa4pq5li.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\n# Run this cell to test your function\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10])\
    \ == 5\n@assert specialFilter([1,3,5,7,9]) == 3\n@assert specialFilter([1,3,5,7,8,9,10])\
    \ == 4\n@assert specialFilter([1,3,5,7,8,9,10,11,12,13,14]) == 0\n</cell>\n<text>\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \          \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz0vxidwg.jl:21\nin expression starting at\
    \ /tmp/tmpz0vxidwg.jl:21\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyobjy_d6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyobjy_d6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ysn38fm.jl:15\nin expression starting at\
    \ /tmp/tmp5ysn38fm.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 && num %\
    \ 3 == 1 && num % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3ff23kte.jl:15\nin expression starting at\
    \ /tmp/tmp3ff23kte.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<text>\nExercise: Write a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1oijh9to.jl:15\nin expression starting at\
    \ /tmp/tmp1oijh9to.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 && num %\
    \ 3 == 1 && num % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n\"\"\"\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpnzcqw783.jl:15\nin expression starting at /tmp/tmpnzcqw783.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<text>\nExercise: Write a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7jxkhyqg.jl:17\nin expression starting at\
    \ /tmp/tmp7jxkhyqg.jl:17\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmi7pqa21.jl:17\nin expression starting at\
    \ /tmp/tmpmi7pqa21.jl:17\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxq2vw4tx.jl:15\nin expression starting at\
    \ /tmp/tmpxq2vw4tx.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmenabmoh.jl:15\nin expression starting at\
    \ /tmp/tmpmenabmoh.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5ysn38fm.jl:15\nin expression starting at\
    \ /tmp/tmp5ysn38fm.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoa0qys0_.jl:15\nin expression starting at\
    \ /tmp/tmpoa0qys0_.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10]) == 5\n\
    @assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]) ==\
    \ 10\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\
    \ == 10\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\
    \ == 10\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\
    \t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45,\
    \ 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv6i74vlk.jl:21\nin expression starting at\
    \ /tmp/tmpv6i74vlk.jl:21\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkzfi743u.jl:15\nin expression starting at\
    \ /tmp/tmpkzfi743u.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 2 == 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n\"\"\"\
    \n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpp6rgrpsm.jl:15\nin expression starting at /tmp/tmpp6rgrpsm.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk5_ukpn1.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpk5_ukpn1.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpk5_ukpn1.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk5_ukpn1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5_ukpn1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphgeys4ge.jl:15\nin expression starting at\
    \ /tmp/tmphgeys4ge.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkc5lnmti.jl:15\nin expression starting at\
    \ /tmp/tmpkc5lnmti.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw7ibc0ca.jl:15\nin expression starting at\
    \ /tmp/tmpw7ibc0ca.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:100)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuqbnh7tf.jl:15\nin expression starting at\
    \ /tmp/tmpuqbnh7tf.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n\"\"\"\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(nums)\n\
    </\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_1tzml4o.jl:15\nin expression starting at\
    \ /tmp/tmp_1tzml4o.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(nums)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8tso28ae.jl:19\nin expression starting at\
    \ /tmp/tmp8tso28ae.jl:19\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyobjy_d6.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpyobjy_d6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:25\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyobjy_d6.jl:26\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 4 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyobjy_d6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyobjy_d6.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0fp2bz44.jl:17\nin expression starting at\
    \ /tmp/tmp0fp2bz44.jl:17\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6g8e12fb.jl:15\nin expression starting at\
    \ /tmp/tmp6g8e12fb.jl:15\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1\n                if mod(n, 3) == 1\n                    count += 1\n     \
    \           end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy0frq9gc.jl:19\nin expression starting at\
    \ /tmp/tmpy0frq9gc.jl:19\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n            if n % 2 == 0\n    \
    \            if n % 4 == 0\n                    count += 1\n                end\n\
    \            end\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjoxeyrfh.jl:22\nin expression starting at\
    \ /tmp/tmpjoxeyrfh.jl:22\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdnpsw_qm.jl:17\nin expression starting at\
    \ /tmp/tmpdnpsw_qm.jl:17\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp590nffm7.jl:17\nin expression starting at\
    \ /tmp/tmp590nffm7.jl:17\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2x50fs5y.jl:15\nin expression starting at\
    \ /tmp/tmp2x50fs5y.jl:15\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\
    \t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45,\
    \ 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw19owohy.jl:17\nin expression starting at\
    \ /tmp/tmpw19owohy.jl:17\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpplb2uhwr.jl:21\nin expression starting at\
    \ /tmp/tmpplb2uhwr.jl:21\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:100)\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:1000)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:1000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:100000)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:1000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:100000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:1000000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10000000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000001)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000002)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000003)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000004)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000005)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000006)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:100000000000000007)\n\
    </cell>\n<code language=julia-1.5\nusing Test\n\n@testset begin\n\ncandidate =\
    \ specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuc4m6qyz.jl:21\nin expression starting at\
    \ /tmp/tmpuc4m6qyz.jl:21\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_a56n0ia.jl:15\nin expression starting at\
    \ /tmp/tmp_a56n0ia.jl:15\n"
  stdout: ''
  timestamp: 1659749172
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\
    \t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45,\
    \ 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpic69_nyt.jl:17\nin expression starting at\
    \ /tmp/tmpic69_nyt.jl:17\n"
  stdout: ''
  timestamp: 1659749168
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\n@time specialFilter(nums)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwhnljjbf.jl:17\nin expression starting at\
    \ /tmp/tmpwhnljjbf.jl:17\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgjedq9bs.jl:15\nin expression starting at\
    \ /tmp/tmpgjedq9bs.jl:15\n"
  stdout: ''
  timestamp: 1659749164
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmyglbfb2.jl:15\nin expression starting at\
    \ /tmp/tmpmyglbfb2.jl:15\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphs25f6p7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmphs25f6p7.jl:21\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs25f6p7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs25f6p7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmphs25f6p7.jl:22\n  Expression: candidate([33, -2, -3, 45, 21,\
    \ 109]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs25f6p7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs25f6p7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmphs25f6p7.jl:23\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs25f6p7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs25f6p7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmphs25f6p7.jl:24\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphs25f6p7.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs25f6p7.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if mod(n, 2) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10)\
    \ == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10)\
    \ == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10)\
    \ == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n\
    <code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n\
    @assert specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert\
    \ specialFilter(1:10) == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10)\
    \ == 9\n</cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter(1:10) == 9\n</cell>\n\
    <code language=julia-1.5\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1t9t34h9.jl:17\nin expression starting at\
    \ /tmp/tmp1t9t34h9.jl:17\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkc5lnmti.jl:15\nin expression starting at\
    \ /tmp/tmpkc5lnmti.jl:15\n"
  stdout: ''
  timestamp: 1659749171
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:100)\n</cell>\n<code language=julia-1.5>\n\
    specialFilter(1:1000)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn5wvqx23.jl:17\nin expression starting at\
    \ /tmp/tmpn5wvqx23.jl:17\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvdtwtfwd.jl:19\nin expression starting at\
    \ /tmp/tmpvdtwtfwd.jl:19\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 3 == 0\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp2fhpsff.jl:17\nin expression starting at\
    \ /tmp/tmpp2fhpsff.jl:17\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter(nums)\n</cell>\n<text>\nExercise:\
    \ Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \         \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp83av7j37.jl:15\nin expression starting at\
    \ /tmp/tmp83av7j37.jl:15\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 != 0 && n % 2 != 1\n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2qy68v6e.jl:15\nin expression starting at\
    \ /tmp/tmp2qy68v6e.jl:15\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 0 && num % 2 != 1\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<text>\nExercise: Write a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7i6kkebm.jl:17\nin expression starting at\
    \ /tmp/tmp7i6kkebm.jl:17\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(1:10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsh_sk0oc.jl:15\nin expression starting at\
    \ /tmp/tmpsh_sk0oc.jl:15\n"
  stdout: ''
  timestamp: 1659749163
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nspecialFilter(1:10)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3y96ggvp.jl:15\nin expression starting at\
    \ /tmp/tmp3y96ggvp.jl:15\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run your function on the array\nspecialFilter(nums)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx_t108js.jl:15\nin expression starting at\
    \ /tmp/tmpx_t108js.jl:15\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1\n                if num % 3 == 0\n                    if num % 5 == 0\n\
    \                        count += 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyhrudviw.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpyhrudviw.jl:28\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyhrudviw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyhrudviw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyhrudviw.jl:29\n  Expression: candidate([43, -12, 93, 125,\
    \ 121, 109]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyhrudviw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyhrudviw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyhrudviw.jl:30\n  Expression: candidate([71, -2, -33, 75,\
    \ 21, 19]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyhrudviw.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyhrudviw.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  timestamp: 1659749170
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10])\
    \ == 5\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp33rff1zh.jl:15\nin expression starting at\
    \ /tmp/tmp33rff1zh.jl:15\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\n# Run your function on the given array\n\
    specialFilter(nums)\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzc5vntrr.jl:15\nin expression starting at\
    \ /tmp/tmpzc5vntrr.jl:15\n"
  stdout: ''
  timestamp: 1659749173
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10\n            if num % 2\
    \ == 1 && num % 3 == 1 && num % 5 == 1\n                count += 1\n         \
    \   end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(1:\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppnxjuf7l.jl:17\nin expression starting at\
    \ /tmp/tmppnxjuf7l.jl:17\n"
  stdout: ''
  timestamp: 1659749174
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            count += 1\n  \
    \          if n % 2 == 1\n                count += 1\n                if n % 3\
    \ == 1\n                    count += 1\n                    if n % 5 == 1\n  \
    \                      count += 1\n                        if n % 7 == 1\n   \
    \                         count += 1\n                            if n % 9 ==\
    \ 1\n                                count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype specialFilter(nums)\n</cell>\n<code language=julia-1.0>\n@\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ja4s0d2.jl:25\nin expression starting at\
    \ /tmp/tmp7ja4s0d2.jl:25\n"
  stdout: ''
  timestamp: 1659749174
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 && num %\
    \ 3 == 1 && num % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter(nums)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp17p__xnr.jl:15\nin expression starting at\
    \ /tmp/tmp17p__xnr.jl:15\n"
  stdout: ''
  timestamp: 1659749174
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            if n % 2 == 1\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\nspecialFilter(1:10)\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype specialFilter(1:10)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_8wm2a_5.jl:19\nin expression starting at\
    \ /tmp/tmp_8wm2a_5.jl:19\n"
  stdout: ''
  timestamp: 1659749174
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 && num %\
    \ 3 != 0 && num % 5 != 0 && num % 7 != 0 && num % 9 != 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    specialFilter(nums)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpad_nqi0d.jl:15\nin expression starting at\
    \ /tmp/tmpad_nqi0d.jl:15\n"
  stdout: ''
  timestamp: 1659749174
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3 == 1\
    \ && n % 5 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([1,2,3,4,5,6,7,8,9,10])\
    \ == 5\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3nmqr1kp.jl:15\nin expression starting at\
    \ /tmp/tmp3nmqr1kp.jl:15\n"
  stdout: ''
  timestamp: 1659749174
- exit_code: 1
  program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \            \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64 \n   \
    \ count = 0\n    for n in nums\n        if n > 10\n            count += 1\n  \
    \          if n % 2 == 1\n                count += 1\n                if n % 4\
    \ == 1\n                    count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpnvv5ky0z.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnvv5ky0z.jl:1\n\
    in expression starting at /tmp/tmpnvv5ky0z.jl:1\n"
  stdout: ''
  timestamp: 1659749174

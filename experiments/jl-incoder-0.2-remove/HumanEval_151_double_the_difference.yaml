name: HumanEval_151_double_the_difference
language: jl
prompt: "\"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
  \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
  \    \n                   \n    If the input list is empty, return 0.\n    \"\"\"\
  \nfunction double_the_difference(lst::Vector{Float64})::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = double_the_difference;\n\t@test(candidate(Vector{Float64}([]))\
  \ == 0)\n\t@test(candidate([5.0, 4.0]) == 25)\n\t@test(candidate([0.1, 0.2, 0.3])\
  \ == 0)\n\t@test(candidate([-10.0, -20.0, -30.0]) == 0)\n\t@test(candidate([-1.0,\
  \ -2.0, 8.0]) == 0)\n\t@test(candidate([0.2, 3.0, 5.0]) == 34)\n\t@test(candidate([-9.0,\
  \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165)\nend\n"
completions: ["    \n    sum = 0\n    for i in lst\n        if isodd(i)\n        \
    \    sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n           \
    \ sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,",
  "    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n  \
    \      end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the squares of the numbers in the list that\
    \ are odd.", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n     \
    \       sum += i\n        end\n    end\n    return sum\nend", "    sum = 0\n \
    \   for x in lst\n        if x % 2 == 1\n            sum += x\n        end\n \
    \   end\n    return sum\nend\n</cell>\n<code language=julia-1.3>", "    sum =\
    \ 0\n    for x in lst\n        if x % 2 != 0\n            sum += x\n        end\n\
    \    end\n    return sum\nend", "    \n    sum = 0\n    for x in lst\n       \
    \ if x % 2 == 1\n            sum += x\n        end\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in lst\n        if isodd(i)\n            sum +=\
    \ i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69",
  "    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum += x\n  \
    \      end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum\
    \ += i\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for\
    \ x in lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n\
    \    return sum\nend", "    sum = 0\n    for i in lst\n        if i%2==1\n   \
    \         sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.0>", "    \n    sum = 0\n    for x in lst\n        if x % 2\
    \ != 0\n            sum += x\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i\
    \ in lst\n        if isinteger(i)\n            sum += i\n        else\n      \
    \      sum += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,", "    \n    sum\
    \ = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n       \
    \ end\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n       \
    \ if isodd(i)\n            sum += i\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list of numbers, return\
    \ the sum of squares of the numbers\n    in the list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    \n                   \n    If the input\
    \ list is empty, return 0.\n    \"\"\"", "    \n    sum = 0\n    for i in lst\n\
    \        if isodd(i)\n            sum += i\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for i in lst\n   \
    \     if isodd(i)\n            sum += i\n        end\n    end\n    return sum\n\
    end", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n          \
    \  sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>", " \
    \   \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.0>", " \
    \   \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n\
    \        if x % 2 == 1\n            sum += x\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n                   \n    If\
    \ the input list is empty, return 0.\n    \"\"\"", "    sum = 0\n    for x in\
    \ lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list\
    \ of numbers, return the sum of squares of the numbers\n    in the list that are\
    \ odd. Ignore numbers that are negative or not integers.\n    \n             \
    \      \n    If the input list is empty, return 0.\n    \"\"\"", "    \n    sum\
    \ = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n        end\n\
    \    end\n    return sum\nend", "    \n    sum = 0\n    for x in lst\n       \
    \ if x % 2 != 0\n            sum += x\n        end\n    end\n    return sum\n\
    end", "    \n    sum = 0\n    for i in lst\n        if i%2 != 0\n            sum\
    \ += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    double_the_difference([1,2,3,4,5])\n</cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7])\n</cell>\n\
    <code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8])\n</cell>\n\
    <code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n\
    <code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.3>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,",
  "    \n    sum = 0\n    for i in lst\n        if i > 0\n            sum += i * i\n\
    \        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for x in\
    \ lst\n        if x % 2 != 0\n            sum += x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the product of the\
    \ numbers in a given list.", "    \n    sum = 0\n    for i in lst\n        if\
    \ isodd(i)\n            sum += i * i\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the squares\
    \ of the numbers in the list that are odd.", "    sum = 0\n    for x in lst\n\
    \        if x % 2 == 1\n            sum += x\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n                   \n    If\
    \ the input list is empty, return 0.\n    \"\"\"", "    \n    sum = 0\n    for\
    \ i in lst\n        if isodd(i)\n            sum += i\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>", "    \n    sum = 0\n\
    \    for x in lst\n        if x % 2 == 1\n            sum += x\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Given a list of numbers, return the sum of squares of the numbers\n    in the\
    \ list that are odd. Ignore numbers that are negative or not integers.\n    \n\
    \                   \n    If the input list is empty, return 0.\n    \"\"\"",
  "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n           \
    \ sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n           \
    \ sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if i > 0\n            sum +=\
    \ i\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for x\
    \ in lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n\
    \    return sum\nend", "    \n    sum = 0\n    for x in lst\n        if x % 2\
    \ == 1\n            sum += x\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a list of numbers, return the sum\
    \ of squares of the numbers\n    in the list that are odd. Ignore numbers that\
    \ are negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \"\"\"", "    sum = 0\n    for x in lst\n        if\
    \ x % 2 == 1\n            sum += x\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5])\n</cell>\n\
    <code language=julia-1.5>", "    sum = 0\n    for x in lst\n        if x % 2 ==\
    \ 1\n            sum += x\n        end\n    end\n    return sum\nend", "    \n\
    \    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n  \
    \      end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if isinteger(i)\n         \
    \   sum += i\n        else\n            sum += i * i\n        end\n    end\n \
    \   return sum\nend", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n\
    \            sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a list of numbers, return the sum\
    \ of squares of the numbers\n    in the list that are odd. Ignore numbers that\
    \ are negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \"\"\"", "    sum = 0\n    for i in lst\n        if\
    \ i > 0\n            sum += i\n        end\n    end\n    return sum * sum\nend\n\
    </cell>\n<code language=julia-1.5>\n# Test your function with the examples below\n\
    @test double_the_difference([1,2,3]) == 9\n@test double_the_difference([2,4,6,8])\
    \ == 42\n@test double_the_difference([3,5,7,9]) == 49\n@test double_the_difference([4,6,8,10,12])\
    \ == 70\n@test double_the_difference([5,7,9,11,13]) == 109\n@test double_the_difference([6,8,10,12,14])\
    \ == 140\n@test double_the_difference([7,9,11,13,15]) == 169\n@test double_the_difference([8,10,12,14,16])\
    \ == 200\n@test double_the_difference([9,11,13,15,17]) == 225\n@test double_the_difference([10,12,14,16,18])\
    \ == 270\n@test double_the_difference([11,13,15,17,19]) == 315\n@test double_the_difference([12,14,16,18,20])\
    \ == 360\n@test double_the_difference([13,15,17,19,21]) == 415\n@test double_the_difference([14,16,18,20,22])\
    \ == 460\n@test double_the_difference([15,17,19,21,23]) == 515\n@test double_the_difference([16,18,20,22,24])\
    \ == 560\n@test double_the_difference([17,19,21,23,25]) == 615\n@test double_the_difference([18,20,22,24,26])\
    \ == 660\n@test double_the_difference([19,21,23,25,27]) == 715\n@test double_the_difference([20,22,24,26,28])\
    \ == 760\n@test double_the_difference([21,23,25,27,29]) == 815\n@test double_the_difference([22,24,26,28,30])\
    \ == 860\n@test double_the_difference([23,25,27,29,31]) == 915\n@test double_the_difference([24,26,28,30,32])\
    \ == 960\n@test double_the_difference([25,27,29,31,33]) == 1025\n@test double_the_difference([26,28,30,32,34])\
    \ == 1060\n@test double_the_difference([27,29,31,33,35]) == 1135\n@test double_the_difference([28,30,32,34,36])\
    \ == 1180\n@test double_the_difference([29,31,33,35,37]) == 1225\n@test double_the_difference([30,32,34,36,38])\
    \ == 1260\n@test double_the_difference([31,33,35,37,39]) == 13", "    sum = 0\n\
    \    for i in lst\n        if isodd(i)\n            sum += i\n        end\n  \
    \  end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,",
  "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the squares of the numbers in the list that\
    \ are odd. Ignore numbers that are negative or not integers.\nFor example, if\
    \ the input list is [1,2,3,4,5,6,7,8,9,10], the function should return 51.", " \
    \   \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert double_the_difference([1,2,3,4,5]) == 25\n@assert double_the_difference([1,2,-3,4,5])\
    \ == 25\n@assert double_the_difference([1,2,-3,4,-5]) == 25\n@assert double_the_difference([1,2,-3,-4,-5])\
    \ == 25\n</cell>\n<text>\nExercise 3\nWrite a function that returns the product\
    \ of the numbers in the list that are odd. Ignore numbers that are negative or\
    \ not integers.", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n\
    \            sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the squares of the\
    \ numbers in the list that are odd. Ignore numbers that are negative or not integers.",
  "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 != 0\n           \
    \ sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,",
  "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if isinteger(i)\n         \
    \   sum += i\n        else\n            sum += i*i\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list\
    \ of numbers, return the sum of squares of the numbers\n    in the list that are\
    \ odd. Ignore numbers that are negative or not integers.\n    \n             \
    \      \n    If the input list is empty, return 0.\n    \"\"\"", "    \n    sum\
    \ = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n       \
    \ end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i in lst\n \
    \       if i > 0\n            sum += i * i\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n                   \n    If\
    \ the input list is empty, return 0.\n    \"\"\"", "    sum = 0\n    for x in\
    \ lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given a list\
    \ of numbers, return the sum of squares of the numbers\n    in the list that are\
    \ odd. Ignore numbers that are negative or not integers.\n    \n             \
    \      \n    If the input list is empty, return 0.\n    \"\"\"", "    \n    sum\
    \ = 0\n    for i in lst\n        if i > 0\n            sum += i\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    \n  \
    \  sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n  \
    \      end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n           \
    \ sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n", "    sum = 0\n    for i in lst\n\
    \        if isinteger(i)\n            sum += i\n        else\n            sum\
    \ += i*i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n           \
    \ sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the sum of the squares of the numbers in the list that are odd.",
  "    \n    sum = 0\n    for i in lst\n        if i > 0\n            sum += i\n \
    \       end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n  \
    \      end\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n  \
    \      if x % 2 != 0\n            sum += x\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the list that are odd. Ignore numbers that are negative or\
    \ not integers.\nFor example, if the input list is [1,2,3,4,5,6,7,8,9,10], the\
    \ function should return 50.", "    \n    sum = 0\n    for x in lst\n        if\
    \ x % 2 == 1\n            sum += x\n        end\n    end\n    return sum\nend",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i\
    \ in lst\n        if isodd(i)\n            sum += i\n        end\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the list that are odd.", "    \n    sum = 0\n    for x in\
    \ lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list\
    \ of numbers, return the sum of squares of the numbers\n    in the list that are\
    \ odd. Ignore numbers that are negative or not integers.\n    \n             \
    \      \n    If the input list is empty, return 0.\n    \"\"\"", "    \n    sum\
    \ = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n       \
    \ end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Given a list of numbers, return the sum of squares of the numbers\n    in\
    \ the list that are odd. Ignore numbers that are negative or not integers.\n \
    \   \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if i > 0\n            sum +=\
    \ i * i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for x\
    \ in lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of numbers and\
    \ returns the sum of the squares of the numbers in the list that are odd. Ignore\
    \ numbers that are negative or not integers.", "    sum = 0\n    for x in lst\n\
    \        if x % 2 == 1\n            sum += x\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n                   \n    If\
    \ the input list is empty, return 0.\n    \"\"\"", "    sum = 0\n    for x in\
    \ lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the squares\
    \ of the numbers in the list that are odd.", "    \n    sum = 0\n    for x in\
    \ lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>", "    \n    sum = 0\n \
    \   for x in lst\n        if x % 2 != 0\n            sum += x\n        end\n \
    \   end\n    return sum\nend", "    \n    sum = 0\n    for i in lst\n        if\
    \ isodd(i)\n            sum += i\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list of numbers, return\
    \ the sum of squares of the numbers\n    in the list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    \n                   \n    If the input\
    \ list is empty, return 0.\n    \"\"\"", "    sum = 0\n    for i in lst\n    \
    \    if isinteger(i)\n            sum += i\n        else\n            sum += i*i\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Given a list of numbers, return the sum of squares of the numbers\n    in the\
    \ list that are odd. Ignore numbers that are negative or not integers.\n    \n\
    \                   \n    If the input list is empty, return 0.\n    \"\"\"",
  "    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n    \
    \    end\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n    \
    \    if x % 2 != 0\n            sum += x\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference", "    \n    sum = 0\n\
    \    for x in lst\n        if x % 2 == 1\n            sum += x\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert double_the_difference([1,2,3,4,5])\
    \ == 25\n@assert double_the_difference([1,2,-3,4,5]) == 25\n@assert double_the_difference([1,2,3,4,-5])\
    \ == 25\n@assert double_the_difference([1,2,3,4,5,6,7,8,9,10]) == 5040\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns the sum of the squares of the\
    \ numbers in the list that are odd.", "    \n    sum = 0\n    for i in lst\n \
    \       if isodd(i)\n            sum += i\n        end\n    end\n    return sum\n\
    end", "    \n    sum = 0\n    for i in lst\n        if i > 0\n            sum\
    \ += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if i > 0\n            sum +=\
    \ i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i\
    \ in lst\n        if isodd(i)\n            sum += i\n        end\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the list that are odd.", "    \n    sum = 0\n    for x in\
    \ lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n   \
    \ return sum\nend", "    sum = 0\n    for x in lst\n        if x % 2 != 0\n  \
    \          sum += x\n        end\n    end\n    return sum\nend", "    \n    sum\
    \ = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Given a list of numbers, return the sum of squares of the numbers\n    in the\
    \ list that are odd. Ignore numbers that are negative or not integers.\n    \n\
    \                   \n    If the input list is empty, return 0.\n    \"\"\"",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the sum of the squares of the numbers in the list that are odd.",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return a new list with the squares of \n\
    \    the numbers in the list that are odd. Ignore numbers that are negative \n\
    \    or not integers.\n    \n                   \n    If the input list is empty,\
    \ return an empty list.\n    \"\"\"", "    \n    sum = 0\n    for i in lst\n \
    \       if i > 0\n            sum += i\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n                   \n    If\
    \ the input list is empty, return 0.\n    \"\"\"", "    \n    sum = 0\n    for\
    \ i in lst\n        if isodd(i)\n            sum += i\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a\
    \ list of numbers, return the sum of squares of the numbers\n    in the list that\
    \ are odd. Ignore numbers that are negative or not integers.\n    \n         \
    \          \n    If the input list is empty, return 0.\n    \"\"\"", "    sum\
    \ = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n       \
    \ end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i in lst\n \
    \       if isodd(i)\n            sum += i\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the product of the\
    \ numbers in the list that are odd. Ignore numbers that are negative or not integers.",
  "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,",
  "    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n    \
    \    end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ double_the_difference([1,2,3]) == 9\n@assert double_the_difference([1,3,5])\
    \ == 10\n@assert double_the_difference([1,3,5,7,9]) == 25\n@assert double_the_difference([1,3,5,7,9,11,13,15])\
    \ == 50\n@assert double_the_difference([1,3,5,7,9,11,13,15,17,19]) == 100\n@assert\
    \ double_the_difference([1,3,5,7,9,11,13,15,17,19,23,29]) == 225\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the squares of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, sum([1,2,3]) should return 9. sum([1,3,5]) should return 10. sum([1,3,5,7,9])\
    \ should return 25. sum([1,3,5,7,9,11,13,15]) should return 50. sum([1,3,5,7,9,11,13,15,17,19])\
    \ should return 100. sum([1,3,5,7,9,11,13,15,17,19,23,29]) should return 225.",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum += x\n  \
    \      end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 != 0\n           \
    \ sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers and returns the sum of the squares of the numbers\
    \ in the vector that are odd. Ignore numbers that are negative or not integers.",
  "    \n    sum = 0\n    for i in lst\n        if i > 0\n            sum += i * i\n\
    \        end\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n\
    \        if x % 2 != 0\n            sum += x\n        end\n    end\n    return\
    \ sum\nend", "    \n    sum = 0\n    for i in lst\n        if i%2 != 0\n     \
    \       sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in lst\n        if i%2 != 0\n            sum += i\n    \
    \    end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for i in lst\n        if i%2==1\n            sum += i\n\
    \        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i in\
    \ lst\n        if i%2 == 1\n            sum += i\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a list of numbers, return\
    \ the sum of squares of the numbers\n    in the list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    \n                   \n    If the input\
    \ list is empty, return 0.\n    \"\"\"", "    \n    sum = 0\n    for x in lst\n\
    \        if x % 2 != 0\n            sum += x\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\n@time double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,",
  "    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum += x\n  \
    \      end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i\
    \ in lst\n        if isodd(i)\n            sum += i * i\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\n@time double_the_difference(lst)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the list that are odd.", "    sum = 0\n    for x in lst\n\
    \        if x % 2 == 1\n            sum += x\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n                   \n    If\
    \ the input list is empty, return 0.\n    \"\"\"", "    \n    sum = 0\n    for\
    \ x in lst\n        if x % 2 == 1\n            sum += x\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>", "    \n    sum = 0\n\
    \    for i in lst\n        if isodd(i)\n            sum += i\n        end\n  \
    \  end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    \n    sum\
    \ = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n       \
    \ end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of numbers and\
    \ returns the product of the numbers in the list that are odd. Ignore numbers\
    \ that are negative or not integers.", "    \n    sum = 0\n    for x in lst\n\
    \        if x % 2 == 1\n            sum += x\n        end\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for x in lst\n        if x % 2 != 0\n         \
    \   sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for i in lst\n        if i%2==1\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the squares of the numbers in the list that\
    \ are odd. Ignore numbers that are negative or not integers.\nFor example, sum([1,2,3,4,5,6,7,8,9,10])\
    \ should return 50.", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n\
    \            sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    sum = 0\n    for i in lst\n        if i%2 !=\
    \ 0\n            sum += i\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a list of numbers, return the sum\
    \ of squares of the numbers\n    in the list that are odd. Ignore numbers that\
    \ are negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \"\"\"", "    sum = 0\n    for x in lst\n        if\
    \ x % 2 != 0\n            sum += x\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>", "    \n    sum = 0\n    for x in lst\n  \
    \      if x % 2 != 0\n            sum += x\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the list that are odd. Ignore numbers that are negative or\
    \ not integers.", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n\
    \            sum += x\n        end\n    end\n    return sum\nend", "    \n   \
    \ sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i * i\n \
    \       end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum\
    \ += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @time double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in the\
    \ list that are odd. Ignore numbers that are negative or not integers.", "   \
    \ \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for i in lst\n        if isinteger(i)\n            sum\
    \ += i\n        else\n            sum += i*i\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.4>", "    sum = 0\n    for x in lst\n\
    \        if x % 2 == 1\n            sum += x\n        end\n    end\n    return\
    \ sum\nend", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n   \
    \         sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    sum = 0\n    for i in lst\n        if isinteger(i)\n\
    \            sum += i\n        else\n            sum += i*i\n        end\n   \
    \ end\n    return sum\nend", "    \n    sum = 0\n    for i in lst\n        if\
    \ i%2==1\n            sum += i\n        end\n    end\n    return sum\nend", " \
    \   sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n \
    \       end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum\
    \ += i\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for\
    \ i in lst\n        if i > 0\n            sum += i\n        end\n    end\n   \
    \ return sum\nend", "    \n    sum = 0\n    for i in lst\n        if i%2 == 1\n\
    \            sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the squares of the\
    \ numbers in the list that are odd.", "    sum = 0\n    for x in lst\n       \
    \ if x % 2 == 1\n            sum += x\n        end\n    end\n    return sum\n\
    end", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n          \
    \  sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n           \
    \ sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5])\n</cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the product of the\
    \ numbers in the list that are odd.", "    \n    sum = 0\n    for i in lst\n \
    \       if isodd(i)\n            sum += i\n        end\n    end\n    return sum\n\
    end", "    \n    sum = 0\n    for i in lst\n        if i%2 == 1\n            sum\
    \ += i\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for\
    \ i in lst\n        if isodd(i)\n            sum += i\n        end\n    end\n\
    \    return sum\nend", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n\
    \            sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the product of the numbers in the list\
    \ that are odd.", "    sum = 0\n    for i in lst\n        if isodd(i)\n      \
    \      sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for i in lst\n        if i%2 != 0\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the product of all the numbers in a given list.", " \
    \   sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n \
    \       end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return 60.\nWrite\
    \ a function that takes a list of numbers and returns the product of the numbers\
    \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
    For example, given [1,2,3,4,5,6,7,8,9], the function should return ", "    \n\
    \    sum = 0\n    for i in lst\n        if isinteger(i)\n            sum += i\n\
    \        else\n            sum += i*i\n        end\n    end\n    return sum\n\
    end", "    \n    sum = 0\n    for i in lst\n        if i%2 == 1\n            sum\
    \ += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i in\
    \ lst\n        if isinteger(i)\n            sum += i\n        else\n         \
    \   sum += i*i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for i in lst\n        if isinteger(i)\n            sum\
    \ += i\n        else\n            sum += i*i\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>", "    \n    sum = 0\n    for i\
    \ in lst\n        if i%2 != 0\n            sum += i\n        end\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,",
  "    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n  \
    \      end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum += x\n  \
    \      end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for i in lst\n        if i%2 == 1\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for i in lst\n        if i > 0\n            sum += i * i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>", "   \
    \ \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if isinteger(i)\n         \
    \   sum += i\n        else\n            sum += i*i\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the list that are odd.", "    \n    sum = 0\n    for i in\
    \ lst\n        if isodd(i)\n            sum += i\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"a\"])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"a\",5])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"a\",5,6])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"a\",5,6,7])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"a\",5,6,7,8])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"a\",5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"a\",5,6,7,8,9,\"\
    a\"])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"\
    a\",5,6,7,8,9,\"a\",10])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"\
    a\",5,6,7,8,9,\"a\",10,11])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"\
    a\",5,6,7,8,9,\"a\",10,11,\"a\"])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"\
    a\",5,6,7,8,9,\"a\",10,11,\"a\",12])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"\
    a\",5,6,7,8,9,\"a\",10,11,\"a\",12,13])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,-3,4.0,\"a\",5,6,7,8,9,\"a\",10,11,\"a\",12,13,\"a\"\
    ])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4.0,\"a\"\
    ,5,6,7,8,9,\"a\",10,11,\"a\",12,13,\"a\",14])\n</cell", "    \n    sum = 0\n \
    \   for i in lst\n        if isodd(i)\n            sum += i\n        end\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ a list of numbers, return the sum of squares of the numbers\n    in the list\
    \ that are odd. Ignore numbers that are negative or not integers.\n    \n    \
    \               \n    If the input list is empty, return 0.\n    \"\"\"", "  \
    \  \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum\
    \ += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the squares of the numbers in the list that are odd.\
    \ Ignore numbers that are negative or not integers.\nFor example, if the input\
    \ list is [1,2,3,4,5,6], the output should be 310.", "    \n    sum = 0\n    for\
    \ i in lst\n        if isodd(i)\n            sum += i\n        end\n    end\n\
    \    return sum\nend", "    \n    sum = 0\n    for x in lst\n        if x % 2\
    \ == 1\n            sum += x\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5])\n</cell>\n<code\
    \ language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5,6,7])\n</cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,",
  "    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n    \
    \    end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i\
    \ in lst\n        if isodd(i)\n            sum += i\n        end\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>", "    \n    sum = 0\n\
    \    for x in lst\n        if x % 2 == 1\n            sum += x\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n  \
    \  Given a list of numbers, return the sum of squares of the numbers\n    in the\
    \ list that are odd. Ignore numbers that are negative or not integers.\n    \n\
    \                   \n    If the input list is empty, return 0.\n    \"\"\"",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11])\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12])\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13])\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n</cell>\n<code language=julia-1.0>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n</cell>\n<code\
    \ language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,", " \
    \   sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n \
    \       end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum\
    \ += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the product of the numbers in the list that are odd.\n\
    Ignore numbers that are negative or not integers.\nIf the input list is empty,\
    \ return 1.", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n  \
    \          sum += x\n        end\n    end\n    return sum\nend", "    \n    sum\
    \ = 0\n    for x in lst\n        if x % 2 == 1\n            sum += x\n       \
    \ end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of integers\
    \ in the list that are divisible by 3.\n    \n    \n    If the input list is empty,\
    \ return 0.\n    \"\"\"", "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n\
    \            sum += i\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.0>\n\"\"\"\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \"\"\"", "    \n    sum = 0\n    for i in lst\n   \
    \     if isodd(i)\n            sum += i\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,4])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,-3,\"a\"])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,-3,\"a\",\"b\"])\n</cell>\n\
    <code language=julia-1.5>\ndouble_the_difference([1,2,-3,\"a\",\"b\",\"c\"])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,\"a\",\"b\"\
    ,\"c\",\"d\"])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,\"\
    a\",\"b\",\"c\",\"d\",\"e\"])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\"])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\"])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,-3,\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"\
    ])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,\"a\",\"\
    b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\"])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,-3,\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"\
    ,\"i\",\"j\"])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\"])\n</cell>\n<code\
    \ language=julia-1.5>\ndouble_the_difference([1,2,-3,\"a\",\"b\",\"c\",\"d\",\"\
    e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\"])\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,-3,\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"\
    ,\"i\",\"j\",\"k\",\"l\",\"m\"])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,-3,\"",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n    for i\
    \ in lst\n        if isinteger(i)\n            sum += i\n        else\n      \
    \      sum += i*i\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n\
    \        if x % 2 != 0\n            sum += x\n        end\n    end\n    return\
    \ sum\nend", "    \n    sum = 0\n    for x in lst\n        if x % 2 != 0\n   \
    \         sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.4>\ndouble_the_difference([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 != 0\n           \
    \ sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,",
  "    \n    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n           \
    \ sum += x\n        end\n    end\n    return sum\nend", "    \n    sum = 0\n \
    \   for x in lst\n        if x % 2 == 1\n            sum += x\n        end\n \
    \   end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the squares\
    \ of the numbers in the list that are odd. Ignore numbers that are negative or\
    \ not integers.", "    \n    sum = 0\n    for i in lst\n        if i%2==1\n  \
    \          sum += i\n        end\n    end\n    return sum\nend", "    \n    sum\
    \ = 0\n    for x in lst\n        if x % 2 != 0\n            sum += x\n       \
    \ end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.0>\ndouble_the_difference([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the square root of a number. \nThe function should take one argument,\
    \ x, and return the square root of x.\nThe function should raise an error if the\
    \ argument is negative.\nThe function should raise an error if the argument is\
    \ not an integer.\nThe function should raise an error if the argument is zero.\n\
    The function should raise an error if the argument is NaN.\nThe function should\
    \ raise an error if the argument is infinite.\nThe function should raise an error\
    \ if the argument is infinity.\nThe function should raise an error if the argument\
    \ is NaN.\nThe function should raise an error if the argument is infinite.\nThe\
    \ function should raise an error if the argument is infinity.\nThe function should\
    \ raise an error if the argument is NaN.\nThe function should raise an error if\
    \ the argument is infinite.\nThe function should raise an error if the argument\
    \ is infinity.\nThe function should raise an error if the argument is NaN.\nThe\
    \ function should raise an error if the argument is infinite.\nThe function should\
    \ raise an error if the argument is infinity.\nThe function should raise an error\
    \ if the argument is NaN.\nThe function should raise an error if the argument\
    \ is infinite.\nThe function should raise an error if the argument is infinity.\n\
    The function should raise an error if the argument is NaN.\nThe function should\
    \ raise an error if the argument is infinite.\nThe function should raise an error\
    \ if the argument is infinity.\nThe function should raise an error if the argument\
    \ is NaN.\nThe function should raise an error if the argument is infinite.\nThe\
    \ function should raise an error if the argument is infinity.\nThe function should\
    \ raise an error if the argument is NaN.\nThe function should raise an error if\
    \ the argument is infinite.\nThe function should raise an error if the argument\
    \ is infinity.\nThe function should raise an error if the argument is NaN.\nThe\
    \ function should raise an error if the argument is infinite.\nThe function should\
    \ raise an error if the argument is infinity.\nThe function should raise an error\
    \ if the argument is NaN.\nThe function should raise an error if the argument\
    \ is infinite.\nThe function should raise an error if the argument is infinity.\n\
    The function should raise an error if the argument is NaN.\nThe function should\
    \ raise an error if the argument is infinite.\nThe function should raise an error\
    \ if the argument is infinity.\nThe function should raise an error if the argument\
    \ is NaN.\nThe function should raise an error if the argument is infinite.\nThe\
    \ function should raise an error if the argument is infinity.\nThe function should\
    \ raise an error if the argument is NaN.\nThe function should raise an error if\
    \ the argument is infinite.\nThe function should raise an error if the argument\
    \ is ", "    \n    sum = 0\n    for x in lst\n        if x % 2 == 1\n        \
    \    sum += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in lst\n        if isodd(i)\n            sum += i\n    \
    \    end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    Given a list of numbers, return the sum of squares of the numbers\n\
    \    in the list that are odd. Ignore numbers that are negative or not integers.\n\
    \    \n                   \n    If the input list is empty, return 0.\n    \"\"\
    \"", "    \n    sum = 0\n    for i in lst\n        if i%2 == 1\n            sum\
    \ += i\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for x in lst\n        if x % 2 != 0\n            sum +=\
    \ x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    double_the_difference([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the product of the numbers in the list that are odd."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_16_count_distinct_characters
language: ts
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n// >>>\
  \ count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string:\
  \ string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
  \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
  abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
  Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
completions: ["    return string.toLowerCase().split('').filter((value, index, self)\
    \ => {\n        return self.indexOf(value) === index;\n    }).length;\n}\n", " \
    \   return Array.from(new Set(string.toLowerCase())).length;\n}\n", "    return\
    \ new Set(string.toLowerCase()).size;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let result\
    \ = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
    \            result++;\n        }\n    }\n    return result;\n}\n", "    const\
    \ lowerCaseString = string.toLowerCase();\n    const distinctCharacters = new\
    \ Set(lowerCaseString);\n    return distinctCharacters.size;\n}\n", "    let count\
    \ = 0;\n    let unique = \"\";\n    for (let i = 0; i < string.length; i++) {\n\
    \        if (unique.indexOf(string[i].toLowerCase()) == -1) {\n            unique\
    \ += string[i].toLowerCase();\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "    let distinct_characters: string[] = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let count\
    \ = 0;\n    let chars = string.toLowerCase().split('');\n    let uniqueChars =\
    \ chars.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n   \
    \ return uniqueChars.length;\n}\n", "    let set = new Set(string.toLowerCase());\n\
    \    return set.size;\n}\n", "    let count = 0;\n    let characters: string[]\
    \ = string.split('');\n    let uniqueCharacters: string[] = [];\n    characters.forEach(char\
    \ => {\n        if (!uniqueCharacters.includes(char.toLowerCase())) {\n      \
    \      uniqueCharacters.push(char.toLowerCase());\n            count++;\n    \
    \    }\n    });\n    return count;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let result: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let count: number = 0;\n    let char_set: Set<string> = new Set<string>();\n\
    \    for (let char of string) {\n        char_set.add(char.toLowerCase());\n \
    \   }\n    return char_set.size;\n}\n", "    let chars = string.toLowerCase().split('');\n\
    \    let distinct = chars.filter((char, index) => {\n        return chars.indexOf(char)\
    \ === index;\n    });\n    return distinct.length;\n}\n", "    let count = 0;\n\
    \    let characters = {};\n    for (let i = 0; i < string.length; i++) {\n   \
    \     if (!characters[string[i].toLowerCase()]) {\n            characters[string[i].toLowerCase()]\
    \ = 1;\n            count++;\n        }\n    }\n    return count;\n}\n", "   \
    \ return new Set(string.toLowerCase()).size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase()).size;\n}\n", "    let result = 0;\n    let char_set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let result\
    \ = 0;\n    let characters = string.toLowerCase().split('');\n    let uniqueCharacters\
    \ = new Set(characters);\n    result = uniqueCharacters.size;\n    return result;\n\
    }\n", "    let result = 0;\n    let unique = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (unique.indexOf(string[i].toLowerCase()) == -1) {\n     \
    \       unique.push(string[i].toLowerCase());\n            result++;\n       \
    \ }\n    }\n    return result;\n}\n", "    let count = 0;\n    let characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (!characters.includes(string[i].toLowerCase()))\
    \ {\n            characters.push(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  let distinct_characters = 0;\n\
    \  let characters = string.toLowerCase().split(\"\");\n  let unique_characters\
    \ = new Set(characters);\n  distinct_characters = unique_characters.size;\n  return\
    \ distinct_characters;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0;\
    \ i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  const characters = string.toLowerCase().split('');\n\
    \  const distinctCharacters = characters.filter((character, index) => {\n    return\
    \ characters.indexOf(character) === index;\n  });\n  return distinctCharacters.length;\n\
    }\n", "    return new Set(string.toLowerCase()).size;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    return new Set(string.toLowerCase()).size;\n}\n", "    const lowerCaseString\
    \ = string.toLowerCase();\n    const distinctCharacters = new Set(lowerCaseString);\n\
    \    return distinctCharacters.size;\n}\n", "    let distinctCharacters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinctCharacters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinctCharacters.length;\n}\n", "    let result:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase()).size;\n}\n", "  let count: number = 0;\n  let char_set:\
    \ Set<string> = new Set();\n  for (let char of string) {\n    char_set.add(char.toLowerCase());\n\
    \  }\n  return char_set.size;\n}\n", "    let charSet = new Set();\n    for (let\
    \ i = 0; i < string.length; i++) {\n        charSet.add(string[i].toLowerCase());\n\
    \    }\n    return charSet.size;\n}\n", "  let result = 0;\n  let charSet = new\
    \ Set();\n  for (let i = 0; i < string.length; i++) {\n    if (!charSet.has(string[i].toLowerCase()))\
    \ {\n      charSet.add(string[i].toLowerCase());\n      result++;\n    }\n  }\n\
    \  return result;\n}\n", "    let result = 0;\n    let char_set = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            result++;\n\
    \        }\n    }\n    return result;\n}\n", "    let distinctCharacters = new\
    \ Set();\n    for (let i = 0; i < string.length; i++) {\n        distinctCharacters.add(string[i].toLowerCase());\n\
    \    }\n    return distinctCharacters.size;\n}\n", "    let set = new Set();\n\
    \    for (let char of string) {\n        set.add(char.toLowerCase());\n    }\n\
    \    return set.size;\n}\n", "    let result: string[] = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let result = 0;\n    let chars = string.toLowerCase().split('');\n\
    \    let unique = chars.filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; });\n    result = unique.length;\n    return result;\n}\n", "    let\
    \ result = 0;\n    let charMap = new Map();\n    for (let char of string) {\n\
    \        if (!charMap.has(char.toLowerCase())) {\n            charMap.set(char.toLowerCase(),\
    \ 1);\n            result++;\n        }\n    }\n    return result;\n}\n", "  \
    \  let distinct_characters = new Set();\n    for (let character of string) {\n\
    \        distinct_characters.add(character.toLowerCase());\n    }\n    return\
    \ distinct_characters.size;\n}\n", "    let distinct_chars = new Set();\n    for\
    \ (let char of string) {\n        distinct_chars.add(char.toLowerCase());\n  \
    \  }\n    return distinct_chars.size;\n}\n", "    let chars: string[] = string.split('');\n\
    \    let distinctChars: string[] = [];\n    for (let i = 0; i < chars.length;\
    \ i++) {\n        if (distinctChars.indexOf(chars[i].toLowerCase()) === -1) {\n\
    \            distinctChars.push(chars[i].toLowerCase());\n        }\n    }\n \
    \   return distinctChars.length;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let set = new Set(string.toLowerCase());\n    return set.size;\n}\n",
  "    let count = 0;\n    let charMap = {};\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!charMap[string[i].toLowerCase()]) {\n            charMap[string[i].toLowerCase()]\
    \ = true;\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \   let set = new Set();\n    for (let i = 0; i < string.length; i++) {\n    \
    \    set.add(string[i].toLowerCase());\n    }\n    return set.size;\n}\n", " \
    \   let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase()).size;\n}\n", "    let count = 0;\n    let unique =\
    \ \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (unique.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            unique += string[i].toLowerCase();\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "  return [...new Set(string.toLowerCase())].length;\n}\n", "    let count\
    \ = 0;\n    let char_set = new Set();\n    for (let char of string) {\n      \
    \  char_set.add(char.toLowerCase());\n    }\n    return char_set.size;\n}\n",
  "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let result\
    \ = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
    \            result++;\n        }\n    }\n    return result;\n}\n", "    return\
    \ string.toLowerCase().split('').filter((char, index, arr) => arr.indexOf(char)\
    \ === index).length;\n}\n", "    let distinct_characters = new Set();\n    for\
    \ (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let result:\
    \ number = 0;\n    let char_set: Set<string> = new Set();\n    for (let i = 0;\
    \ i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let result:\
    \ string[] = [];\n    for (let i: number = 0; i < string.length; i++) {\n    \
    \    if (result.indexOf(string[i].toLowerCase()) === -1) {\n            result.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return result.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "  let count =\
    \ 0;\n  let seen = {};\n  for (let i = 0; i < string.length; i++) {\n    if (!seen[string[i].toLowerCase()])\
    \ {\n      count++;\n      seen[string[i].toLowerCase()] = true;\n    }\n  }\n\
    \  return count;\n}\n", "    let result: string[] = [];\n    for (let i = 0; i\
    \ < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let result = 0;\n    let chars = string.toLowerCase().split('');\n\
    \    let unique = chars.filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; });\n    result = unique.length;\n    return result;\n}\n", "    let\
    \ count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let count\
    \ = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    return\
    \ string.split('').filter((v, i, a) => a.indexOf(v) === i).length;\n}\n", "  \
    \  let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "  let result = 0;\n  let char_set\
    \ = new Set();\n  for (let i = 0; i < string.length; i++) {\n    char_set.add(string[i].toLowerCase());\n\
    \  }\n  result = char_set.size;\n  return result;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let count = 0;\n    let seen = {};\n    for (let i = 0; i < string.length;\
    \ i++) {\n        let char = string[i].toLowerCase();\n        if (!seen[char])\
    \ {\n            seen[char] = true;\n            count++;\n        }\n    }\n\
    \    return count;\n}\n", "    let count: number = 0;\n    let unique: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (unique.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            unique.push(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let distinct_characters = new\
    \ Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_chars:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_chars.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_chars.push(string[i].toLowerCase());\n     \
    \   }\n    }\n    return distinct_chars.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "  return [...new\
    \ Set(string.toLowerCase())].length;\n}\n", "    let unique_chars = new Set();\n\
    \    for (let char of string) {\n        unique_chars.add(char.toLowerCase());\n\
    \    }\n    return unique_chars.size;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let set\
    \ = new Set(string.toLowerCase());\n    return set.size;\n}\n", "    let count\
    \ = 0;\n    let unique = \"\";\n    for (let i = 0; i < string.length; i++) {\n\
    \        if (unique.indexOf(string[i].toLowerCase()) === -1) {\n            unique\
    \ += string[i].toLowerCase();\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "    let result: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (result.indexOf(string[i].toLowerCase()) === -1) {\n    \
    \        result.push(string[i].toLowerCase());\n        }\n    }\n    return result.length;\n\
    }\n", "    let uniqueChars: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (uniqueChars.indexOf(string[i].toLowerCase()) === -1) {\n\
    \            uniqueChars.push(string[i].toLowerCase());\n        }\n    }\n  \
    \  return uniqueChars.length;\n}\n", "    let count = 0;\n    let distinct = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (distinct.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct.push(string[i].toLowerCase());\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n", "    const unique = new\
    \ Set(string.toLowerCase());\n    return unique.size;\n}\n", "    let char_set:\
    \ Set<string> = new Set();\n    for (let i = 0; i < string.length; i++) {\n  \
    \      char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n", "    let count = 0;\n    let chars = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (chars.indexOf(string[i].toLowerCase()) === -1) {\n     \
    \       chars.push(string[i].toLowerCase());\n            count++;\n        }\n\
    \    }\n    return count;\n}\n", "  let distinct_characters: string[] = [];\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (!distinct_characters.includes(string[i].toLowerCase()))\
    \ {\n      distinct_characters.push(string[i].toLowerCase());\n    }\n  }\n  return\
    \ distinct_characters.length;\n}\n", "    let count: number = 0;\n    let distinct:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct.push(string[i].toLowerCase());\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n", "    let count = 0;\n \
    \   let characters = string.toLowerCase().split('');\n    let uniqueCharacters\
    \ = new Set(characters);\n    count = uniqueCharacters.size;\n    return count;\n\
    }\n", "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    let count = 0;\n    let char_set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let count = 0;\n    let characters\
    \ = string.toLowerCase().split('');\n    let uniqueCharacters = new Set(characters);\n\
    \    count = uniqueCharacters.size;\n    return count;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let character of string) {\n        distinct_characters.add(character.toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let result = 0;\n   \
    \ let characters = string.toLowerCase().split('');\n    let uniqueCharacters =\
    \ new Set(characters);\n    result = uniqueCharacters.size;\n    return result;\n\
    }\n", "    let count: number = 0;\n    let char_set: Set<string> = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i]))\
    \ {\n            char_set.add(string[i]);\n            count++;\n        }\n \
    \   }\n    return count;\n}\n", "    let distinct_characters: string[] = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let count\
    \ = 0;\n    let chars = string.toLowerCase().split('');\n    let uniqueChars =\
    \ chars.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n   \
    \ count = uniqueChars.length;\n    return count;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let unique:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (unique.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            unique.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return unique.length;\n}\n", "  let result = 0;\n  let charSet = new\
    \ Set();\n  for (let i = 0; i < string.length; i++) {\n    charSet.add(string[i].toLowerCase());\n\
    \  }\n  result = charSet.size;\n  return result;\n}\n", "    let count = 0;\n\
    \    let characters = new Set();\n    for (let char of string) {\n        characters.add(char.toLowerCase());\n\
    \    }\n    return characters.size;\n}\n", "    let count = 0;\n    let chars\
    \ = string.toLowerCase().split('');\n    let unique = [...new Set(chars)];\n \
    \   return unique.length;\n}\n", "    let set = new Set(string.toLowerCase());\n\
    \    return set.size;\n}\n", "    let distinct_characters: string[] = [];\n  \
    \  for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        set.add(string[i].toLowerCase());\n\
    \    }\n    return set.size;\n}\n", "    let result: string[] = [];\n    for (let\
    \ i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let distinct_characters = [];\n  \
    \  for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let count = 0;\n    let\
    \ distinct = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct.push(string[i].toLowerCase());\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n", "    let result = 0;\n\
    \    let charSet = new Set();\n    for (let i = 0; i < string.length; i++) {\n\
    \        charSet.add(string[i].toLowerCase());\n    }\n    result = charSet.size;\n\
    \    return result;\n}\n", "    let distinct_characters: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let result\
    \ = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.indexOf(string[i])\
    \ === i) {\n            result++;\n        }\n    }\n    return result;\n}\n",
  "    return new Set(string.toLowerCase()).size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set(string.toLowerCase());\n    return distinct_characters.size;\n}\n",
  "    let count = 0;\n    let chars = string.toLowerCase().split('');\n    for (let\
    \ i = 0; i < chars.length; i++) {\n        if (chars.indexOf(chars[i]) === i)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n", "    let\
    \ charSet = new Set();\n    for (let i = 0; i < string.length; i++) {\n      \
    \  charSet.add(string[i].toLowerCase());\n    }\n    return charSet.size;\n}\n",
  "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    return string.length;\n}\n",
  "    let count = 0;\n    let unique = \"\";\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (unique.indexOf(string[i].toLowerCase()) === -1) {\n    \
    \        unique += string[i].toLowerCase();\n            count++;\n        }\n\
    \    }\n    return count;\n}\n", "    let count = 0;\n    let char_set = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let count = 0;\n    let array\
    \ = string.split(\"\");\n    let unique = array.filter(function (item, i, ar)\
    \ {\n        return ar.indexOf(item) === i;\n    });\n    return unique.length;\n\
    }\n", "    return new Set(string.toLowerCase()).size;\n}\n", "    let distinctCharacters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinctCharacters.add(string[i].toLowerCase());\n\
    \    }\n    return distinctCharacters.size;\n}\n", "    let count = 0;\n    let\
    \ charSet = new Set();\n    for (let i = 0; i < string.length; i++) {\n      \
    \  charSet.add(string[i].toLowerCase());\n    }\n    return charSet.size;\n}\n",
  "    return new Set(string.toLowerCase()).size;\n}\n", "    let result: string[]\
    \ = [];\n    for (let i: number = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let char of string) {\n        distinct_characters.add(char.toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let result: number = 0;\n    let charSet: Set<string> = new Set<string>();\n\
    \    for (let i = 0; i < string.length; i++) {\n        charSet.add(string[i].toLowerCase());\n\
    \    }\n    result = charSet.size;\n    return result;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "  const lowerString\
    \ = string.toLowerCase();\n  const unique = new Set(lowerString);\n  return unique.size;\n\
    }\n", "    return new Set(string.toLowerCase()).size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase()).size;\n}\n", "    let chars: string[] = string.split('');\n\
    \    let distinctChars: string[] = [];\n    chars.forEach(char => {\n        if\
    \ (distinctChars.indexOf(char.toLowerCase()) === -1) {\n            distinctChars.push(char.toLowerCase());\n\
    \        }\n    });\n    return distinctChars.length;\n}\n", "    let count =\
    \ 0;\n    let chars = string.toLowerCase().split('');\n    let unique = chars.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n",
  "    let distinct_characters = [];\n    for (let i = 0; i < string.length; i++)\
    \ {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
    \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
    \    }\n    return distinct_characters.length;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let count = 0;\n    let characters: string[] = [];\n    for (let i\
    \ = 0; i < string.length; i++) {\n        if (!characters.includes(string[i].toLowerCase()))\
    \ {\n            characters.push(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    return string.length;\n}\n",
  "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    const charSet = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        charSet.add(string[i].toLowerCase());\n\
    \    }\n    return charSet.size;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => {\n        return self.indexOf(value) === index;\n    }).length;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "  let count = 0;\n\
    \  let characters: string[] = [];\n  for (let i = 0; i < string.length; i++) {\n\
    \    if (!characters.includes(string[i].toLowerCase())) {\n      characters.push(string[i].toLowerCase());\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "    let charSet = new Set();\n\
    \    for (let char of string) {\n        charSet.add(char.toLowerCase());\n  \
    \  }\n    return charSet.size;\n}\n", "    let distinct_characters: string[] =\
    \ [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let result:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    const lowerCaseString\
    \ = string.toLowerCase();\n    const distinctCharacters = new Set(lowerCaseString);\n\
    \    return distinctCharacters.size;\n}\n", "    let distinct_characters = new\
    \ Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let count = 0;\n    let\
    \ unique = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (unique.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            unique += string[i].toLowerCase();\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        let character\
    \ = string[i];\n        if (distinct_characters.indexOf(character) === -1) {\n\
    \            distinct_characters.push(character);\n        }\n    }\n    return\
    \ distinct_characters.length;\n}\n", "    let uniqueChars = new Set();\n    for\
    \ (let i = 0; i < string.length; i++) {\n        uniqueChars.add(string[i].toLowerCase());\n\
    \    }\n    return uniqueChars.size;\n}\n", "  let distinct_characters: string[]\
    \ = [];\n  for (let i = 0; i < string.length; i++) {\n    if (!distinct_characters.includes(string[i].toLowerCase()))\
    \ {\n      distinct_characters.push(string[i].toLowerCase());\n    }\n  }\n  return\
    \ distinct_characters.length;\n}\n", "    let result: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let unique_chars:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (unique_chars.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            unique_chars.push(string[i].toLowerCase());\n       \
    \ }\n    }\n    return unique_chars.length;\n}\n", "    let count = 0;\n    let\
    \ chars = string.toLowerCase().split('');\n    let unique = [...new Set(chars)];\n\
    \    return unique.length;\n}\n", "    let count = 0;\n    let char_set = new\
    \ Set();\n    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let unique:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (unique.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            unique.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return unique.length;\n}\n", "    let set = new Set();\n    for (let\
    \ i = 0; i < string.length; i++) {\n        set.add(string[i].toLowerCase());\n\
    \    }\n    return set.size;\n}\n", "    let distinct_characters: string[] = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let count:\
    \ number = 0;\n    let char_set: Set<string> = new Set<string>();\n    for (let\
    \ i: number = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    return char_set.size;\n}\n", "    let charSet = new Set<string>();\n\
    \    for (let i = 0; i < string.length; i++) {\n        charSet.add(string[i].toLowerCase());\n\
    \    }\n    return charSet.size;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let result:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let distinct_chars = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        distinct_chars.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_chars.size;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let char_set:\
    \ Set<string> = new Set();\n    for (let i = 0; i < string.length; i++) {\n  \
    \      char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "  let count = 0;\n  let char_set\
    \ = new Set();\n  for (let i = 0; i < string.length; i++) {\n    if (!char_set.has(string[i].toLowerCase()))\
    \ {\n      char_set.add(string[i].toLowerCase());\n      count++;\n    }\n  }\n\
    \  return count;\n}\n", "    let count = 0;\n    let char_set = new Set();\n \
    \   for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let result: number = 0;\n   \
    \ let charSet: Set<string> = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        charSet.add(string[i].toLowerCase());\n    }\n    result = charSet.size;\n\
    \    return result;\n}\n", "  let distinct_characters: string[] = [];\n  for (let\
    \ i = 0; i < string.length; i++) {\n    if (!distinct_characters.includes(string[i].toLowerCase()))\
    \ {\n      distinct_characters.push(string[i].toLowerCase());\n    }\n  }\n  return\
    \ distinct_characters.length;\n}\n", "    let distinct_chars: string[] = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        let char = string[i];\n\
    \        if (distinct_chars.indexOf(char) === -1) {\n            distinct_chars.push(char);\n\
    \        }\n    }\n    return distinct_chars.length;\n}\n", "    let unique: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (unique.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            unique.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return unique.length;\n}\n", "    let distinct_characters = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

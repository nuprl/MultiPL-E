name: HumanEval_105_by_length
language: ts
prompt: "//Given an array of integers, sort the integers that are between 1 and 9\
  \ inclusive,\n// reverse the resulting array, and then replace each digit by its\
  \ corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
  Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length([2, 1,\
  \ 1, 4, 5, 8, 2, 3])\n// [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"\
  Two\", \"One\", \"One\"]\n// If the array is empty, return an empty array:\n// >>>\
  \ by_length([])\n// []\n// If the array has any strange number ignore it:\n// >>>\
  \ by_length([1, -1, 55])\n// [\"One\"]\nfunction by_length(arr: number[]): string[]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = by_length;\n  assert.deepEqual(candidate([2, 1, 1,\
  \ 4, 5, 8, 2, 3]),[\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"\
  One\", \"One\"]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ -1, 55]),[\"One\"]);\n  assert.deepEqual(candidate([1, -1, 3, 2]),[\"Three\",\
  \ \"Two\", \"One\"]);\n  assert.deepEqual(candidate([9, 4, 8]),[\"Nine\", \"Eight\"\
  , \"Four\"]);\n}\n\ntest();"
completions: ["    let result: string[] = [];\n    let sorted: number[] = arr.sort((a,\
    \ b) => a - b);\n    for (let i = 0; i < sorted.length; i++) {\n        if (sorted[i]\
    \ > 0 && sorted[i] < 10) {\n            result.push(numToWord(sorted[i]));\n \
    \       }\n    }\n    return result.reverse();\n}\n", "  const sorted = arr.filter(num\
    \ => num >= 1 && num <= 9).sort((a, b) => a - b);\n  const reversed = sorted.reverse();\n\
    \  const result = reversed.map(num => {\n    switch (num) {\n      case 1:\n \
    \       return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  });\n  return result;\n}\n",
  "  const nums = arr.filter(n => n >= 1 && n <= 9).sort((a, b) => b - a);\n  const\
    \ names = nums.map(n => {\n    switch (n) {\n      case 1:\n        return \"\
    One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  });\n  return names;\n}\n", "    let\
    \ result: string[] = [];\n    let sorted: number[] = arr.sort((a, b) => a - b);\n\
    \    for (let i = 0; i < sorted.length; i++) {\n        if (sorted[i] >= 1 &&\
    \ sorted[i] <= 9) {\n            switch (sorted[i]) {\n                case 1:\n\
    \                    result.push(\"One\");\n                    break;\n     \
    \           case 2:\n                    result.push(\"Two\");\n             \
    \       break;\n                case 3:\n                    result.push(\"Three\"\
    );\n                    break;\n                case 4:\n                    result.push(\"\
    Four\");\n                    break;\n                case 5:\n              \
    \      result.push(\"Five\");\n                    break;\n                case\
    \ 6:\n                    result.push(\"Six\");\n                    break;\n\
    \                case 7:\n                    result.push(\"Seven\");\n      \
    \              break;\n                case 8:\n                    result.push(\"\
    Eight\");\n                    break;\n                case 9:\n             \
    \       result.push(\"Nine\");\n                    break;\n            }\n  \
    \      }\n    }\n    return result.reverse();\n}\n", "    return arr.filter(x\
    \ => x >= 1 && x <= 9).sort().reverse().map(x => {\n        switch (x) {\n   \
    \         case 1: return \"One\";\n            case 2: return \"Two\";\n     \
    \       case 3: return \"Three\";\n            case 4: return \"Four\";\n    \
    \        case 5: return \"Five\";\n            case 6: return \"Six\";\n     \
    \       case 7: return \"Seven\";\n            case 8: return \"Eight\";\n   \
    \         case 9: return \"Nine\";\n        }\n    });\n}\n", "  let result: string[]\
    \ = [];\n  let temp: number[] = [];\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] > 0 && arr[i] < 10) {\n      temp.push(arr[i]);\n    }\n  }\n\
    \  temp.sort((a, b) => a - b);\n  for (let i = 0; i < temp.length; i++) {\n  \
    \  switch (temp[i]) {\n      case 1:\n        result.push(\"One\");\n        break;\n\
    \      case 2:\n        result.push(\"Two\");\n        break;\n      case 3:\n\
    \        result.push(\"Three\");\n        break;\n      case 4:\n        result.push(\"\
    Four\");\n        break;\n      case 5:\n        result.push(\"Five\");\n    \
    \    break;\n      case 6:\n        result.push(\"Six\");\n        break;\n  \
    \    case 7:\n        result.push(\"Seven\");\n        break;\n      case 8:\n\
    \        result.push(\"Eight\");\n        break;\n      case 9:\n        result.push(\"\
    Nine\");\n        break;\n    }\n  }\n  return result.reverse();\n}\n", "    const\
    \ nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const names = [\"One\", \"Two\", \"\
    Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"];\n    let\
    \ result: string[] = [];\n    for (let i = 0; i < arr.length; i++) {\n       \
    \ if (nums.includes(arr[i])) {\n            result.push(names[nums.indexOf(arr[i])]);\n\
    \        }\n    }\n    return result.reverse();\n}\n", "    let result: string[]\
    \ = [];\n    let sortedArr: number[] = arr.sort((a, b) => a - b);\n    let reversedArr:\
    \ number[] = sortedArr.reverse();\n    for (let i: number = 0; i < reversedArr.length;\
    \ i++) {\n        if (reversedArr[i] === 1) {\n            result.push(\"One\"\
    );\n        } else if (reversedArr[i] === 2) {\n            result.push(\"Two\"\
    );\n        } else if (reversedArr[i] === 3) {\n            result.push(\"Three\"\
    );\n        } else if (reversedArr[i] === 4) {\n            result.push(\"Four\"\
    );\n        } else if (reversedArr[i] === 5) {\n            result.push(\"Five\"\
    );\n        } else if (reversedArr[i] === 6) {\n            result.push(\"Six\"\
    );\n        } else if (reversedArr[i] === 7) {\n            result.push(\"Seven\"\
    );\n        } else if (reversedArr[i] === 8) {\n            result.push(\"Eight\"\
    );\n        } else if (reversedArr[i] === 9) {\n            result.push(\"Nine\"\
    );\n        }\n    }\n    return result;\n}\n", "    let result: string[] = [];\n\
    \    let sorted: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n\
    \        if (arr[i] >= 1 && arr[i] <= 9) {\n            sorted.push(arr[i]);\n\
    \        }\n    }\n    sorted.sort((a, b) => a - b);\n    for (let i = 0; i <\
    \ sorted.length; i++) {\n        switch (sorted[i]) {\n            case 1:\n \
    \               result.push(\"One\");\n                break;\n            case\
    \ 2:\n                result.push(\"Two\");\n                break;\n        \
    \    case 3:\n                result.push(\"Three\");\n                break;\n\
    \            case 4:\n                result.push(\"Four\");\n               \
    \ break;\n            case 5:\n                result.push(\"Five\");\n      \
    \          break;\n            case 6:\n                result.push(\"Six\");\n\
    \                break;\n            case 7:\n                result.push(\"Seven\"\
    );\n                break;\n            case 8:\n                result.push(\"\
    Eight\");\n                break;\n            case 9:\n                result.push(\"\
    Nine\");\n                break;\n        }\n    }\n    return result.reverse();\n\
    }\n", "    let result: string[] = [];\n    let sorted: number[] = arr.sort((a,\
    \ b) => a - b);\n    for (let i = 0; i < sorted.length; i++) {\n        if (sorted[i]\
    \ >= 1 && sorted[i] <= 9) {\n            switch (sorted[i]) {\n              \
    \  case 1:\n                    result.push(\"One\");\n                    break;\n\
    \                case 2:\n                    result.push(\"Two\");\n        \
    \            break;\n                case 3:\n                    result.push(\"\
    Three\");\n                    break;\n                case 4:\n             \
    \       result.push(\"Four\");\n                    break;\n                case\
    \ 5:\n                    result.push(\"Five\");\n                    break;\n\
    \                case 6:\n                    result.push(\"Six\");\n        \
    \            break;\n                case 7:\n                    result.push(\"\
    Seven\");\n                    break;\n                case 8:\n             \
    \       result.push(\"Eight\");\n                    break;\n                case\
    \ 9:\n                    result.push(\"Nine\");\n                    break;\n\
    \            }\n        }\n    }\n    return result.reverse();\n}\n", "    let\
    \ result: string[] = [];\n    let sorted: number[] = arr.sort((a, b) => a - b);\n\
    \    let reversed: number[] = sorted.reverse();\n    for (let i = 0; i < reversed.length;\
    \ i++) {\n        if (reversed[i] === 1) {\n            result.push(\"One\");\n\
    \        } else if (reversed[i] === 2) {\n            result.push(\"Two\");\n\
    \        } else if (reversed[i] === 3) {\n            result.push(\"Three\");\n\
    \        } else if (reversed[i] === 4) {\n            result.push(\"Four\");\n\
    \        } else if (reversed[i] === 5) {\n            result.push(\"Five\");\n\
    \        } else if (reversed[i] === 6) {\n            result.push(\"Six\");\n\
    \        } else if (reversed[i] === 7) {\n            result.push(\"Seven\");\n\
    \        } else if (reversed[i] === 8) {\n            result.push(\"Eight\");\n\
    \        } else if (reversed[i] === 9) {\n            result.push(\"Nine\");\n\
    \        }\n    }\n    return result;\n}\n", "    let result: string[] = [];\n\
    \    let sorted: number[] = arr.sort((a, b) => a - b);\n    for (let i: number\
    \ = 0; i < sorted.length; i++) {\n        if (sorted[i] > 0 && sorted[i] < 10)\
    \ {\n            switch (sorted[i]) {\n                case 1:\n             \
    \       result.push(\"One\");\n                    break;\n                case\
    \ 2:\n                    result.push(\"Two\");\n                    break;\n\
    \                case 3:\n                    result.push(\"Three\");\n      \
    \              break;\n                case 4:\n                    result.push(\"\
    Four\");\n                    break;\n                case 5:\n              \
    \      result.push(\"Five\");\n                    break;\n                case\
    \ 6:\n                    result.push(\"Six\");\n                    break;\n\
    \                case 7:\n                    result.push(\"Seven\");\n      \
    \              break;\n                case 8:\n                    result.push(\"\
    Eight\");\n                    break;\n                case 9:\n             \
    \       result.push(\"Nine\");\n                    break;\n            }\n  \
    \      }\n    }\n    return result.reverse();\n}\n", "    let result: string[]\
    \ = [];\n    let sortedArr: number[] = arr.sort((a, b) => a - b).filter(num =>\
    \ num >= 1 && num <= 9);\n    for (let i = sortedArr.length - 1; i >= 0; i--)\
    \ {\n        switch (sortedArr[i]) {\n            case 1:\n                result.push(\"\
    One\");\n                break;\n            case 2:\n                result.push(\"\
    Two\");\n                break;\n            case 3:\n                result.push(\"\
    Three\");\n                break;\n            case 4:\n                result.push(\"\
    Four\");\n                break;\n            case 5:\n                result.push(\"\
    Five\");\n                break;\n            case 6:\n                result.push(\"\
    Six\");\n                break;\n            case 7:\n                result.push(\"\
    Seven\");\n                break;\n            case 8:\n                result.push(\"\
    Eight\");\n                break;\n            case 9:\n                result.push(\"\
    Nine\");\n                break;\n        }\n    }\n    return result;\n}\n",
  "    let result: string[] = [];\n    let sorted: number[] = arr.sort((a, b) => a\
    \ - b);\n    for (let i = 0; i < sorted.length; i++) {\n        if (sorted[i]\
    \ >= 1 && sorted[i] <= 9) {\n            switch (sorted[i]) {\n              \
    \  case 1:\n                    result.push(\"One\");\n                    break;\n\
    \                case 2:\n                    result.push(\"Two\");\n        \
    \            break;\n                case 3:\n                    result.push(\"\
    Three\");\n                    break;\n                case 4:\n             \
    \       result.push(\"Four\");\n                    break;\n                case\
    \ 5:\n                    result.push(\"Five\");\n                    break;\n\
    \                case 6:\n                    result.push(\"Six\");\n        \
    \            break;\n                case 7:\n                    result.push(\"\
    Seven\");\n                    break;\n                case 8:\n             \
    \       result.push(\"Eight\");\n                    break;\n                case\
    \ 9:\n                    result.push(\"Nine\");\n                    break;\n\
    \            }\n        }\n    }\n    return result.reverse();\n}\n", "    const\
    \ result: string[] = [];\n    const nums: number[] = [];\n    const words: string[]\
    \ = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] >= 1 &&\
    \ arr[i] <= 9) {\n            nums.push(arr[i]);\n        }\n    }\n    nums.sort((a,\
    \ b) => a - b);\n    for (let i = 0; i < nums.length; i++) {\n        switch (nums[i])\
    \ {\n            case 1:\n                words.push(\"One\");\n             \
    \   break;\n            case 2:\n                words.push(\"Two\");\n      \
    \          break;\n            case 3:\n                words.push(\"Three\");\n\
    \                break;\n            case 4:\n                words.push(\"Four\"\
    );\n                break;\n            case 5:\n                words.push(\"\
    Five\");\n                break;\n            case 6:\n                words.push(\"\
    Six\");\n                break;\n            case 7:\n                words.push(\"\
    Seven\");\n                break;\n            case 8:\n                words.push(\"\
    Eight\");\n                break;\n            case 9:\n                words.push(\"\
    Nine\");\n                break;\n        }\n    }\n    for (let i = words.length\
    \ - 1; i >= 0; i--) {\n        result.push(words[i]);\n    }\n    return result;\n\
    }\n", "    return arr.filter(x => x > 0 && x < 10).sort((a, b) => a - b).reverse().map(x\
    \ => {\n        switch (x) {\n            case 1:\n                return \"One\"\
    ;\n            case 2:\n                return \"Two\";\n            case 3:\n\
    \                return \"Three\";\n            case 4:\n                return\
    \ \"Four\";\n            case 5:\n                return \"Five\";\n         \
    \   case 6:\n                return \"Six\";\n            case 7:\n          \
    \      return \"Seven\";\n            case 8:\n                return \"Eight\"\
    ;\n            case 9:\n                return \"Nine\";\n        }\n    });\n\
    }\n", "    let res: string[] = [];\n    let arr1: number[] = [];\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] >= 1 && arr[i] <= 9) {\n \
    \           arr1.push(arr[i]);\n        }\n    }\n    arr1.sort((a, b) => a -\
    \ b);\n    for (let i = 0; i < arr1.length; i++) {\n        switch (arr1[i]) {\n\
    \            case 1:\n                res.push(\"One\");\n                break;\n\
    \            case 2:\n                res.push(\"Two\");\n                break;\n\
    \            case 3:\n                res.push(\"Three\");\n                break;\n\
    \            case 4:\n                res.push(\"Four\");\n                break;\n\
    \            case 5:\n                res.push(\"Five\");\n                break;\n\
    \            case 6:\n                res.push(\"Six\");\n                break;\n\
    \            case 7:\n                res.push(\"Seven\");\n                break;\n\
    \            case 8:\n                res.push(\"Eight\");\n                break;\n\
    \            case 9:\n                res.push(\"Nine\");\n                break;\n\
    \        }\n    }\n    return res.reverse();\n}\n", "    const sorted = arr.filter(x\
    \ => x >= 1 && x <= 9).sort((a, b) => a - b);\n    const reversed = sorted.reverse();\n\
    \    const result = reversed.map(x => {\n        switch (x) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    });\n    return result;\n}\n", "    let result: string[]\
    \ = [];\n    let sorted = arr.sort((a, b) => a - b);\n    for (let i = 0; i <\
    \ sorted.length; i++) {\n        if (sorted[i] >= 1 && sorted[i] <= 9) {\n   \
    \         switch (sorted[i]) {\n                case 1:\n                    result.push(\"\
    One\");\n                    break;\n                case 2:\n               \
    \     result.push(\"Two\");\n                    break;\n                case\
    \ 3:\n                    result.push(\"Three\");\n                    break;\n\
    \                case 4:\n                    result.push(\"Four\");\n       \
    \             break;\n                case 5:\n                    result.push(\"\
    Five\");\n                    break;\n                case 6:\n              \
    \      result.push(\"Six\");\n                    break;\n                case\
    \ 7:\n                    result.push(\"Seven\");\n                    break;\n\
    \                case 8:\n                    result.push(\"Eight\");\n      \
    \              break;\n                case 9:\n                    result.push(\"\
    Nine\");\n                    break;\n            }\n        }\n    }\n    return\
    \ result.reverse();\n}\n", "    let result: string[] = [];\n    let sortedArr:\
    \ number[] = arr.sort((a, b) => a - b);\n    for (let i = 0; i < sortedArr.length;\
    \ i++) {\n        if (sortedArr[i] >= 1 && sortedArr[i] <= 9) {\n            switch\
    \ (sortedArr[i]) {\n                case 1:\n                    result.push(\"\
    One\");\n                    break;\n                case 2:\n               \
    \     result.push(\"Two\");\n                    break;\n                case\
    \ 3:\n                    result.push(\"Three\");\n                    break;\n\
    \                case 4:\n                    result.push(\"Four\");\n       \
    \             break;\n                case 5:\n                    result.push(\"\
    Five\");\n                    break;\n                case 6:\n              \
    \      result.push(\"Six\");\n                    break;\n                case\
    \ 7:\n                    result.push(\"Seven\");\n                    break;\n\
    \                case 8:\n                    result.push(\"Eight\");\n      \
    \              break;\n                case 9:\n                    result.push(\"\
    Nine\");\n                    break;\n            }\n        }\n    }\n    return\
    \ result.reverse();\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

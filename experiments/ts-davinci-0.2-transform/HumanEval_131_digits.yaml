name: HumanEval_131_digits
language: ts
prompt: "//Given a positive integer n, return the product of the odd digits.\n// Return\
  \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
  // 0\n// >>> digits(235)\n// 15\nfunction digits(n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
  \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
  \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
  \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
completions: ["    let product = 1;\n    let num = n;\n    while (num > 0) {\n   \
    \     let digit = num % 10;\n        if (digit % 2 !== 0) {\n            product\
    \ *= digit;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n\
    \ % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return product;\n}\n", "    let product = 1;\n    while (n >\
    \ 0) {\n        const digit = n % 10;\n        if (digit % 2 === 1) {\n      \
    \      product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return product;\n}\n", "    let product = 1;\n    let num = n;\n    while\
    \ (num > 0) {\n        let digit = num % 10;\n        if (digit % 2 !== 0) {\n\
    \            product *= digit;\n        }\n        num = Math.floor(num / 10);\n\
    \    }\n    return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n  \
    \  const digit = n % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let product\
    \ = 1;\n    while (n > 0) {\n        const digit = n % 10;\n        if (digit\
    \ % 2 === 1) {\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "    let product = 1;\n    while (n\
    \ > 0) {\n        let digit = n % 10;\n        if (digit % 2 !== 0) {\n      \
    \      product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return product;\n}\n", "    let result = 1;\n    while (n > 0) {\n      \
    \  const digit = n % 10;\n        if (digit % 2 === 1) {\n            result *=\
    \ digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n\
    }\n", "    const nums = n.toString().split('');\n    let result = 1;\n    for\
    \ (let i = 0; i < nums.length; i++) {\n        if (nums[i] % 2 !== 0) {\n    \
    \        result *= parseInt(nums[i]);\n        }\n    }\n    return result;\n\
    }\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if\
    \ (digit % 2 === 1) {\n      product *= digit;\n    }\n    n = Math.floor(n /\
    \ 10);\n  }\n  return product;\n}\n", "    let product = 1;\n    while (n > 0)\
    \ {\n        let digit = n % 10;\n        if (digit % 2 === 1) {\n           \
    \ product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return\
    \ product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n\
    \ % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n\
    \    const digit = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "  let product\
    \ = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0)\
    \ {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return\
    \ product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n\
    \ % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return product;\n}\n", "    let product = 1;\n    while (n >\
    \ 0) {\n        let digit = n % 10;\n        if (digit % 2 === 1) {\n        \
    \    product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n  \
    \  return product;\n}\n", "    let result = 1;\n    let num = n;\n    while (num\
    \ > 0) {\n        let digit = num % 10;\n        if (digit % 2 !== 0) {\n    \
    \        result *= digit;\n        }\n        num = Math.floor(num / 10);\n  \
    \  }\n    return result;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const\
    \ digit = n % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let product =\
    \ 1;\n    let num = n;\n    while (num > 0) {\n        let digit = num % 10;\n\
    \        if (digit % 2 !== 0) {\n            product *= digit;\n        }\n  \
    \      num = Math.floor(num / 10);\n    }\n    return product;\n}\n", "    let\
    \ product = 1;\n    while (n > 0) {\n        let digit = n % 10;\n        if (digit\
    \ % 2 === 1) {\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "  let product = 1;\n  let num = n;\n\
    \  while (num > 0) {\n    let digit = num % 10;\n    if (digit % 2 !== 0) {\n\
    \      product *= digit;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ product;\n}\n", "    let product = 1;\n    while (n > 0) {\n        const digit\
    \ = n % 10;\n        if (digit % 2 === 1) {\n            product *= digit;\n \
    \       }\n        n = Math.floor(n / 10);\n    }\n    return product;\n}\n",
  "    let result = 1;\n    while (n > 0) {\n        const digit = n % 10;\n     \
    \   if (digit % 2 !== 0) {\n            result *= digit;\n        }\n        n\
    \ = Math.floor(n / 10);\n    }\n    return result;\n}\n", "    let result = 1;\n\
    \    let num = n;\n    while (num > 0) {\n        let digit = num % 10;\n    \
    \    if (digit % 2 !== 0) {\n            result *= digit;\n        }\n       \
    \ num = Math.floor(num / 10);\n    }\n    return result;\n}\n", "    let product\
    \ = 1;\n    let temp = n;\n    while (temp > 0) {\n        let digit = temp %\
    \ 10;\n        if (digit % 2 !== 0) {\n            product *= digit;\n       \
    \ }\n        temp = Math.floor(temp / 10);\n    }\n    return product;\n}\n",
  "    let product = 1;\n    let number = n;\n    while (number > 0) {\n        let\
    \ digit = number % 10;\n        if (digit % 2 === 1) {\n            product *=\
    \ digit;\n        }\n        number = Math.floor(number / 10);\n    }\n    return\
    \ product;\n}\n", "  let result = 1;\n  while (n > 0) {\n    const digit = n %\
    \ 10;\n    if (digit % 2 !== 0) {\n      result *= digit;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return result;\n}\n", "  let result = 1;\n  while (n > 0) {\n\
    \    const digit = n % 10;\n    if (digit % 2 !== 0) {\n      result *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return result;\n}\n", "  let product\
    \ = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0)\
    \ {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return\
    \ product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n\
    \ % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return product;\n}\n", "    let result = 1;\n    while (n > 0)\
    \ {\n        const digit = n % 10;\n        if (digit % 2 === 1) {\n         \
    \   result *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return\
    \ result;\n}\n", "  let result = 1;\n  while (n > 0) {\n    const digit = n %\
    \ 10;\n    if (digit % 2 === 1) {\n      result *= digit;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return result;\n}\n", "    let result = 1;\n    while (n > 0)\
    \ {\n        const digit = n % 10;\n        if (digit % 2 !== 0) {\n         \
    \   result *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return\
    \ result;\n}\n", "    let result = 1;\n    while (n > 0) {\n        const digit\
    \ = n % 10;\n        if (digit % 2 !== 0) {\n            result *= digit;\n  \
    \      }\n        n = Math.floor(n / 10);\n    }\n    return result;\n}\n", " \
    \ let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit\
    \ % 2 === 1) {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n\
    \  }\n  return product;\n}\n", "    let product = 1;\n    while (n > 0) {\n  \
    \      const digit = n % 10;\n        if (digit % 2 === 1) {\n            product\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return product;\n\
    }\n", "    let product = 1;\n    while (n > 0) {\n        const digit = n % 10;\n\
    \        if (digit % 2 !== 0) {\n            product *= digit;\n        }\n  \
    \      n = Math.floor(n / 10);\n    }\n    return product;\n}\n", "    let result\
    \ = 1;\n    while (n > 0) {\n        const digit = n % 10;\n        if (digit\
    \ % 2 !== 0) {\n            result *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return result;\n}\n", "    let product = 1;\n    while (n\
    \ > 0) {\n        const digit = n % 10;\n        if (digit % 2 === 1) {\n    \
    \        product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return product;\n}\n", "    let product = 1;\n    while (n > 0) {\n     \
    \   const digit = n % 10;\n        if (digit % 2 === 1) {\n            product\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return product;\n\
    }\n", "    let result = 1;\n    while (n > 0) {\n        let digit = n % 10;\n\
    \        if (digit % 2 !== 0) {\n            result *= digit;\n        }\n   \
    \     n = Math.floor(n / 10);\n    }\n    return result;\n}\n", "    let result\
    \ = 1;\n    while (n > 0) {\n        let digit = n % 10;\n        if (digit %\
    \ 2 !== 0) {\n            result *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return result;\n}\n", "    let product = 1;\n    let num\
    \ = n;\n    while (num > 0) {\n        let digit = num % 10;\n        if (digit\
    \ % 2 === 1) {\n            product *= digit;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return product;\n}\n", "    let product = 1;\n    while (n\
    \ > 0) {\n        const digit = n % 10;\n        if (digit % 2 === 1) {\n    \
    \        product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const\
    \ digit = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let product =\
    \ 1;\n    while (n > 0) {\n        let digit = n % 10;\n        if (digit % 2\
    \ !== 0) {\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "  let result = 1;\n  while (n > 0)\
    \ {\n    const digit = n % 10;\n    if (digit % 2 === 1) {\n      result *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return result;\n}\n", "    let product\
    \ = 1;\n    while (n > 0) {\n        let digit = n % 10;\n        if (digit %\
    \ 2 !== 0) {\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "    let product = 1;\n    while (n\
    \ > 0) {\n        let digit = n % 10;\n        if (digit % 2 === 1) {\n      \
    \      product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return product;\n}\n", "    let result = 1;\n    while (n > 0) {\n      \
    \  const digit = n % 10;\n        if (digit % 2 !== 0) {\n            result *=\
    \ digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n\
    }\n", "    let product = 1;\n    let digit = 0;\n    while (n > 0) {\n       \
    \ digit = n % 10;\n        if (digit % 2 !== 0) {\n            product *= digit;\n\
    \        }\n        n = Math.floor(n / 10);\n    }\n    return product;\n}\n",
  "    let result = 1;\n    while (n > 0) {\n        const digit = n % 10;\n     \
    \   if (digit % 2 !== 0) {\n            result *= digit;\n        }\n        n\
    \ = Math.floor(n / 10);\n    }\n    return result;\n}\n", "    let result = 1;\n\
    \    let num = n;\n    while (num > 0) {\n        let digit = num % 10;\n    \
    \    if (digit % 2 !== 0) {\n            result *= digit;\n        }\n       \
    \ num = Math.floor(num / 10);\n    }\n    return result;\n}\n", "    let result\
    \ = 1;\n    while (n > 0) {\n        const digit = n % 10;\n        if (digit\
    \ % 2 === 1) {\n            result *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return result;\n}\n", "  let product = 1;\n  let num = n;\n\
    \  while (num > 0) {\n    let digit = num % 10;\n    if (digit % 2 !== 0) {\n\
    \      product *= digit;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n\
    \ % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n\
    \    const digit = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let result\
    \ = 1;\n    while (n > 0) {\n        const digit = n % 10;\n        if (digit\
    \ % 2 !== 0) {\n            result *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return result;\n}\n", "    let product = 1;\n    while (n\
    \ > 0) {\n        const digit = n % 10;\n        if (digit % 2 === 1) {\n    \
    \        product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const\
    \ digit = n % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let product =\
    \ 1;\n    while (n > 0) {\n        let digit = n % 10;\n        if (digit % 2\
    \ !== 0) {\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "    let product = 1;\n    while (n\
    \ > 0) {\n        const digit = n % 10;\n        if (digit % 2 !== 0) {\n    \
    \        product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const\
    \ lastDigit = n % 10;\n    if (lastDigit % 2 !== 0) {\n      product *= lastDigit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "  let product\
    \ = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0)\
    \ {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return\
    \ product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n\
    \ % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return product;\n}\n", "    let result = 1;\n    let num = n;\n\
    \    while (num > 0) {\n        let digit = num % 10;\n        if (digit % 2 !==\
    \ 0) {\n            result *= digit;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return result;\n}\n", "  let product = 1;\n  while (n > 0)\
    \ {\n    const digit = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let result\
    \ = 1;\n    while (n > 0) {\n        const digit = n % 10;\n        if (digit\
    \ % 2 !== 0) {\n            result *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return result;\n}\n", "    let product: number = 1;\n   \
    \ let digits: number[] = n.toString().split('').map(Number);\n    for (let i:\
    \ number = 0; i < digits.length; i++) {\n        if (digits[i] % 2 !== 0) {\n\
    \            product *= digits[i];\n        }\n    }\n    return product;\n}\n",
  "  let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit\
    \ % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n\
    \  }\n  return product;\n}\n", "    let product = 1;\n    while (n > 0) {\n  \
    \      const digit = n % 10;\n        if (digit % 2 === 1) {\n            product\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return product;\n\
    }\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if\
    \ (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n /\
    \ 10);\n  }\n  return product;\n}\n", "    let product: number = 1;\n    let num:\
    \ number = n;\n    while (num > 0) {\n        let digit: number = num % 10;\n\
    \        if (digit % 2 !== 0) {\n            product *= digit;\n        }\n  \
    \      num = Math.floor(num / 10);\n    }\n    return product;\n}\n", "  let result\
    \ = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0)\
    \ {\n      result *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return\
    \ result;\n}\n", "    let product = 1;\n    while (n > 0) {\n        const digit\
    \ = n % 10;\n        if (digit % 2 !== 0) {\n            product *= digit;\n \
    \       }\n        n = Math.floor(n / 10);\n    }\n    return product;\n}\n",
  "  let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit\
    \ % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n\
    \  }\n  return product;\n}\n", "  let result = 1;\n  while (n > 0) {\n    const\
    \ digit = n % 10;\n    if (digit % 2 === 1) {\n      result *= digit;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return result;\n}\n", "    let product =\
    \ 1;\n    while (n > 0) {\n        const digit = n % 10;\n        if (digit %\
    \ 2 !== 0) {\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "  let product = 1;\n  while (n >\
    \ 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0) {\n      product *=\
    \ digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", " \
    \ let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit\
    \ % 2 === 1) {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n\
    \  }\n  return product;\n}\n", "  let result = 1;\n  let num = n;\n  while (num\
    \ > 0) {\n    const digit = num % 10;\n    if (digit % 2 !== 0) {\n      result\
    \ *= digit;\n    }\n    num = Math.floor(num / 10);\n  }\n  return result;\n}\n",
  "    let product = 1;\n    while (n > 0) {\n        let digit = n % 10;\n      \
    \  if (digit % 2 !== 0) {\n            product *= digit;\n        }\n        n\
    \ = Math.floor(n / 10);\n    }\n    return product;\n}\n", "  let product = 1;\n\
    \  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 === 1) {\n  \
    \    product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n\
    }\n", "    let product = 1;\n    while (n > 0) {\n        const digit = n % 10;\n\
    \        if (digit % 2 !== 0) {\n            product *= digit;\n        }\n  \
    \      n = Math.floor(n / 10);\n    }\n    return product;\n}\n", "  let product\
    \ = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0)\
    \ {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return\
    \ product;\n}\n", "    let product: number = 1;\n    let num: number = n;\n  \
    \  while (num > 0) {\n        let digit: number = num % 10;\n        if (digit\
    \ % 2 === 1) {\n            product *= digit;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return product;\n}\n", "  let product = 1;\n  while (n >\
    \ 0) {\n    const digit = n % 10;\n    if (digit % 2 === 1) {\n      product *=\
    \ digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", " \
    \   let result = 1;\n    while (n > 0) {\n        const digit = n % 10;\n    \
    \    if (digit % 2 !== 0) {\n            result *= digit;\n        }\n       \
    \ n = Math.floor(n / 10);\n    }\n    return result;\n}\n", "    let product:\
    \ number = 1;\n    let num: number = n;\n    while (num > 0) {\n        let digit:\
    \ number = num % 10;\n        if (digit % 2 !== 0) {\n            product *= digit;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return product;\n\
    }\n", "  let product = 1;\n  let num = n;\n  while (num > 0) {\n    const digit\
    \ = num % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n  \
    \  num = Math.floor(num / 10);\n  }\n  return product;\n}\n", "  let product =\
    \ 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0) {\n\
    \      product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n\
    }\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if\
    \ (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n /\
    \ 10);\n  }\n  return product;\n}\n", "    let product = 1;\n    while (n > 0)\
    \ {\n        const digit = n % 10;\n        if (digit % 2 === 1) {\n         \
    \   product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n   \
    \ return product;\n}\n", "    let product: number = 1;\n    let num: number =\
    \ n;\n    while (num > 0) {\n        let digit: number = num % 10;\n        if\
    \ (digit % 2 === 1) {\n            product *= digit;\n        }\n        num =\
    \ Math.floor(num / 10);\n    }\n    return product;\n}\n", "    let result = 1;\n\
    \    while (n > 0) {\n        const digit = n % 10;\n        if (digit % 2 !==\
    \ 0) {\n            result *= digit;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return result;\n}\n", "    let result = 1;\n    while (n > 0) {\n\
    \        const digit = n % 10;\n        if (digit % 2 === 1) {\n            result\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n\
    }\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if\
    \ (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n /\
    \ 10);\n  }\n  return product;\n}\n", "    let product = 1;\n    while (n > 0)\
    \ {\n        const digit = n % 10;\n        if (digit % 2 !== 0) {\n         \
    \   product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n   \
    \ return product;\n}\n", "    let result = 1;\n    while (n > 0) {\n        const\
    \ digit = n % 10;\n        if (digit % 2 !== 0) {\n            result *= digit;\n\
    \        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n}\n",
  "  let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit\
    \ % 2 !== 0) {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n\
    \  }\n  return product;\n}\n", "    let result = 1;\n    while (n > 0) {\n   \
    \     const digit = n % 10;\n        if (digit % 2 !== 0) {\n            result\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n\
    }\n", "    let product = 1;\n    while (n > 0) {\n        const digit = n % 10;\n\
    \        if (digit % 2 === 1) {\n            product *= digit;\n        }\n  \
    \      n = Math.floor(n / 10);\n    }\n    return product;\n}\n", "  return n\n\
    \    .toString()\n    .split(\"\")\n    .map(Number)\n    .filter(x => x % 2 !==\
    \ 0)\n    .reduce((a, b) => a * b, 1);\n}\n", "    let product = 1;\n    let num\
    \ = n;\n    while (num > 0) {\n        let digit = num % 10;\n        if (digit\
    \ % 2 !== 0) {\n            product *= digit;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return product;\n}\n", "    let result = 1;\n    while (n\
    \ > 0) {\n        const digit = n % 10;\n        if (digit % 2 !== 0) {\n    \
    \        result *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return result;\n}\n", "    let result = 1;\n    while (n > 0) {\n       \
    \ const digit = n % 10;\n        if (digit % 2 !== 0) {\n            result *=\
    \ digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n\
    }\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if\
    \ (digit % 2 === 1) {\n      product *= digit;\n    }\n    n = Math.floor(n /\
    \ 10);\n  }\n  return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n\
    \    const digit = n % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let result\
    \ = 1;\n    while (n > 0) {\n        const digit = n % 10;\n        if (digit\
    \ % 2 !== 0) {\n            result *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return result;\n}\n", "  let product = 1;\n  while (n > 0)\
    \ {\n    const digit = n % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let result\
    \ = 1;\n    while (n > 0) {\n        const digit = n % 10;\n        if (digit\
    \ % 2 === 1) {\n            result *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return result;\n}\n", "    let product = 1;\n    let num\
    \ = n;\n    while (num > 0) {\n        let digit = num % 10;\n        if (digit\
    \ % 2 === 1) {\n            product *= digit;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return product;\n}\n", "    let result = 1;\n    while (n\
    \ > 0) {\n        const digit = n % 10;\n        if (digit % 2 !== 0) {\n    \
    \        result *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return result;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit\
    \ = n % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n    }\n    n\
    \ = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let product = 1;\n\
    \    while (n > 0) {\n        let digit = n % 10;\n        if (digit % 2 === 1)\
    \ {\n            product *= digit;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return product;\n}\n", "    let result = 1;\n    while (n > 0) {\n\
    \        const digit = n % 10;\n        if (digit % 2 !== 0) {\n            result\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n\
    }\n", "    let product = 1;\n    let num = n;\n    while (num > 0) {\n       \
    \ const digit = num % 10;\n        if (digit % 2 !== 0) {\n            product\
    \ *= digit;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ product;\n}\nconsole.log(digits(235));\n", "  let product = 1;\n  while (n >\
    \ 0) {\n    const digit = n % 10;\n    if (digit % 2 === 1) {\n      product *=\
    \ digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", " \
    \   let result = 1;\n    while (n > 0) {\n        const digit = n % 10;\n    \
    \    if (digit % 2 !== 0) {\n            result *= digit;\n        }\n       \
    \ n = Math.floor(n / 10);\n    }\n    return result;\n}\n", "  let product = 1;\n\
    \  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0) {\n  \
    \    product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n\
    }\n", "    let result = 1;\n    let num = n;\n    while (num > 0) {\n        let\
    \ digit = num % 10;\n        if (digit % 2 !== 0) {\n            result *= digit;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    return result;\n}\n",
  "  let product = 1;\n  let num = n;\n  while (num > 0) {\n    let digit = num %\
    \ 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return product;\n}\n", "    let product = 1;\n    while (n >\
    \ 0) {\n        let digit = n % 10;\n        if (digit % 2 !== 0) {\n        \
    \    product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n  \
    \  return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit\
    \ = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n\
    \ = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let product = 1;\n\
    \    while (n > 0) {\n        const digit = n % 10;\n        if (digit % 2 !==\
    \ 0) {\n            product *= digit;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n  \
    \  const digit = n % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let product\
    \ = 1;\n    while (n > 0) {\n        const digit = n % 10;\n        if (digit\
    \ % 2 === 1) {\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "    let result = 1;\n    while (n\
    \ > 0) {\n        let digit = n % 10;\n        if (digit % 2 !== 0) {\n      \
    \      result *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n \
    \   return result;\n}\n", "  let product = 1;\n  while (n > 0) {\n    let digit\
    \ = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n\
    \ = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let product = 1;\n\
    \    while (n > 0) {\n        let digit = n % 10;\n        if (digit % 2 === 1)\
    \ {\n            product *= digit;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return product;\n}\n", "  if (n < 10) {\n    return n % 2 === 0 ?\
    \ 0 : n;\n  }\n  const lastDigit = n % 10;\n  return lastDigit % 2 === 0 ? digits(Math.floor(n\
    \ / 10)) : lastDigit * digits(Math.floor(n / 10));\n}\n", "  let result = 1;\n\
    \  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0) {\n  \
    \    result *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return result;\n\
    }\n", "    let result = 1;\n    while (n > 0) {\n        const digit = n % 10;\n\
    \        if (digit % 2 !== 0) {\n            result *= digit;\n        }\n   \
    \     n = Math.floor(n / 10);\n    }\n    return result;\n}\n", "    let product\
    \ = 1;\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++)\
    \ {\n        if (parseInt(str[i]) % 2 !== 0) {\n            product *= parseInt(str[i]);\n\
    \        }\n    }\n    return product;\n}\n", "    let product = 1;\n    while\
    \ (n > 0) {\n        const digit = n % 10;\n        if (digit % 2 === 1) {\n \
    \           product *= digit;\n        }\n        n = Math.floor(n / 10);\n  \
    \  }\n    return product;\n}\n", "    let product = 1;\n    while (n > 0) {\n\
    \        let digit = n % 10;\n        if (digit % 2 === 1) {\n            product\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return product;\n\
    }\n", "    let product = 1;\n    let num = n;\n    while (num > 0) {\n       \
    \ let digit = num % 10;\n        if (digit % 2 !== 0) {\n            product *=\
    \ digit;\n        }\n        num = Math.floor(num / 10);\n    }\n    return product;\n\
    }\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if\
    \ (digit % 2 === 1) {\n      product *= digit;\n    }\n    n = Math.floor(n /\
    \ 10);\n  }\n  return product;\n}\n", "    let product = 1;\n    while (n > 0)\
    \ {\n        let digit = n % 10;\n        if (digit % 2 === 1) {\n           \
    \ product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return\
    \ product;\n}\n", "    let product = 1;\n    while (n > 0) {\n        const digit\
    \ = n % 10;\n        if (digit % 2 === 1) {\n            product *= digit;\n \
    \       }\n        n = Math.floor(n / 10);\n    }\n    return product;\n}\n",
  "    let result = 1;\n    while (n > 0) {\n        let digit = n % 10;\n       \
    \ if (digit % 2 !== 0) {\n            result *= digit;\n        }\n        n =\
    \ Math.floor(n / 10);\n    }\n    return result;\n}\n", "    let product = 1;\n\
    \    while (n > 0) {\n        const digit = n % 10;\n        if (digit % 2 ===\
    \ 1) {\n            product *= digit;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n  \
    \  const digit = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "  let product\
    \ = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0)\
    \ {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return\
    \ product;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit = n\
    \ % 10;\n    if (digit % 2 === 1) {\n      product *= digit;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return product;\n}\n", "  let product = 1;\n  while (n > 0) {\n\
    \    const digit = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let result\
    \ = 1;\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++)\
    \ {\n        if (parseInt(str[i]) % 2 !== 0) {\n            result *= parseInt(str[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let result = 1;\n    while (n\
    \ > 0) {\n        const digit = n % 10;\n        if (digit % 2 !== 0) {\n    \
    \        result *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return result;\n}\n", "    let result = 1;\n    while (n > 0) {\n       \
    \ const digit = n % 10;\n        if (digit % 2 === 1) {\n            result *=\
    \ digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n\
    }\n", "    let result = 1;\n    while (n > 0) {\n        const digit = n % 10;\n\
    \        if (digit % 2 !== 0) {\n            result *= digit;\n        }\n   \
    \     n = Math.floor(n / 10);\n    }\n    return result;\n}\n", "  let product\
    \ = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if (digit % 2 !== 0)\
    \ {\n      product *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return\
    \ product;\n}\n", "    let result = 1;\n    while (n > 0) {\n        const digit\
    \ = n % 10;\n        if (digit % 2 !== 0) {\n            result *= digit;\n  \
    \      }\n        n = Math.floor(n / 10);\n    }\n    return result;\n}\n", " \
    \   let result = 1;\n    while (n > 0) {\n        const digit = n % 10;\n    \
    \    if (digit % 2 !== 0) {\n            result *= digit;\n        }\n       \
    \ n = Math.floor(n / 10);\n    }\n    return result;\n}\n", "    let result =\
    \ 1;\n    let num = n;\n    while (num > 0) {\n        let digit = num % 10;\n\
    \        if (digit % 2 !== 0) {\n            result *= digit;\n        }\n   \
    \     num = Math.floor(num / 10);\n    }\n    return result;\n}\n", "    let product\
    \ = 1;\n    while (n > 0) {\n        let digit = n % 10;\n        if (digit %\
    \ 2 === 1) {\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "    let result = 1;\n    while (n\
    \ > 0) {\n        const digit = n % 10;\n        if (digit % 2 === 1) {\n    \
    \        result *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n\
    \    return result;\n}\n", "  let product = 1;\n  while (n > 0) {\n    const digit\
    \ = n % 10;\n    if (digit % 2 !== 0) {\n      product *= digit;\n    }\n    n\
    \ = Math.floor(n / 10);\n  }\n  return product;\n}\n", "    let result = 1;\n\
    \    while (n > 0) {\n        const digit = n % 10;\n        if (digit % 2 !==\
    \ 0) {\n            result *= digit;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return result;\n}\n", "    let result = 1;\n    while (n > 0) {\n\
    \        const digit = n % 10;\n        if (digit % 2 !== 0) {\n            result\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n\
    }\n", "  let result = 1;\n  while (n > 0) {\n    const digit = n % 10;\n    if\
    \ (digit % 2 !== 0) {\n      result *= digit;\n    }\n    n = Math.floor(n / 10);\n\
    \  }\n  return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

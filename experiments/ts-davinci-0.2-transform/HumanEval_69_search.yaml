name: HumanEval_69_search
language: ts
prompt: "//You are given a non-empty list of positive integers. Return the greatest\
  \ integer that is greater than \n// zero, and has a frequency greater than or equal\
  \ to the value of the integer itself. \n// The frequency of an integer is the number\
  \ of times it appears in the list.\n// If no such a value exist, return -1.\n//\
  \ Examples:\n// >>> search([4, 1, 2, 2, 3, 1])\n// 2\n// >>> search([1, 2, 2, 3,\
  \ 3, 3, 4, 4, 4])\n// 3\n// >>> search([5, 5, 4, 4, 4])\n// -1\nfunction search(lst:\
  \ number[]): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = search;\n  assert.deepEqual(candidate([5, 5, 5, 5,\
  \ 1]),1);\n  assert.deepEqual(candidate([4, 1, 4, 1, 4, 4]),4);\n  assert.deepEqual(candidate([3,\
  \ 3]),-1);\n  assert.deepEqual(candidate([8, 8, 8, 8, 8, 8, 8, 8]),8);\n  assert.deepEqual(candidate([2,\
  \ 3, 3, 2, 2]),2);\n  assert.deepEqual(candidate([2, 7, 8, 8, 4, 8, 7, 3, 9, 6,\
  \ 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1]),1);\n  assert.deepEqual(candidate([3, 2,\
  \ 8, 2]),2);\n  assert.deepEqual(candidate([6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10]),1);\n\
  \  assert.deepEqual(candidate([8, 8, 3, 6, 5, 6, 4]),-1);\n  assert.deepEqual(candidate([6,\
  \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9]),1);\n\
  \  assert.deepEqual(candidate([1, 9, 10, 1, 3]),1);\n  assert.deepEqual(candidate([6,\
  \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10]),5);\n\
  \  assert.deepEqual(candidate([1]),1);\n  assert.deepEqual(candidate([8, 8, 10,\
  \ 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5]),4);\n  assert.deepEqual(candidate([2,\
  \ 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10]),2);\n  assert.deepEqual(candidate([1,\
  \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3]),1);\n  assert.deepEqual(candidate([9, 2, 4,\
  \ 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10,\
  \ 9, 4]),4);\n  assert.deepEqual(candidate([2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6,\
  \ 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7]),4);\n  assert.deepEqual(candidate([9, 8, 6,\
  \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1]),2);\n  assert.deepEqual(candidate([5,\
  \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8]),-1);\n  assert.deepEqual(candidate([10]),-1);\n\
  \  assert.deepEqual(candidate([9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2]),2);\n  assert.deepEqual(candidate([5,\
  \ 4, 10, 2, 1, 1, 10, 3, 6, 1, 8]),1);\n  assert.deepEqual(candidate([7, 9, 9, 9,\
  \ 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6]),1);\n  assert.deepEqual(candidate([3,\
  \ 10, 10, 9, 2]),-1);\n}\n\ntest();"
completions: ["    let max = -1;\n    let maxFreq = -1;\n    let freq = {};\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n          \
    \  freq[lst[i]]++;\n        } else {\n            freq[lst[i]] = 1;\n        }\n\
    \    }\n    for (let key in freq) {\n        if (freq[key] >= key && key > maxFreq)\
    \ {\n            maxFreq = freq[key];\n            max = key;\n        }\n   \
    \ }\n    return max;\n}\n", "    let max = -1;\n    let freq = {};\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let\
    \ key in freq) {\n        if (freq[key] >= key && key > max) {\n            max\
    \ = key;\n        }\n    }\n    return max;\n}\n", "    let freq: number[] = [0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    for (let i = 0; i < lst.length; i++) {\n  \
    \      freq[lst[i]]++;\n    }\n    for (let i = freq.length - 1; i >= 0; i--)\
    \ {\n        if (freq[i] >= i) {\n            return i;\n        }\n    }\n  \
    \  return -1;\n}\n", "    let freq: number[] = [];\n    let max: number = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n   \
    \         max = lst[i];\n        }\n        if (freq[lst[i]] === undefined) {\n\
    \            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n\
    \        }\n    }\n    for (let i = max; i > 0; i--) {\n        if (freq[i] !==\
    \ undefined && freq[i] >= i) {\n            return i;\n        }\n    }\n    return\
    \ -1;\n}\n", "    let freq: number[] = [];\n    let max: number = 0;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n          \
    \  max = lst[i];\n        }\n        if (freq[lst[i]] == undefined) {\n      \
    \      freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n    \
    \    }\n    }\n    for (let i = max; i > 0; i--) {\n        if (freq[i] >= i)\
    \ {\n            return i;\n        }\n    }\n    return -1;\n}\n", "    let max:\
    \ number = -1;\n    let freq: number = 0;\n    let count: number = 0;\n    for\
    \ (let i: number = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n  \
    \          max = lst[i];\n            freq = 1;\n        } else if (lst[i] ==\
    \ max) {\n            freq++;\n        }\n    }\n    if (freq >= max) {\n    \
    \    return max;\n    } else {\n        return -1;\n    }\n}\n", "    let freq\
    \ = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    let max = -1;\n    for (let key in freq) {\n     \
    \   if (freq[key] >= parseInt(key) && parseInt(key) > max) {\n            max\
    \ = parseInt(key);\n        }\n    }\n    return max;\n}\n", "    let freq = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n   \
    \         freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]] = 1;\n\
    \        }\n    }\n    let max = -1;\n    for (let key in freq) {\n        if\
    \ (freq[key] >= key && key > max) {\n            max = key;\n        }\n    }\n\
    \    return max;\n}\n", "    let result: number = -1;\n    let frequency: number\
    \ = 0;\n    let count: number = 0;\n    let i: number = 0;\n    while (i < lst.length)\
    \ {\n        count = 0;\n        for (let j: number = 0; j < lst.length; j++)\
    \ {\n            if (lst[i] === lst[j]) {\n                count++;\n        \
    \    }\n        }\n        if (lst[i] > frequency && count >= lst[i]) {\n    \
    \        frequency = lst[i];\n            result = lst[i];\n        }\n      \
    \  i++;\n    }\n    return result;\n}\n", "    let frequency: number[] = [];\n\
    \    let max: number = -1;\n    for (let i: number = 0; i < lst.length; i++) {\n\
    \        if (frequency[lst[i]]) {\n            frequency[lst[i]]++;\n        }\
    \ else {\n            frequency[lst[i]] = 1;\n        }\n    }\n    for (let i:\
    \ number = 0; i < frequency.length; i++) {\n        if (frequency[i] >= i && frequency[i]\
    \ > max) {\n            max = i;\n        }\n    }\n    return max;\n}\n", " \
    \   let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]]\
    \ = 1;\n        }\n    }\n    let max = -1;\n    for (let key in freq) {\n   \
    \     if (parseInt(key) > max && freq[key] >= parseInt(key)) {\n            max\
    \ = parseInt(key);\n        }\n    }\n    return max;\n}\n", "    let max = -1;\n\
    \    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] >=\
    \ key && key > max) {\n            max = key;\n        }\n    }\n    return max;\n\
    }\n", "    let max = 0;\n    let maxFreq = 0;\n    let freq = {};\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n            maxFreq\
    \ = freq[lst[i]];\n        }\n    }\n    return max;\n}\n", "    let max = 0;\n\
    \    let maxFreq = 0;\n    let freq = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]] == undefined) {\n            freq[lst[i]] =\
    \ 1;\n        } else {\n            freq[lst[i]]++;\n        }\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > maxFreq) {\n            max = lst[i];\n            maxFreq\
    \ = freq[lst[i]];\n        }\n    }\n    return max;\n}\n", "    let freq: number[]\
    \ = [];\n    let max: number = -1;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (freq[lst[i]] == undefined) {\n            freq[lst[i]] = 1;\n   \
    \     } else {\n            freq[lst[i]]++;\n        }\n    }\n    for (let i\
    \ = 0; i < freq.length; i++) {\n        if (freq[i] >= i && i > max) {\n     \
    \       max = i;\n        }\n    }\n    return max;\n}\n", "    let nums = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (nums[lst[i]]) {\n   \
    \         nums[lst[i]]++;\n        } else {\n            nums[lst[i]] = 1;\n \
    \       }\n    }\n    let max = -1;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (nums[lst[i]] >= lst[i] && lst[i] > max) {\n            max =\
    \ lst[i];\n        }\n    }\n    return max;\n}\n", "    let max = -1;\n    let\
    \ count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n        }\n    }\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] === max) {\n            count++;\n  \
    \      }\n    }\n    if (count >= max) {\n        return max;\n    } else {\n\
    \        return -1;\n    }\n}\n", "    let freq = {};\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max\
    \ = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let max = -1;\n    let count = 0;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max =\
    \ lst[i];\n            count = 1;\n        } else if (lst[i] === max) {\n    \
    \        count++;\n        }\n    }\n    return count >= max ? max : -1;\n}\n",
  "    let max = -1;\n    let freq = 0;\n    let count = 0;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n     \
    \       if (lst[i] === lst[j]) {\n                count++;\n            }\n  \
    \      }\n        if (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n\
    \        }\n        count = 0;\n    }\n    return max;\n}\n", "    let freq: {\
    \ [key: number]: number } = {};\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        } else {\n\
    \            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i] && lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
  "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    let max = -1;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    return max;\n}\n", "    let freq = {};\n  \
    \  let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max = lst[i];\n    \
    \    }\n    }\n    return max;\n}\n", "    let max = -1;\n    let freq = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n   \
    \         freq[lst[i]]++;\n        } else {\n            freq[lst[i]] = 1;\n \
    \       }\n    }\n    for (let key in freq) {\n        if (freq[key] >= key &&\
    \ key > max) {\n            max = key;\n        }\n    }\n    return max;\n}\n",
  "    let result = -1;\n    let max = 0;\n    let count = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        count = 0;\n        for (let j = 0; j < lst.length;\
    \ j++) {\n            if (lst[i] === lst[j]) {\n                count++;\n   \
    \         }\n        }\n        if (count >= lst[i] && lst[i] > max) {\n     \
    \       max = lst[i];\n            result = max;\n        }\n    }\n    return\
    \ result;\n}\n", "    let result: number = -1;\n    let freq: number = 0;\n  \
    \  let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n      \
    \  for (let j = 0; j < lst.length; j++) {\n            if (lst[i] === lst[j])\
    \ {\n                count++;\n            }\n        }\n        if (lst[i] >\
    \ freq && count >= lst[i]) {\n            freq = lst[i];\n            result =\
    \ freq;\n        }\n        count = 0;\n    }\n    return result;\n}\n", "   \
    \ let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n \
    \           count++;\n        }\n    }\n    if (count >= max) {\n        return\
    \ max;\n    } else {\n        return -1;\n    }\n}\nconsole.log(search([4, 1,\
    \ 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let frequency = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (frequency[lst[i]]) {\n            frequency[lst[i]]++;\n\
    \        } else {\n            frequency[lst[i]] = 1;\n        }\n    }\n    let\
    \ max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (frequency[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let freq: number[] = [];\n    let max: number = -1;\n\
    \    let maxFreq: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n  \
    \      if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        } else {\n  \
    \          freq[lst[i]] = 1;\n        }\n    }\n    for (let i = 0; i < freq.length;\
    \ i++) {\n        if (freq[i] >= i && freq[i] > maxFreq) {\n            max =\
    \ i;\n            maxFreq = freq[i];\n        }\n    }\n    return max;\n}\n",
  "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    let max = -1;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    return max;\n}\n", "    let freq = {};\n  \
    \  let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n       \
    \ if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max = lst[i];\n \
    \       }\n    }\n    return max;\n}\n", "    let max = -1;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        let count = 0;\n        for (let j = 0; j\
    \ < lst.length; j++) {\n            if (lst[i] === lst[j]) {\n               \
    \ count++;\n            }\n        }\n        if (count >= lst[i] && lst[i] >\
    \ max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
  "    const freq = lst.reduce((acc, curr) => {\n        if (acc[curr]) {\n      \
    \      acc[curr] += 1;\n        } else {\n            acc[curr] = 1;\n       \
    \ }\n        return acc;\n    }, {});\n    const sorted = Object.keys(freq).sort((a,\
    \ b) => freq[b] - freq[a]);\n    for (let i = 0; i < sorted.length; i++) {\n \
    \       if (freq[sorted[i]] >= +sorted[i]) {\n            return +sorted[i];\n\
    \        }\n    }\n    return -1;\n}\n", "    let max = -1;\n    let dict = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n   \
    \         dict[lst[i]] += 1;\n        } else {\n            dict[lst[i]] = 1;\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let max = -1;\n    let count = 0;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max =\
    \ lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n    \
    \    if (lst[i] === max) {\n            count++;\n        }\n    }\n    if (count\
    \ >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
  "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] > max) {\n            max = lst[i];\n            count\
    \ = 1;\n        } else if (lst[i] === max) {\n            count++;\n        }\n\
    \    }\n    return count >= max ? max : -1;\n}\n", "    let frequency = {};\n\
    \    let max = 0;\n    for (let i = 0; i < lst.length; i++) {\n        let num\
    \ = lst[i];\n        if (frequency[num]) {\n            frequency[num]++;\n  \
    \      } else {\n            frequency[num] = 1;\n        }\n        if (frequency[num]\
    \ >= num && num > max) {\n            max = num;\n        }\n    }\n    return\
    \ max;\n}\n", "    let max = -1;\n    let count = 0;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] > max) {\n            count = 1;\n  \
    \          max = lst[i];\n        } else if (lst[i] == max) {\n            count++;\n\
    \        }\n    }\n    return count >= max ? max : -1;\n}\n", "    let max = -1;\n\
    \    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] == max) {\n            count++;\n \
    \       }\n    }\n    if (count >= max) {\n        return max;\n    }\n    return\
    \ -1;\n}\n", "    let max = -1;\n    let freq = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        }\
    \ else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let key in\
    \ freq) {\n        if (freq[key] >= key && key > max) {\n            max = key;\n\
    \        }\n    }\n    return max;\n}\n", "    let max = 0;\n    let maxCount\
    \ = 0;\n    let count = 0;\n    let i = 0;\n    let j = 0;\n    lst.sort((a, b)\
    \ => a - b);\n    while (i < lst.length) {\n        j = i;\n        while (j <\
    \ lst.length && lst[i] === lst[j]) {\n            count++;\n            j++;\n\
    \        }\n        if (lst[i] > maxCount && count >= lst[i]) {\n            max\
    \ = lst[i];\n            maxCount = count;\n        }\n        i = j;\n      \
    \  count = 0;\n    }\n    return max > 0 ? max : -1;\n}\n", "    let counter =\
    \ 0;\n    let frequency = 0;\n    let max = 0;\n    let result = -1;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        counter = 0;\n        for (let j\
    \ = 0; j < lst.length; j++) {\n            if (lst[i] === lst[j]) {\n        \
    \        counter++;\n            }\n        }\n        if (counter >= lst[i] &&\
    \ lst[i] > max) {\n            max = lst[i];\n            result = max;\n    \
    \    }\n    }\n    return result;\n}\n", "    let frequency: number[] = [];\n\
    \    let max: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n      \
    \  if (frequency[lst[i]] === undefined) {\n            frequency[lst[i]] = 1;\n\
    \        } else {\n            frequency[lst[i]]++;\n        }\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (let i = max;\
    \ i > 0; i--) {\n        if (frequency[i] >= i) {\n            return i;\n   \
    \     }\n    }\n    return -1;\n}\n", "    let freq: { [key: number]: number }\
    \ = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]]\
    \ = 1;\n        }\n    }\n    let max = -1;\n    for (let key in freq) {\n   \
    \     if (freq[key] >= parseInt(key) && parseInt(key) > max) {\n            max\
    \ = parseInt(key);\n        }\n    }\n    return max;\n}\n", "    let result:\
    \ number = -1;\n    let frequency: number = 0;\n    for (let i: number = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] > frequency) {\n            frequency\
    \ = lst.filter(x => x === lst[i]).length;\n            if (lst[i] <= frequency)\
    \ {\n                result = lst[i];\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    let max = -1;\n    let freq = {};\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n          \
    \  freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n     \
    \   }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let max = -1;\n    let count = 0;\n    let maxCount\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n            maxCount = 1;\n        } else if (lst[i]\
    \ == max) {\n            maxCount++;\n        }\n    }\n    if (maxCount >= max)\
    \ {\n        return max;\n    } else {\n        return -1;\n    }\n}\n", "   \
    \ let max = 0;\n    let maxFreq = 0;\n    let freq = 0;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \            maxFreq = 1;\n        } else if (lst[i] == max) {\n            maxFreq++;\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == max) {\n            freq++;\n        }\n    }\n    if (freq >= max) {\n \
    \       return max;\n    } else {\n        return -1;\n    }\n}\n", "    let result:\
    \ number = -1;\n    let frequency: number = 0;\n    let count: number = 0;\n \
    \   for (let i: number = 0; i < lst.length; i++) {\n        for (let j: number\
    \ = 0; j < lst.length; j++) {\n            if (lst[i] === lst[j]) {\n        \
    \        count++;\n            }\n        }\n        if (lst[i] > frequency &&\
    \ count >= lst[i]) {\n            frequency = lst[i];\n            result = frequency;\n\
    \        }\n        count = 0;\n    }\n    return result;\n}\n", "    let max\
    \ = 0;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n        \
    \    count++;\n        }\n    }\n    if (count >= max) {\n        return max;\n\
    \    } else {\n        return -1;\n    }\n}\n", "    let freq = {};\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let keys\
    \ = Object.keys(freq);\n    let max = -1;\n    for (let i = 0; i < keys.length;\
    \ i++) {\n        if (freq[keys[i]] >= Number(keys[i]) && Number(keys[i]) > max)\
    \ {\n            max = Number(keys[i]);\n        }\n    }\n    return max;\n}\n",
  "    let max = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    let freq = {};\n    let max = -1;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let\
    \ key in freq) {\n        if (freq[key] >= key && key > max) {\n            max\
    \ = key;\n        }\n    }\n    return max;\n}\n", "    let frequency: number[]\
    \ = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (frequency[lst[i]])\
    \ {\n            frequency[lst[i]]++;\n        } else {\n            frequency[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let i = frequency.length - 1; i > 0; i--) {\n\
    \        if (frequency[i] && frequency[i] >= i) {\n            return i;\n   \
    \     }\n    }\n    return -1;\n}\n", "    let freq = {};\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max\
    \ = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let max = -1;\n    let freq = 0;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        let count = 0;\n        for (let j = 0;\
    \ j < lst.length; j++) {\n            if (lst[i] === lst[j]) {\n             \
    \   count++;\n            }\n        }\n        if (count >= lst[i] && lst[i]\
    \ > max) {\n            max = lst[i];\n            freq = count;\n        }\n\
    \    }\n    return max;\n}\n", "    let max = 0;\n    let freq = 0;\n    let freqMap\
    \ = new Map<number, number>();\n    for (let i = 0; i < lst.length; i++) {\n \
    \       let num = lst[i];\n        if (freqMap.has(num)) {\n            freqMap.set(num,\
    \ freqMap.get(num) + 1);\n        } else {\n            freqMap.set(num, 1);\n\
    \        }\n    }\n    for (let [key, value] of freqMap) {\n        if (key >=\
    \ value && key > max) {\n            max = key;\n            freq = value;\n \
    \       }\n    }\n    return max;\n}\n", "    let max = -1;\n    let freq = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n   \
    \         freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]] = 1;\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let max = -1;\n    let freq = 0;\n    let count =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n\
    \            max = lst[i];\n            freq = 1;\n        } else if (lst[i] ==\
    \ max) {\n            freq++;\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] == max) {\n            count++;\n        }\n    }\n\
    \    if (count >= max) {\n        return max;\n    } else {\n        return -1;\n\
    \    }\n}\n", "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        } else {\n\
    \            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i] && lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
  "    let result = -1;\n    let max = 0;\n    let freq = {};\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let\
    \ key in freq) {\n        if (freq[key] >= parseInt(key) && parseInt(key) > max)\
    \ {\n            max = parseInt(key);\n            result = max;\n        }\n\
    \    }\n    return result;\n}\n", "    let freq: number[] = [];\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max\
    \ = -1;\n    for (let i = 0; i < freq.length; i++) {\n        if (freq[i] >= i\
    \ && freq[i] > max) {\n            max = i;\n        }\n    }\n    return max;\n\
    }\n", "    let max = -1;\n    let freq = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        }\
    \ else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i] && lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n", "   \
    \ let max = -1;\n    let freq = 0;\n    let count = 0;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \            freq = 1;\n        } else if (lst[i] == max) {\n            freq++;\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == max) {\n            count++;\n        }\n    }\n    if (count >= max) {\n\
    \        return max;\n    } else {\n        return -1;\n    }\n}\n", "    let\
    \ freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    let max = -1;\n    for (let key in freq) {\n     \
    \   if (freq[key] >= key && key > max) {\n            max = key;\n        }\n\
    \    }\n    return max;\n}\n", "    let count = 0;\n    let max = 0;\n    let\
    \ maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n        for (let\
    \ j = 0; j < lst.length; j++) {\n            if (lst[i] === lst[j]) {\n      \
    \          count++;\n            }\n        }\n        if (count >= lst[i] &&\
    \ count > maxCount) {\n            max = lst[i];\n            maxCount = count;\n\
    \        }\n        count = 0;\n    }\n    if (max === 0) {\n        return -1;\n\
    \    }\n    return max;\n}\n", "    let max = 0;\n    let freq = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n  \
    \      if (lst[i] == max) {\n            freq++;\n        }\n    }\n    if (freq\
    \ >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
  "    let result: number = -1;\n    let frequency: number = 0;\n    let frequencyMap:\
    \ Map<number, number> = new Map<number, number>();\n    for (let i: number = 0;\
    \ i < lst.length; i++) {\n        if (frequencyMap.has(lst[i])) {\n          \
    \  frequencyMap.set(lst[i], frequencyMap.get(lst[i]) + 1);\n        } else {\n\
    \            frequencyMap.set(lst[i], 1);\n        }\n    }\n    for (let i: number\
    \ = 0; i < lst.length; i++) {\n        if (frequencyMap.get(lst[i]) >= lst[i]\
    \ && lst[i] > frequency) {\n            frequency = lst[i];\n            result\
    \ = lst[i];\n        }\n    }\n    return result;\n}\n", "    let max = -1;\n\
    \    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max = lst[i];\n    \
    \    }\n    }\n    return max;\n}\n", "    let result = -1;\n    let max = 0;\n\
    \    let count = 0;\n    let i = 0;\n    while (i < lst.length) {\n        let\
    \ j = i + 1;\n        while (j < lst.length) {\n            if (lst[i] === lst[j])\
    \ {\n                count++;\n            }\n            j++;\n        }\n  \
    \      if (count >= lst[i] && lst[i] > max) {\n            max = lst[i];\n   \
    \         result = max;\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    let max = -1;\n    let maxFreq = -1;\n    let freq: { [key: number]:\
    \ number } = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]\
    \ === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n        \
    \    freq[lst[i]]++;\n        }\n    }\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (freq[lst[i]] >= lst[i] && lst[i] > maxFreq) {\n            max\
    \ = lst[i];\n            maxFreq = freq[lst[i]];\n        }\n    }\n    return\
    \ max;\n}\n", "    let max = -1;\n    let freq = {};\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let\
    \ key in freq) {\n        if (freq[key] >= parseInt(key) && parseInt(key) > max)\
    \ {\n            max = parseInt(key);\n        }\n    }\n    return max;\n}\n",
  "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    let max = -1;\n    for (let key in freq) {\n     \
    \   if (freq[key] >= key && key > max) {\n            max = key;\n        }\n\
    \    }\n    return max;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\nconsole.log(search([1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4, 4, 4]));\n", "    let\
    \ result = -1;\n    let counter = 0;\n    let maxCounter = 0;\n    let maxValue\
    \ = 0;\n    lst.sort();\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] === lst[i + 1]) {\n            counter++;\n        } else {\n      \
    \      counter = 0;\n        }\n        if (counter > maxCounter) {\n        \
    \    maxCounter = counter;\n            maxValue = lst[i];\n        }\n    }\n\
    \    if (maxValue >= maxCounter + 1) {\n        result = maxValue;\n    }\n  \
    \  return result;\n}\n", "    let freq = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        }\
    \ else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let key in freq) {\n        if (freq[key] >= key && key > max) {\n \
    \           max = key;\n        }\n    }\n    return max;\n}\n", "    let count:\
    \ number = 0;\n    let max: number = 0;\n    let maxCount: number = 0;\n    let\
    \ result: number = -1;\n    lst.sort();\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === lst[i + 1]) {\n            count++;\n       \
    \ } else {\n            count++;\n            if (count >= lst[i]) {\n       \
    \         if (lst[i] > max) {\n                    max = lst[i];\n           \
    \         maxCount = count;\n                }\n            }\n            count\
    \ = 0;\n        }\n    }\n    if (maxCount >= max) {\n        result = max;\n\
    \    }\n    return result;\n}\n", "    let frequency = {};\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        let num = lst[i];\n        if (frequency[num])\
    \ {\n            frequency[num]++;\n        } else {\n            frequency[num]\
    \ = 1;\n        }\n    }\n    let keys = Object.keys(frequency);\n    let result\
    \ = -1;\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n\
    \        if (frequency[key] >= key) {\n            result = Math.max(result, key);\n\
    \        }\n    }\n    return result;\n}\n", "    let max = -1;\n    let freq\
    \ = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n       \
    \ if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max = lst[i];\n \
    \       }\n    }\n    return max;\n}\n", "    let freq: number[] = [];\n    let\
    \ max: number = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    for (let i = 1; i < freq.length; i++) {\n        if\
    \ (freq[i] >= i && freq[i] > max) {\n            max = i;\n        }\n    }\n\
    \    return max;\n}\n", "    let max = -1;\n    let count = 0;\n    let maxCount\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n            maxCount = 1;\n        } else if (lst[i]\
    \ == max) {\n            maxCount++;\n        }\n    }\n    if (maxCount >= max)\
    \ {\n        return max;\n    } else {\n        return -1;\n    }\n}\n", "   \
    \ let counts: { [key: number]: number } = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (counts[lst[i]]) {\n            counts[lst[i]]++;\n     \
    \   } else {\n            counts[lst[i]] = 1;\n        }\n    }\n    let max:\
    \ number = -1;\n    for (let key in counts) {\n        if (counts[key] >= parseInt(key)\
    \ && parseInt(key) > max) {\n            max = parseInt(key);\n        }\n   \
    \ }\n    return max;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n    let freq\
    \ = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n     \
    \       max = lst[i];\n            maxFreq = freq[lst[i]];\n        }\n    }\n\
    \    return max;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n    let freq\
    \ = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]]\
    \ = 1;\n        }\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n   \
    \         max = lst[i];\n            maxFreq = freq[lst[i]];\n        }\n    }\n\
    \    return max;\n}\n", "    let freq: { [key: number]: number } = {};\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n          \
    \  freq[lst[i]]++;\n        } else {\n            freq[lst[i]] = 1;\n        }\n\
    \    }\n    let max = -1;\n    for (let key in freq) {\n        if (freq[key]\
    \ >= parseInt(key) && parseInt(key) > max) {\n            max = parseInt(key);\n\
    \        }\n    }\n    return max;\n}\n", "    let result: number = -1;\n    let\
    \ frequency: number = 0;\n    let frequencyMap: Map<number, number> = new Map<number,\
    \ number>();\n    for (let i: number = 0; i < lst.length; i++) {\n        if (frequencyMap.has(lst[i]))\
    \ {\n            frequencyMap.set(lst[i], frequencyMap.get(lst[i]) + 1);\n   \
    \     } else {\n            frequencyMap.set(lst[i], 1);\n        }\n    }\n \
    \   for (let i: number = 0; i < lst.length; i++) {\n        if (frequencyMap.get(lst[i])\
    \ >= lst[i] && lst[i] > frequency) {\n            frequency = lst[i];\n      \
    \      result = lst[i];\n        }\n    }\n    return result;\n}\n", "    let\
    \ frequency: number[] = [];\n    let max: number = 0;\n    for (let i: number\
    \ = 0; i < lst.length; i++) {\n        if (frequency[lst[i]] === undefined) {\n\
    \            frequency[lst[i]] = 1;\n        } else {\n            frequency[lst[i]]++;\n\
    \        }\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (let i: number = max; i > 0; i--) {\n        if (frequency[i]\
    \ >= i) {\n            return i;\n        }\n    }\n    return -1;\n}\n", "  \
    \  let freq: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n       \
    \ } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let i =\
    \ max; i > 0; i--) {\n        if (freq[i] >= i) {\n            return i;\n   \
    \     }\n    }\n    return -1;\n}\n", "    let freq: number[] = [];\n    let max:\
    \ number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n        if (lst[i] > max) {\n            max = lst[i];\n    \
    \    }\n    }\n    for (let i = max; i > 0; i--) {\n        if (freq[i] >= i)\
    \ {\n            return i;\n        }\n    }\n    return -1;\n}\n", "    let max\
    \ = -1;\n    let counts = {};\n    for (let i = 0; i < lst.length; i++) {\n  \
    \      if (counts[lst[i]] === undefined) {\n            counts[lst[i]] = 1;\n\
    \        } else {\n            counts[lst[i]]++;\n        }\n    }\n    for (let\
    \ key in counts) {\n        if (counts[key] >= parseInt(key) && parseInt(key)\
    \ > max) {\n            max = parseInt(key);\n        }\n    }\n    return max;\n\
    }\n", "    let result: number = -1;\n    let frequency: number = 0;\n    let dict:\
    \ { [key: number]: number } = {};\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (dict[lst[i]]) {\n            dict[lst[i]] += 1;\n      \
    \  } else {\n            dict[lst[i]] = 1;\n        }\n    }\n    for (let key\
    \ in dict) {\n        if (dict[key] >= Number(key) && Number(key) > result) {\n\
    \            result = Number(key);\n        }\n    }\n    return result;\n}\n",
  "    let result = -1;\n    let frequency = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (frequency[lst[i]]) {\n            frequency[lst[i]] += 1;\n\
    \        } else {\n            frequency[lst[i]] = 1;\n        }\n    }\n    for\
    \ (let key in frequency) {\n        if (frequency[key] >= key && key > result)\
    \ {\n            result = key;\n        }\n    }\n    return result;\n}\n", " \
    \   let max = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    return count >= max ? max : -1;\n}\n", "    let max = -1;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        let count = 0;\n        for (let j =\
    \ 0; j < lst.length; j++) {\n            if (lst[i] === lst[j]) {\n          \
    \      count++;\n            }\n        }\n        if (count >= lst[i] && lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
  "    let max = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    let result: number = -1;\n    let frequency: number =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > frequency)\
    \ {\n            frequency = lst.filter(x => x === lst[i]).length;\n         \
    \   if (lst[i] <= frequency) {\n                result = lst[i];\n           \
    \ }\n        }\n    }\n    return result;\n}\n", "    let max = -1;\n    let maxCount\
    \ = 0;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] > max) {\n            max = lst[i];\n            maxCount = 1;\n\
    \        } else if (lst[i] === max) {\n            maxCount++;\n        }\n  \
    \  }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max)\
    \ {\n            count++;\n        }\n    }\n    if (count >= max) {\n       \
    \ return max;\n    } else {\n        return -1;\n    }\n}\n", "    let max = -1;\n\
    \    let obj = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (obj[lst[i]])\
    \ {\n            obj[lst[i]] += 1;\n        } else {\n            obj[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] >=\
    \ key && key > max) {\n            max = key;\n        }\n    }\n    return max;\n\
    }\n", "    let result = -1;\n    let frequency = 0;\n    let frequencyMap = new\
    \ Map();\n    for (let i = 0; i < lst.length; i++) {\n        if (frequencyMap.has(lst[i]))\
    \ {\n            frequencyMap.set(lst[i], frequencyMap.get(lst[i]) + 1);\n   \
    \     } else {\n            frequencyMap.set(lst[i], 1);\n        }\n    }\n \
    \   for (let [key, value] of frequencyMap) {\n        if (key <= value && key\
    \ > result) {\n            result = key;\n        }\n    }\n    return result;\n\
    }\n", "    let freq = new Map<number, number>();\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        let key = lst[i];\n        if (freq.has(key)) {\n          \
    \  freq.set(key, freq.get(key) + 1);\n        } else {\n            freq.set(key,\
    \ 1);\n        }\n    }\n    let max = -1;\n    for (let [key, value] of freq)\
    \ {\n        if (key <= value && key > max) {\n            max = key;\n      \
    \  }\n    }\n    return max;\n}\n", "    let max = Math.max(...lst);\n    let\
    \ count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] ==\
    \ max) {\n            count++;\n        }\n    }\n    if (count >= max) {\n  \
    \      return max;\n    } else {\n        return -1;\n    }\n}\n", "    let max\
    \ = -1;\n    let maxCount = -1;\n    let counts = new Map<number, number>();\n\
    \    for (let i = 0; i < lst.length; i++) {\n        let count = counts.get(lst[i]);\n\
    \        if (count === undefined) {\n            count = 0;\n        }\n     \
    \   count++;\n        counts.set(lst[i], count);\n        if (count >= lst[i]\
    \ && lst[i] > maxCount) {\n            max = lst[i];\n            maxCount = count;\n\
    \        }\n    }\n    return max;\n}\n", "    let max = -1;\n    let freq = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n   \
    \         freq[lst[i]]++;\n        } else {\n            freq[lst[i]] = 1;\n \
    \       }\n    }\n    for (let key in freq) {\n        if (freq[key] >= parseInt(key)\
    \ && parseInt(key) > max) {\n            max = parseInt(key);\n        }\n   \
    \ }\n    return max;\n}\n", "    let dict: { [key: number]: number } = {};\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (dict[lst[i]]) {\n    \
    \        dict[lst[i]]++;\n        } else {\n            dict[lst[i]] = 1;\n  \
    \      }\n    }\n    let max = -1;\n    for (let key in dict) {\n        if (dict[key]\
    \ >= parseInt(key) && parseInt(key) > max) {\n            max = parseInt(key);\n\
    \        }\n    }\n    return max;\n}\n", "    let max = -1;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        let counter = 0;\n        for (let j = 0;\
    \ j < lst.length; j++) {\n            if (lst[i] === lst[j]) {\n             \
    \   counter++;\n            }\n        }\n        if (counter >= lst[i] && lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
  "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        } else\
    \ {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let key in freq)\
    \ {\n        if (freq[key] >= key && key > max) {\n            max = key;\n  \
    \      }\n    }\n    return max;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n\
    \    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n     \
    \       max = lst[i];\n            maxFreq = freq[lst[i]];\n        }\n    }\n\
    \    return max;\n}\n", "    let result = -1;\n    let max = 0;\n    let frequency\
    \ = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (frequency[lst[i]])\
    \ {\n            frequency[lst[i]]++;\n        } else {\n            frequency[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key]\
    \ >= key && key > max) {\n            max = key;\n            result = max;\n\
    \        }\n    }\n    return result;\n}\n", "    let max = -1;\n    let counts\
    \ = new Map<number, number>();\n    for (let i = 0; i < lst.length; i++) {\n \
    \       if (counts.has(lst[i])) {\n            counts.set(lst[i], counts.get(lst[i])\
    \ + 1);\n        } else {\n            counts.set(lst[i], 1);\n        }\n   \
    \ }\n    for (let i = 0; i < lst.length; i++) {\n        if (counts.get(lst[i])\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let result: number = -1;\n    let count: number =\
    \ 0;\n    let max: number = 0;\n    for (let i: number = 0; i < lst.length; i++)\
    \ {\n        count = 0;\n        for (let j: number = 0; j < lst.length; j++)\
    \ {\n            if (lst[i] === lst[j]) {\n                count++;\n        \
    \    }\n        }\n        if (count >= lst[i] && count > max) {\n           \
    \ max = count;\n            result = lst[i];\n        }\n    }\n    return result;\n\
    }\n", "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max)\
    \ {\n            count++;\n        }\n    }\n    if (count >= max) {\n       \
    \ return max;\n    } else {\n        return -1;\n    }\n}\n", "    let counts:\
    \ { [key: number]: number } = {};\n    for (let i = 0; i < lst.length; i++) {\n\
    \        let num = lst[i];\n        if (counts[num] === undefined) {\n       \
    \     counts[num] = 1;\n        } else {\n            counts[num]++;\n       \
    \ }\n    }\n    let max = -1;\n    for (let key in counts) {\n        let num\
    \ = parseInt(key);\n        if (num > max && counts[key] >= num) {\n         \
    \   max = num;\n        }\n    }\n    return max;\n}\n", "    let freq = {};\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n   \
    \         freq[lst[i]] += 1;\n        } else {\n            freq[lst[i]] = 1;\n\
    \        }\n    }\n    let max = -1;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max =\
    \ lst[i];\n        }\n    }\n    return max;\n}\n", "    let max = -1;\n    let\
    \ map = new Map<number, number>();\n    for (let i = 0; i < lst.length; i++) {\n\
    \        let count = map.get(lst[i]);\n        if (count === undefined) {\n  \
    \          map.set(lst[i], 1);\n        } else {\n            map.set(lst[i],\
    \ count + 1);\n        }\n    }\n    for (let [key, value] of map) {\n       \
    \ if (key <= value && key > max) {\n            max = key;\n        }\n    }\n\
    \    return max;\n}\n", "    let result = -1;\n    let frequency = {};\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (frequency[lst[i]]) {\n     \
    \       frequency[lst[i]]++;\n        } else {\n            frequency[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key]\
    \ >= key && key > result) {\n            result = key;\n        }\n    }\n   \
    \ return result;\n}\n", "    let max = -1;\n    let map = new Map<number, number>();\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (map.has(lst[i])) {\n\
    \            map.set(lst[i], map.get(lst[i]) + 1);\n        } else {\n       \
    \     map.set(lst[i], 1);\n        }\n    }\n    for (let [key, value] of map)\
    \ {\n        if (key <= value && key > max) {\n            max = key;\n      \
    \  }\n    }\n    return max;\n}\n", "  let result = -1;\n  let max = 0;\n  let\
    \ freq = {};\n  for (let i = 0; i < lst.length; i++) {\n    if (freq[lst[i]])\
    \ {\n      freq[lst[i]]++;\n    } else {\n      freq[lst[i]] = 1;\n    }\n  }\n\
    \  for (let key in freq) {\n    if (freq[key] >= key && key > max) {\n      max\
    \ = key;\n      result = key;\n    }\n  }\n  return result;\n}\n", "    const\
    \ freq = lst.reduce((acc, curr) => {\n        acc[curr] = acc[curr] ? acc[curr]\
    \ + 1 : 1;\n        return acc;\n    }, {});\n    const max = Math.max(...Object.keys(freq));\n\
    \    return freq[max] >= max ? max : -1;\n}\n", "    let max = -1;\n    let freq\
    \ = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] >=\
    \ parseInt(key) && parseInt(key) > max) {\n            max = parseInt(key);\n\
    \        }\n    }\n    return max;\n}\n", "    let max = -1;\n    let count =\
    \ 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n\
    \            max = lst[i];\n        }\n    }\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    let max = -1;\n    let count = 0;\n    let freq = 0;\n\
    \    let i = 0;\n    while (i < lst.length) {\n        if (lst[i] > max) {\n \
    \           max = lst[i];\n            count = 1;\n            freq = 1;\n   \
    \     } else if (lst[i] == max) {\n            count++;\n        } else if (lst[i]\
    \ == lst[i - 1]) {\n            freq++;\n        } else {\n            freq =\
    \ 1;\n        }\n        if (freq >= max) {\n            return max;\n       \
    \ }\n        i++;\n    }\n    return -1;\n}\n", "    let frequency: number[] =\
    \ [];\n    let max: number = -1;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (frequency[lst[i]] === undefined) {\n            frequency[lst[i]]\
    \ = 1;\n        } else {\n            frequency[lst[i]]++;\n        }\n    }\n\
    \    for (let i = 1; i < frequency.length; i++) {\n        if (frequency[i] >=\
    \ i && frequency[i] > max) {\n            max = i;\n        }\n    }\n    return\
    \ max;\n}\n", "  let freq = {};\n  let max = -1;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (freq[lst[i]]) {\n      freq[lst[i]]++;\n    } else {\n     \
    \ freq[lst[i]] = 1;\n    }\n  }\n  for (let i = 0; i < lst.length; i++) {\n  \
    \  if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n      max = lst[i];\n    }\n\
    \  }\n  return max;\n}\n", "    let dic: { [key: number]: number } = {};\n   \
    \ for (let i = 0; i < lst.length; i++) {\n        if (dic[lst[i]]) {\n       \
    \     dic[lst[i]]++;\n        } else {\n            dic[lst[i]] = 1;\n       \
    \ }\n    }\n    let max = -1;\n    for (let key in dic) {\n        if (dic[key]\
    \ >= parseInt(key) && parseInt(key) > max) {\n            max = parseInt(key);\n\
    \        }\n    }\n    return max;\n}\nconsole.log(search([4, 1, 2, 2, 3, 1]));\n\
    console.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5, 5, 4,\
    \ 4, 4]));\n", "    let max = -1;\n    let freq = {};\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i] && lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
  "    let max = -1;\n    let freq = {};\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        } else\
    \ {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let key in freq)\
    \ {\n        if (freq[key] >= key && key > max) {\n            max = key;\n  \
    \      }\n    }\n    return max;\n}\n", "    let freq = {};\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max\
    \ = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let freq = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        let num = lst[i];\n        if (freq[num]) {\n            freq[num]++;\n\
    \        } else {\n            freq[num] = 1;\n        }\n    }\n    let max =\
    \ -1;\n    for (let key in freq) {\n        if (freq[key] >= key && key > max)\
    \ {\n            max = key;\n        }\n    }\n    return max;\n}\n", "    let\
    \ freq: number[] = [];\n    let max: number = 0;\n    let maxFreq: number = 0;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined)\
    \ {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n\
    \        }\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n          \
    \  max = lst[i];\n            maxFreq = freq[lst[i]];\n        }\n    }\n    return\
    \ max;\n}\n", "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        } else {\n\
    \            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i] && lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
  "    let max = Math.max(...lst);\n    let count = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] === max) {\n            count++;\n        }\n   \
    \ }\n    if (count >= max) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    let max = -1;\n    let count = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == max) {\n            count++;\n        }\n    }\n    if (count >= max) {\n\
    \        return max;\n    }\n    return -1;\n}\n", "    let count = 0;\n    let\
    \ max = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n   \
    \         count++;\n        }\n    }\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] === max) {\n            maxCount++;\n        }\n    }\n\
    \    if (count === maxCount) {\n        return max;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    let max = -1;\n    let freq = {};\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    for (let\
    \ key in freq) {\n        if (freq[key] >= key && key > max) {\n            max\
    \ = key;\n        }\n    }\n    return max;\n}\n", "    let count: number = 0;\n\
    \    let max: number = 0;\n    let maxCount: number = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ === max) {\n            maxCount++;\n        }\n    }\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n     \
    \       if (lst[i] === lst[j]) {\n                count++;\n            }\n  \
    \      }\n        if (count >= lst[i] && count >= maxCount) {\n            return\
    \ lst[i];\n        }\n        count = 0;\n    }\n    return -1;\n}\n", "    let\
    \ max = -1;\n    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n        } else {\n\
    \            freq[lst[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n\
    \        if (freq[key] >= key && key > max) {\n            max = key;\n      \
    \  }\n    }\n    return max;\n}\n", "    let max = -1;\n    let count = 0;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n    \
    \        max = lst[i];\n            count = 1;\n        } else if (lst[i] ===\
    \ max) {\n            count++;\n        }\n    }\n    return count >= max ? max\
    \ : -1;\n}\n", "    let freq: number[] = [];\n    let max: number = 0;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n          \
    \  max = lst[i];\n        }\n        if (freq[lst[i]] == undefined) {\n      \
    \      freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n    \
    \    }\n    }\n    for (let i = max; i > 0; i--) {\n        if (freq[i] >= i)\
    \ {\n            return i;\n        }\n    }\n    return -1;\n}\n", "    let result:\
    \ number = -1;\n    let frequency: number = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > frequency) {\n            frequency = 0;\n    \
    \        for (let j = 0; j < lst.length; j++) {\n                if (lst[i] ===\
    \ lst[j]) {\n                    frequency++;\n                }\n           \
    \ }\n            if (frequency >= lst[i]) {\n                result = lst[i];\n\
    \            }\n        }\n    }\n    return result;\n}\nconsole.log(search([4,\
    \ 1, 2, 2, 3, 1]));\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4]));\nconsole.log(search([5,\
    \ 5, 4, 4, 4]));\n", "    let freq: number[] = [];\n    let max: number = 0;\n\
    \    let maxFreq: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n  \
    \      if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        } else {\n  \
    \          freq[lst[i]] = 1;\n        }\n        if (lst[i] > max) {\n       \
    \     max = lst[i];\n        }\n    }\n    for (let i = 1; i <= max; i++) {\n\
    \        if (freq[i] >= i) {\n            maxFreq = i;\n        }\n    }\n   \
    \ if (maxFreq === 0) {\n        return -1;\n    }\n    return maxFreq;\n}\n",
  "    let freq: number[] = [];\n    let max: number = 0;\n    for (let i: number\
    \ = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n        }\n    }\n    for (let i: number\
    \ = max; i > 0; i--) {\n        if (freq[i] >= i) {\n            return i;\n \
    \       }\n    }\n    return -1;\n}\n", "    let max = -1;\n    let counter =\
    \ 0;\n    let num = 0;\n    for (let i = 0; i < lst.length; i++) {\n        counter\
    \ = 0;\n        for (let j = 0; j < lst.length; j++) {\n            if (lst[i]\
    \ === lst[j]) {\n                counter++;\n            }\n        }\n      \
    \  if (counter >= lst[i] && lst[i] > max) {\n            max = lst[i];\n     \
    \   }\n    }\n    return max;\n}\n", "    let result: number = -1;\n    let count:\
    \ number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            for (let j = 0; j < lst.length; j++) {\n               \
    \ if (lst[i] === lst[j]) {\n                    count++;\n                }\n\
    \            }\n            if (count >= lst[i]) {\n                result = lst[i];\n\
    \            }\n            count = 0;\n        }\n    }\n    return result;\n\
    }\n", "    let freq = lst.reduce((acc, curr) => {\n        acc[curr] = acc[curr]\
    \ + 1 || 1;\n        return acc;\n    }, {});\n    let max = -1;\n    for (let\
    \ i = 1; i < Object.keys(freq).length; i++) {\n        if (freq[i] >= i && freq[i]\
    \ > freq[max]) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
  "    let dict: { [key: number]: number } = {};\n    for (let i of lst) {\n     \
    \   if (dict[i]) {\n            dict[i] += 1;\n        } else {\n            dict[i]\
    \ = 1;\n        }\n    }\n    let max = -1;\n    for (let i of lst) {\n      \
    \  if (dict[i] >= i && i > max) {\n            max = i;\n        }\n    }\n  \
    \  return max;\n}\n", "    let result = -1;\n    let count = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++)\
    \ {\n            if (lst[i] === lst[j]) {\n                count++;\n        \
    \    }\n        }\n        if (count >= lst[i] && lst[i] > result) {\n       \
    \     result = lst[i];\n        }\n        count = 0;\n    }\n    return result;\n\
    }\n", "    let max: number = -1;\n    let count: number = 0;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length; j++) {\n\
    \            if (lst[i] === lst[j]) {\n                count++;\n            }\n\
    \        }\n        if (count >= lst[i] && lst[i] > max) {\n            max =\
    \ lst[i];\n        }\n        count = 0;\n    }\n    return max;\n}\n", "    let\
    \ max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n   \
    \         count++;\n        }\n    }\n    if (count >= max) {\n        return\
    \ max;\n    } else {\n        return -1;\n    }\n}\n", "  let max = -1;\n  let\
    \ freq = {};\n  for (let i = 0; i < lst.length; i++) {\n    if (freq[lst[i]])\
    \ {\n      freq[lst[i]]++;\n    } else {\n      freq[lst[i]] = 1;\n    }\n  }\n\
    \  for (let key in freq) {\n    if (freq[key] >= key && key > max) {\n      max\
    \ = key;\n    }\n  }\n  return max;\n}\n", "    let freq = {};\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max\
    \ = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n\
    \    return max;\n}\n", "    let max = 0;\n    let maxFreq = 0;\n    let freq\
    \ = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]])\
    \ {\n            freq[lst[i]]++;\n        } else {\n            freq[lst[i]] =\
    \ 1;\n        }\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n     \
    \       max = lst[i];\n            maxFreq = freq[lst[i]];\n        }\n    }\n\
    \    return max;\n}\n", "    let freq: number[] = [];\n    let maxFreq: number\
    \ = 0;\n    let maxFreqInt: number = -1;\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n        }\
    \ else {\n            freq[lst[i]] = 1;\n        }\n        if (freq[lst[i]] >\
    \ maxFreq) {\n            maxFreq = freq[lst[i]];\n            maxFreqInt = lst[i];\n\
    \        }\n    }\n    if (maxFreqInt > maxFreq) {\n        return maxFreqInt;\n\
    \    } else {\n        return -1;\n    }\n}\n", "    let freq = {};\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]]++;\n\
    \        } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max\
    \ = -1;\n    for (let key in freq) {\n        if (freq[key] >= key && key > max)\
    \ {\n            max = key;\n        }\n    }\n    return max;\n}\n", "    let\
    \ max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n   \
    \         count++;\n        }\n    }\n    if (count >= max) {\n        return\
    \ max;\n    } else {\n        return -1;\n    }\n}\n", "    let max = -1;\n  \
    \  let freq = 0;\n    let map = new Map<number, number>();\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (map.has(lst[i])) {\n            map.set(lst[i],\
    \ map.get(lst[i]) + 1);\n        } else {\n            map.set(lst[i], 1);\n \
    \       }\n    }\n    for (let [key, value] of map) {\n        if (key >= value\
    \ && key > max) {\n            max = key;\n            freq = value;\n       \
    \ }\n    }\n    return max;\n}\n", "    let result = -1;\n    let frequency =\
    \ {};\n    for (let i = 0; i < lst.length; i++) {\n        if (frequency[lst[i]])\
    \ {\n            frequency[lst[i]] += 1;\n        } else {\n            frequency[lst[i]]\
    \ = 1;\n        }\n    }\n    for (let key in frequency) {\n        if (frequency[key]\
    \ >= key && key > result) {\n            result = key;\n        }\n    }\n   \
    \ return result;\n}\n", "    let freq = {};\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (freq[lst[i]]) {\n            freq[lst[i]] += 1;\n      \
    \  } else {\n            freq[lst[i]] = 1;\n        }\n    }\n    let max = -1;\n\
    \    for (let key in freq) {\n        if (parseInt(key) <= freq[key] && parseInt(key)\
    \ > max) {\n            max = parseInt(key);\n        }\n    }\n    return max;\n\
    }\n", "    let max = -1;\n    let count = 0;\n    let maxCount = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max\
    \ = lst[i];\n            maxCount = 1;\n        } else if (lst[i] == max) {\n\
    \            maxCount++;\n        }\n    }\n    if (maxCount >= max) {\n     \
    \   return max;\n    } else {\n        return -1;\n    }\n}\n", "    const freq\
    \ = lst.reduce((acc, curr) => {\n        acc[curr] = acc[curr] ? acc[curr] + 1\
    \ : 1;\n        return acc;\n    }, {});\n    const sorted = Object.keys(freq).sort((a,\
    \ b) => freq[b] - freq[a]);\n    for (let i = 0; i < sorted.length; i++) {\n \
    \       if (freq[sorted[i]] >= +sorted[i]) {\n            return +sorted[i];\n\
    \        }\n    }\n    return -1;\n}\n", "    let frequency: number[] = [];\n\
    \    let max: number = 0;\n    let result: number = -1;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (frequency[lst[i]]) {\n            frequency[lst[i]]++;\n\
    \        } else {\n            frequency[lst[i]] = 1;\n        }\n        if (frequency[lst[i]]\
    \ >= lst[i] && lst[i] > max) {\n            max = lst[i];\n            result\
    \ = max;\n        }\n    }\n    return result;\n}\n", "    let result = -1;\n\
    \    let max = 0;\n    let count = 0;\n    let num = 0;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        count = 0;\n        num = lst[i];\n        for\
    \ (let j = 0; j < lst.length; j++) {\n            if (num === lst[j]) {\n    \
    \            count++;\n            }\n        }\n        if (count >= num && num\
    \ > max) {\n            max = num;\n            result = max;\n        }\n   \
    \ }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

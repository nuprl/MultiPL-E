name: HumanEval_95_check_dict_case
language: ts
prompt: "//Given a dictionary, return True if all keys are strings in lower \n// case\
  \ or all keys are strings in upper case, else return False.\n// The function should\
  \ return False is the given dictionary is empty.\n// Examples:\n// >>> check_dict_case({\"\
  a\": \"apple\", \"b\": \"banana\"})\n// true\n// >>> check_dict_case({\"a\": \"\
  apple\", \"A\": \"banana\", \"B\": \"banana\"})\n// false\n// >>> check_dict_case({\"\
  a\": \"apple\", 8: \"banana\", \"a\": \"apple\"})\n// false\n// >>> check_dict_case({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"})\n// false\n// >>> check_dict_case({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"})\n// true\nfunction check_dict_case(dict: {[key:\
  \ string]: string}): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = check_dict_case;\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"b\": \"banana\"}),true);\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"A\": \"banana\", \"B\": \"banana\"}),false);\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"}),false);\n  assert.deepEqual(candidate({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}),false);\n  assert.deepEqual(candidate({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"}),true);\n  assert.deepEqual(candidate({\"fruit\"\
  : \"Orange\", \"taste\": \"Sweet\"}),true);\n  assert.deepEqual(candidate({}),false);\n\
  }\n\ntest();"
completions: ["    let lower: boolean = true;\n    let upper: boolean = true;\n  \
    \  for (let key in dict) {\n        if (key.toLowerCase() !== key) {\n       \
    \     lower = false;\n        }\n        if (key.toUpperCase() !== key) {\n  \
    \          upper = false;\n        }\n    }\n    return lower || upper;\n}\n",
  "    let keys = Object.keys(dict);\n    if (keys.length === 0) {\n        return\
    \ false;\n    }\n    let isLower = keys[0].toLowerCase() === keys[0];\n    for\
    \ (let key of keys) {\n        if (isLower && key.toLowerCase() !== key) {\n \
    \           return false;\n        }\n        if (!isLower && key.toUpperCase()\
    \ !== key) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    if (Object.keys(dict).length === 0) {\n        return false;\n    }\n\
    \    let isUpper = false;\n    let isLower = false;\n    for (let key in dict)\
    \ {\n        if (key.toUpperCase() === key) {\n            isUpper = true;\n \
    \       } else if (key.toLowerCase() === key) {\n            isLower = true;\n\
    \        } else {\n            return false;\n        }\n    }\n    return isUpper\
    \ || isLower;\n}\n", "    let isLower = true;\n    let isUpper = true;\n    for\
    \ (let key in dict) {\n        if (key.toLowerCase() !== key) {\n            isLower\
    \ = false;\n        }\n        if (key.toUpperCase() !== key) {\n            isUpper\
    \ = false;\n        }\n    }\n    return isLower || isUpper;\n}\n", "    let lower\
    \ = true;\n    let upper = true;\n    for (let key in dict) {\n        if (key.toLowerCase()\
    \ !== key) {\n            lower = false;\n        }\n        if (key.toUpperCase()\
    \ !== key) {\n            upper = false;\n        }\n    }\n    return lower ||\
    \ upper;\n}\n", "    let is_lower: boolean = false;\n    let is_upper: boolean\
    \ = false;\n    for (let key in dict) {\n        if (key.toLowerCase() === key)\
    \ {\n            is_lower = true;\n        } else if (key.toUpperCase() === key)\
    \ {\n            is_upper = true;\n        } else {\n            return false;\n\
    \        }\n    }\n    return is_lower || is_upper;\n}\n", "    if (Object.keys(dict).length\
    \ === 0) {\n        return false;\n    }\n    let lowerCase = true;\n    let upperCase\
    \ = true;\n    for (let key in dict) {\n        if (key.toLowerCase() !== key)\
    \ {\n            lowerCase = false;\n        }\n        if (key.toUpperCase()\
    \ !== key) {\n            upperCase = false;\n        }\n    }\n    return lowerCase\
    \ || upperCase;\n}\n", "    if (Object.keys(dict).length === 0) {\n        return\
    \ false;\n    }\n    let lowerCase = true;\n    let upperCase = true;\n    for\
    \ (let key in dict) {\n        if (key.toLowerCase() !== key) {\n            lowerCase\
    \ = false;\n        }\n        if (key.toUpperCase() !== key) {\n            upperCase\
    \ = false;\n        }\n    }\n    return lowerCase || upperCase;\n}\n", "    let\
    \ lowerCase: boolean = true;\n    let upperCase: boolean = true;\n    for (let\
    \ key in dict) {\n        if (key.toLowerCase() !== key) {\n            lowerCase\
    \ = false;\n        }\n        if (key.toUpperCase() !== key) {\n            upperCase\
    \ = false;\n        }\n    }\n    return lowerCase || upperCase;\n}\n", "    let\
    \ upper = true;\n    let lower = true;\n    for (let key in dict) {\n        if\
    \ (key.toUpperCase() !== key) {\n            upper = false;\n        }\n     \
    \   if (key.toLowerCase() !== key) {\n            lower = false;\n        }\n\
    \    }\n    return upper || lower;\n}\n", "    if (Object.keys(dict).length ===\
    \ 0) {\n        return false;\n    }\n    let isLower = true;\n    let isUpper\
    \ = true;\n    for (let key in dict) {\n        if (key.toLowerCase() !== key)\
    \ {\n            isLower = false;\n        }\n        if (key.toUpperCase() !==\
    \ key) {\n            isUpper = false;\n        }\n    }\n    return isLower ||\
    \ isUpper;\n}\n", "    let keys = Object.keys(dict);\n    let lowercase = keys.every(key\
    \ => key.toLowerCase() === key);\n    let uppercase = keys.every(key => key.toUpperCase()\
    \ === key);\n    return lowercase || uppercase;\n}\n", "    let lowerCase = true;\n\
    \    let upperCase = true;\n    for (let key in dict) {\n        if (key.toLowerCase()\
    \ !== key) {\n            lowerCase = false;\n        }\n        if (key.toUpperCase()\
    \ !== key) {\n            upperCase = false;\n        }\n    }\n    return lowerCase\
    \ || upperCase;\n}\n", "    let lowerCase: boolean = false;\n    let upperCase:\
    \ boolean = false;\n    for (let key in dict) {\n        if (key.toLowerCase()\
    \ === key) {\n            lowerCase = true;\n        } else if (key.toUpperCase()\
    \ === key) {\n            upperCase = true;\n        } else {\n            return\
    \ false;\n        }\n    }\n    return lowerCase || upperCase;\n}\n", "    if\
    \ (Object.keys(dict).length === 0) {\n        return false;\n    }\n    let lowerCase\
    \ = true;\n    let upperCase = true;\n    for (let key in dict) {\n        if\
    \ (key.toLowerCase() !== key) {\n            lowerCase = false;\n        }\n \
    \       if (key.toUpperCase() !== key) {\n            upperCase = false;\n   \
    \     }\n    }\n    return lowerCase || upperCase;\n}\n", "    let isUpper = true;\n\
    \    let isLower = true;\n    for (let key in dict) {\n        if (key.toUpperCase()\
    \ !== key) {\n            isUpper = false;\n        }\n        if (key.toLowerCase()\
    \ !== key) {\n            isLower = false;\n        }\n    }\n    return isUpper\
    \ || isLower;\n}\n", "    if (Object.keys(dict).length === 0) {\n        return\
    \ false;\n    }\n    let lower = true;\n    let upper = true;\n    for (let key\
    \ in dict) {\n        if (key !== key.toLowerCase()) {\n            lower = false;\n\
    \        }\n        if (key !== key.toUpperCase()) {\n            upper = false;\n\
    \        }\n    }\n    return lower || upper;\n}\n", "    let keys = Object.keys(dict);\n\
    \    if (keys.length === 0) {\n        return false;\n    }\n    let isUpper =\
    \ keys[0].toUpperCase() === keys[0];\n    for (let i = 1; i < keys.length; i++)\
    \ {\n        if (isUpper && keys[i].toUpperCase() !== keys[i]) {\n           \
    \ return false;\n        }\n        if (!isUpper && keys[i].toLowerCase() !==\
    \ keys[i]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let keys = Object.keys(dict);\n    if (keys.length === 0) {\n     \
    \   return false;\n    }\n    let isLower = keys[0].toLowerCase() === keys[0];\n\
    \    for (let key of keys) {\n        if (isLower && key.toLowerCase() !== key)\
    \ {\n            return false;\n        }\n        if (!isLower && key.toUpperCase()\
    \ !== key) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let lowerCase = true;\n    let upperCase = true;\n    for (let key\
    \ in dict) {\n        if (key.toLowerCase() !== key) {\n            lowerCase\
    \ = false;\n        }\n        if (key.toUpperCase() !== key) {\n            upperCase\
    \ = false;\n        }\n    }\n    return lowerCase || upperCase;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_141_file_name_check
language: ts
prompt: "//Create a function which takes a string representing a file's name, and\
  \ returns\n// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  // A file's name is considered to be valid if and only if all the following conditions\
  \ \n// are met:\n// - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n// - The file's name contains exactly one dot '.'\n// - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n// the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n// - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n// Examples:\n// >>> file_name_check(\"\
  example.txt\")\n// \"Yes\"\n// >>> file_name_check(\"1example.dll\")\n// \"No\"\n\
  function file_name_check(file_name: string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = file_name_check;\n  assert.deepEqual(candidate(\"\
  example.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"1example.dll\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"s1sdf3.asd\"),\"No\");\n  assert.deepEqual(candidate(\"\
  K.dll\"),\"Yes\");\n  assert.deepEqual(candidate(\"MY16FILE3.exe\"),\"Yes\");\n\
  \  assert.deepEqual(candidate(\"His12FILE94.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _Y.txt\"),\"No\");\n  assert.deepEqual(candidate(\"?aREYA.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  /this_is_valid.dll\"),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.wow\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  this_is_valid.txtexe\"),\"No\");\n  assert.deepEqual(candidate(\"#this2_i4s_5valid.ten\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"@this1_is6_valid.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  this_is_12valid.6exe4.txt\"),\"No\");\n  assert.deepEqual(candidate(\"all.exe.txt\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"I563_No.exe\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  Is3youfault.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"no_one#knows.dll\"\
  ),\"Yes\");\n  assert.deepEqual(candidate(\"1I563_Yes3.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  I563_Yes3.txtt\"),\"No\");\n  assert.deepEqual(candidate(\"final..txt\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"final132\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _f4indsartal132.\"),\"No\");\n  assert.deepEqual(candidate(\".txt\"),\"No\");\n\
  \  assert.deepEqual(candidate(\"s.\"),\"No\");\n}\n\ntest();"
completions: ["    // TODO: Implement this function\n    return \"No\";\n}\n", " \
    \   let file_name_regex: RegExp = /^[a-zA-Z]{1}[a-zA-Z0-9]{0,2}\\.[a-zA-Z]{3}$/;\n\
    \    return file_name_regex.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let\
    \ dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index == -1)\
    \ {\n        return \"No\";\n    }\n    if (name.length == 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let file_name_regex: RegExp = /^[a-zA-Z][a-zA-Z0-9]{0,3}\\\
    .(txt|exe|dll)$/;\n    return file_name_regex.test(file_name) ? \"Yes\" : \"No\"\
    ;\n}\n", "    let dot_index = file_name.indexOf('.');\n    let ext = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits = 0;\n\
    \    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0' && name[i]\
    \ <= '9') {\n            digits++;\n        }\n    }\n    if (digits > 3) {\n\
    \        return \"No\";\n    }\n    if (ext != 'txt' && ext != 'exe' && ext !=\
    \ 'dll') {\n        return \"No\";\n    }\n    if (name.length == 0 || (name[0]\
    \ < 'a' || name[0] > 'z') && (name[0] < 'A' || name[0] > 'Z')) {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let before_dot = file_name.substring(0, dot_index);\n    let after_dot =\
    \ file_name.substring(dot_index + 1);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < before_dot.length; i++) {\n        if (before_dot[i] >= '0' && before_dot[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (before_dot.length == 0 || (before_dot[0]\
    \ < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if (after_dot != 'txt' && after_dot !=\
    \ 'exe' && after_dot != 'dll') {\n        return \"No\";\n    }\n    return \"\
    Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let file_name_before_dot\
    \ = file_name.substring(0, dot_index);\n    let file_name_after_dot = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = valid_extensions.includes(file_name_after_dot);\n    let valid_file_name_before_dot\
    \ = file_name_before_dot.match(/[a-zA-Z]/g) && file_name_before_dot.match(/[a-zA-Z]/g).length\
    \ === 1 && file_name_before_dot.match(/[0-9]/g) && file_name_before_dot.match(/[0-9]/g).length\
    \ <= 3;\n    return valid_file_name_before_dot && valid_extension ? 'Yes' : 'No';\n\
    }\n", "    let dot_index = file_name.indexOf('.');\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let file_extension = file_name.substring(dot_index\
    \ + 1);\n    let digits_count = 0;\n    for (let i = 0; i < file_name_without_extension.length;\
    \ i++) {\n        if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'z' ||\n        (file_name_without_extension[0]\
    \ > 'Z' && file_name_without_extension[0] < 'a')) {\n        return \"No\";\n\
    \    }\n    if (file_extension != \"txt\" && file_extension != \"exe\" && file_extension\
    \ != \"dll\") {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", " \
    \   let dot_index = file_name.indexOf('.');\n    let file_name_before_dot = file_name.substring(0,\
    \ dot_index);\n    let file_name_after_dot = file_name.substring(dot_index + 1);\n\
    \    let file_name_after_dot_is_valid = file_name_after_dot === 'txt' || file_name_after_dot\
    \ === 'exe' || file_name_after_dot === 'dll';\n    let file_name_before_dot_is_valid\
    \ = file_name_before_dot.length > 0 && file_name_before_dot[0].match(/[a-zA-Z]/);\n\
    \    let file_name_is_valid = file_name_after_dot_is_valid && file_name_before_dot_is_valid;\n\
    \    let file_name_has_more_than_three_digits = file_name.match(/[0-9]/g).length\
    \ > 3;\n    return file_name_is_valid && !file_name_has_more_than_three_digits\
    \ ? 'Yes' : 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n    let\
    \ dot_count = 0;\n    let digit_count = 0;\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ == '.') {\n            dot_count++;\n        }\n        if (file_name[i] >=\
    \ '0' && file_name[i] <= '9') {\n            digit_count++;\n        }\n    }\n\
    \    for (let i = 0; i < valid_extensions.length; i++) {\n        if (extension\
    \ == valid_extensions[i]) {\n            valid_extension = true;\n        }\n\
    \    }\n    if (dot_count == 1 && digit_count <= 3 && valid_extension) {\n   \
    \     return 'Yes';\n    }\n    return 'No';\n}\n", "    const file_name_regex\
    \ = /^[a-zA-Z][a-zA-Z0-9]{0,3}\\.(txt|exe|dll)$/;\n    return file_name_regex.test(file_name)\
    \ ? \"Yes\" : \"No\";\n}\n", "    let dot_index = file_name.indexOf('.');\n  \
    \  let extension = file_name.substring(dot_index + 1);\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < file_name_without_extension.length; i++) {\n        if (file_name_without_extension[i]\
    \ >= '0' && file_name_without_extension[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name.indexOf('.') != file_name.lastIndexOf('.')) {\n        return\
    \ \"No\";\n    }\n    if (file_name_without_extension.length == 0) {\n       \
    \ return \"No\";\n    }\n    if (file_name_without_extension[0] < 'A' || file_name_without_extension[0]\
    \ > 'z' ||\n        (file_name_without_extension[0] > 'Z' && file_name_without_extension[0]\
    \ < 'a')) {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let file_name_regex = /^[a-zA-Z]{1}[a-zA-Z0-9]{0,3}\\.(txt|exe|dll)$/;\n\
    \    return file_name_regex.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let\
    \ dot_index = file_name.indexOf('.');\n    let dot_count = 0;\n    let digit_count\
    \ = 0;\n    let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = false;\n    let valid_name\
    \ = false;\n    let valid_name_characters = 0;\n    let valid_name_characters_count\
    \ = 0;\n    let valid_name_characters_count_max = 0;\n    let valid_name_characters_count_min\
    \ = 0;\n    let valid_name_characters_count_min_max = 0;\n    let valid_name_characters_count_min_max_count\
    \ = 0;\n    let valid_name_characters_count_min_max_count_max = 0;\n    let valid_name_characters_count_min_max_count_min\
    \ = 0;\n    let valid_name_characters_count_min_max_count_min_max = 0;\n    let\
    \ valid_name_characters_count_min_max_count_min_max_count = 0;\n    let valid_name_characters_count_min_max_count_min_max_count_max\
    \ = 0;\n    let valid_name_characters_count_min_max_count_min_max_count_min =\
    \ 0;\n    let valid_name_characters_count_min_max_count_min_max_count_min_max\
    \ = 0;\n    let valid_name_characters_count_min_max_count_min_max_count_min_max_count\
    \ = 0;\n    let valid_name_characters_count_min_max_count_min_max_count_min_max_count_max\
    \ = 0;\n    let valid_name_characters_count_min_max_count_min_max_count_min_max_count_min\
    \ = 0;\n    let valid_name_characters_count_min_max_count_min_max_count_min_max_count_min_max\
    \ = 0;\n    let valid_name_characters_count", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (extension != \"txt\" && extension != \"exe\" && extension != \"dll\"\
    ) {\n        return \"No\";\n    }\n    if (name.length == 0 || (name[0] < 'a'\
    \ || name[0] > 'z') && (name[0] < 'A' || name[0] > 'Z')) {\n        return \"\
    No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let dot_count = 0;\n    let digit_count = 0;\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    let valid_name = false;\n    let valid_digit_count = false;\n\
    \    let valid_dot_count = false;\n\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] === '.') {\n            dot_count++;\n    \
    \    }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n          \
    \  digit_count++;\n        }\n    }\n\n    if (dot_count === 1) {\n        valid_dot_count\
    \ = true;\n    }\n\n    if (digit_count <= 3) {\n        valid_digit_count = true;\n\
    \    }\n\n    for (let i = 0; i < valid_extensions.length; i++) {\n        if\
    \ (extension === valid_extensions[i]) {\n            valid_extension = true;\n\
    \        }\n    }\n\n    if (file_name[0] >= 'a' && file_name[0] <= 'z' || file_name[0]\
    \ >= 'A' && file_name[0] <= 'Z') {\n        valid_name = true;\n    }\n\n    if\
    \ (valid_digit_count && valid_dot_count && valid_extension && valid_name) {\n\
    \        return 'Yes';\n    } else {\n        return 'No';\n    }\n}\n", "   \
    \ let dot_index = file_name.indexOf('.');\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = valid_extensions.includes(extension);\n    let valid_name = /^[a-zA-Z][a-zA-Z0-9]*$/.test(file_name_without_extension);\n\
    \    let valid_digits = /^[a-zA-Z0-9]*$/.test(file_name_without_extension);\n\
    \    let valid_digits_count = file_name_without_extension.match(/[0-9]/g).length\
    \ <= 3;\n    return valid_name && valid_extension && valid_digits && valid_digits_count\
    \ ? 'Yes' : 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n    let\
    \ file_name_without_extension = file_name.substring(0, dot_index);\n    let file_extension\
    \ = file_name.substring(dot_index + 1);\n    let digit_count = 0;\n    for (let\
    \ i = 0; i < file_name_without_extension.length; i++) {\n        if (file_name_without_extension[i]\
    \ >= '0' && file_name_without_extension[i] <= '9') {\n            digit_count++;\n\
    \        }\n    }\n    if (digit_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name_without_extension.length == 0) {\n        return \"No\";\n\
    \    }\n    if (file_name_without_extension[0] < 'a' || file_name_without_extension[0]\
    \ > 'z' && file_name_without_extension[0] < 'A' || file_name_without_extension[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (file_extension != 'txt' &&\
    \ file_extension != 'exe' && file_extension != 'dll') {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let sub_string_before_dot = file_name.substring(0, dot_index);\n    let sub_string_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let digit_count = 0;\n    for (let\
    \ i = 0; i < sub_string_before_dot.length; i++) {\n        if (sub_string_before_dot[i]\
    \ >= '0' && sub_string_before_dot[i] <= '9') {\n            digit_count++;\n \
    \       }\n    }\n    if (digit_count > 3) {\n        return \"No\";\n    }\n\
    \    if (sub_string_before_dot.length == 0) {\n        return \"No\";\n    }\n\
    \    if (sub_string_before_dot[0] < 'a' || sub_string_before_dot[0] > 'z' && sub_string_before_dot[0]\
    \ < 'A' || sub_string_before_dot[0] > 'Z') {\n        return \"No\";\n    }\n\
    \    if (sub_string_after_dot != 'txt' && sub_string_after_dot != 'exe' && sub_string_after_dot\
    \ != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "   \
    \ let count = 0;\n    let dot = false;\n    let extension = false;\n    let valid\
    \ = false;\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if\
    \ (file_name[i] == '.') {\n            dot = true;\n        }\n        if (file_name[i]\
    \ == '.' && file_name[i + 1] == 't' && file_name[i + 2] == 'x' && file_name[i\
    \ + 3] == 't') {\n            extension = true;\n        }\n        if (file_name[i]\
    \ == '.' && file_name[i + 1] == 'e' && file_name[i + 2] == 'x' && file_name[i\
    \ + 3] == 'e') {\n            extension = true;\n        }\n        if (file_name[i]\
    \ == '.' && file_name[i + 1] == 'd' && file_name[i + 2] == 'l' && file_name[i\
    \ + 3] == 'l') {\n            extension = true;\n        }\n        if (file_name[0]\
    \ >= 'a' && file_name[0] <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z')\
    \ {\n            valid = true;\n        }\n    }\n    if (count <= 3 && dot ==\
    \ true && extension == true && valid == true) {\n        return \"Yes\";\n   \
    \ }\n    else {\n        return \"No\";\n    }\n}\n", "    let count = 0;\n  \
    \  let dot = false;\n    let dot_index = 0;\n    let extension = false;\n    let\
    \ extension_index = 0;\n    let valid_extension = false;\n    let valid_extension_list\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension_list_index = 0;\n    let valid_extension_list_length\
    \ = valid_extension_list.length;\n    let valid_extension_list_element = '';\n\
    \    let valid_extension_list_element_length = 0;\n    let valid_extension_list_element_index\
    \ = 0;\n    let valid_extension_list_element_char = '';\n    let valid_extension_list_element_char_code\
    \ = 0;\n    let valid_extension_list_element_char_code_is_valid = false;\n   \
    \ let file_name_length = file_name.length;\n    let file_name_index = 0;\n   \
    \ let file_name_char = '';\n    let file_name_char_code = 0;\n    let file_name_char_code_is_valid\
    \ = false;\n    let file_name_char_code_is_valid_letter = false;\n    let file_name_char_code_is_valid_digit\
    \ = false;\n    let file_name_char_code_is_valid_dot = false;\n    let file_name_char_code_is_valid_extension\
    \ = false;\n    let file_name_char_code_is_valid_extension_letter = false;\n \
    \   let file_name_char_code_is_valid_extension_digit = false;\n    let file_name_char_code_is_valid_extension_dot\
    \ = false;\n    let file_name_char_code_is_valid_extension_letter_or_digit = false;\n\
    \    let file_name_char_code_is_valid_extension_letter_or_digit_or_dot = false;\n\
    \    let file_name_char_code_is_valid_letter_or_digit = false;\n    let file_name_char_code_is_valid_letter_",
  "    let count = 0;\n    let dot = false;\n    let dot_index = 0;\n    let extension\
    \ = \"\";\n    let valid = false;\n    for (let i = 0; i < file_name.length; i++)\
    \ {\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n        if (file_name[i] == '.') {\n            dot = true;\n    \
    \        dot_index = i;\n        }\n    }\n    if (count > 3) {\n        return\
    \ \"No\";\n    }\n    if (dot == false) {\n        return \"No\";\n    }\n   \
    \ extension = file_name.substring(dot_index + 1);\n    if (extension == \"txt\"\
    \ || extension == \"exe\" || extension == \"dll\") {\n        valid = true;\n\
    \    }\n    if (valid == false) {\n        return \"No\";\n    }\n    if (file_name[0]\
    \ >= 'a' && file_name[0] <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z')\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let dot_count = 0;\n    let digit_count = 0;\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = false;\n    let valid_name\
    \ = false;\n    let valid_digits = false;\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \   }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n           \
    \ digit_count++;\n        }\n    }\n    if (dot_count == 1) {\n        valid_name\
    \ = true;\n    }\n    if (digit_count <= 3) {\n        valid_digits = true;\n\
    \    }\n    for (let i = 0; i < valid_extensions.length; i++) {\n        if (extension\
    \ == valid_extensions[i]) {\n            valid_extension = true;\n        }\n\
    \    }\n    if (valid_name && valid_digits && valid_extension) {\n        return\
    \ 'Yes';\n    }\n    return 'No';\n}\n", "    let re = /^[a-zA-Z]\\w{0,3}\\.txt|exe|dll$/;\n\
    \    return re.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let count = 0;\n\
    \    let dot = false;\n    let valid_extension = false;\n    let valid_name =\
    \ false;\n    let extension = \"\";\n    let name = \"\";\n    for (let i = 0;\
    \ i < file_name.length; i++) {\n        if (file_name[i] == \".\") {\n       \
    \     dot = true;\n            name = file_name.substring(0, i);\n           \
    \ extension = file_name.substring(i + 1, file_name.length);\n        }\n     \
    \   if (file_name[i] >= \"0\" && file_name[i] <= \"9\") {\n            count++;\n\
    \        }\n    }\n    if (count > 3) {\n        return \"No\";\n    }\n    if\
    \ (dot == false) {\n        return \"No\";\n    }\n    if (name.length == 0) {\n\
    \        return \"No\";\n    }\n    if (name[0] >= \"a\" && name[0] <= \"z\" ||\
    \ name[0] >= \"A\" && name[0] <= \"Z\") {\n        valid_name = true;\n    }\n\
    \    if (extension == \"txt\" || extension == \"exe\" || extension == \"dll\"\
    ) {\n        valid_extension = true;\n    }\n    if (valid_name == true && valid_extension\
    \ == true) {\n        return \"Yes\";\n    }\n    return \"No\";\n}\n", "    let\
    \ regex = /^[a-zA-Z]{1}[a-zA-Z0-9]{0,3}\\.(txt|exe|dll)$/;\n    return regex.test(file_name)\
    \ ? \"Yes\" : \"No\";\n}\n", "    let dot_index = file_name.indexOf('.');\n  \
    \  let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = valid_extensions.indexOf(extension)\
    \ != -1;\n    let valid_name = file_name.substring(0, dot_index).match(/[a-zA-Z]/g)\
    \ != null;\n    let valid_digits = file_name.match(/[0-9]/g) == null || file_name.match(/[0-9]/g).length\
    \ <= 3;\n    return valid_extension && valid_name && valid_digits ? 'Yes' : 'No';\n\
    }\n", "    let count = 0;\n    let dot_count = 0;\n    let dot_index = 0;\n  \
    \  let substring_before_dot = '';\n    let substring_after_dot = '';\n    let\
    \ valid_substring_after_dot = ['txt', 'exe', 'dll'];\n    for (let i = 0; i <\
    \ file_name.length; i++) {\n        if (file_name[i] >= '0' && file_name[i] <=\
    \ '9') {\n            count++;\n        }\n        if (file_name[i] === '.') {\n\
    \            dot_count++;\n            dot_index = i;\n        }\n    }\n    if\
    \ (count > 3 || dot_count !== 1) {\n        return 'No';\n    }\n    substring_before_dot\
    \ = file_name.substring(0, dot_index);\n    substring_after_dot = file_name.substring(dot_index\
    \ + 1);\n    if (substring_before_dot.length === 0 ||\n        (substring_before_dot[0]\
    \ < 'a' || substring_before_dot[0] > 'z') &&\n        (substring_before_dot[0]\
    \ < 'A' || substring_before_dot[0] > 'Z')) {\n        return 'No';\n    }\n  \
    \  if (valid_substring_after_dot.indexOf(substring_after_dot) === -1) {\n    \
    \    return 'No';\n    }\n    return 'Yes';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index === -1) {\n        return \"No\";\n    }\n    if (name.length\
    \ === 0) {\n        return \"No\";\n    }\n    if (name[0] < 'a' || name[0] >\
    \ 'z' && name[0] < 'A' || name[0] > 'Z') {\n        return \"No\";\n    }\n  \
    \  if (extension !== 'txt' && extension !== 'exe' && extension !== 'dll') {\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let file_name_without_extension = file_name.substring(0,\
    \ dot_index);\n    let extension = file_name.substring(dot_index + 1);\n    let\
    \ valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension = valid_extensions.indexOf(extension)\
    \ >= 0;\n    let valid_file_name = file_name_without_extension.match(/\\d/g) ===\
    \ null || file_name_without_extension.match(/\\d/g).length <= 3;\n    let valid_first_letter\
    \ = file_name_without_extension.match(/[a-zA-Z]/g) !== null;\n    return valid_extension\
    \ && valid_file_name && valid_first_letter ? 'Yes' : 'No';\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let dot_count = 0;\n    let digit_count = 0;\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = false;\n    let valid_name\
    \ = false;\n    let valid_digit_count = false;\n    let valid_dot_count = false;\n\
    \n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i] ==\
    \ '.') {\n            dot_count++;\n        }\n        if (file_name[i] >= '0'\
    \ && file_name[i] <= '9') {\n            digit_count++;\n        }\n    }\n\n\
    \    if (digit_count <= 3) {\n        valid_digit_count = true;\n    }\n\n   \
    \ if (dot_count == 1) {\n        valid_dot_count = true;\n    }\n\n    for (let\
    \ i = 0; i < valid_extensions.length; i++) {\n        if (extension == valid_extensions[i])\
    \ {\n            valid_extension = true;\n        }\n    }\n\n    if (file_name[0]\
    \ >= 'a' && file_name[0] <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z')\
    \ {\n        valid_name = true;\n    }\n\n    if (valid_digit_count && valid_dot_count\
    \ && valid_extension && valid_name) {\n        return 'Yes';\n    } else {\n \
    \       return 'No';\n    }\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_before_dot = file_name.substring(0, dot_index);\n    let file_name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let valid_extensions = ['txt', 'exe',\
    \ 'dll'];\n    let valid_extension = false;\n    for (let i = 0; i < valid_extensions.length;\
    \ i++) {\n        if (file_name_after_dot === valid_extensions[i]) {\n       \
    \     valid_extension = true;\n        }\n    }\n    if (file_name_before_dot.length\
    \ > 0 && file_name_before_dot[0].match(/[a-zA-Z]/) && valid_extension && file_name.match(/[0-9]/g).length\
    \ <= 3) {\n        return \"Yes\";\n    }\n    return \"No\";\n}\n", "    const\
    \ file_name_regex = /^[a-zA-Z][a-zA-Z0-9]{0,3}\\.(txt|exe|dll)$/;\n    return\
    \ file_name_regex.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let count =\
    \ 0;\n    let dot_count = 0;\n    let dot_index = 0;\n    let file_name_length\
    \ = file_name.length;\n    let file_name_substring_after_dot = \"\";\n    let\
    \ file_name_substring_before_dot = \"\";\n    let file_name_substring_before_dot_length\
    \ = 0;\n    let file_name_substring_before_dot_first_char = \"\";\n    let file_name_substring_before_dot_first_char_code\
    \ = 0;\n    let file_name_substring_before_dot_first_char_code_is_valid = false;\n\
    \    let file_name_substring_after_dot_is_valid = false;\n    let file_name_is_valid\
    \ = false;\n\n    for (let i = 0; i < file_name_length; i++) {\n        if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if\
    \ (file_name[i] == '.') {\n            dot_count++;\n            dot_index = i;\n\
    \        }\n    }\n\n    if (count <= 3 && dot_count == 1) {\n        file_name_substring_before_dot\
    \ = file_name.substring(0, dot_index);\n        file_name_substring_after_dot\
    \ = file_name.substring(dot_index + 1, file_name_length);\n        file_name_substring_before_dot_length\
    \ = file_name_substring_before_dot.length;\n        file_name_substring_before_dot_first_char\
    \ = file_name_substring_before_dot[0];\n        file_name_substring_before_dot_first_char_code\
    \ = file_name_substring_before_dot_first_char.charCodeAt(0);\n        file_name_substring_before_dot_first_char_code_is_valid\
    \ = (file_name_substring_before_dot_first_char_code >= 65 && file_name_substring_before_dot_first_char_code\
    \ <= 90)", "    let dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digit_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digit_count++;\n        }\n    }\n    if (digit_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (dot_index == -1) {\n        return\
    \ \"No\";\n    }\n    if (name.length == 0) {\n        return \"No\";\n    }\n\
    \    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0] > 'Z') {\n\
    \        return \"No\";\n    }\n    if (extension != 'txt' && extension != 'exe'\
    \ && extension != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\"\
    ;\n}\n", "    let dot_index = file_name.indexOf('.');\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = valid_extensions.includes(extension);\n    let valid_name = /^[a-zA-Z][a-zA-Z0-9]*$/.test(file_name_without_extension);\n\
    \    let valid_digits = /\\d{4,}/.test(file_name_without_extension);\n    return\
    \ valid_extension && valid_name && !valid_digits ? 'Yes' : 'No';\n}\n", "    let\
    \ count = 0;\n    let dot_index = 0;\n    let dot_count = 0;\n    let extension\
    \ = \"\";\n    let valid_extensions = [\"txt\", \"exe\", \"dll\"];\n    for (let\
    \ i = 0; i < file_name.length; i++) {\n        if (file_name[i] == \".\") {\n\
    \            dot_index = i;\n            dot_count++;\n        }\n        if (file_name[i]\
    \ >= \"0\" && file_name[i] <= \"9\") {\n            count++;\n        }\n    }\n\
    \    if (count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n    if\
    \ (file_name[0] < \"a\" || file_name[0] > \"z\" && file_name[0] < \"A\" || file_name[0]\
    \ > \"Z\") {\n        return \"No\";\n    }\n    for (let i = dot_index + 1; i\
    \ < file_name.length; i++) {\n        extension += file_name[i];\n    }\n    if\
    \ (valid_extensions.indexOf(extension) == -1) {\n        return \"No\";\n    }\n\
    \    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n   \
    \ let file_name_without_extension = file_name.substring(0, dot_index);\n    let\
    \ extension = file_name.substring(dot_index + 1);\n    let valid_extensions =\
    \ ['txt', 'exe', 'dll'];\n    let valid_extension = valid_extensions.includes(extension);\n\
    \    let valid_file_name = file_name_without_extension.match(/[0-9]/g) === null\
    \ || file_name_without_extension.match(/[0-9]/g).length <= 3;\n    let valid_file_name_without_extension\
    \ = file_name_without_extension.match(/[a-zA-Z]/g) !== null && file_name_without_extension.match(/[a-zA-Z]/g).length\
    \ > 0;\n    return valid_extension && valid_file_name && valid_file_name_without_extension\
    \ ? 'Yes' : 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n    let\
    \ extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    if (name.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z'\
    \ && name[0] < 'A' || name[0] > 'Z') {\n        return \"No\";\n    }\n    if\
    \ (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n       \
    \ return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_before_dot = file_name.substring(0, dot_index);\n    let file_name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let valid_extensions = ['txt', 'exe',\
    \ 'dll'];\n    let digit_count = 0;\n    let is_valid = true;\n    for (let i\
    \ = 0; i < file_name_before_dot.length; i++) {\n        if (file_name_before_dot[i]\
    \ >= '0' && file_name_before_dot[i] <= '9') {\n            digit_count++;\n  \
    \      }\n    }\n    if (digit_count > 3 || file_name_before_dot.length == 0 ||\n\
    \        file_name_before_dot[0] < 'a' || file_name_before_dot[0] > 'z' &&\n \
    \       file_name_before_dot[0] < 'A' || file_name_before_dot[0] > 'Z') {\n  \
    \      is_valid = false;\n    }\n    if (valid_extensions.indexOf(file_name_after_dot)\
    \ == -1) {\n        is_valid = false;\n    }\n    if (is_valid) {\n        return\
    \ \"Yes\";\n    }\n    return \"No\";\n}\n", "    let file_name_regex = /^[a-zA-Z]\\\
    w{0,2}\\.[a-zA-Z]{3}$/;\n    if (file_name_regex.test(file_name)) {\n        return\
    \ \"Yes\";\n    }\n    return \"No\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_without_extension = file_name.substring(0, dot_index);\n  \
    \  let file_extension = file_name.substring(dot_index + 1);\n    let number_of_digits\
    \ = 0;\n    for (let i = 0; i < file_name_without_extension.length; i++) {\n \
    \       if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            number_of_digits++;\n        }\n    }\n    if (number_of_digits\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < 'a' || file_name_without_extension[0] > 'z') {\n        if (file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'Z') {\n            return \"No\"\
    ;\n        }\n    }\n    if (file_extension != \"txt\" && file_extension != \"\
    exe\" && file_extension != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let dot_count\
    \ = 0;\n    let digit_count = 0;\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    let valid_prefix = false;\n    let valid_name = false;\n    for\
    \ (let i = 0; i < file_name.length; i++) {\n        if (file_name[i] === '.')\
    \ {\n            dot_count++;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n        }\n    }\n    if (dot_count ===\
    \ 1 && digit_count <= 3) {\n        valid_name = true;\n    }\n    for (let i\
    \ = 0; i < valid_extensions.length; i++) {\n        if (extension === valid_extensions[i])\
    \ {\n            valid_extension = true;\n        }\n    }\n    if (file_name[0]\
    \ >= 'a' && file_name[0] <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z')\
    \ {\n        valid_prefix = true;\n    }\n    if (valid_name && valid_extension\
    \ && valid_prefix) {\n        return 'Yes';\n    }\n    return 'No';\n}\n", " \
    \   let dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (name.length ==\
    \ 0 || (name[0] < 'a' || name[0] > 'z') && (name[0] < 'A' || name[0] > 'Z')) {\n\
    \        return \"No\";\n    }\n    if (extension != 'txt' && extension != 'exe'\
    \ && extension != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\"\
    ;\n}\n", "    let count = 0;\n    let dot_index = 0;\n    let dot_count = 0;\n\
    \    let valid_extensions = ['txt', 'exe', 'dll'];\n    let extension = '';\n\
    \    let valid_extension = false;\n    let valid_name = false;\n    let valid_number\
    \ = false;\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ === '.') {\n            dot_index = i;\n            dot_count++;\n        }\n\
    \        if (file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n\
    \        }\n    }\n    if (count <= 3) {\n        valid_number = true;\n    }\n\
    \    if (dot_count === 1) {\n        extension = file_name.slice(dot_index + 1);\n\
    \        for (let i = 0; i < valid_extensions.length; i++) {\n            if (extension\
    \ === valid_extensions[i]) {\n                valid_extension = true;\n      \
    \      }\n        }\n    }\n    if (file_name[0] >= 'a' && file_name[0] <= 'z'\
    \ || file_name[0] >= 'A' && file_name[0] <= 'Z') {\n        valid_name = true;\n\
    \    }\n    if (valid_number && valid_extension && valid_name) {\n        return\
    \ 'Yes';\n    }\n    return 'No';\n}\n", "    let count = 0;\n    let dot_count\
    \ = 0;\n    let dot_index = 0;\n    let file_type = \"\";\n    let file_name_type\
    \ = \"\";\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if\
    \ (file_name[i] == '.') {\n            dot_count++;\n            dot_index = i;\n\
    \        }\n    }\n    if (count > 3 || dot_count != 1) {\n        return \"No\"\
    ;\n    }\n    file_type = file_name.substring(dot_index + 1);\n    file_name_type\
    \ = file_name.substring(0, dot_index);\n    if (file_type != \"txt\" && file_type\
    \ != \"exe\" && file_type != \"dll\") {\n        return \"No\";\n    }\n    if\
    \ (file_name_type.length == 0 || (file_name_type[0] < 'a' || file_name_type[0]\
    \ > 'z') && (file_name_type[0] < 'A' || file_name_type[0] > 'Z')) {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    let before_dot\
    \ = file_name.substring(0, dot_index);\n    let after_dot = file_name.substring(dot_index\
    \ + 1);\n    if (before_dot.length == 0 || before_dot.match(/[a-zA-Z]/g) == null\
    \ || before_dot.match(/[0-9]/g).length > 3 || after_dot.match(/txt|exe|dll/g)\
    \ == null) {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let\
    \ count = 0;\n    let dot = 0;\n    let ext = false;\n    let valid_ext = ['txt',\
    \ 'exe', 'dll'];\n    for (let i = 0; i < file_name.length; i++) {\n        if\
    \ (file_name[i] >= '0' && file_name[i] <= '9') {\n            count++;\n     \
    \   }\n        if (file_name[i] == '.') {\n            dot++;\n        }\n   \
    \     if (file_name[i] == '.' && file_name[i + 1] == 't' && file_name[i + 2] ==\
    \ 'x' && file_name[i + 3] == 't') {\n            ext = true;\n        }\n    \
    \    if (file_name[i] == '.' && file_name[i + 1] == 'e' && file_name[i + 2] ==\
    \ 'x' && file_name[i + 3] == 'e') {\n            ext = true;\n        }\n    \
    \    if (file_name[i] == '.' && file_name[i + 1] == 'd' && file_name[i + 2] ==\
    \ 'l' && file_name[i + 3] == 'l') {\n            ext = true;\n        }\n    }\n\
    \    if (count > 3 || dot != 1 || file_name[0] < 'a' || file_name[0] > 'z' ||\
    \ file_name[0] < 'A' || file_name[0] > 'Z' || ext == false) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n", "    let file_name_regex = /^[a-zA-Z][a-zA-Z0-9]{0,3}\\\
    .(txt|exe|dll)$/;\n    if (file_name_regex.test(file_name)) {\n        return\
    \ \"Yes\";\n    }\n    return \"No\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name.indexOf('.') != file_name.lastIndexOf('.')) {\n        return\
    \ \"No\";\n    }\n    if (name.length == 0 || (name[0] < 'a' || name[0] > 'z')\
    \ && (name[0] < 'A' || name[0] > 'Z')) {\n        return \"No\";\n    }\n    if\
    \ (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n       \
    \ return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index < 0) {\n        return \"No\";\n    }\n    if (name.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z'\
    \ && name[0] < 'A' || name[0] > 'Z') {\n        return \"No\";\n    }\n    if\
    \ (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n       \
    \ return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    let is_valid = true;\n    for (let\
    \ i = 0; i < name.length; i++) {\n        if (name[i] >= '0' && name[i] <= '9')\
    \ {\n            digits_count++;\n        }\n    }\n    if (digits_count > 3)\
    \ {\n        is_valid = false;\n    }\n    if (file_name.indexOf('.') != file_name.lastIndexOf('.'))\
    \ {\n        is_valid = false;\n    }\n    if (name.length == 0 || (name[0] <\
    \ 'a' || name[0] > 'z') && (name[0] < 'A' || name[0] > 'Z')) {\n        is_valid\
    \ = false;\n    }\n    if (extension != 'txt' && extension != 'exe' && extension\
    \ != 'dll') {\n        is_valid = false;\n    }\n    if (is_valid) {\n       \
    \ return 'Yes';\n    }\n    return 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let dot_count = 0;\n    let digit_count = 0;\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    if (dot_index === -1) {\n        return \"No\";\n    }\n    for (let\
    \ i = 0; i < file_name.length; i++) {\n        if (file_name[i] === '.') {\n \
    \           dot_count++;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n        }\n    }\n    if (dot_count !==\
    \ 1 || digit_count > 3 || file_name[0] < 'A' || file_name[0] > 'z' || file_name[0]\
    \ > 'Z' && file_name[0] < 'a' || extension !== 'txt' && extension !== 'exe' &&\
    \ extension !== 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n\
    }\n", "    let dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index == -1)\
    \ {\n        return \"No\";\n    }\n    if (name.length == 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let dot_count\
    \ = 0;\n    let digit_count = 0;\n    let first_letter = file_name[0];\n    let\
    \ extension = file_name.substring(dot_index + 1);\n    let valid_extensions =\
    \ ['txt', 'exe', 'dll'];\n    let valid_extension = false;\n\n    for (let i =\
    \ 0; i < file_name.length; i++) {\n        if (file_name[i] === '.') {\n     \
    \       dot_count++;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n        }\n    }\n\n    for (let i =\
    \ 0; i < valid_extensions.length; i++) {\n        if (extension === valid_extensions[i])\
    \ {\n            valid_extension = true;\n        }\n    }\n\n    if (dot_count\
    \ === 1 && digit_count <= 3 && (first_letter >= 'a' && first_letter <= 'z' ||\
    \ first_letter >= 'A' && first_letter <= 'Z') && valid_extension) {\n        return\
    \ 'Yes';\n    } else {\n        return 'No';\n    }\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let before_dot = file_name.substring(0, dot_index);\n\
    \    let after_dot = file_name.substring(dot_index + 1);\n    let digit_count\
    \ = 0;\n    for (let i = 0; i < before_dot.length; i++) {\n        if (before_dot[i]\
    \ >= '0' && before_dot[i] <= '9') {\n            digit_count++;\n        }\n \
    \   }\n    if (digit_count > 3) {\n        return \"No\";\n    }\n    if (before_dot.length\
    \ == 0 || (before_dot[0] < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A'\
    \ || before_dot[0] > 'Z')) {\n        return \"No\";\n    }\n    if (after_dot\
    \ != 'txt' && after_dot != 'exe' && after_dot != 'dll') {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_before_dot = file_name.substring(0, dot_index);\n    let file_name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let file_name_before_dot_is_valid\
    \ = /^[a-zA-Z][a-zA-Z0-9]*$/.test(file_name_before_dot);\n    let file_name_after_dot_is_valid\
    \ = /^(txt|exe|dll)$/.test(file_name_after_dot);\n    let file_name_is_valid =\
    \ file_name_before_dot_is_valid && file_name_after_dot_is_valid;\n    return file_name_is_valid\
    \ ? \"Yes\" : \"No\";\n}\n", "    let file_name_array = file_name.split(\".\"\
    );\n    let file_name_without_extension = file_name_array[0];\n    let file_name_extension\
    \ = file_name_array[1];\n    let valid_extensions = [\"txt\", \"exe\", \"dll\"\
    ];\n    let valid_extension = false;\n    let valid_file_name = false;\n    let\
    \ valid_file_name_without_extension = false;\n    let valid_file_name_extension\
    \ = false;\n    let valid_file_name_without_extension_first_letter = false;\n\
    \    let valid_file_name_without_extension_number_of_digits = false;\n    let\
    \ valid_file_name_without_extension_number_of_dots = false;\n    let valid_file_name_without_extension_number_of_letters\
    \ = false;\n    let valid_file_name_without_extension_number_of_underscores =\
    \ false;\n    let valid_file_name_without_extension_number_of_hyphens = false;\n\
    \    let valid_file_name_without_extension_number_of_spaces = false;\n    let\
    \ valid_file_name_without_extension_number_of_special_characters = false;\n  \
    \  let valid_file_name_without_extension_number_of_special_characters_allowed\
    \ = false;\n    let valid_file_name_without_extension_number_of_special_characters_allowed_array\
    \ = [\"_\", \"-\", \" \"];\n    let valid_file_name_without_extension_number_of_special_characters_allowed_array_length\
    \ = valid_file_name_without_extension_number_of_special_characters_allowed_array.length;\n\
    \    let valid_file_name_without_extension_number_of_special_characters_allowed_array_index\
    \ = 0;\n    let valid_file_name_without_extension_number_of_special_characters_allowed_array_element\
    \ = \"\";\n    let valid_file_name_without_extension_number_of_special_characters_allowed_array",
  "    let dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let file_name_without_extension = file_name.substring(0, dot_index);\n\
    \    let digit_count = 0;\n    for (let i = 0; i < file_name_without_extension.length;\
    \ i++) {\n        if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            digit_count++;\n        }\n    }\n    if (digit_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_without_extension.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < 'a' || file_name_without_extension[0] > 'z' &&\n        file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'Z') {\n        return \"No\";\n \
    \   }\n    if (extension != 'txt' && extension != 'exe' && extension != 'dll')\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index === -1)\
    \ {\n        return \"No\";\n    }\n    if (name.length === 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension !== 'txt' && extension\
    \ !== 'exe' && extension !== 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let dot_count\
    \ = 0;\n    let digit_count = 0;\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    let valid_name = false;\n    let valid_name_characters = ['a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\
    \ 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z'];\n    let valid_name_characters_count = 0;\n    let valid_name_characters_count_check\
    \ = false;\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ === '.') {\n            dot_count++;\n        }\n        if (file_name[i] ===\
    \ '0' || file_name[i] === '1' || file_name[i] === '2' || file_name[i] === '3'\
    \ || file_name[i] === '4' || file_name[i] === '5' || file_name[i] === '6' || file_name[i]\
    \ === '7' || file_name[i] === '8' || file_name[i] === '9') {\n            digit_count++;\n\
    \        }\n        for (let j = 0; j < valid_name_characters.length; j++) {\n\
    \            if (file_name[i] === valid_name_characters[j]) {\n              \
    \  valid_name_characters_count++;\n            }\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    if (name.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z'\
    \ && name[0] < 'A' || name[0] > 'Z') {\n        return \"No\";\n    }\n    if\
    \ (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n       \
    \ return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let dot_count = 0;\n    let digit_count = 0;\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    let valid_name = false;\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \   }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n           \
    \ digit_count++;\n        }\n    }\n    if (dot_count == 1 && digit_count <= 3)\
    \ {\n        valid_name = true;\n    }\n    for (let i = 0; i < valid_extensions.length;\
    \ i++) {\n        if (extension == valid_extensions[i]) {\n            valid_extension\
    \ = true;\n        }\n    }\n    if (valid_name && valid_extension) {\n      \
    \  return 'Yes';\n    }\n    return 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_before_dot = file_name.substring(0, dot_index);\n    let file_name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < file_name_before_dot.length; i++) {\n        if (file_name_before_dot[i]\
    \ >= '0' && file_name_before_dot[i] <= '9') {\n            digits_count++;\n \
    \       }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name_before_dot.length == 0) {\n        return \"No\";\n    }\n\
    \    if (file_name_before_dot[0] < 'A' || (file_name_before_dot[0] > 'Z' && file_name_before_dot[0]\
    \ < 'a') || file_name_before_dot[0] > 'z') {\n        return \"No\";\n    }\n\
    \    if (file_name_after_dot != 'txt' && file_name_after_dot != 'exe' && file_name_after_dot\
    \ != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "   \
    \ let dot_index = file_name.indexOf('.');\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let file_extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = valid_extensions.includes(file_extension);\n    let valid_file_name = /^[a-zA-Z][a-zA-Z0-9]*$/.test(file_name_without_extension);\n\
    \    let valid_number_of_digits = /\\d{4,}/.test(file_name_without_extension);\n\
    \    return valid_extension && valid_file_name && !valid_number_of_digits ? 'Yes'\
    \ : 'No';\n}\n", "    let count = 0;\n    let dot = false;\n    let before_dot\
    \ = \"\";\n    let after_dot = \"\";\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n        \
    \    count++;\n        }\n        if (file_name[i] == '.') {\n            dot\
    \ = true;\n        }\n        if (dot == false) {\n            before_dot += file_name[i];\n\
    \        }\n        if (dot == true) {\n            after_dot += file_name[i];\n\
    \        }\n    }\n    if (count > 3 || dot == false || before_dot.length == 0\
    \ || (before_dot[0] < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' || before_dot[0]\
    \ > 'Z') || after_dot != \".txt\" && after_dot != \".exe\" && after_dot != \"\
    .dll\") {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let\
    \ dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index < 0)\
    \ {\n        return \"No\";\n    }\n    if (name.length == 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}", "    let dot_index = file_name.indexOf('.');\n    if (dot_index\
    \ === -1) {\n        return \"No\";\n    }\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    if (file_name_without_extension.length === 0 || file_name_without_extension.match(/[0-9]/g)\
    \ !== null) {\n        return \"No\";\n    }\n    if (extension !== \"txt\" &&\
    \ extension !== \"exe\" && extension !== \"dll\") {\n        return \"No\";\n\
    \    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_before_dot = file_name.substring(0, dot_index);\n    let file_name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let is_valid = true;\n    if (file_name_before_dot.length\
    \ == 0 || file_name_before_dot.length > 8) {\n        is_valid = false;\n    }\n\
    \    if (file_name_after_dot != 'txt' && file_name_after_dot != 'exe' && file_name_after_dot\
    \ != 'dll') {\n        is_valid = false;\n    }\n    if (file_name.indexOf('.')\
    \ != file_name.lastIndexOf('.')) {\n        is_valid = false;\n    }\n    if (!(file_name_before_dot[0]\
    \ >= 'a' && file_name_before_dot[0] <= 'z') && !(file_name_before_dot[0] >= 'A'\
    \ && file_name_before_dot[0] <= 'Z')) {\n        is_valid = false;\n    }\n  \
    \  for (let i = 0; i < file_name_before_dot.length; i++) {\n        if (!(file_name_before_dot[i]\
    \ >= 'a' && file_name_before_dot[i] <= 'z') && !(file_name_before_dot[i] >= 'A'\
    \ && file_name_before_dot[i] <= 'Z') && !(file_name_before_dot[i] >= '0' && file_name_before_dot[i]\
    \ <= '9')) {\n            is_valid = false;\n        }\n    }\n    if (is_valid)\
    \ {\n        return 'Yes';\n    }\n    else {\n        return 'No';\n    }\n}\n",
  "    let dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index === -1)\
    \ {\n        return \"No\";\n    }\n    if (name.length === 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension !== 'txt' && extension\
    \ !== 'exe' && extension !== 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let file_name_regex = /^[a-zA-Z]{1}[a-zA-Z0-9]{0,2}\\.(txt|exe|dll)$/;\n\
    \    return file_name_regex.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let\
    \ dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = valid_extensions.indexOf(extension)\
    \ >= 0;\n    let valid_name = /^[a-zA-Z][a-zA-Z0-9]*$/.test(name);\n    let valid_digits\
    \ = /[0-9]{4,}/.test(name);\n    return valid_extension && valid_name && !valid_digits\
    \ ? 'Yes' : 'No';\n}\n", "    let result = \"Yes\";\n    let dot_index = file_name.indexOf(\"\
    .\");\n    let file_name_without_extension = file_name.substring(0, dot_index);\n\
    \    let file_extension = file_name.substring(dot_index + 1);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < file_name_without_extension.length; i++) {\n \
    \       if (file_name_without_extension[i] >= \"0\" && file_name_without_extension[i]\
    \ <= \"9\") {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        result = \"No\";\n    }\n    if (file_name.indexOf(\".\") !==\
    \ file_name.lastIndexOf(\".\")) {\n        result = \"No\";\n    }\n    if (file_name_without_extension.length\
    \ === 0) {\n        result = \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < \"A\" || file_name_without_extension[0] > \"z\" || (file_name_without_extension[0]\
    \ > \"Z\" && file_name_without_extension[0] < \"a\")) {\n        result = \"No\"\
    ;\n    }\n    if (file_extension !== \"txt\" && file_extension !== \"exe\" &&\
    \ file_extension !== \"dll\") {\n        result = \"No\";\n    }\n    return result;\n\
    }\n", "    let count = 0;\n    let dot_count = 0;\n    let dot_index = 0;\n  \
    \  let valid_extensions = ['txt', 'exe', 'dll'];\n    let extension = '';\n  \
    \  let valid_extension = false;\n    let valid_name = false;\n    let valid_name_count\
    \ = 0;\n    let valid_name_index = 0;\n    let valid_name_string = '';\n    let\
    \ valid_name_string_length = 0;\n    let valid_name_string_first_char = '';\n\
    \    let valid_name_string_first_char_code = 0;\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] === '.') {\n            dot_count++;\n    \
    \        dot_index = i;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n    }\n    if (count > 3) {\n  \
    \      return 'No';\n    }\n    if (dot_count !== 1) {\n        return 'No';\n\
    \    }\n    extension = file_name.substring(dot_index + 1);\n    for (let i =\
    \ 0; i < valid_extensions.length; i++) {\n        if (extension === valid_extensions[i])\
    \ {\n            valid_extension = true;\n        }\n    }\n    if (!valid_extension)\
    \ {\n        return 'No';\n    }\n    valid_name_string = file_name.substring(0,\
    \ dot_index);\n    valid_name_string_length = valid_name_string.length;\n    valid_name_string_first_char\
    \ = valid_name_string[0];\n    valid_name_string_first_char_code = valid_name_string_first_char.charCodeAt(0);\n\
    \    if (valid_name_string_length > 0 && valid_name_string_first_char_code >=\
    \ 65 && valid_name_string_first_char_code <= 90) {\n        valid_name = true;\n\
    \    }\n    if (valid_name_", "    let dot_index = file_name.indexOf('.');\n \
    \   let file_extension = file_name.substring(dot_index + 1);\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let digits_count = 0;\n    let is_valid\
    \ = true;\n    for (let i = 0; i < file_name_without_extension.length; i++) {\n\
    \        if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        is_valid = false;\n    }\n    if (file_name.indexOf('.') !==\
    \ file_name.lastIndexOf('.')) {\n        is_valid = false;\n    }\n    if (file_name_without_extension.length\
    \ === 0) {\n        is_valid = false;\n    }\n    if (file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'z' || (file_name_without_extension[0]\
    \ > 'Z' && file_name_without_extension[0] < 'a')) {\n        is_valid = false;\n\
    \    }\n    if (file_extension !== 'txt' && file_extension !== 'exe' && file_extension\
    \ !== 'dll') {\n        is_valid = false;\n    }\n    if (is_valid) {\n      \
    \  return 'Yes';\n    }\n    return 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let sub_string_before_dot = file_name.substring(0, dot_index);\n    let sub_string_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let number_of_digits = 0;\n    let\
    \ is_valid = true;\n    for (let i = 0; i < sub_string_before_dot.length; i++)\
    \ {\n        if (sub_string_before_dot[i] >= '0' && sub_string_before_dot[i] <=\
    \ '9') {\n            number_of_digits++;\n        }\n    }\n    if (number_of_digits\
    \ > 3) {\n        is_valid = false;\n    }\n    if (sub_string_before_dot.length\
    \ === 0) {\n        is_valid = false;\n    }\n    if (sub_string_before_dot[0]\
    \ < 'a' || sub_string_before_dot[0] > 'z') {\n        if (sub_string_before_dot[0]\
    \ < 'A' || sub_string_before_dot[0] > 'Z') {\n            is_valid = false;\n\
    \        }\n    }\n    if (sub_string_after_dot !== 'txt' && sub_string_after_dot\
    \ !== 'exe' && sub_string_after_dot !== 'dll') {\n        is_valid = false;\n\
    \    }\n    if (is_valid) {\n        return 'Yes';\n    }\n    return 'No';\n\
    }\nconsole.log(file_name_check(\"example.txt\"));\nconsole.log(file_name_check(\"\
    1example.dll\"));\n", "    let reg = /^[a-zA-Z]+[0-9]{0,3}\\.[txt|exe|dll]$/;\n\
    \    return reg.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index == -1)\
    \ {\n        return \"No\";\n    }\n    if (name.length == 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let name_parts = file_name.split('.');\n    let name_part\
    \ = name_parts[0];\n    let extension = name_parts[1];\n    let digit_count =\
    \ 0;\n    for (let i = 0; i < name_part.length; i++) {\n        if (name_part[i]\
    \ >= '0' && name_part[i] <= '9') {\n            digit_count++;\n        }\n  \
    \  }\n    if (digit_count > 3) {\n        return \"No\";\n    }\n    if (name_part.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (name_part[0] < 'a' || name_part[0]\
    \ > 'z' && name_part[0] < 'A' || name_part[0] > 'Z') {\n        return \"No\"\
    ;\n    }\n    if (extension != 'txt' && extension != 'exe' && extension != 'dll')\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let count\
    \ = 0;\n    let dot_index = 0;\n    let dot_count = 0;\n    let file_name_length\
    \ = file_name.length;\n    let file_name_substring = file_name.substring(0, file_name_length\
    \ - 4);\n    let file_name_substring_length = file_name_substring.length;\n  \
    \  let file_name_substring_last_char = file_name_substring.charAt(file_name_substring_length\
    \ - 1);\n    let file_name_substring_last_char_code = file_name_substring_last_char.charCodeAt(0);\n\
    \    let file_name_substring_last_char_code_is_letter = (file_name_substring_last_char_code\
    \ >= 65 && file_name_substring_last_char_code <= 90) || (file_name_substring_last_char_code\
    \ >= 97 && file_name_substring_last_char_code <= 122);\n    let file_name_substring_first_char\
    \ = file_name_substring.charAt(0);\n    let file_name_substring_first_char_code\
    \ = file_name_substring_first_char.charCodeAt(0);\n    let file_name_substring_first_char_code_is_letter\
    \ = (file_name_substring_first_char_code >= 65 && file_name_substring_first_char_code\
    \ <= 90) || (file_name_substring_first_char_code >= 97 && file_name_substring_first_char_code\
    \ <= 122);\n    let file_name_substring_is_empty = file_name_substring.length\
    \ === 0;\n    let file_name_substring_is_not_empty = file_name_substring.length\
    \ !== 0;\n    let file_name_substring_is_not_empty_and_starts_with_letter = file_name_substring_is_not_empty\
    \ && file_name_substring_first_char_code_is_letter;\n    let file_name_substring_is_not_empty_and_ends_with_letter",
  "    let dot_index = file_name.indexOf('.');\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let file_extension = file_name.substring(dot_index\
    \ + 1);\n    let number_of_digits = 0;\n    for (let i = 0; i < file_name_without_extension.length;\
    \ i++) {\n        if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            number_of_digits++;\n        }\n    }\n    if (number_of_digits\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'z' || (file_name_without_extension[0]\
    \ > 'Z' && file_name_without_extension[0] < 'a')) {\n        return \"No\";\n\
    \    }\n    if (file_extension !== 'txt' && file_extension !== 'exe' && file_extension\
    \ !== 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "  \
    \  let result: string = \"No\";\n    let count: number = 0;\n    let dot_index:\
    \ number = 0;\n    let dot_count: number = 0;\n    let extension: string = \"\"\
    ;\n    let extension_check: boolean = false;\n    let valid_extensions: string[]\
    \ = [\"txt\", \"exe\", \"dll\"];\n    let valid_extensions_count: number = 0;\n\
    \    let valid_extensions_index: number = 0;\n    let valid_extensions_length:\
    \ number = valid_extensions.length;\n    let file_name_length: number = file_name.length;\n\
    \    let file_name_index: number = 0;\n    let file_name_char: string = \"\";\n\
    \    let file_name_char_code: number = 0;\n    let file_name_char_code_check:\
    \ boolean = false;\n    let file_name_char_code_check_index: number = 0;\n   \
    \ let file_name_char_code_check_length: number = 0;\n    let file_name_char_code_check_array:\
    \ number[] = [];\n    let file_name_char_code_check_array_length: number = 0;\n\
    \    let file_name_char_code_check_array_index: number = 0;\n    let file_name_char_code_check_array_char:\
    \ number = 0;\n    let file_name_char_code_check_array_char_check: boolean = false;\n\
    \    let file_name_char_code_check_array_char_check_index: number = 0;\n    let\
    \ file_name_char_code_check_array_char_check_length: number = 0;\n    let file_name_char_code_check_array_char_check_array:\
    \ number[] = [];\n    let file_name_char_code_check_array_char_check_array_length:\
    \ number = 0;\n    let file_name_char_code_check_array_char_check_array_index:\
    \ number = 0;\n    let file_name_char_code_check_array_char_check_array_char:\
    \ number = 0;\n    let file_name_char_", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name.indexOf('.') != file_name.lastIndexOf('.')) {\n        return\
    \ \"No\";\n    }\n    if (name.length == 0 || !(name[0] >= 'a' && name[0] <= 'z'\
    \ || name[0] >= 'A' && name[0] <= 'Z')) {\n        return \"No\";\n    }\n   \
    \ if (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n    \
    \    return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = valid_extensions.indexOf(extension)\
    \ != -1;\n    let valid_name = file_name.substring(0, dot_index).match(/[a-zA-Z]/);\n\
    \    let valid_digits = file_name.match(/[0-9]/g).length <= 3;\n    return valid_extension\
    \ && valid_name && valid_digits ? 'Yes' : 'No';\n}\n", "    let file_name_arr\
    \ = file_name.split('.');\n    let file_name_arr_len = file_name_arr.length;\n\
    \    if (file_name_arr_len !== 2) {\n        return 'No';\n    }\n    let file_name_arr_0\
    \ = file_name_arr[0];\n    let file_name_arr_1 = file_name_arr[1];\n    let file_name_arr_0_len\
    \ = file_name_arr_0.length;\n    let file_name_arr_1_len = file_name_arr_1.length;\n\
    \    if (file_name_arr_0_len === 0 || file_name_arr_1_len === 0) {\n        return\
    \ 'No';\n    }\n    let file_name_arr_0_first_char = file_name_arr_0[0];\n   \
    \ let file_name_arr_0_first_char_code = file_name_arr_0_first_char.charCodeAt(0);\n\
    \    if (file_name_arr_0_first_char_code < 65 || file_name_arr_0_first_char_code\
    \ > 122) {\n        return 'No';\n    }\n    if (file_name_arr_0_first_char_code\
    \ > 90 && file_name_arr_0_first_char_code < 97) {\n        return 'No';\n    }\n\
    \    let file_name_arr_0_digit_count = 0;\n    for (let i = 0; i < file_name_arr_0_len;\
    \ i++) {\n        let file_name_arr_0_char = file_name_arr_0[i];\n        let\
    \ file_name_arr_0_char_code = file_name_arr_0_char.charCodeAt(0);\n        if\
    \ (file_name_arr_0_char_code >= 48 && file_name_arr_0_char_code <= 57) {\n   \
    \         file_name_arr_0_digit_count++;\n        }\n    }\n    if (file_name_arr_0_digit_count\
    \ > 3) {\n        return 'No';\n    }\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    if (name.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z'\
    \ && name[0] < 'A' || name[0] > 'Z') {\n        return \"No\";\n    }\n    if\
    \ (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n       \
    \ return \"No\";\n    }\n    return \"Yes\";\n}\n", "    // TODO: implement this\
    \ function\n    return \"\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    let is_valid = true;\n    for (let\
    \ i = 0; i < name.length; i++) {\n        if (name[i] >= '0' && name[i] <= '9')\
    \ {\n            digits_count++;\n        }\n    }\n    if (digits_count > 3)\
    \ {\n        is_valid = false;\n    }\n    if (file_name.indexOf('.') !== file_name.lastIndexOf('.'))\
    \ {\n        is_valid = false;\n    }\n    if (name.length === 0 || (name[0] <\
    \ 'a' || name[0] > 'z') && (name[0] < 'A' || name[0] > 'Z')) {\n        is_valid\
    \ = false;\n    }\n    if (extension !== 'txt' && extension !== 'exe' && extension\
    \ !== 'dll') {\n        is_valid = false;\n    }\n    if (is_valid) {\n      \
    \  return 'Yes';\n    }\n    return 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let sub_string_before_dot = file_name.substring(0, dot_index);\n    let sub_string_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < sub_string_before_dot.length; i++) {\n        if (sub_string_before_dot[i]\
    \ >= '0' && sub_string_before_dot[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (sub_string_before_dot.length === 0) {\n        return \"No\";\n    }\n\
    \    if (sub_string_before_dot[0] < 'a' || sub_string_before_dot[0] > 'z' && sub_string_before_dot[0]\
    \ < 'A' || sub_string_before_dot[0] > 'Z') {\n        return \"No\";\n    }\n\
    \    if (sub_string_after_dot !== 'txt' && sub_string_after_dot !== 'exe' && sub_string_after_dot\
    \ !== 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "  \
    \  let count = 0;\n    let dot_count = 0;\n    let extension = \"\";\n    let\
    \ valid_extensions = [\"txt\", \"exe\", \"dll\"];\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] >= \"0\" && file_name[i] <= \"9\") {\n    \
    \        count++;\n        }\n        if (file_name[i] == \".\") {\n         \
    \   dot_count++;\n        }\n        if (dot_count == 1) {\n            extension\
    \ += file_name[i + 1];\n            extension += file_name[i + 2];\n         \
    \   extension += file_name[i + 3];\n        }\n    }\n    if (count > 3 || dot_count\
    \ != 1 || file_name[0] < \"a\" || file_name[0] > \"z\" ||\n        file_name[0]\
    \ < \"A\" || file_name[0] > \"Z\" || valid_extensions.indexOf(extension) == -1)\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let result:\
    \ string = \"No\";\n    let dot_index: number = file_name.indexOf(\".\");\n  \
    \  let file_name_part: string = file_name.substring(0, dot_index);\n    let file_type_part:\
    \ string = file_name.substring(dot_index + 1);\n    let digit_count: number =\
    \ 0;\n    for (let i: number = 0; i < file_name_part.length; i++) {\n        if\
    \ (file_name_part.charAt(i) >= '0' && file_name_part.charAt(i) <= '9') {\n   \
    \         digit_count++;\n        }\n    }\n    if (digit_count <= 3 && file_name.indexOf(\"\
    .\") != -1 && file_name_part.length > 0 &&\n        (file_name_part.charAt(0)\
    \ >= 'a' && file_name_part.charAt(0) <= 'z' ||\n            file_name_part.charAt(0)\
    \ >= 'A' && file_name_part.charAt(0) <= 'Z') &&\n        (file_type_part == \"\
    txt\" || file_type_part == \"exe\" || file_type_part == \"dll\")) {\n        result\
    \ = \"Yes\";\n    }\n    return result;\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_before_dot = file_name.substring(0, dot_index);\n    let file_name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let file_name_after_dot_valid = ['txt',\
    \ 'exe', 'dll'].includes(file_name_after_dot);\n    let file_name_before_dot_valid\
    \ = file_name_before_dot.match(/^[a-zA-Z]+[0-9]*$/) && file_name_before_dot.match(/[0-9]/g).length\
    \ <= 3;\n    return file_name_before_dot_valid && file_name_after_dot_valid ?\
    \ 'Yes' : 'No';\n}\n", "    let count = 0;\n    let dot = false;\n    let valid_extension\
    \ = false;\n    let valid_name = false;\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n        \
    \    count++;\n        }\n        if (file_name[i] == '.') {\n            dot\
    \ = true;\n        }\n        if (dot) {\n            if (file_name[i] == 't'\
    \ && file_name[i + 1] == 'x' && file_name[i + 2] == 't') {\n                valid_extension\
    \ = true;\n            }\n            if (file_name[i] == 'e' && file_name[i +\
    \ 1] == 'x' && file_name[i + 2] == 'e') {\n                valid_extension = true;\n\
    \            }\n            if (file_name[i] == 'd' && file_name[i + 1] == 'l'\
    \ && file_name[i + 2] == 'l') {\n                valid_extension = true;\n   \
    \         }\n        }\n        if (file_name[i] >= 'a' && file_name[i] <= 'z'\
    \ || file_name[i] >= 'A' && file_name[i] <= 'Z') {\n            valid_name = true;\n\
    \        }\n    }\n    if (count <= 3 && dot && valid_extension && valid_name)\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let dot_count = 0;\n    let digit_count = 0;\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = false;\n    let valid_name\
    \ = false;\n    let valid_digit_count = false;\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \   }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n           \
    \ digit_count++;\n        }\n    }\n    if (dot_count == 1) {\n        valid_name\
    \ = true;\n    }\n    if (digit_count <= 3) {\n        valid_digit_count = true;\n\
    \    }\n    for (let i = 0; i < valid_extensions.length; i++) {\n        if (extension\
    \ == valid_extensions[i]) {\n            valid_extension = true;\n        }\n\
    \    }\n    if (valid_name && valid_digit_count && valid_extension) {\n      \
    \  return 'Yes';\n    }\n    return 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_without_extension = file_name.substring(0, dot_index);\n  \
    \  let file_extension = file_name.substring(dot_index + 1);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < file_name_without_extension.length; i++) {\n \
    \       if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_without_extension.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'z' ||\n        (file_name_without_extension[0]\
    \ > 'Z' && file_name_without_extension[0] < 'a')) {\n        return \"No\";\n\
    \    }\n    if (file_extension != 'txt' && file_extension != 'exe' && file_extension\
    \ != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "   \
    \ let dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let count = 0;\n\
    \    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0' && name[i]\
    \ <= '9') {\n            count++;\n        }\n    }\n    if (count > 3) {\n  \
    \      return \"No\";\n    }\n    if (dot_index == -1) {\n        return \"No\"\
    ;\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0] >\
    \ 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let count = 0;\n    let dot = false;\n    let valid_extension\
    \ = false;\n    let valid_name = false;\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n        \
    \    count++;\n        }\n        if (file_name[i] == '.') {\n            dot\
    \ = true;\n        }\n        if (file_name[i] == '.' && (file_name.substring(i\
    \ + 1) == 'txt' || file_name.substring(i + 1) == 'exe' || file_name.substring(i\
    \ + 1) == 'dll')) {\n            valid_extension = true;\n        }\n        if\
    \ (file_name[i] == '.' && (file_name.substring(0, i) != '' && (file_name.substring(0,\
    \ i)[0] >= 'a' && file_name.substring(0, i)[0] <= 'z' || file_name.substring(0,\
    \ i)[0] >= 'A' && file_name.substring(0, i)[0] <= 'Z'))) {\n            valid_name\
    \ = true;\n        }\n    }\n    if (count <= 3 && dot && valid_extension && valid_name)\
    \ {\n        return 'Yes';\n    }\n    return 'No';\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let file_name_before_dot = file_name.substring(0,\
    \ dot_index);\n    let file_name_after_dot = file_name.substring(dot_index + 1);\n\
    \    let valid_file_name_after_dot = ['txt', 'exe', 'dll'];\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < file_name_before_dot.length; i++) {\n        if\
    \ (file_name_before_dot[i] >= '0' && file_name_before_dot[i] <= '9') {\n     \
    \       digits_count++;\n        }\n    }\n    if (digits_count > 3) {\n     \
    \   return 'No';\n    }\n    if (file_name_before_dot[0] < 'a' || file_name_before_dot[0]\
    \ > 'z' && file_name_before_dot[0] < 'A' || file_name_before_dot[0] > 'Z') {\n\
    \        return 'No';\n    }\n    if (valid_file_name_after_dot.indexOf(file_name_after_dot)\
    \ == -1) {\n        return 'No';\n    }\n    return 'Yes';\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index == -1)\
    \ {\n        return \"No\";\n    }\n    if (name.length == 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let count = 0;\n    let dot_count = 0;\n    let dot_index\
    \ = 0;\n    let valid_extension = false;\n    let valid_name = false;\n    for\
    \ (let i = 0; i < file_name.length; i++) {\n        if (file_name[i] >= '0' &&\
    \ file_name[i] <= '9') {\n            count++;\n        }\n        if (file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if (count > 3) {\n        return \"No\";\n    }\n    if (dot_count\
    \ != 1) {\n        return \"No\";\n    }\n    if (file_name.substring(dot_index\
    \ + 1) == \"txt\" || file_name.substring(dot_index + 1) == \"exe\" || file_name.substring(dot_index\
    \ + 1) == \"dll\") {\n        valid_extension = true;\n    }\n    if (file_name.substring(0,\
    \ dot_index) != \"\" && (file_name.substring(0, dot_index)[0] >= 'a' && file_name.substring(0,\
    \ dot_index)[0] <= 'z' || file_name.substring(0, dot_index)[0] >= 'A' && file_name.substring(0,\
    \ dot_index)[0] <= 'Z')) {\n        valid_name = true;\n    }\n    if (valid_extension\
    \ && valid_name) {\n        return \"Yes\";\n    }\n    return \"No\";\n}\n",
  "    let valid_extensions = ['txt', 'exe', 'dll'];\n    let file_name_parts = file_name.split('.');\n\
    \    let file_name_extension = file_name_parts[1];\n    let file_name_body = file_name_parts[0];\n\
    \    let file_name_body_first_char = file_name_body[0];\n    let file_name_body_first_char_code\
    \ = file_name_body_first_char.charCodeAt(0);\n    let file_name_body_first_char_code_is_valid\
    \ = (file_name_body_first_char_code >= 65 && file_name_body_first_char_code <=\
    \ 90) || (file_name_body_first_char_code >= 97 && file_name_body_first_char_code\
    \ <= 122);\n    let file_name_body_digits_count = file_name_body.split('').filter(char\
    \ => char.charCodeAt(0) >= 48 && char.charCodeAt(0) <= 57).length;\n    let file_name_body_digits_count_is_valid\
    \ = file_name_body_digits_count <= 3;\n    let file_name_extension_is_valid =\
    \ valid_extensions.includes(file_name_extension);\n    let file_name_is_valid\
    \ = file_name_body_first_char_code_is_valid && file_name_body_digits_count_is_valid\
    \ && file_name_extension_is_valid;\n    return file_name_is_valid ? 'Yes' : 'No';\n\
    }\n", "    let dot_index = file_name.indexOf('.');\n    let file_name_before_dot\
    \ = file_name.substring(0, dot_index);\n    let file_name_after_dot = file_name.substring(dot_index\
    \ + 1);\n    let digits_count = 0;\n    for (let i = 0; i < file_name_before_dot.length;\
    \ i++) {\n        if (file_name_before_dot[i] >= '0' && file_name_before_dot[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_before_dot.length ==\
    \ 0) {\n        return \"No\";\n    }\n    if (file_name_before_dot[0] < 'A' ||\
    \ file_name_before_dot[0] > 'z' ||\n        (file_name_before_dot[0] > 'Z' &&\
    \ file_name_before_dot[0] < 'a')) {\n        return \"No\";\n    }\n    if (file_name_after_dot\
    \ != 'txt' && file_name_after_dot != 'exe' && file_name_after_dot != 'dll') {\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let file_name_without_extension = file_name.substring(0,\
    \ dot_index);\n    let extension = file_name.substring(dot_index + 1);\n    let\
    \ valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension = valid_extensions.indexOf(extension)\
    \ >= 0;\n    let valid_name = file_name_without_extension.match(/[a-zA-Z]/g) &&\
    \ file_name_without_extension.match(/[a-zA-Z]/g).length > 0;\n    let valid_digits\
    \ = file_name.match(/[0-9]/g) && file_name.match(/[0-9]/g).length <= 3;\n    let\
    \ valid_dot = file_name.match(/\\./g) && file_name.match(/\\./g).length === 1;\n\
    \    return valid_extension && valid_name && valid_digits && valid_dot ? 'Yes'\
    \ : 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n    let extension\
    \ = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (name.length == 0 || (name[0] < 'a' || name[0] > 'z') && (name[0] < 'A'\
    \ || name[0] > 'Z')) {\n        return \"No\";\n    }\n    if (extension != 'txt'\
    \ && extension != 'exe' && extension != 'dll') {\n        return \"No\";\n   \
    \ }\n    return \"Yes\";\n}\n", "    let result: string = \"Yes\";\n    let dot_index:\
    \ number = file_name.indexOf(\".\");\n    let file_name_without_extension: string\
    \ = file_name.substring(0, dot_index);\n    let file_extension: string = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions: string[] = [\"txt\", \"exe\", \"dll\"];\n \
    \   let number_of_digits: number = 0;\n    let first_char: string = file_name_without_extension.charAt(0);\n\
    \    let is_first_char_valid: boolean = (first_char >= \"a\" && first_char <=\
    \ \"z\") ||\n        (first_char >= \"A\" && first_char <= \"Z\");\n    let is_extension_valid:\
    \ boolean = valid_extensions.indexOf(file_extension) >= 0;\n    for (let i: number\
    \ = 0; i < file_name_without_extension.length; i++) {\n        let current_char:\
    \ string = file_name_without_extension.charAt(i);\n        if (current_char >=\
    \ \"0\" && current_char <= \"9\") {\n            number_of_digits++;\n       \
    \ }\n    }\n    if (number_of_digits > 3 || dot_index < 0 || file_name_without_extension.length\
    \ == 0 ||\n        !is_first_char_valid || !is_extension_valid) {\n        result\
    \ = \"No\";\n    }\n    return result;\n}\n", "    let count = 0;\n    let dot_count\
    \ = 0;\n    let dot_index = 0;\n    let valid_extension = false;\n    let valid_name\
    \ = false;\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if\
    \ (file_name[i] == '.') {\n            dot_count++;\n            dot_index = i;\n\
    \        }\n    }\n    if (count > 3) {\n        return \"No\";\n    }\n    if\
    \ (dot_count != 1) {\n        return \"No\";\n    }\n    if (file_name.slice(dot_index\
    \ + 1) == \"txt\" || file_name.slice(dot_index + 1) == \"exe\" || file_name.slice(dot_index\
    \ + 1) == \"dll\") {\n        valid_extension = true;\n    }\n    if (file_name.slice(0,\
    \ dot_index) == \"\" || (file_name[0] >= 'a' && file_name[0] <= 'z') || (file_name[0]\
    \ >= 'A' && file_name[0] <= 'Z')) {\n        valid_name = true;\n    }\n    if\
    \ (valid_extension && valid_name) {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let extension\
    \ = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name.indexOf('.') != file_name.lastIndexOf('.')) {\n        return\
    \ \"No\";\n    }\n    if (file_name.indexOf('.') == 0) {\n        return \"No\"\
    ;\n    }\n    if (file_name.indexOf('.') == file_name.length - 1) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'A' || name[0] > 'z' || (name[0] > 'Z' &&\
    \ name[0] < 'a')) {\n        return \"No\";\n    }\n    if (extension != 'txt'\
    \ && extension != 'exe' && extension != 'dll') {\n        return \"No\";\n   \
    \ }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_without_extension = file_name.substring(0, dot_index);\n  \
    \  let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let digits_count = 0;\n    let is_valid = true;\n\
    \    if (file_name_without_extension.length === 0) {\n        is_valid = false;\n\
    \    }\n    for (let i = 0; i < file_name_without_extension.length; i++) {\n \
    \       let char = file_name_without_extension.charAt(i);\n        if (char >=\
    \ '0' && char <= '9') {\n            digits_count++;\n        }\n        if (digits_count\
    \ > 3) {\n            is_valid = false;\n            break;\n        }\n    }\n\
    \    if (valid_extensions.indexOf(extension) === -1) {\n        is_valid = false;\n\
    \    }\n    return is_valid ? 'Yes' : 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name.indexOf('.') != file_name.lastIndexOf('.')) {\n        return\
    \ \"No\";\n    }\n    if (file_name.indexOf('.') == 0) {\n        return \"No\"\
    ;\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0] >\
    \ 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let before_dot\
    \ = file_name.substring(0, dot_index);\n    let after_dot = file_name.substring(dot_index\
    \ + 1);\n    let digits_count = 0;\n    for (let i = 0; i < before_dot.length;\
    \ i++) {\n        if (before_dot[i] >= '0' && before_dot[i] <= '9') {\n      \
    \      digits_count++;\n        }\n    }\n    if (digits_count > 3) {\n      \
    \  return \"No\";\n    }\n    if (file_name.indexOf('.') != file_name.lastIndexOf('.'))\
    \ {\n        return \"No\";\n    }\n    if (before_dot.length == 0 || (before_dot[0]\
    \ < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if (after_dot != 'txt' && after_dot !=\
    \ 'exe' && after_dot != 'dll') {\n        return \"No\";\n    }\n    return \"\
    Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let file_name_before_dot\
    \ = file_name.substring(0, dot_index);\n    let file_name_after_dot = file_name.substring(dot_index\
    \ + 1);\n    let number_of_digits = 0;\n    for (let i = 0; i < file_name_before_dot.length;\
    \ i++) {\n        if (file_name_before_dot[i] >= '0' && file_name_before_dot[i]\
    \ <= '9') {\n            number_of_digits++;\n        }\n    }\n    if (number_of_digits\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_before_dot.length ==\
    \ 0) {\n        return \"No\";\n    }\n    if (file_name_before_dot[0] < 'A' ||\
    \ file_name_before_dot[0] > 'z' ||\n        (file_name_before_dot[0] > 'Z' &&\
    \ file_name_before_dot[0] < 'a')) {\n        return \"No\";\n    }\n    if (file_name_after_dot\
    \ != 'txt' && file_name_after_dot != 'exe' && file_name_after_dot != 'dll') {\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let file_name_before_dot = file_name.substring(0,\
    \ dot_index);\n    let file_name_after_dot = file_name.substring(dot_index + 1);\n\
    \    let digit_count = 0;\n    for (let i = 0; i < file_name_before_dot.length;\
    \ i++) {\n        if (file_name_before_dot[i] >= '0' && file_name_before_dot[i]\
    \ <= '9') {\n            digit_count++;\n        }\n    }\n    if (digit_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_before_dot.length ==\
    \ 0) {\n        return \"No\";\n    }\n    if (file_name_before_dot[0] < 'A' ||\
    \ (file_name_before_dot[0] > 'Z' && file_name_before_dot[0] < 'a') || file_name_before_dot[0]\
    \ > 'z') {\n        return \"No\";\n    }\n    if (file_name_after_dot != \"txt\"\
    \ && file_name_after_dot != \"exe\" && file_name_after_dot != \"dll\") {\n   \
    \     return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (name.length === 0 || (name[0] < 'a' || name[0] > 'z') && (name[0] < 'A'\
    \ || name[0] > 'Z')) {\n        return \"No\";\n    }\n    if (extension !== 'txt'\
    \ && extension !== 'exe' && extension !== 'dll') {\n        return \"No\";\n \
    \   }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_extension = file_name.substring(dot_index + 1);\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let number_of_digits = 0;\n    for\
    \ (let i = 0; i < file_name_without_extension.length; i++) {\n        if (file_name_without_extension[i]\
    \ >= '0' && file_name_without_extension[i] <= '9') {\n            number_of_digits++;\n\
    \        }\n    }\n    if (number_of_digits > 3) {\n        return \"No\";\n \
    \   }\n    if (file_name_without_extension.length == 0) {\n        return \"No\"\
    ;\n    }\n    if (file_name_without_extension[0] < 'a' || file_name_without_extension[0]\
    \ > 'z' && file_name_without_extension[0] < 'A' || file_name_without_extension[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (file_extension != 'txt' &&\
    \ file_extension != 'exe' && file_extension != 'dll') {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";\n}\n", "  const file_name_regex = /^[a-zA-Z][a-zA-Z0-9]{0,3}\\\
    .(txt|exe|dll)$/;\n  return file_name_regex.test(file_name) ? \"Yes\" : \"No\"\
    ;\n}\n", "    const file_name_regex = /^[a-zA-Z][a-zA-Z0-9]{0,3}\\.(txt|exe|dll)$/;\n\
    \    return file_name_regex.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let\
    \ dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (extension !== 'txt'\
    \ && extension !== 'exe' && extension !== 'dll') {\n        return \"No\";\n \
    \   }\n    if (name.length === 0) {\n        return \"No\";\n    }\n    if (name[0]\
    \ < 'a' || name[0] > 'z' && name[0] < 'A' || name[0] > 'Z') {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";\n}", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_before_dot = file_name.substring(0, dot_index);\n    let file_name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < file_name_before_dot.length; i++) {\n        if (file_name_before_dot[i]\
    \ >= '0' && file_name_before_dot[i] <= '9') {\n            digits_count++;\n \
    \       }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name_before_dot[0] < 'A' || file_name_before_dot[0] > 'z' ||\n \
    \       (file_name_before_dot[0] > 'Z' && file_name_before_dot[0] < 'a')) {\n\
    \        return \"No\";\n    }\n    if (file_name_after_dot !== 'txt' && file_name_after_dot\
    \ !== 'exe' && file_name_after_dot !== 'dll') {\n        return \"No\";\n    }\n\
    \    return \"Yes\";\n}\n", "    let result: string = \"No\";\n    let count:\
    \ number = 0;\n    let dot_count: number = 0;\n    let dot_index: number = 0;\n\
    \    let extension: string = \"\";\n    let extension_list: string[] = [\"txt\"\
    , \"exe\", \"dll\"];\n    let valid_extension: boolean = false;\n    let valid_name:\
    \ boolean = false;\n    let valid_count: boolean = false;\n    for (let i: number\
    \ = 0; i < file_name.length; i++) {\n        if (file_name[i] >= \"0\" && file_name[i]\
    \ <= \"9\") {\n            count++;\n        }\n        if (file_name[i] == \"\
    .\") {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if (dot_count == 1) {\n        extension = file_name.substring(dot_index\
    \ + 1);\n        for (let i: number = 0; i < extension_list.length; i++) {\n \
    \           if (extension == extension_list[i]) {\n                valid_extension\
    \ = true;\n            }\n        }\n    }\n    if (count <= 3) {\n        valid_count\
    \ = true;\n    }\n    if (file_name[0] >= \"a\" && file_name[0] <= \"z\" || file_name[0]\
    \ >= \"A\" && file_name[0] <= \"Z\") {\n        valid_name = true;\n    }\n  \
    \  if (valid_extension && valid_count && valid_name) {\n        result = \"Yes\"\
    ;\n    }\n    return result;\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let before_dot = file_name.substring(0, dot_index);\n    let after_dot =\
    \ file_name.substring(dot_index + 1);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < before_dot.length; i++) {\n        if (before_dot[i] >= '0' && before_dot[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (before_dot.length == 0 || (before_dot[0]\
    \ < 'a' || before_dot[0] > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z'))\
    \ {\n        return \"No\";\n    }\n    if (after_dot != 'txt' && after_dot !=\
    \ 'exe' && after_dot != 'dll') {\n        return \"No\";\n    }\n    return \"\
    Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = valid_extensions.indexOf(extension) !== -1;\n    let valid_file_name = file_name_without_extension.match(/[a-zA-Z]/g)\
    \ !== null;\n    let valid_number_of_digits = file_name.match(/[0-9]/g).length\
    \ <= 3;\n    let valid_dot_count = file_name.match(/\\./g).length === 1;\n   \
    \ let valid_file_name_check = valid_extension && valid_file_name && valid_number_of_digits\
    \ && valid_dot_count;\n    return valid_file_name_check ? 'Yes' : 'No';\n}\n",
  "    let dot_index = file_name.indexOf('.');\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let file_extension = file_name.substring(dot_index\
    \ + 1);\n    let digits_count = 0;\n    for (let i = 0; i < file_name_without_extension.length;\
    \ i++) {\n        if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_without_extension.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'z' ||\n        (file_name_without_extension[0]\
    \ > 'Z' && file_name_without_extension[0] < 'a')) {\n        return \"No\";\n\
    \    }\n    if (file_extension != 'txt' && file_extension != 'exe' && file_extension\
    \ != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "   \
    \ let file_name_regex = /^[a-zA-Z]{1}[a-zA-Z0-9]{0,2}\\.(txt|exe|dll)$/;\n   \
    \ return file_name_regex.test(file_name) ? \"Yes\" : \"No\";\n}\n", "    let count\
    \ = 0;\n    let dot_count = 0;\n    let dot_index = 0;\n    let file_extension\
    \ = '';\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    for (let i = 0;\
    \ i < file_name.length; i++) {\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            count++;\n        }\n        if (file_name[i] === '.')\
    \ {\n            dot_count++;\n            dot_index = i;\n        }\n    }\n\
    \    if (count > 3 || dot_count !== 1) {\n        return 'No';\n    }\n    file_extension\
    \ = file_name.substring(dot_index + 1);\n    if (file_name[0] >= 'a' && file_name[0]\
    \ <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z') {\n        if (valid_extensions.indexOf(file_extension)\
    \ !== -1) {\n            return 'Yes';\n        }\n    }\n    return 'No';\n}\n",
  "    let dot_index = file_name.indexOf('.');\n    let name = file_name.substring(0,\
    \ dot_index);\n    let extension = file_name.substring(dot_index + 1);\n    let\
    \ digits_count = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i]\
    \ >= '0' && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n\
    \    if (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index\
    \ == -1) {\n        return \"No\";\n    }\n    if (name.length == 0) {\n     \
    \   return \"No\";\n    }\n    if (name[0] < 'A' || name[0] > 'z' || (name[0]\
    \ > 'Z' && name[0] < 'a')) {\n        return \"No\";\n    }\n    if (extension\
    \ != \"txt\" && extension != \"exe\" && extension != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";\n}\n", "    let file_name_regex = /^[a-zA-Z][a-zA-Z0-9]{0,3}\\\
    .(txt|exe|dll)$/;\n    return file_name_regex.test(file_name) ? \"Yes\" : \"No\"\
    ;\n}\n", "    let count = 0;\n    let dot_count = 0;\n    let dot_index = 0;\n\
    \    let file_type = \"\";\n    let file_name_without_type = \"\";\n    let file_name_without_type_count\
    \ = 0;\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if\
    \ (file_name[i] == '.') {\n            dot_count++;\n            dot_index = i;\n\
    \        }\n    }\n    if (count > 3 || dot_count != 1) {\n        return \"No\"\
    ;\n    }\n    file_type = file_name.substring(dot_index + 1);\n    file_name_without_type\
    \ = file_name.substring(0, dot_index);\n    for (let i = 0; i < file_name_without_type.length;\
    \ i++) {\n        if (file_name_without_type[i] >= 'a' && file_name_without_type[i]\
    \ <= 'z' || file_name_without_type[i] >= 'A' && file_name_without_type[i] <= 'Z')\
    \ {\n            file_name_without_type_count++;\n        }\n    }\n    if (file_name_without_type_count\
    \ == 0) {\n        return \"No\";\n    }\n    if (file_type != \"txt\" && file_type\
    \ != \"exe\" && file_type != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let file_name_before_dot\
    \ = file_name.substring(0, dot_index);\n    let file_name_after_dot = file_name.substring(dot_index\
    \ + 1);\n    let digits_count = 0;\n    for (let i = 0; i < file_name_before_dot.length;\
    \ i++) {\n        if (file_name_before_dot[i] >= '0' && file_name_before_dot[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_before_dot.length ==\
    \ 0) {\n        return \"No\";\n    }\n    if (file_name_before_dot[0] < 'A' ||\
    \ file_name_before_dot[0] > 'z' ||\n        (file_name_before_dot[0] > 'Z' &&\
    \ file_name_before_dot[0] < 'a')) {\n        return \"No\";\n    }\n    if (file_name_after_dot\
    \ != 'txt' && file_name_after_dot != 'exe' && file_name_after_dot != 'dll') {\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let result: string\
    \ = \"No\";\n    let dot_index: number = file_name.indexOf(\".\");\n    let dot_count:\
    \ number = 0;\n    let digit_count: number = 0;\n    let extension: string = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions: string[] = [\"txt\", \"exe\", \"dll\"];\n \
    \   for (let i: number = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ == \".\") {\n            dot_count++;\n        }\n        if (file_name[i] >=\
    \ \"0\" && file_name[i] <= \"9\") {\n            digit_count++;\n        }\n \
    \   }\n    if (dot_count == 1 && digit_count <= 3 && file_name[0] >= \"a\" &&\
    \ file_name[0] <= \"z\" || file_name[0] >= \"A\" && file_name[0] <= \"Z\" && valid_extensions.indexOf(extension)\
    \ != -1) {\n        result = \"Yes\";\n    }\n    return result;\n}\n", "    let\
    \ result: string = \"No\";\n    let dot_index: number = file_name.indexOf(\".\"\
    );\n    let file_name_length: number = file_name.length;\n    let file_name_without_extension:\
    \ string = file_name.substring(0, dot_index);\n    let file_name_extension: string\
    \ = file_name.substring(dot_index + 1, file_name_length);\n    let number_of_digits:\
    \ number = 0;\n    let number_of_dots: number = 0;\n    for (let i: number = 0;\
    \ i < file_name_length; i++) {\n        if (file_name[i] == \".\") {\n       \
    \     number_of_dots++;\n        }\n        if (file_name[i] >= \"0\" && file_name[i]\
    \ <= \"9\") {\n            number_of_digits++;\n        }\n    }\n    if (number_of_digits\
    \ <= 3 && number_of_dots == 1 && file_name_without_extension.length > 0 &&\n \
    \       (file_name_without_extension[0] >= \"a\" && file_name_without_extension[0]\
    \ <= \"z\" ||\n            file_name_without_extension[0] >= \"A\" && file_name_without_extension[0]\
    \ <= \"Z\") &&\n        (file_name_extension == \"txt\" || file_name_extension\
    \ == \"exe\" || file_name_extension == \"dll\")) {\n        result = \"Yes\";\n\
    \    }\n    return result;\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_without_extension = file_name.substring(0, dot_index);\n  \
    \  let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = valid_extensions.includes(extension);\n\
    \    let valid_file_name = file_name_without_extension.match(/[a-zA-Z]/g) && file_name_without_extension.match(/[a-zA-Z]/g).length\
    \ === 1 && file_name_without_extension.match(/[0-9]/g) && file_name_without_extension.match(/[0-9]/g).length\
    \ <= 3;\n    return valid_file_name && valid_extension ? 'Yes' : 'No';\n}\n",
  "    let count = 0;\n    let dot_count = 0;\n    let dot_index = 0;\n    let dot_index_after\
    \ = 0;\n    let dot_index_before = 0;\n    let dot_index_before_valid = 0;\n \
    \   let dot_index_after_valid = 0;\n    let dot_index_before_valid_count = 0;\n\
    \    let dot_index_after_valid_count = 0;\n    let dot_index_before_valid_count_valid\
    \ = 0;\n    let dot_index_after_valid_count_valid = 0;\n    let dot_index_before_valid_count_valid_valid\
    \ = 0;\n    let dot_index_after_valid_count_valid_valid = 0;\n    let dot_index_before_valid_count_valid_valid_valid\
    \ = 0;\n    let dot_index_after_valid_count_valid_valid_valid = 0;\n    let dot_index_before_valid_count_valid_valid_valid_valid\
    \ = 0;\n    let dot_index_after_valid_count_valid_valid_valid_valid = 0;\n   \
    \ let dot_index_before_valid_count_valid_valid_valid_valid_valid = 0;\n    let\
    \ dot_index_after_valid_count_valid_valid_valid_valid_valid = 0;\n    let dot_index_before_valid_count_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    let dot_index_after_valid_count_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    let dot_index_before_valid_count_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    let dot_index_after_valid_count_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    let dot_index_before_valid_count_valid_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    let dot_index_after_valid_count_valid_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    let dot_index_before_valid_count_valid_valid_valid_valid_valid_valid_"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

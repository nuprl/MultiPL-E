name: HumanEval_156_int_to_mini_roman
language: ts
prompt: "//Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  // and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n// Examples:\n\
  // >>> int_to_mini_roman(19)\n// \"xix\"\n// >>> int_to_mini_roman(152)\n// \"clii\"\
  \n// >>> int_to_mini_roman(426)\n// \"cdxxvi\"\nfunction int_to_mini_roman(number:\
  \ number): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = int_to_mini_roman;\n  assert.deepEqual(candidate(19),\"\
  xix\");\n  assert.deepEqual(candidate(152),\"clii\");\n  assert.deepEqual(candidate(251),\"\
  ccli\");\n  assert.deepEqual(candidate(426),\"cdxxvi\");\n  assert.deepEqual(candidate(500),\"\
  d\");\n  assert.deepEqual(candidate(1),\"i\");\n  assert.deepEqual(candidate(4),\"\
  iv\");\n  assert.deepEqual(candidate(43),\"xliii\");\n  assert.deepEqual(candidate(90),\"\
  xc\");\n  assert.deepEqual(candidate(94),\"xciv\");\n  assert.deepEqual(candidate(532),\"\
  dxxxii\");\n  assert.deepEqual(candidate(900),\"cm\");\n  assert.deepEqual(candidate(994),\"\
  cmxciv\");\n  assert.deepEqual(candidate(1000),\"m\");\n}\n\ntest();"
completions: ["    let roman = \"\";\n    let num = number;\n    while (num > 0) {\n\
    \        if (num >= 1000) {\n            roman += \"m\";\n            num -= 1000;\n\
    \        } else if (num >= 900) {\n            roman += \"cm\";\n            num\
    \ -= 900;\n        } else if (num >= 500) {\n            roman += \"d\";\n   \
    \         num -= 500;\n        } else if (num >= 400) {\n            roman +=\
    \ \"cd\";\n            num -= 400;\n        } else if (num >= 100) {\n       \
    \     roman += \"c\";\n            num -= 100;\n        } else if (num >= 90)\
    \ {\n            roman += \"xc\";\n            num -= 90;\n        } else if (num\
    \ >= 50) {\n            roman += \"l\";\n            num -= 50;\n        } else\
    \ if (num >= 40) {\n            roman += \"xl\";\n            num -= 40;\n   \
    \     } else if (num >= 10) {\n            roman += \"x\";\n            num -=\
    \ 10;\n        } else if (num >= 9) {\n            roman += \"ix\";\n        \
    \    num -= 9;\n        } else if (num >= 5) {\n            roman += \"v\";\n\
    \            num -= 5;\n        } else if (num >= 4) {\n            roman += \"\
    iv\";\n            num -= 4;\n        } else if (num >= 1) {\n            roman\
    \ += \"i\";\n            num -= 1;\n        }\n    }\n    return roman;\n}\n",
  "    let result: string = \"\";\n    let roman_numerals: string[] = [\"i\", \"v\"\
    , \"x\", \"l\", \"c\", \"d\", \"m\"];\n    let roman_numerals_values: number[]\
    \ = [1, 5, 10, 50, 100, 500, 1000];\n    let roman_numerals_index: number = roman_numerals_values.length\
    \ - 1;\n    let roman_numerals_value: number = roman_numerals_values[roman_numerals_index];\n\
    \    let roman_numerals_value_index: number = roman_numerals_index;\n    let roman_numerals_value_index_previous:\
    \ number = roman_numerals_index - 1;\n    let roman_numerals_value_index_next:\
    \ number = roman_numerals_index + 1;\n    let roman_numerals_value_previous: number\
    \ = roman_numerals_values[roman_numerals_value_index_previous];\n    let roman_numerals_value_next:\
    \ number = roman_numerals_values[roman_numerals_value_index_next];\n    let roman_numerals_value_previous_previous:\
    \ number = roman_numerals_values[roman_numerals_value_index_previous - 1];\n \
    \   let roman_numerals_value_next_next: number = roman_numerals_values[roman_numerals_value_index_next\
    \ + 1];\n    let roman_numerals_value_previous_previous_previous: number = roman_numerals_values[roman_numerals_value_index_previous\
    \ - 2];\n    let roman_numerals_value_next_next_next: number = roman_numerals_values[roman_numerals_value_index_next\
    \ + 2];\n    let roman_numerals_value_previous_previous_previous_previous: number\
    \ = roman_numerals_values[roman_numerals_value_index_", "    let result = \"\"\
    ;\n    let roman_numerals = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal_numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal_numbers.length;\
    \ i++) {\n        while (number >= decimal_numbers[i]) {\n            result +=\
    \ roman_numerals[i];\n            number -= decimal_numbers[i];\n        }\n \
    \   }\n    return result;\n}\n", "    let result = '';\n    const roman_numerals\
    \ = {\n        1: 'i',\n        5: 'v',\n        10: 'x',\n        50: 'l',\n\
    \        100: 'c',\n        500: 'd',\n        1000: 'm'\n    };\n    const roman_numerals_keys\
    \ = Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < roman_numerals_keys.length;\
    \ i++) {\n        const key = roman_numerals_keys[i];\n        const value = roman_numerals[key];\n\
    \        const number_of_times = Math.floor(number / parseInt(key));\n       \
    \ if (number_of_times > 0) {\n            result += value.repeat(number_of_times);\n\
    \            number -= number_of_times * parseInt(key);\n        }\n    }\n  \
    \  return result;\n}\n", "    let result = \"\";\n    let roman = {\n        M:\
    \ 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n\
    \        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX:\
    \ 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let key in\
    \ roman) {\n        if (number >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(number\
    \ / roman[key]));\n            number -= roman[key] * Math.floor(number / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "    let result = '';\n    const\
    \ roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD:\
    \ 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n  \
    \      X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n \
    \   };\n    for (let i of Object.keys(roman)) {\n        let q = Math.floor(number\
    \ / roman[i]);\n        number -= q * roman[i];\n        result += i.repeat(q);\n\
    \    }\n    return result;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result = \"\";\n    let roman = [\n        [\"m\", 1000],\n        [\"\
    cm\", 900],\n        [\"d\", 500],\n        [\"cd\", 400],\n        [\"c\", 100],\n\
    \        [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n        [\"\
    x\", 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n \
    \       [\"i\", 1]\n    ];\n    for (let i = 0; i < roman.length; i++) {\n   \
    \     while (number >= roman[i][1]) {\n            result += roman[i][0];\n  \
    \          number -= roman[i][1];\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let num = number;\n    while (num >= 1000) {\n    \
    \    result += \"m\";\n        num -= 1000;\n    }\n    if (num >= 900) {\n  \
    \      result += \"cm\";\n        num -= 900;\n    }\n    if (num >= 500) {\n\
    \        result += \"d\";\n        num -= 500;\n    }\n    if (num >= 400) {\n\
    \        result += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100)\
    \ {\n        result += \"c\";\n        num -= 100;\n    }\n    if (num >= 90)\
    \ {\n        result += \"xc\";\n        num -= 90;\n    }\n    if (num >= 50)\
    \ {\n        result += \"l\";\n        num -= 50;\n    }\n    if (num >= 40) {\n\
    \        result += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n\
    \        result += \"x\";\n        num -= 10;\n    }\n    if (num >= 9) {\n  \
    \      result += \"ix\";\n        num -= 9;\n    }\n    if (num >= 5) {\n    \
    \    result += \"v\";\n        num -= 5;\n    }\n    if (num >= 4) {\n       \
    \ result += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n      \
    \  result += \"i\";\n        num -= 1;\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    let roman_numerals = [\n        [\"m\", 1000],\n   \
    \     [\"cm\", 900],\n        [\"d\", 500],\n        [\"cd\", 400],\n        [\"\
    c\", 100],\n        [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n\
    \        [\"x\", 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n        [\"\
    iv\", 4],\n        [\"i\", 1]\n    ];\n    for (let i = 0; i < roman_numerals.length;\
    \ i++) {\n        while (number >= roman_numerals[i][1]) {\n            result\
    \ += roman_numerals[i][0];\n            number -= roman_numerals[i][1];\n    \
    \    }\n    }\n    return result;\n}\n", "    let result = '';\n    const romanNumerals\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in romanNumerals) {\n        while (number >= romanNumerals[key])\
    \ {\n            result += key;\n            number -= romanNumerals[key];\n \
    \       }\n    }\n    return result;\n}\n", "  const roman_numerals = {\n    1:\
    \ \"i\",\n    4: \"iv\",\n    5: \"v\",\n    9: \"ix\",\n    10: \"x\",\n    40:\
    \ \"xl\",\n    50: \"l\",\n    90: \"xc\",\n    100: \"c\",\n    400: \"cd\",\n\
    \    500: \"d\",\n    900: \"cm\",\n    1000: \"m\"\n  };\n  let result = \"\"\
    ;\n  let num = number;\n  while (num > 0) {\n    if (num >= 1000) {\n      result\
    \ += roman_numerals[1000];\n      num -= 1000;\n    } else if (num >= 900) {\n\
    \      result += roman_numerals[900];\n      num -= 900;\n    } else if (num >=\
    \ 500) {\n      result += roman_numerals[500];\n      num -= 500;\n    } else\
    \ if (num >= 400) {\n      result += roman_numerals[400];\n      num -= 400;\n\
    \    } else if (num >= 100) {\n      result += roman_numerals[100];\n      num\
    \ -= 100;\n    } else if (num >= 90) {\n      result += roman_numerals[90];\n\
    \      num -= 90;\n    } else if (num >= 50) {\n      result += roman_numerals[50];\n\
    \      num -= 50;\n    } else if (num >= 40) {\n      result += roman_numerals[40];\n\
    \      num -= 40;\n    } else if (num >= 10) {\n      result += roman_numerals[10];\n\
    \      num -= 10;\n    } else if (num >= 9) {\n      result += roman_numerals[9];\n\
    \      num -= 9;\n    } else if (num >= 5) {\n      result += roman_numerals[5];\n\
    \      num -= 5;\n    } else if (num >= 4) {\n      result += roman_numerals[4];\n\
    \      num -= 4;\n    } else if (num >= 1) {\n      result += roman_numerals[1];\n",
  "    let result = '';\n    let roman_numerals = [\n        ['m', 1000],\n      \
    \  ['cm', 900],\n        ['d', 500],\n        ['cd', 400],\n        ['c', 100],\n\
    \        ['xc', 90],\n        ['l', 50],\n        ['xl', 40],\n        ['x', 10],\n\
    \        ['ix', 9],\n        ['v', 5],\n        ['iv', 4],\n        ['i', 1]\n\
    \    ];\n    for (let i = 0; i < roman_numerals.length; i++) {\n        while\
    \ (number >= roman_numerals[i][1]) {\n            result += roman_numerals[i][0];\n\
    \            number -= roman_numerals[i][1];\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    const roman_numerals = [\n        [\"m\", 1000],\n\
    \        [\"cm\", 900],\n        [\"d\", 500],\n        [\"cd\", 400],\n     \
    \   [\"c\", 100],\n        [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\"\
    , 40],\n        [\"x\", 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n    \
    \    [\"iv\", 4],\n        [\"i\", 1],\n    ];\n    for (let i = 0; i < roman_numerals.length;\
    \ i++) {\n        while (number >= roman_numerals[i][1]) {\n            result\
    \ += roman_numerals[i][0];\n            number -= roman_numerals[i][1];\n    \
    \    }\n    }\n    return result;\n}\n", "  let result = '';\n  let num = number;\n\
    \  while (num > 0) {\n    if (num >= 1000) {\n      result += 'm';\n      num\
    \ -= 1000;\n    } else if (num >= 900) {\n      result += 'cm';\n      num -=\
    \ 900;\n    } else if (num >= 500) {\n      result += 'd';\n      num -= 500;\n\
    \    } else if (num >= 400) {\n      result += 'cd';\n      num -= 400;\n    }\
    \ else if (num >= 100) {\n      result += 'c';\n      num -= 100;\n    } else\
    \ if (num >= 90) {\n      result += 'xc';\n      num -= 90;\n    } else if (num\
    \ >= 50) {\n      result += 'l';\n      num -= 50;\n    } else if (num >= 40)\
    \ {\n      result += 'xl';\n      num -= 40;\n    } else if (num >= 10) {\n  \
    \    result += 'x';\n      num -= 10;\n    } else if (num >= 9) {\n      result\
    \ += 'ix';\n      num -= 9;\n    } else if (num >= 5) {\n      result += 'v';\n\
    \      num -= 5;\n    } else if (num >= 4) {\n      result += 'iv';\n      num\
    \ -= 4;\n    } else if (num >= 1) {\n      result += 'i';\n      num -= 1;\n \
    \   }\n  }\n  return result;\n}\n", "    let result = \"\";\n    let roman = [\n\
    \        [\"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\"\
    , \"ix\"],\n        [\"\", \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\"\
    , \"lxxx\", \"xc\"],\n        [\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"\
    dc\", \"dcc\", \"dccc\", \"cm\"],\n        [\"\", \"m\", \"mm\", \"mmm\", \"mv\"\
    , \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\"],\n    ];\n    let i = 0;\n    while\
    \ (number > 0) {\n        result = roman[i][number % 10] + result;\n        number\
    \ = Math.floor(number / 10);\n        i++;\n    }\n    return result;\n}\n", " \
    \ let roman: string = \"\";\n  const romanNumerals: string[] = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n  const numbers: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n  for (let i = 0; i < numbers.length; i++) {\n    while (number\
    \ >= numbers[i]) {\n      roman += romanNumerals[i];\n      number -= numbers[i];\n\
    \    }\n  }\n  return roman;\n}\n", "    let result = '';\n    const romanNumerals\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in romanNumerals) {\n        while (number >= romanNumerals[key])\
    \ {\n            result += key;\n            number -= romanNumerals[key];\n \
    \       }\n    }\n    return result;\n}\n", "    let result = '';\n    let i =\
    \ 0;\n    while (number > 0) {\n        if (number >= 1000) {\n            result\
    \ += 'm';\n            number -= 1000;\n        } else if (number >= 900) {\n\
    \            result += 'cm';\n            number -= 900;\n        } else if (number\
    \ >= 500) {\n            result += 'd';\n            number -= 500;\n        }\
    \ else if (number >= 400) {\n            result += 'cd';\n            number -=\
    \ 400;\n        } else if (number >= 100) {\n            result += 'c';\n    \
    \        number -= 100;\n        } else if (number >= 90) {\n            result\
    \ += 'xc';\n            number -= 90;\n        } else if (number >= 50) {\n  \
    \          result += 'l';\n            number -= 50;\n        } else if (number\
    \ >= 40) {\n            result += 'xl';\n            number -= 40;\n        }\
    \ else if (number >= 10) {\n            result += 'x';\n            number -=\
    \ 10;\n        } else if (number >= 9) {\n            result += 'ix';\n      \
    \      number -= 9;\n        } else if (number >= 5) {\n            result +=\
    \ 'v';\n            number -= 5;\n        } else if (number >= 4) {\n        \
    \    result += 'iv';\n            number -= 4;\n        } else if (number >= 1)\
    \ {\n            result += 'i';\n            number -= 1;\n        }\n    }\n\
    \    return result;\n}\n", "    let result = \"\";\n    let roman_numerals = [\"\
    i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\"];\n    let i = 0;\n    while (number\
    \ > 0) {\n        let digit = number % 10;\n        if (digit === 4) {\n     \
    \       result = roman_numerals[i] + roman_numerals[i + 1] + result;\n       \
    \ } else if (digit === 9) {\n            result = roman_numerals[i] + roman_numerals[i\
    \ + 2] + result;\n        } else {\n            if (digit >= 5) {\n          \
    \      result = roman_numerals[i + 1] + result;\n                digit -= 5;\n\
    \            }\n            result = roman_numerals[i].repeat(digit) + result;\n\
    \        }\n        number = Math.floor(number / 10);\n        i += 2;\n    }\n\
    \    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

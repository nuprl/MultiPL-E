name: HumanEval_77_iscube
language: ts
prompt: "//Write a function that takes an integer a and returns True \n// if this\
  \ ingeger is a cube of some integer number.\n// Note: you may assume the input is\
  \ always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n// false\n\
  // >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n// true\n\
  // >>> iscube(180)\n// false\nfunction iscube(a: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
  \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
  \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
  \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
  \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
completions: ["    if (a == 0) {\n        return true;\n    }\n    if (a < 0) {\n\
    \        a = -a;\n    }\n    for (let i = 1; i <= a; i++) {\n        if (i * i\
    \ * i == a) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n", "    return Math.cbrt(a) % 1 === 0;\n}\n", "    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n", "    let i = 0;\n    while (i * i * i <= a) {\n  \
    \      if (i * i * i === a) {\n            return true;\n        }\n        i++;\n\
    \    }\n    return false;\n}\n", "    return Number.isInteger(Math.cbrt(a));\n\
    }\n", "    return Number.isInteger(Math.cbrt(a));\n}\n", "    if (a === 0) {\n\
    \        return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    let\
    \ i = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n     \
    \       return true;\n        }\n        i++;\n    }\n    return false;\n}\n",
  "    return Math.pow(Math.round(Math.pow(a, 1 / 3)), 3) === a;\n}\n", "    let i:\
    \ number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i == a) {\n \
    \           return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n", "    let cube: number = Math.cbrt(a);\n    if (cube % 1 == 0) {\n      \
    \  return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\n", "    let result: boolean\
    \ = false;\n    for (let i = 1; i <= a; i++) {\n        if (i * i * i === a) {\n\
    \            result = true;\n        }\n    }\n    return result;\n}\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\n", "    if (a === 0) {\n \
    \       return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    let\
    \ i = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n     \
    \       return true;\n        }\n        i++;\n    }\n    return false;\n}\n",
  "    let i: number = 1;\n    while (i * i * i <= a) {\n        if (i * i * i ==\
    \ a) {\n            return true;\n        }\n        i++;\n    }\n    return false;\n\
    }\n", "    let b: number = Math.cbrt(a);\n    if (b % 1 === 0) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));", "    let result: boolean\
    \ = false;\n    let i: number = 1;\n    while (i * i * i <= a) {\n        if (i\
    \ * i * i == a) {\n            result = true;\n        }\n        i++;\n    }\n\
    \    return result;\n}\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n",
  "    let cube = Math.cbrt(a);\n    return Number.isInteger(cube);\n}\n", "    if\
    \ (a === 0) {\n        return true;\n    }\n    if (a < 0) {\n        a = -a;\n\
    \    }\n    for (let i = 1; i <= a; i++) {\n        if (i * i * i === a) {\n \
    \           return true;\n        }\n    }\n    return false;\n}\n", "    if (a\
    \ === 0) {\n        return true;\n    }\n    if (a < 0) {\n        a = -a;\n \
    \   }\n    for (let i = 1; i <= a; i++) {\n        if (i * i * i === a) {\n  \
    \          return true;\n        }\n    }\n    return false;\n}\n", "    return\
    \ a === 0 ? true : a > 0 ? Math.pow(Math.round(Math.pow(a, 1 / 3)), 3) === a :\
    \ Math.pow(Math.round(Math.pow(-a, 1 / 3)), 3) === -a;\n}\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\n", "    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

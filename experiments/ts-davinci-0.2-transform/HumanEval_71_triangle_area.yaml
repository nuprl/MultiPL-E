name: HumanEval_71_triangle_area
language: ts
prompt: "//Given the lengths of the three sides of a triangle. Return the area of\n\
  // the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n// Otherwise return -1\n// Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n// than the third side.\n// Example:\n// >>> triangle_area(3,\
  \ 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\nfunction triangle_area(a:\
  \ number, b: number, c: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4,\
  \ 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
  \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
  \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
  \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
  \ 2, 10),-1);\n}\n\ntest();"
completions: ["    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a\
    \ + b + c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\n", "  let s = (a + b + c) / 2;\n  let area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  if (area > 0) {\n    return Math.round(area\
    \ * 100) / 100;\n  } else {\n    return -1;\n  }\n}\n", "    let s = (a + b +\
    \ c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if\
    \ (area > 0) {\n        return area;\n    } else {\n        return -1;\n    }\n\
    }\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (area > 0) {\n        return area;\n    } else {\n\
    \        return -1;\n    }\n}\n", "  if (a + b > c && a + c > b && b + c > a)\
    \ {\n    return +(0.5 * (a * b + b * c + a * c)).toFixed(2);\n  } else {\n   \
    \ return -1;\n  }\n}\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if (area > 0) {\n        return area;\n\
    \    } else {\n        return -1;\n    }\n}\n", "    if (a + b > c && a + c >\
    \ b && b + c > a) {\n        let s = (a + b + c) / 2;\n        return Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\n", "    if (a + b\
    \ > c && a + c > b && b + c > a) {\n        return Number((Math.sqrt(a + b + c)\
    \ * (a + b - c) * (a - b + c) * (b + c - a)) / 4).toFixed(2);\n    } else {\n\
    \        return -1;\n    }\n}\n", "    let s = (a + b + c) / 2;\n    let area\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0) {\n       \
    \ return +area.toFixed(2);\n    } else {\n        return -1;\n    }\n}\n", " \
    \   // write your code here\n    return -1;\n}\n", "    if (a + b > c && a + c\
    \ > b && b + c > a) {\n        let s = (a + b + c) / 2;\n        return Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\n", "    if (a + b\
    \ > c && a + c > b && b + c > a) {\n        return Number(((a + b + c) / 2).toFixed(2));\n\
    \    }\n    return -1;\n}\n", "    if (a + b > c && a + c > b && b + c > a) {\n\
    \        let s = (a + b + c) / 2;\n        return Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    }\n    return -1;\n}\n", "    if (a + b > c && a + c > b\
    \ && b + c > a) {\n        return Number(((a + b + c) / 2).toFixed(2));\n    }\
    \ else {\n        return -1;\n    }\n}\n", "    let s = (a + b + c) / 2;\n   \
    \ let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n",
  "    if (a + b > c && a + c > b && b + c > a) {\n        return Number(((a + b +\
    \ c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n", "    const\
    \ s = (a + b + c) / 2;\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area > 0 ? +area.toFixed(2) : -1;\n}\n", "    if (a + b >\
    \ c && a + c > b && b + c > a) {\n        return (a + b + c) / 2;\n    } else\
    \ {\n        return -1;\n    }\n}\n", "    const s = (a + b + c) / 2;\n    const\
    \ area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0 ? +area.toFixed(2)\
    \ : -1;\n}\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    if (area > 0) {\n        return +area.toFixed(2);\n\
    \    } else {\n        return -1;\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

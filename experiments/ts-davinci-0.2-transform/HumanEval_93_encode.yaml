name: HumanEval_93_encode
language: ts
prompt: "//Write a function that takes a message, and encodes in such a \n// way that\
  \ it swaps case of all letters, replaces all vowels in \n// the message with the\
  \ letter that appears 2 places ahead of that \n// vowel in the english alphabet.\
  \ \n// Assume only letters. \n// Examples:\n// >>> encode(\"test\")\n// \"TGST\"\
  \n// >>> encode(\"This is a message\")\n// \"tHKS KS C MGSSCGG\"\nfunction encode(message:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = encode;\n  assert.deepEqual(candidate(\"TEST\"),\"\
  tgst\");\n  assert.deepEqual(candidate(\"Mudasir\"),\"mWDCSKR\");\n  assert.deepEqual(candidate(\"\
  YES\"),\"ygs\");\n  assert.deepEqual(candidate(\"This is a message\"),\"tHKS KS\
  \ C MGSSCGG\");\n  assert.deepEqual(candidate(\"I DoNt KnOw WhAt tO WrItE\"),\"\
  k dQnT kNqW wHcT Tq wRkTg\");\n}\n\ntest();"
completions: ["  let encodedMessage = \"\";\n  for (let i = 0; i < message.length;\
    \ i++) {\n    let char = message[i];\n    if (char === char.toUpperCase()) {\n\
    \      encodedMessage += char.toLowerCase();\n    } else {\n      encodedMessage\
    \ += char.toUpperCase();\n    }\n  }\n  return encodedMessage;\n}\n", "    let\
    \ result: string = \"\";\n    for (let i = 0; i < message.length; i++) {\n   \
    \     let char: string = message[i];\n        if (char === char.toUpperCase())\
    \ {\n            char = char.toLowerCase();\n        } else {\n            char\
    \ = char.toUpperCase();\n        }\n        if (char === \"a\") {\n          \
    \  char = \"c\";\n        } else if (char === \"e\") {\n            char = \"\
    g\";\n        } else if (char === \"i\") {\n            char = \"k\";\n      \
    \  } else if (char === \"o\") {\n            char = \"q\";\n        } else if\
    \ (char === \"u\") {\n            char = \"y\";\n        }\n        result +=\
    \ char;\n    }\n    return result;\n}\n", "    let encodedMessage: string = \"\
    \";\n    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            encodedMessage += char.toLowerCase();\n\
    \        } else {\n            encodedMessage += char.toUpperCase();\n       \
    \ }\n        if (char === \"a\" || char === \"e\" || char === \"i\" || char ===\
    \ \"o\" || char === \"u\") {\n            encodedMessage += message[i + 2];\n\
    \        }\n    }\n    return encodedMessage;\n}\n", "    let result: string =\
    \ \"\";\n    let vowels: string = \"aeiou\";\n    for (let i: number = 0; i <\
    \ message.length; i++) {\n        let char: string = message[i];\n        if (char\
    \ === char.toUpperCase()) {\n            result += char.toLowerCase();\n     \
    \   } else {\n            result += char.toUpperCase();\n        }\n        if\
    \ (vowels.includes(char)) {\n            let index: number = vowels.indexOf(char);\n\
    \            result = result.slice(0, result.length - 1) + vowels[(index + 2)\
    \ % 5];\n        }\n    }\n    return result;\n}\n", "    let encodedMessage:\
    \ string = '';\n    let vowels: string = 'aeiou';\n    for (let i: number = 0;\
    \ i < message.length; i++) {\n        let currentLetter: string = message[i];\n\
    \        if (vowels.indexOf(currentLetter) !== -1) {\n            let indexOfVowel:\
    \ number = vowels.indexOf(currentLetter);\n            let newIndexOfVowel: number\
    \ = indexOfVowel + 2;\n            if (newIndexOfVowel > 4) {\n              \
    \  newIndexOfVowel = newIndexOfVowel - 5;\n            }\n            encodedMessage\
    \ += vowels[newIndexOfVowel];\n        } else {\n            encodedMessage +=\
    \ currentLetter;\n        }\n    }\n    return encodedMessage;\n}\n\nconsole.log(encode('test'));\n\
    console.log(encode('This is a message'));", "    const vowels = \"aeiou\";\n \
    \   const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let encoded = \"\";\n\
    \    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            char = char.toLowerCase();\n\
    \            encoded += alphabet[(alphabet.indexOf(char) + 2) % 26].toUpperCase();\n\
    \        } else {\n            encoded += alphabet[(alphabet.indexOf(char) + 2)\
    \ % 26];\n        }\n    }\n    return encoded;\n}\n", "    let encodedMessage:\
    \ string = \"\";\n    let vowels: string = \"aeiou\";\n    for (let i: number\
    \ = 0; i < message.length; i++) {\n        let currentChar: string = message[i];\n\
    \        if (vowels.indexOf(currentChar) !== -1) {\n            let indexOfVowel:\
    \ number = vowels.indexOf(currentChar);\n            let newIndex: number = (indexOfVowel\
    \ + 2) % 5;\n            encodedMessage += vowels[newIndex];\n        } else {\n\
    \            encodedMessage += currentChar;\n        }\n    }\n    return encodedMessage;\n\
    }\n", "    let encodedMessage: string = \"\";\n    let vowels: string = \"aeiou\"\
    ;\n    for (let i: number = 0; i < message.length; i++) {\n        let char: string\
    \ = message[i];\n        if (vowels.indexOf(char.toLowerCase()) !== -1) {\n  \
    \          let indexOfVowel: number = vowels.indexOf(char.toLowerCase());\n  \
    \          let newIndexOfVowel: number = (indexOfVowel + 2) % 5;\n           \
    \ encodedMessage += vowels[newIndexOfVowel];\n        } else {\n            encodedMessage\
    \ += char;\n        }\n    }\n    return encodedMessage;\n}\n", "  let encodedMessage\
    \ = \"\";\n  for (let i = 0; i < message.length; i++) {\n    let char = message[i];\n\
    \    if (char === char.toUpperCase()) {\n      char = char.toLowerCase();\n  \
    \  } else {\n      char = char.toUpperCase();\n    }\n    if (char === \"a\")\
    \ {\n      char = \"c\";\n    } else if (char === \"e\") {\n      char = \"g\"\
    ;\n    } else if (char === \"i\") {\n      char = \"k\";\n    } else if (char\
    \ === \"o\") {\n      char = \"q\";\n    } else if (char === \"u\") {\n      char\
    \ = \"y\";\n    }\n    encodedMessage += char;\n  }\n  return encodedMessage;\n\
    }\n", "    let encodedMessage: string = \"\";\n    const vowels: string[] = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    for (let i: number = 0; i < message.length;\
    \ i++) {\n        if (message[i] === message[i].toUpperCase()) {\n           \
    \ encodedMessage += message[i].toLowerCase();\n        } else {\n            encodedMessage\
    \ += message[i].toUpperCase();\n        }\n        if (vowels.includes(encodedMessage[i]))\
    \ {\n            encodedMessage = encodedMessage.replace(encodedMessage[i], vowels[(vowels.indexOf(encodedMessage[i])\
    \ + 2) % 5]);\n        }\n    }\n    return encodedMessage;\n}\n", "    let encodedMessage:\
    \ string = \"\";\n    for (let i = 0; i < message.length; i++) {\n        let\
    \ char: string = message[i];\n        if (char === char.toUpperCase()) {\n   \
    \         char = char.toLowerCase();\n        } else {\n            char = char.toUpperCase();\n\
    \        }\n        if (char === \"a\") {\n            char = \"c\";\n       \
    \ } else if (char === \"e\") {\n            char = \"g\";\n        } else if (char\
    \ === \"i\") {\n            char = \"k\";\n        } else if (char === \"o\")\
    \ {\n            char = \"q\";\n        } else if (char === \"u\") {\n       \
    \     char = \"y\";\n        }\n        encodedMessage += char;\n    }\n    return\
    \ encodedMessage;\n}\n", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    let vowels = \"aeiou\";\n    let encoded = \"\";\n    for (let i = 0; i <\
    \ message.length; i++) {\n        let char = message[i];\n        if (char ===\
    \ char.toUpperCase()) {\n            char = char.toLowerCase();\n            encoded\
    \ += alphabet[(alphabet.indexOf(char) + 2) % 26].toUpperCase();\n        } else\
    \ {\n            if (vowels.includes(char)) {\n                encoded += alphabet[(alphabet.indexOf(char)\
    \ + 2) % 26];\n            } else {\n                encoded += char;\n      \
    \      }\n        }\n    }\n    return encoded;\n}\n", "    let encodedMessage:\
    \ string = \"\";\n    for (let i = 0; i < message.length; i++) {\n        let\
    \ char: string = message[i];\n        if (char === char.toUpperCase()) {\n   \
    \         char = char.toLowerCase();\n        } else {\n            char = char.toUpperCase();\n\
    \        }\n        if (char === \"a\") {\n            char = \"c\";\n       \
    \ } else if (char === \"e\") {\n            char = \"g\";\n        } else if (char\
    \ === \"i\") {\n            char = \"k\";\n        } else if (char === \"o\")\
    \ {\n            char = \"q\";\n        } else if (char === \"u\") {\n       \
    \     char = \"y\";\n        }\n        encodedMessage += char;\n    }\n    return\
    \ encodedMessage;\n}\n", "    let encodedMessage: string = \"\";\n    let alphabet:\
    \ string = \"abcdefghijklmnopqrstuvwxyz\";\n    let vowels: string = \"aeiou\"\
    ;\n    for (let i: number = 0; i < message.length; i++) {\n        let currentChar:\
    \ string = message[i];\n        let currentCharIndex: number = alphabet.indexOf(currentChar.toLowerCase());\n\
    \        if (currentCharIndex === -1) {\n            encodedMessage += currentChar;\n\
    \        } else {\n            let encodedChar: string = \"\";\n            if\
    \ (vowels.indexOf(currentChar.toLowerCase()) !== -1) {\n                encodedChar\
    \ = alphabet[(currentCharIndex + 2) % 26];\n            } else {\n           \
    \     encodedChar = alphabet[currentCharIndex];\n            }\n            if\
    \ (currentChar === currentChar.toUpperCase()) {\n                encodedChar =\
    \ encodedChar.toUpperCase();\n            }\n            encodedMessage += encodedChar;\n\
    \        }\n    }\n    return encodedMessage;\n}\n", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    let encoded = \"\";\n    for (let i = 0; i\
    \ < message.length; i++) {\n        let char = message[i];\n        if (vowels.includes(char.toLowerCase()))\
    \ {\n            let index = vowels.indexOf(char.toLowerCase());\n           \
    \ if (index === 4) {\n                encoded += vowels[0];\n            } else\
    \ {\n                encoded += vowels[index + 2];\n            }\n        } else\
    \ {\n            if (char === char.toUpperCase()) {\n                encoded +=\
    \ char.toLowerCase();\n            } else {\n                encoded += char.toUpperCase();\n\
    \            }\n        }\n    }\n    return encoded;\n}\n", "    let result:\
    \ string = \"\";\n    const vowels: string[] = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"];\n    for (let i: number = 0; i < message.length; i++) {\n        const char:\
    \ string = message[i];\n        if (vowels.includes(char.toLowerCase())) {\n \
    \           const index: number = vowels.indexOf(char.toLowerCase());\n      \
    \      const newIndex: number = (index + 2) % vowels.length;\n            result\
    \ += vowels[newIndex];\n        } else {\n            result += char.toUpperCase();\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    let encoded = '';\n    for (let i = 0; i < message.length; i++)\
    \ {\n        let letter = message[i];\n        if (vowels.includes(letter.toLowerCase()))\
    \ {\n            let index = vowels.indexOf(letter.toLowerCase());\n         \
    \   let newIndex = (index + 2) % 5;\n            encoded += vowels[newIndex];\n\
    \        } else {\n            encoded += letter;\n        }\n    }\n    return\
    \ encoded;\n}\n", "  let encodedMessage = \"\";\n  for (let i = 0; i < message.length;\
    \ i++) {\n    let char = message[i];\n    if (char === char.toUpperCase()) {\n\
    \      encodedMessage += char.toLowerCase();\n    } else {\n      encodedMessage\
    \ += char.toUpperCase();\n    }\n  }\n  return encodedMessage;\n}\n", "    let\
    \ encodedMessage: string = \"\";\n    for (let i = 0; i < message.length; i++)\
    \ {\n        let char: string = message[i];\n        if (char === char.toUpperCase())\
    \ {\n            encodedMessage += char.toLowerCase();\n        } else {\n   \
    \         encodedMessage += char.toUpperCase();\n        }\n        if (char ===\
    \ \"a\" || char === \"e\" || char === \"i\" || char === \"o\" || char === \"u\"\
    ) {\n            let index: number = message.indexOf(char);\n            encodedMessage\
    \ += message[index + 2];\n        }\n    }\n    return encodedMessage;\n}\n",
  "  let result: string = '';\n  for (let i = 0; i < message.length; i++) {\n    let\
    \ char: string = message[i];\n    if (char === char.toUpperCase()) {\n      char\
    \ = char.toLowerCase();\n    } else {\n      char = char.toUpperCase();\n    }\n\
    \    if (char === 'a') {\n      char = 'c';\n    } else if (char === 'e') {\n\
    \      char = 'g';\n    } else if (char === 'i') {\n      char = 'k';\n    } else\
    \ if (char === 'o') {\n      char = 'q';\n    } else if (char === 'u') {\n   \
    \   char = 'y';\n    }\n    result += char;\n  }\n  return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

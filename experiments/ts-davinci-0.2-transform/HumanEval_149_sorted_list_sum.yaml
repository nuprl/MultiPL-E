name: HumanEval_149_sorted_list_sum
language: ts
prompt: "//Write a function that accepts a list of strings as a parameter,\n// deletes\
  \ the strings that have odd lengths from it,\n// and returns the resulted list with\
  \ a sorted order,\n// The list is always a list of strings and never an array of\
  \ numbers,\n// and it may contain duplicates.\n// The order of the list should be\
  \ ascending by length of each word, and you\n// should return the list sorted by\
  \ that rule.\n// If two words have the same length, sort the list alphabetically.\n\
  // The function should return a list of strings in sorted order.\n// You may assume\
  \ that all words will have the same length.\n// For example:\n// >>> list_sort([\"\
  aa\", \"a\", \"aaa\"])\n// [\"aa\"]\n// >>> list_sort([\"ab\", \"a\", \"aaa\", \"\
  cd\"])\n// [\"ab\", \"cd\"]\nfunction sorted_list_sum(lst: string[]): string[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sorted_list_sum;\n  assert.deepEqual(candidate([\"\
  aa\", \"a\", \"aaa\"]),[\"aa\"]);\n  assert.deepEqual(candidate([\"school\", \"\
  AI\", \"asdf\", \"b\"]),[\"AI\", \"asdf\", \"school\"]);\n  assert.deepEqual(candidate([\"\
  d\", \"b\", \"c\", \"a\"]),[]);\n  assert.deepEqual(candidate([\"d\", \"dcba\",\
  \ \"abcd\", \"a\"]),[\"abcd\", \"dcba\"]);\n  assert.deepEqual(candidate([\"AI\"\
  , \"ai\", \"au\"]),[\"AI\", \"ai\", \"au\"]);\n  assert.deepEqual(candidate([\"\
  a\", \"b\", \"b\", \"c\", \"c\", \"a\"]),[]);\n  assert.deepEqual(candidate([\"\
  aaaa\", \"bbbb\", \"dd\", \"cc\"]),[\"cc\", \"dd\", \"aaaa\", \"bbbb\"]);\n}\n\n\
  test();"
completions: ["    let result: string[] = [];\n    for (let i: number = 0; i < lst.length;\
    \ i++) {\n        if (lst[i].length % 2 === 0) {\n            result.push(lst[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\nconsole.log(sorted_list_sum([\"\
    aa\", \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\"\
    , \"cd\"]));", "    let result: string[] = [];\n    for (let i: number = 0; i\
    \ < lst.length; i++) {\n        if (lst[i].length % 2 === 0) {\n            result.push(lst[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\nconsole.log(sorted_list_sum([\"\
    aa\", \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\"\
    , \"cd\"]));\n", "    let result: string[] = [];\n    let sorted_list: string[]\
    \ = lst.sort();\n    let current_length: number = 0;\n    for (let i: number =\
    \ 0; i < sorted_list.length; i++) {\n        if (sorted_list[i].length % 2 ===\
    \ 0) {\n            if (sorted_list[i].length === current_length) {\n        \
    \        result.push(sorted_list[i]);\n            } else {\n                current_length\
    \ = sorted_list[i].length;\n                result = [];\n                result.push(sorted_list[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    let result: string[]\
    \ = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length\
    \ % 2 === 0) {\n            result.push(lst[i]);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"\
    ]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\", \"cd\"]));\n", "  \
    \  let lst_len: number[] = [];\n    for (let i: number = 0; i < lst.length; i++)\
    \ {\n        lst_len.push(lst[i].length);\n    }\n    let lst_len_sorted: number[]\
    \ = lst_len.sort(function (a, b) {\n        return a - b;\n    });\n    let lst_sorted:\
    \ string[] = [];\n    for (let i: number = 0; i < lst_len_sorted.length; i++)\
    \ {\n        for (let j: number = 0; j < lst.length; j++) {\n            if (lst_len_sorted[i]\
    \ === lst[j].length) {\n                lst_sorted.push(lst[j]);\n           \
    \ }\n        }\n    }\n    let lst_sorted_unique: string[] = [];\n    for (let\
    \ i: number = 0; i < lst_sorted.length; i++) {\n        if (lst_sorted_unique.indexOf(lst_sorted[i])\
    \ === -1) {\n            lst_sorted_unique.push(lst_sorted[i]);\n        }\n \
    \   }\n    return lst_sorted_unique;\n}\nconsole.log(sorted_list_sum([\"aa\",\
    \ \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\", \"\
    cd\"]));\n", "    let result: string[] = [];\n    for (let i: number = 0; i <\
    \ lst.length; i++) {\n        if (lst[i].length % 2 === 0) {\n            result.push(lst[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\nconsole.log(sorted_list_sum([\"\
    aa\", \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\"\
    , \"cd\"]));\n", "    let result: string[] = [];\n    let sorted_list: string[]\
    \ = lst.sort();\n    let length: number = sorted_list[0].length;\n    for (let\
    \ i: number = 0; i < sorted_list.length; i++) {\n        if (sorted_list[i].length\
    \ === length) {\n            result.push(sorted_list[i]);\n        } else {\n\
    \            length = sorted_list[i].length;\n        }\n    }\n    return result;\n\
    }\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"\
    ab\", \"a\", \"aaa\", \"cd\"]));\n", "    let new_lst: string[] = [];\n    for\
    \ (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length % 2 ===\
    \ 0) {\n            new_lst.push(lst[i]);\n        }\n    }\n    new_lst.sort();\n\
    \    return new_lst;\n}\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"]));\n\
    console.log(sorted_list_sum([\"ab\", \"a\", \"aaa\", \"cd\"]));\n", "    let result:\
    \ string[] = [];\n    let sorted_lst: string[] = lst.sort();\n    let length:\
    \ number = sorted_lst[0].length;\n    for (let i: number = 0; i < sorted_lst.length;\
    \ i++) {\n        if (sorted_lst[i].length === length) {\n            result.push(sorted_lst[i]);\n\
    \        } else {\n            length = sorted_lst[i].length;\n        }\n   \
    \ }\n    return result;\n}\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"\
    ]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\", \"cd\"]));", "    let\
    \ result: string[] = [];\n    let min_length: number = lst[0].length;\n    for\
    \ (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min_length)\
    \ {\n            min_length = lst[i].length;\n        }\n    }\n    for (let i:\
    \ number = 0; i < lst.length; i++) {\n        if (lst[i].length === min_length)\
    \ {\n            result.push(lst[i]);\n        }\n    }\n    return result;\n\
    }\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"\
    ab\", \"a\", \"aaa\", \"cd\"]));", "    let lst_len: number[] = [];\n    for (let\
    \ i: number = 0; i < lst.length; i++) {\n        lst_len.push(lst[i].length);\n\
    \    }\n    lst_len.sort();\n    let lst_sorted: string[] = [];\n    for (let\
    \ i: number = 0; i < lst_len.length; i++) {\n        for (let j: number = 0; j\
    \ < lst.length; j++) {\n            if (lst_len[i] === lst[j].length) {\n    \
    \            lst_sorted.push(lst[j]);\n            }\n        }\n    }\n    return\
    \ lst_sorted;\n}\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"\
    ab\", \"a\", \"aaa\", \"cd\"]));\n", "    let new_lst: string[] = [];\n    for\
    \ (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length % 2 ===\
    \ 0) {\n            new_lst.push(lst[i]);\n        }\n    }\n    new_lst.sort();\n\
    \    return new_lst;\n}\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"]));\n\
    console.log(sorted_list_sum([\"ab\", \"a\", \"aaa\", \"cd\"]));\n", "    let new_list:\
    \ string[] = [];\n    for (let i: number = 0; i < lst.length; i++) {\n       \
    \ if (lst[i].length % 2 === 0) {\n            new_list.push(lst[i]);\n       \
    \ }\n    }\n    new_list.sort();\n    return new_list;\n}\nconsole.log(sorted_list_sum([\"\
    aa\", \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\"\
    , \"cd\"]));", "    let result: string[] = [];\n    for (let i: number = 0; i\
    \ < lst.length; i++) {\n        if (lst[i].length % 2 === 0) {\n            result.push(lst[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\nconsole.log(sorted_list_sum([\"\
    aa\", \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\"\
    , \"cd\"]));\n", "    let lst_length: number[] = [];\n    let lst_sorted: string[]\
    \ = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        lst_length.push(lst[i].length);\n\
    \    }\n    lst_length.sort(function (a, b) {\n        return a - b;\n    });\n\
    \    for (let i: number = 0; i < lst_length.length; i++) {\n        for (let j:\
    \ number = 0; j < lst.length; j++) {\n            if (lst_length[i] === lst[j].length)\
    \ {\n                lst_sorted.push(lst[j]);\n            }\n        }\n    }\n\
    \    return lst_sorted;\n}\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"\
    ]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\", \"cd\"]));\n", "  \
    \  let result: string[] = [];\n    for (let i: number = 0; i < lst.length; i++)\
    \ {\n        if (lst[i].length % 2 === 0) {\n            result.push(lst[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\nconsole.log(sorted_list_sum([\"\
    aa\", \"a\", \"aaa\"]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\"\
    , \"cd\"]));\n", "    let result: string[] = [];\n    for (let i: number = 0;\
    \ i < lst.length; i++) {\n        if (lst[i].length % 2 === 0) {\n           \
    \ result.push(lst[i]);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n", "    let result: string[] = [];\n    let sorted_list: string[] = lst.sort();\n\
    \    for (let i: number = 0; i < sorted_list.length; i++) {\n        if (sorted_list[i].length\
    \ % 2 === 0) {\n            result.push(sorted_list[i]);\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"]));\n\
    console.log(sorted_list_sum([\"ab\", \"a\", \"aaa\", \"cd\"]));", "    let result:\
    \ string[] = [];\n    for (let i: number = 0; i < lst.length; i++) {\n       \
    \ if (lst[i].length % 2 === 0) {\n            result.push(lst[i]);\n        }\n\
    \    }\n    result.sort();\n    return result;\n}\n", "    let result: string[]\
    \ = [];\n    let sorted_lst: string[] = lst.sort();\n    let length: number =\
    \ sorted_lst[0].length;\n    for (let i: number = 0; i < sorted_lst.length; i++)\
    \ {\n        if (sorted_lst[i].length === length) {\n            result.push(sorted_lst[i]);\n\
    \        } else {\n            length = sorted_lst[i].length;\n        }\n   \
    \ }\n    return result;\n}\nconsole.log(sorted_list_sum([\"aa\", \"a\", \"aaa\"\
    ]));\nconsole.log(sorted_list_sum([\"ab\", \"a\", \"aaa\", \"cd\"]));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

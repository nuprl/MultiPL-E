name: HumanEval_70_strange_sort_list
language: ts
prompt: "//Given list of integers, return list in strange order.\n// Strange sorting,\
  \ is when you start with the minimum value,\n// then maximum of the remaining integers,\
  \ then minimum and so on.\n// Examples:\n// >>> strange_sort_list([1, 2, 3, 4])\n\
  // [1, 4, 2, 3]\n// >>> strange_sort_list([5, 5, 5, 5])\n// [5, 5, 5, 5]\n// >>>\
  \ strange_sort_list([])\n// []\nfunction strange_sort_list(lst: number[]): number[]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = strange_sort_list;\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4]),[1, 4, 2, 3]);\n  assert.deepEqual(candidate([5, 6, 7, 8, 9]),[5, 9,\
  \ 6, 8, 7]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 5, 2, 4, 3]);\n\
  \  assert.deepEqual(candidate([5, 6, 7, 8, 9, 1]),[1, 9, 5, 8, 6, 7]);\n  assert.deepEqual(candidate([5,\
  \ 5, 5, 5]),[5, 5, 5, 5]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5]);\n  assert.deepEqual(candidate([0,\
  \ 2, 2, 2, 5, 5, -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2]);\n  assert.deepEqual(candidate([111111]),[111111]);\n\
  }\n\ntest();"
completions: ["    let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n\
    \    let i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n      \
    \  result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    let min: number = Math.min(...lst);\n    let max: number\
    \ = Math.max(...lst);\n    let min_index: number = lst.indexOf(min);\n    let\
    \ max_index: number = lst.indexOf(max);\n    let min_max_index: number = Math.max(min_index,\
    \ max_index);\n    let max_min_index: number = Math.min(min_index, max_index);\n\
    \    let new_lst: number[] = lst.slice(0, min_max_index).concat(lst.slice(min_max_index\
    \ + 1));\n    result.push(min);\n    result.push(max);\n    while (new_lst.length\
    \ > 0) {\n        min = Math.min(...new_lst);\n        max = Math.max(...new_lst);\n\
    \        min_index = new_lst.indexOf(min);\n        max_index = new_lst.indexOf(max);\n\
    \        min_max_index = Math.max(min_index, max_index);\n        max_min_index\
    \ = Math.min(min_index, max_index);\n        result.push(min);\n        result.push(max);\n\
    \        new_lst = new_lst.slice(0, max_min_index).concat(new_lst.slice(max_min_index\
    \ + 1));\n    }\n    return result;\n}\n", "    let result: number[] = [];\n \
    \   let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let min_max_index: number = Math.max(min_index, max_index);\n    let max_min_index:\
    \ number = Math.min(min_index, max_index);\n    let lst_min_max: number[] = lst.slice(0,\
    \ min_max_index + 1);\n    let lst_max_min: number[] = lst.slice(min_max_index\
    \ + 1, lst.length);\n    lst_min_max.splice(max_min_index, 1);\n    lst_max_min.splice(min_max_index\
    \ - max_min_index, 1);\n    lst_min_max.splice(min_max_index - max_min_index,\
    \ 0, max);\n    lst_max_min.splice(0, 0, min);\n    result = lst_min_max.concat(lst_max_min);\n\
    \    return result;\n}\n", "    if (lst.length === 0) {\n        return lst;\n\
    \    }\n    const min = Math.min(...lst);\n    const max = Math.max(...lst);\n\
    \    const min_index = lst.indexOf(min);\n    const max_index = lst.indexOf(max);\n\
    \    const new_lst = [min];\n    lst.splice(min_index, 1);\n    while (lst.length\
    \ > 0) {\n        const max = Math.max(...lst);\n        const max_index = lst.indexOf(max);\n\
    \        new_lst.push(max);\n        lst.splice(max_index, 1);\n        if (lst.length\
    \ === 0) {\n            break;\n        }\n        const min = Math.min(...lst);\n\
    \        const min_index = lst.indexOf(min);\n        new_lst.push(min);\n   \
    \     lst.splice(min_index, 1);\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return lst;\n    }\n    const min = Math.min(...lst);\n  \
    \  const max = Math.max(...lst);\n    const min_index = lst.indexOf(min);\n  \
    \  const max_index = lst.indexOf(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return [min, max, ...strange_sort_list(lst)];\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    const sorted = lst.sort((a, b) => a\
    \ - b);\n    const result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n       \
    \ return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [min];\n    let new_lst2 = [];\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] !== min) {\n            new_lst2.push(lst[i]);\n\
    \        }\n    }\n    let new_lst3 = [];\n    for (let i = 0; i < new_lst2.length;\
    \ i++) {\n        if (new_lst2[i] !== max) {\n            new_lst3.push(new_lst2[i]);\n\
    \        }\n    }\n    new_lst.push(max);\n    return new_lst.concat(strange_sort_list(new_lst3));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    const min =\
    \ Math.min(...lst);\n    const max = Math.max(...lst);\n    const minIndex = lst.indexOf(min);\n\
    \    const maxIndex = lst.indexOf(max);\n    const newLst = lst.slice();\n   \
    \ newLst.splice(minIndex, 1);\n    newLst.splice(maxIndex - 1, 1);\n    return\
    \ [min, max, ...strange_sort_list(newLst)];\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max =\
    \ Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    let new_lst = [min];\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index - 1, 1);\n    while (lst.length > 0) {\n        min\
    \ = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    return new_lst;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    if (lst.length ===\
    \ 1) {\n        return lst;\n    }\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let new_list = [];\n    let i = 0;\n    while (new_list.length\
    \ < lst.length) {\n        if (i % 2 === 0) {\n            new_list.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_list.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_list;\n}\n", "    if (lst.length === 0) {\n        return lst;\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let result = [];\n    let i = 0;\n    while (lst.length > 0) {\n        if (i\
    \ % 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    lst.sort((a, b) => a - b);\n    let\
    \ result = [];\n    let i = 0;\n    let j = lst.length - 1;\n    while (i <= j)\
    \ {\n        result.push(lst[i]);\n        i++;\n        if (i <= j) {\n     \
    \       result.push(lst[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    let result: number[] = [];\n    let sortedList: number[] = lst.sort((a,\
    \ b) => a - b);\n    let i: number = 0;\n    let j: number = sortedList.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sortedList[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sortedList[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n   \
    \     return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let new_lst = [];\n    new_lst.push(min);\n    lst.splice(min_index, 1);\n\
    \    new_lst.push(max);\n    lst.splice(max_index, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    while (lst.length\
    \ > 0) {\n        new_lst.push(min);\n        lst.splice(lst.indexOf(min), 1);\n\
    \        if (lst.length > 0) {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n        }\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n\
    \    }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (new_lst.length < lst.length)\
    \ {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    const result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    while (lst.length > 0) {\n        result.push(min);\n\
    \        lst.splice(min_index, 1);\n        min = Math.min(...lst);\n        min_index\
    \ = lst.indexOf(min);\n        if (lst.length === 0) {\n            break;\n \
    \       }\n        result.push(max);\n        lst.splice(max_index, 1);\n    \
    \    max = Math.max(...lst);\n        max_index = lst.indexOf(max);\n    }\n \
    \   return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n \
    \   }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ newLst = [];\n    while (newLst.length < lst.length) {\n        newLst.push(min);\n\
    \        newLst.push(max);\n        min = Math.min(...lst.filter(x => x !== min\
    \ && x !== max));\n        max = Math.max(...lst.filter(x => x !== min && x !==\
    \ max));\n    }\n    return newLst;\n}\n", "    if (lst.length === 0) {\n    \
    \    return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [min];\n    let index = lst.indexOf(min);\n    lst.splice(index,\
    \ 1);\n    while (lst.length > 0) {\n        let max_index = lst.indexOf(max);\n\
    \        let min_index = lst.indexOf(Math.min(...lst));\n        new_lst.push(max);\n\
    \        new_lst.push(lst[min_index]);\n        lst.splice(max_index, 1);\n  \
    \      lst.splice(min_index, 1);\n        max = Math.max(...lst);\n    }\n   \
    \ return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n  \
    \  }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ new_lst = [];\n    let i = 0;\n    while (new_lst.length < lst.length) {\n \
    \       if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted_list = [];\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n\
    \    let max_index = lst.indexOf(max);\n    sorted_list.push(min);\n    sorted_list.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    while (lst.length\
    \ > 0) {\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n \
    \       min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        sorted_list.push(min);\n        sorted_list.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    return sorted_list;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    if (lst.length === 0) {\n        return new_lst;\n    }\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    let result: number[] = [];\n\
    \    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let minIndex: number = lst.indexOf(min);\n    let maxIndex: number = lst.indexOf(max);\n\
    \    let minIndexes: number[] = [];\n    let maxIndexes: number[] = [];\n    let\
    \ minValues: number[] = [];\n    let maxValues: number[] = [];\n    let minValuesIndexes:\
    \ number[] = [];\n    let maxValuesIndexes: number[] = [];\n    let minValuesIndexesSorted:\
    \ number[] = [];\n    let maxValuesIndexesSorted: number[] = [];\n    let minValuesSorted:\
    \ number[] = [];\n    let maxValuesSorted: number[] = [];\n    let minValuesSortedIndexes:\
    \ number[] = [];\n    let maxValuesSortedIndexes: number[] = [];\n    let minValuesSortedIndexesSorted:\
    \ number[] = [];\n    let maxValuesSortedIndexesSorted: number[] = [];\n    let\
    \ minValuesSortedSorted: number[] = [];\n    let maxValuesSortedSorted: number[]\
    \ = [];\n    let minValuesSortedSortedIndexes: number[] = [];\n    let maxValuesSortedSortedIndexes:\
    \ number[] = [];\n    let minValuesSortedSortedIndexesSorted: number[] = [];\n\
    \    let maxValuesSortedSortedIndexesSorted: number[] = [];\n    let minValuesSortedSortedSorted:\
    \ number[] = [];\n    let maxValuesSortedSortedSorted: number[] = [];\n    let\
    \ minValuesSortedSortedSortedIndexes: number[] = [];\n    let maxValuesSortedSortedSortedIndexes:\
    \ number[] = [];\n    let minValuesSortedSortedSortedIndexesSorted: number[] =\
    \ [];\n    let maxValuesSortedSortedSortedIndexesSorted: number[] = [];\n    let\
    \ minValuesSortedSortedSortedSorted: number[] = [];\n    let maxValuesSortedSortedSortedSorted:\
    \ number[] = [];\n    let minValuesSortedSortedSortedSortedIndexes: number[] =\
    \ [];\n    let", "    if (lst.length === 0) {\n        return [];\n    }\n   \
    \ let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let new_lst\
    \ = [min];\n    let new_lst2 = [];\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] !== min) {\n            new_lst2.push(lst[i]);\n        }\n\
    \    }\n    for (let i = 0; i < new_lst2.length; i++) {\n        if (i % 2 ===\
    \ 0) {\n            new_lst.push(Math.max(...new_lst2));\n            new_lst2.splice(new_lst2.indexOf(Math.max(...new_lst2)),\
    \ 1);\n        } else {\n            new_lst.push(Math.min(...new_lst2));\n  \
    \          new_lst2.splice(new_lst2.indexOf(Math.min(...new_lst2)), 1);\n    \
    \    }\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n     \
    \   return [];\n    }\n    let min = lst[0];\n    let max = lst[0];\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < min) {\n            min\
    \ = lst[i];\n        }\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \        }\n    }\n    let result = [];\n    let i = 0;\n    let j = lst.length\
    \ - 1;\n    let k = 0;\n    while (k < lst.length) {\n        if (k % 2 === 0)\
    \ {\n            result.push(min);\n            i++;\n            min = lst[i];\n\
    \            for (let m = i; m < lst.length; m++) {\n                if (lst[m]\
    \ < min) {\n                    min = lst[m];\n                }\n           \
    \ }\n        } else {\n            result.push(max);\n            j--;\n     \
    \       max = lst[j];\n            for (let m = j; m >= 0; m--) {\n          \
    \      if (lst[m] > max) {\n                    max = lst[m];\n              \
    \  }\n            }\n        }\n        k++;\n    }\n    return result;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let result: number[]\
    \ = [];\n    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let minIndex: number = lst.indexOf(min);\n    let maxIndex: number = lst.indexOf(max);\n\
    \    let minValue: number = lst[minIndex];\n    let maxValue: number = lst[maxIndex];\n\
    \    let minValueIndex: number = lst.indexOf(minValue);\n    let maxValueIndex:\
    \ number = lst.indexOf(maxValue);\n    let minValueIndex2: number = lst.indexOf(minValue,\
    \ minValueIndex + 1);\n    let maxValueIndex2: number = lst.indexOf(maxValue,\
    \ maxValueIndex + 1);\n    let minValueIndex3: number = lst.indexOf(minValue,\
    \ minValueIndex2 + 1);\n    let maxValueIndex3: number = lst.indexOf(maxValue,\
    \ maxValueIndex2 + 1);\n    let minValueIndex4: number = lst.indexOf(minValue,\
    \ minValueIndex3 + 1);\n    let maxValueIndex4: number = lst.indexOf(maxValue,\
    \ maxValueIndex3 + 1);\n    let minValueIndex5: number = lst.indexOf(minValue,\
    \ minValueIndex4 + 1);\n    let maxValueIndex5: number = lst.indexOf(maxValue,\
    \ maxValueIndex4 + 1);\n    let minValueIndex6: number = lst.indexOf(minValue,\
    \ minValueIndex5 + 1);\n    let maxValueIndex6: number = lst.indexOf(maxValue,\
    \ maxValueIndex5 + 1);\n    let minValueIndex7: number = lst.indexOf(minValue,\
    \ minValueIndex6 + 1);\n    let maxValueIndex7: number = lst.indexOf(maxValue,\
    \ maxValueIndex6 + 1);\n    let minValueIndex8: number = lst.indexOf(minValue,\
    \ minValueIndex7 + 1);\n    let maxValueIndex8: number = lst.indexOf(maxValue,\
    \ maxValueIndex", "    if (lst.length === 0) {\n        return [];\n    }\n  \
    \  let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result\
    \ = [];\n    let i = 0;\n    while (result.length < lst.length) {\n        if\
    \ (i % 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return lst;\n    }\n    let sorted_list = lst.sort((a, b)\
    \ => a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted_list.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted_list[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted_list[j]);\n           \
    \ j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let result: number[] = [];\n    let min: number\
    \ = Math.min(...lst);\n    let max: number = Math.max(...lst);\n    let minIndex:\
    \ number = lst.indexOf(min);\n    let maxIndex: number = lst.indexOf(max);\n \
    \   let minRemaining: number[] = lst.slice(0, minIndex).concat(lst.slice(minIndex\
    \ + 1));\n    let maxRemaining: number[] = lst.slice(0, maxIndex).concat(lst.slice(maxIndex\
    \ + 1));\n    result.push(min);\n    result.push(max);\n    result = result.concat(strange_sort_list(minRemaining));\n\
    \    result = result.concat(strange_sort_list(maxRemaining));\n    return result;\n\
    }\n", "    if (lst.length == 0) {\n        return lst;\n    }\n    let min = lst[0];\n\
    \    let max = lst[0];\n    let min_index = 0;\n    let max_index = 0;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < min) {\n          \
    \  min = lst[i];\n            min_index = i;\n        }\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n            max_index = i;\n        }\n \
    \   }\n    let new_lst = [min];\n    let new_lst_index = 1;\n    let lst_index\
    \ = 0;\n    while (new_lst_index < lst.length) {\n        if (lst_index == min_index)\
    \ {\n            lst_index++;\n        }\n        if (lst_index == max_index)\
    \ {\n            lst_index++;\n        }\n        new_lst[new_lst_index] = lst[lst_index];\n\
    \        new_lst_index++;\n        lst_index++;\n    }\n    new_lst[new_lst_index]\
    \ = max;\n    return new_lst;\n}\n", "    if (lst.length == 0) {\n        return\
    \ [];\n    }\n    let new_lst: number[] = [];\n    let min: number = Math.min(...lst);\n\
    \    let max: number = Math.max(...lst);\n    let min_index: number = lst.indexOf(min);\n\
    \    let max_index: number = lst.indexOf(max);\n    new_lst.push(min);\n    lst.splice(min_index,\
    \ 1);\n    new_lst.push(max);\n    lst.splice(max_index, 1);\n    if (lst.length\
    \ == 0) {\n        return new_lst;\n    }\n    else {\n        return new_lst.concat(strange_sort_list(lst));\n\
    \    }\n}\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let\
    \ sorted = lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n\
    \    let j = sorted.length - 1;\n    while (i < j) {\n        result.push(sorted[i]);\n\
    \        result.push(sorted[j]);\n        i++;\n        j--;\n    }\n    if (i\
    \ === j) {\n        result.push(sorted[i]);\n    }\n    return result;\n}\n",
  "    if (lst.length == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [min];\n    lst.splice(lst.indexOf(min),\
    \ 1);\n    while (lst.length > 0) {\n        let max_index = lst.indexOf(max);\n\
    \        let min_index = lst.indexOf(min);\n        if (max_index != -1) {\n \
    \           new_lst.push(max);\n            lst.splice(max_index, 1);\n      \
    \  }\n        if (min_index != -1) {\n            new_lst.push(min);\n       \
    \     lst.splice(min_index, 1);\n        }\n        min = Math.min(...lst);\n\
    \        max = Math.max(...lst);\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let maxIndex\
    \ = lst.indexOf(max);\n    let newList = [min];\n    let newList2 = [max];\n \
    \   lst.splice(minIndex, 1);\n    lst.splice(maxIndex, 1);\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (i % 2 === 0) {\n            newList.push(Math.max(...lst));\n\
    \            newList2.push(Math.min(...lst));\n        } else {\n            newList.push(Math.min(...lst));\n\
    \            newList2.push(Math.max(...lst));\n        }\n    }\n    return newList;\n\
    }\n", "  if (lst.length == 0) {\n    return [];\n  }\n  let sorted = lst.sort((a,\
    \ b) => a - b);\n  let result = [];\n  let i = 0;\n  let j = sorted.length - 1;\n\
    \  while (i <= j) {\n    result.push(sorted[i]);\n    i++;\n    if (i <= j) {\n\
    \      result.push(sorted[j]);\n      j--;\n    }\n  }\n  return result;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let result = [];\n    let i = 0;\n    while (i < lst.length) {\n        if (i\
    \ % 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return lst;\n    }\n    let sorted_lst = lst.sort((a, b) =>\
    \ a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted_lst.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted_lst[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted_lst[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    const sorted = lst.sort((a,\
    \ b) => a - b);\n    const result = [];\n    let i = 0;\n    let j = sorted.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n  \
    \      return lst;\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (lst.length > 0) {\n       \
    \ if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    let new_lst = [min];\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index - 1, 1);\n    while (lst.length > 0) {\n        min\
    \ = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    return new_lst;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a,\
    \ b) => a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n   \
    \     return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let new_lst = [min];\n    if (min_index < max_index) {\n        new_lst.push(max);\n\
    \        new_lst = new_lst.concat(strange_sort_list(lst.slice(min_index + 1, max_index)));\n\
    \        new_lst = new_lst.concat(lst.slice(max_index + 1));\n    } else {\n \
    \       new_lst = new_lst.concat(lst.slice(min_index + 1, max_index));\n     \
    \   new_lst.push(max);\n        new_lst = new_lst.concat(lst.slice(max_index +\
    \ 1));\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n     \
    \   return [];\n    }\n    let sorted_list = [];\n    let sorted_list_length =\
    \ 0;\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n    let\
    \ min_max_index = min_index > max_index ? min_index : max_index;\n    let max_min_index\
    \ = min_index > max_index ? max_index : min_index;\n    let min_max_index_value\
    \ = min_index > max_index ? min : max;\n    let max_min_index_value = min_index\
    \ > max_index ? max : min;\n    sorted_list.push(min_max_index_value);\n    sorted_list_length++;\n\
    \    lst.splice(min_max_index, 1);\n    if (lst.length > 0) {\n        sorted_list.push(max_min_index_value);\n\
    \        sorted_list_length++;\n        lst.splice(max_min_index, 1);\n    }\n\
    \    while (lst.length > 0) {\n        min = Math.min(...lst);\n        max =\
    \ Math.max(...lst);\n        min_index = lst.indexOf(min);\n        max_index\
    \ = lst.indexOf(max);\n        min_max_index = min_index > max_index ? min_index\
    \ : max_index;\n        max_min_index = min_index > max_index ? max_index : min_index;\n\
    \        min_max_index_value = min_index > max_index ? min : max;\n        max_min_index_value\
    \ = min_index > max_index ? max : min;\n        sorted_list.splice(sorted_list_length,\
    \ 0, min_max_index_value);\n        sorted_list_length++;\n        lst.splice(min_max_index,\
    \ 1);\n        if (lst.length > 0) {\n            sorted_list.splice(", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [min];\n    let new_lst_2 =\
    \ [];\n    for (let i = 0; i < lst.length; i++) {\n        if (i !== min_index\
    \ && i !== max_index) {\n            new_lst_2.push(lst[i]);\n        }\n    }\n\
    \    if (new_lst_2.length === 0) {\n        return new_lst;\n    }\n    let new_lst_3\
    \ = strange_sort_list(new_lst_2);\n    return new_lst.concat(new_lst_3).concat([max]);\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [min];\n    let new_lst_2 =\
    \ [max];\n    for (let i = 1; i < lst.length; i++) {\n        if (i % 2 === 0)\
    \ {\n            new_lst.push(lst[max_index]);\n            new_lst_2.push(lst[min_index]);\n\
    \        } else {\n            new_lst.push(lst[min_index]);\n            new_lst_2.push(lst[max_index]);\n\
    \        }\n    }\n    return new_lst_2;\n}\n", "    if (lst.length === 0) {\n\
    \        return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ [min, max, ...strange_sort_list(lst)];\n}\n\nconsole.log(strange_sort_list([1,\
    \ 2, 3, 4]));\nconsole.log(strange_sort_list([5, 5, 5, 5]));\nconsole.log(strange_sort_list([]));",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let result: number[]\
    \ = [];\n    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let new_lst: number[] = lst.slice();\n    new_lst.splice(min_index, 1);\n\
    \    new_lst.splice(max_index - 1, 1);\n    result.push(min);\n    result.push(max);\n\
    \    return result.concat(strange_sort_list(new_lst));\n}\n", "    if (lst.length\
    \ === 0) {\n        return lst;\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [min];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        } else {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    let sorted = lst.sort((a, b) => a - b);\n    let\
    \ result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while (i <=\
    \ j) {\n        result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n   \
    \ }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ newLst = [];\n    let i = 0;\n    while (i < lst.length) {\n        newLst.push(min);\n\
    \        newLst.push(max);\n        i += 2;\n    }\n    return newLst;\n}\n",
  "    if (lst.length == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [min];\n    let i = 0;\n \
    \   while (new_lst.length < lst.length) {\n        if (i % 2 == 0) {\n       \
    \     new_lst.push(max);\n            max = Math.max(...lst.filter(x => x < max));\n\
    \        } else {\n            new_lst.push(min);\n            min = Math.min(...lst.filter(x\
    \ => x > min));\n        }\n        i++;\n    }\n    return new_lst;\n}\n", " \
    \   if (lst.length === 0) {\n        return [];\n    }\n    lst.sort((a, b) =>\
    \ a - b);\n    let result: number[] = [];\n    let i = 0;\n    while (lst.length\
    \ > 0) {\n        result.push(lst[i]);\n        lst.splice(i, 1);\n        if\
    \ (lst.length > 0) {\n            result.push(lst[lst.length - 1]);\n        \
    \    lst.splice(lst.length - 1, 1);\n        }\n    }\n    return result;\n}\n",
  "    if (lst.length === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a,\
    \ b) => a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    let res: number[] = [];\n  \
    \  let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let lst_len: number = lst.length;\n    let i: number = 0;\n    while (i <\
    \ lst_len) {\n        if (i % 2 == 0) {\n            res.push(min);\n        \
    \    lst.splice(min_index, 1);\n            min = Math.min(...lst);\n        \
    \    min_index = lst.indexOf(min);\n        } else {\n            res.push(max);\n\
    \            lst.splice(max_index, 1);\n            max = Math.max(...lst);\n\
    \            max_index = lst.indexOf(max);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    if (lst.length === 0) {\n        return lst;\n   \
    \ }\n    const min = Math.min(...lst);\n    const max = Math.max(...lst);\n  \
    \  const minIndex = lst.indexOf(min);\n    const maxIndex = lst.indexOf(max);\n\
    \    const newLst = [min];\n    if (minIndex < maxIndex) {\n        for (let i\
    \ = minIndex + 1; i < maxIndex; i++) {\n            newLst.push(lst[i]);\n   \
    \     }\n        newLst.push(max);\n        for (let i = maxIndex + 1; i < lst.length;\
    \ i++) {\n            newLst.push(lst[i]);\n        }\n        for (let i = 0;\
    \ i < minIndex; i++) {\n            newLst.push(lst[i]);\n        }\n    } else\
    \ {\n        for (let i = minIndex + 1; i < lst.length; i++) {\n            newLst.push(lst[i]);\n\
    \        }\n        for (let i = 0; i < maxIndex; i++) {\n            newLst.push(lst[i]);\n\
    \        }\n        newLst.push(max);\n    }\n    return newLst;\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let res = [min];\n    let lst_copy = lst.slice();\n\
    \    lst_copy.splice(lst_copy.indexOf(min), 1);\n    while (lst_copy.length >\
    \ 0) {\n        let max_rem = Math.max(...lst_copy);\n        res.push(max_rem);\n\
    \        lst_copy.splice(lst_copy.indexOf(max_rem), 1);\n        if (lst_copy.length\
    \ === 0) {\n            break;\n        }\n        let min_rem = Math.min(...lst_copy);\n\
    \        res.push(min_rem);\n        lst_copy.splice(lst_copy.indexOf(min_rem),\
    \ 1);\n    }\n    return res;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let sorted: number[] = [];\n    let min: number = Math.min(...lst);\n\
    \    let max: number = Math.max(...lst);\n    let minIndex: number = lst.indexOf(min);\n\
    \    let maxIndex: number = lst.indexOf(max);\n    let minRemainder: number[]\
    \ = lst.slice(0, minIndex).concat(lst.slice(minIndex + 1));\n    let maxRemainder:\
    \ number[] = lst.slice(0, maxIndex).concat(lst.slice(maxIndex + 1));\n    sorted.push(min);\n\
    \    sorted.push(max);\n    sorted = sorted.concat(strange_sort_list(minRemainder));\n\
    \    sorted = sorted.concat(strange_sort_list(maxRemainder));\n    return sorted;\n\
    }\n", "    if (lst.length === 0) {\n        return lst;\n    }\n    const sorted\
    \ = lst.sort((a, b) => a - b);\n    const result = [];\n    let i = 0;\n    let\
    \ j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    const sorted = lst.sort((a, b) => a\
    \ - b);\n    const result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    let sorted = lst.sort((a, b) => a\
    \ - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n       \
    \ return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let lst_min = lst.filter(x => x === min);\n    let lst_max = lst.filter(x\
    \ => x === max);\n    let lst_other = lst.filter(x => x !== min && x !== max);\n\
    \    let lst_other_sorted = strange_sort_list(lst_other);\n    let lst_sorted\
    \ = [];\n    for (let i = 0; i < lst_other_sorted.length; i++) {\n        if (i\
    \ % 2 === 0) {\n            lst_sorted.push(lst_min.pop());\n        } else {\n\
    \            lst_sorted.push(lst_max.pop());\n        }\n    }\n    if (lst_min.length\
    \ > 0) {\n        lst_sorted.push(lst_min.pop());\n    }\n    if (lst_max.length\
    \ > 0) {\n        lst_sorted.push(lst_max.pop());\n    }\n    return lst_sorted;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    lst.sort((a,\
    \ b) => a - b);\n    let res: number[] = [];\n    let i = 0;\n    let j = lst.length\
    \ - 1;\n    while (i <= j) {\n        res.push(lst[i]);\n        i++;\n      \
    \  if (i <= j) {\n            res.push(lst[j]);\n            j--;\n        }\n\
    \    }\n    return res;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let sorted_list = lst.sort((a, b) => a - b);\n    let result = [];\n\
    \    let i = 0;\n    let j = sorted_list.length - 1;\n    while (i <= j) {\n \
    \       result.push(sorted_list[i]);\n        i++;\n        if (i <= j) {\n  \
    \          result.push(sorted_list[j]);\n            j--;\n        }\n    }\n\
    \    return result;\n}\n", "    let result: number[] = [];\n    let lst_copy:\
    \ number[] = lst.slice();\n    let min: number = Math.min(...lst_copy);\n    let\
    \ max: number = Math.max(...lst_copy);\n    let min_index: number = lst_copy.indexOf(min);\n\
    \    let max_index: number = lst_copy.indexOf(max);\n    lst_copy.splice(min_index,\
    \ 1);\n    lst_copy.splice(max_index - 1, 1);\n    result.push(min);\n    result.push(max);\n\
    \    while (lst_copy.length > 0) {\n        min = Math.min(...lst_copy);\n   \
    \     max = Math.max(...lst_copy);\n        min_index = lst_copy.indexOf(min);\n\
    \        max_index = lst_copy.indexOf(max);\n        lst_copy.splice(min_index,\
    \ 1);\n        lst_copy.splice(max_index - 1, 1);\n        result.push(min);\n\
    \        result.push(max);\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    let sorted: number[] = lst.sort((a, b) => a - b);\n    let\
    \ i: number = 0;\n    while (sorted.length > 0) {\n        if (i % 2 === 0) {\n\
    \            result.push(sorted.shift());\n        } else {\n            result.push(sorted.pop());\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    let result: number[]\
    \ = [];\n    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let min_count: number = 0;\n    let max_count: number = 0;\n    let min_max_count:\
    \ number = 0;\n    let max_min_count: number = 0;\n    let min_max_index: number\
    \ = 0;\n    let max_min_index: number = 0;\n    let min_max_lst: number[] = [];\n\
    \    let max_min_lst: number[] = [];\n    let min_max_lst_index: number[] = [];\n\
    \    let max_min_lst_index: number[] = [];\n    let min_max_lst_index_count: number\
    \ = 0;\n    let max_min_lst_index_count: number = 0;\n    let min_max_lst_index_count_2:\
    \ number = 0;\n    let max_min_lst_index_count_2: number = 0;\n    let min_max_lst_index_count_3:\
    \ number = 0;\n    let max_min_lst_index_count_3: number = 0;\n    let min_max_lst_index_count_4:\
    \ number = 0;\n    let max_min_lst_index_count_4: number = 0;\n    let min_max_lst_index_count_5:\
    \ number = 0;\n    let max_min_lst_index_count_5: number = 0;\n    let min_max_lst_index_count_6:\
    \ number = 0;\n    let max_min_lst_index_count_6: number = 0;\n    let min_max_lst_index_count_7:\
    \ number = 0;\n    let max_min_lst_index_count_7: number = 0;\n    let min_max_lst_index_count_8:\
    \ number = 0;\n    let max_min_lst", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let i = 0;\n    while (lst.length > 0) {\n        if\
    \ (i % 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    const sorted = lst.sort((a, b) => a\
    \ - b);\n    const result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n       \
    \ return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [min];\n    let i = 0;\n    while (result.length !== lst.length)\
    \ {\n        if (i % 2 === 0) {\n            result.push(max);\n            max\
    \ = Math.max(...lst.filter(x => x < max));\n        } else {\n            result.push(min);\n\
    \            min = Math.min(...lst.filter(x => x > min));\n        }\n       \
    \ i++;\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n      \
    \  return [];\n    }\n    let min: number = lst[0];\n    let max: number = lst[0];\n\
    \    let min_index: number = 0;\n    let max_index: number = 0;\n    for (let\
    \ i: number = 0; i < lst.length; i++) {\n        if (lst[i] < min) {\n       \
    \     min = lst[i];\n            min_index = i;\n        }\n        if (lst[i]\
    \ > max) {\n            max = lst[i];\n            max_index = i;\n        }\n\
    \    }\n    let new_lst: number[] = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length === 0) {\n\
    \        return [];\n    }\n    const min = Math.min(...lst);\n    const max =\
    \ Math.max(...lst);\n    const min_index = lst.indexOf(min);\n    const max_index\
    \ = lst.indexOf(max);\n    const new_lst = lst.slice();\n    new_lst.splice(min_index,\
    \ 1);\n    new_lst.splice(max_index - 1, 1);\n    return [min, max, ...strange_sort_list(new_lst)];\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [min];\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    while (lst.length > 0) {\n     \
    \   min = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index\
    \ = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n        new_lst.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n  \
    \  }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n        return\
    \ lst;\n    }\n    let sorted_list = lst.sort((a, b) => a - b);\n    let result\
    \ = [];\n    let i = 0;\n    while (sorted_list.length > 0) {\n        result.push(sorted_list[i]);\n\
    \        sorted_list.splice(i, 1);\n        if (sorted_list.length > 0) {\n  \
    \          result.push(sorted_list[sorted_list.length - 1]);\n            sorted_list.splice(sorted_list.length\
    \ - 1, 1);\n        }\n    }\n    return result;\n}\n", "    if (lst.length ===\
    \ 0) {\n        return [];\n    }\n\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let result = [min];\n    let i = 0;\n    while\
    \ (result.length < lst.length) {\n        if (i % 2 === 0) {\n            result.push(max);\n\
    \            max = Math.max(...lst.filter(x => x < max));\n        } else {\n\
    \            result.push(min);\n            min = Math.min(...lst.filter(x =>\
    \ x > min));\n        }\n        i++;\n    }\n    return result;\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a,\
    \ b) => a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n   \
    \     return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [min];\n    let i = 0;\n    while (new_lst.length != lst.length)\
    \ {\n        if (i % 2 == 0) {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        } else {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let res = [];\n    let i = 0;\n    while (lst.length\
    \ > 0) {\n        if (i % 2 === 0) {\n            res.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n    \
    \    } else {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    let result: number[] = [];\n    let min: number =\
    \ Math.min(...lst);\n    let max: number = Math.max(...lst);\n    let minIndex:\
    \ number = lst.indexOf(min);\n    let maxIndex: number = lst.indexOf(max);\n \
    \   let minIndexes: number[] = [];\n    let maxIndexes: number[] = [];\n    let\
    \ minValues: number[] = [];\n    let maxValues: number[] = [];\n    let minCount:\
    \ number = 0;\n    let maxCount: number = 0;\n    let i: number = 0;\n    let\
    \ j: number = 0;\n    let k: number = 0;\n    let l: number = 0;\n    let m: number\
    \ = 0;\n    let n: number = 0;\n    let o: number = 0;\n    let p: number = 0;\n\
    \    let q: number = 0;\n    let r: number = 0;\n    let s: number = 0;\n    let\
    \ t: number = 0;\n    let u: number = 0;\n    let v: number = 0;\n    let w: number\
    \ = 0;\n    let x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n\
    \    let aa: number = 0;\n    let bb: number = 0;\n    let cc: number = 0;\n \
    \   let dd: number = 0;\n    let ee: number = 0;\n    let ff: number = 0;\n  \
    \  let gg: number = 0;\n    let hh: number = 0;\n    let ii: number = 0;\n   \
    \ let jj: number = 0;\n    let kk: number = 0;\n    let ll: number = 0;\n    let\
    \ mm: number = 0;\n    let nn: number = 0;\n    let oo: number = 0;\n    let pp:\
    \ number = 0;\n    let qq: number = 0;\n    let rr: number = 0;\n    let ss: number\
    \ = 0;\n    let tt: number = 0;\n    let uu: number = 0;\n    let vv: number =\
    \ 0;\n    let ww", "    if (lst.length === 0) {\n        return [];\n    }\n \
    \   const sorted = lst.sort((a, b) => a - b);\n    const result = [];\n    let\
    \ i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    let sorted_list: number[] = lst.sort((a, b) => a - b);\n\
    \    let i: number = 0;\n    let j: number = sorted_list.length - 1;\n    while\
    \ (i <= j) {\n        result.push(sorted_list[i]);\n        i++;\n        if (i\
    \ <= j) {\n            result.push(sorted_list[j]);\n            j--;\n      \
    \  }\n    }\n    return result;\n}\n", "    let result: number[] = [];\n    let\
    \ min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n \
    \   let minIndex: number = lst.indexOf(min);\n    let maxIndex: number = lst.indexOf(max);\n\
    \    let minCount: number = 0;\n    let maxCount: number = 0;\n    if (lst.length\
    \ % 2 === 0) {\n        for (let i: number = 0; i < lst.length; i++) {\n     \
    \       if (i % 2 === 0) {\n                result.push(min);\n              \
    \  minCount++;\n            } else {\n                result.push(max);\n    \
    \            maxCount++;\n            }\n        }\n    } else {\n        for\
    \ (let i: number = 0; i < lst.length; i++) {\n            if (i % 2 === 0) {\n\
    \                result.push(min);\n                minCount++;\n            }\
    \ else {\n                result.push(max);\n                maxCount++;\n   \
    \         }\n        }\n        if (minCount > maxCount) {\n            result.push(max);\n\
    \        } else {\n            result.push(min);\n        }\n    }\n    return\
    \ result;\n}\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let\
    \ sorted_lst = lst.sort((a, b) => a - b);\n    let result: number[] = [];\n  \
    \  let i = 0;\n    let j = sorted_lst.length - 1;\n    while (i <= j) {\n    \
    \    result.push(sorted_lst[i]);\n        i++;\n        if (i <= j) {\n      \
    \      result.push(sorted_lst[j]);\n            j--;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (lst.length === 0) {\n        return [];\n    }\n   \
    \ let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n\
    \    let j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return lst;\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return [min, max, ...strange_sort_list(lst)];\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    lst.sort((a, b) => a - b);\n    let\
    \ res: number[] = [];\n    let i = 0;\n    let j = lst.length - 1;\n    while\
    \ (i <= j) {\n        res.push(lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            res.push(lst[j]);\n            j--;\n        }\n    }\n    return\
    \ res;\n}\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let\
    \ min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result = [min];\n\
    \    let i = 0;\n    while (result.length < lst.length) {\n        if (i % 2 ===\
    \ 0) {\n            result.push(max);\n        } else {\n            result.push(min);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    const sorted = lst.sort((a, b) => a\
    \ - b);\n    const result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n       \
    \ return [];\n    }\n    lst.sort((a, b) => a - b);\n    let result: number[]\
    \ = [];\n    let i = 0;\n    let j = lst.length - 1;\n    while (i <= j) {\n \
    \       result.push(lst[i]);\n        i++;\n        if (i <= j) {\n          \
    \  result.push(lst[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    while (new_lst.length\
    \ < lst.length) {\n        new_lst.push(min);\n        new_lst.push(max);\n  \
    \      lst.splice(lst.indexOf(min), 1);\n        lst.splice(lst.indexOf(max),\
    \ 1);\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n    }\n\
    \    return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let new_lst = [min];\n    let new_lst_2 = [];\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] !== min) {\n            new_lst_2.push(lst[i]);\n\
    \        }\n    }\n    for (let i = 0; i < new_lst_2.length; i++) {\n        if\
    \ (i % 2 === 0) {\n            new_lst.push(Math.max(...new_lst_2));\n       \
    \     new_lst_2.splice(new_lst_2.indexOf(Math.max(...new_lst_2)), 1);\n      \
    \  } else {\n            new_lst.push(Math.min(...new_lst_2));\n            new_lst_2.splice(new_lst_2.indexOf(Math.min(...new_lst_2)),\
    \ 1);\n        }\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0)\
    \ {\n        return [];\n    }\n    let min: number = Math.min(...lst);\n    let\
    \ max: number = Math.max(...lst);\n    let new_lst: number[] = [];\n    let i:\
    \ number = 0;\n    while (lst.length > 0) {\n        if (i % 2 === 0) {\n    \
    \        new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n  \
    \          min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n       \
    \ return [];\n    }\n    const sorted = lst.sort((a, b) => a - b);\n    const\
    \ result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while (i <=\
    \ j) {\n        result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n   \
    \ }\n    const min = Math.min(...lst);\n    const max = Math.max(...lst);\n  \
    \  const min_index = lst.indexOf(min);\n    const max_index = lst.indexOf(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ [min, max, ...strange_sort_list(lst)];\n}\n", "    if (lst.length === 0) {\n\
    \        return [];\n    }\n    let res: number[] = [];\n    let min: number =\
    \ Math.min(...lst);\n    let max: number = Math.max(...lst);\n    let min_index:\
    \ number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let min_lst: number[] = lst.slice(0, min_index);\n    let max_lst: number[]\
    \ = lst.slice(min_index + 1, max_index);\n    let min_lst_2: number[] = lst.slice(max_index\
    \ + 1);\n    res.push(min);\n    res.push(max);\n    res = res.concat(strange_sort_list(min_lst));\n\
    \    res = res.concat(strange_sort_list(max_lst));\n    res = res.concat(strange_sort_list(min_lst_2));\n\
    \    return res;\n}\n", "    let result: number[] = [];\n    let sortedList: number[]\
    \ = lst.sort((a, b) => a - b);\n    let left: number = 0;\n    let right: number\
    \ = sortedList.length - 1;\n    while (left <= right) {\n        result.push(sortedList[left]);\n\
    \        left++;\n        if (left <= right) {\n            result.push(sortedList[right]);\n\
    \            right--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    if (lst.length === 1) {\n        return\
    \ lst;\n    }\n    let sorted_list = [];\n    let min = Math.min(...lst);\n  \
    \  let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    sorted_list.push(min);\n    sorted_list.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    while (lst.length\
    \ > 0) {\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n \
    \       min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        sorted_list.push(min);\n        sorted_list.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    return sorted_list;\n\
    }\n", "    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ result = [];\n    let i = 0;\n    while (lst.length > 0) {\n        if (i %\
    \ 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    const min = Math.min(...lst);\n   \
    \ const max = Math.max(...lst);\n    const minIndex = lst.indexOf(min);\n    const\
    \ maxIndex = lst.indexOf(max);\n    const newList = [...lst];\n    newList.splice(minIndex,\
    \ 1);\n    newList.splice(maxIndex - 1, 1);\n    return [min, max, ...strange_sort_list(newList)];\n\
    }\n", "    const lst_len = lst.length;\n    if (lst_len === 0) {\n        return\
    \ [];\n    }\n    const sorted_lst = lst.sort((a, b) => a - b);\n    const result:\
    \ number[] = [];\n    let i = 0;\n    let j = lst_len - 1;\n    while (i <= j)\
    \ {\n        result.push(sorted_lst[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push(sorted_lst[j]);\n            j--;\n        }\n    }\n\
    \    return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    lst.sort((a, b) => a - b);\n    const result = [];\n    let i = 0;\n\
    \    let j = lst.length - 1;\n    while (i <= j) {\n        result.push(lst[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(lst[j]);\n     \
    \       j--;\n        }\n    }\n    return result;\n}\n", "    let result: number[]\
    \ = [];\n    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let min_count: number = 0;\n    let max_count: number = 0;\n    let min_max_count:\
    \ number = 0;\n    let max_min_count: number = 0;\n    let min_max_index: number\
    \ = 0;\n    let max_min_index: number = 0;\n    let min_max_lst: number[] = [];\n\
    \    let max_min_lst: number[] = [];\n    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    if (lst.length === 1) {\n        return lst;\n    }\n    if\
    \ (lst.length === 2) {\n        return [min, max];\n    }\n    for (let i: number\
    \ = 0; i < lst.length; i++) {\n        if (lst[i] === min) {\n            min_count++;\n\
    \        }\n        if (lst[i] === max) {\n            max_count++;\n        }\n\
    \        if (lst[i] > min && lst[i] < max) {\n            min_max_count++;\n \
    \           min_max_lst.push(lst[i]);\n        }\n        if (lst[i] < min &&\
    \ lst[i] > max) {\n            max_min_count++;\n            max_min_lst.push(lst[i]);\n\
    \        }\n    }\n    if (min_count === 1 && max_count === 1) {\n        return\
    \ [min, max];\n    }\n    if (min_count === 1 && max_count > 1) {\n        return\
    \ [min, max, ...lst.slice(max_index + 1, lst.length)];\n    }\n    if (min_count\
    \ > 1 && max_count === 1) {\n        return [min, ...lst.slice(min_index + 1,\
    \ l", "    let result: number[] = [];\n    let sortedList: number[] = lst.sort((a,\
    \ b) => a - b);\n    let maxIndex: number = sortedList.length - 1;\n    let minIndex:\
    \ number = 0;\n    while (minIndex <= maxIndex) {\n        result.push(sortedList[minIndex]);\n\
    \        minIndex++;\n        if (minIndex <= maxIndex) {\n            result.push(sortedList[maxIndex]);\n\
    \            maxIndex--;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    const sorted = lst.sort((a,\
    \ b) => a - b);\n    const result = [];\n    let i = 0;\n    let j = sorted.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n  \
    \      return [];\n    }\n    const sorted = lst.sort((a, b) => a - b);\n    const\
    \ result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while (i <=\
    \ j) {\n        result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n   \
    \ }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ new_lst = [min];\n    let i = 0;\n    while (new_lst.length < lst.length) {\n\
    \        let new_max = Math.max(...lst.filter(x => x !== new_lst[i]));\n     \
    \   new_lst.push(new_max);\n        let new_min = Math.min(...lst.filter(x =>\
    \ x !== new_lst[i + 1]));\n        new_lst.push(new_min);\n        i += 2;\n \
    \   }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (lst.length > 0) {\n       \
    \ if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0) {\n        return lst;\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while (i\
    \ < lst.length) {\n        result.push(min);\n        result.push(max);\n    \
    \    i += 2;\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n \
    \       return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let new_lst = lst.slice(0, min_index).concat(lst.slice(min_index + 1));\n\
    \    let new_lst2 = new_lst.slice(0, max_index - 1).concat(new_lst.slice(max_index));\n\
    \    return [min].concat(strange_sort_list(new_lst2)).concat([max]);\n}\n", " \
    \   if (lst.length === 0) {\n        return [];\n    }\n    const sorted = lst.sort((a,\
    \ b) => a - b);\n    const result = [];\n    let i = 0;\n    let j = sorted.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    let result: number[] = [];\n\
    \    let min: number = Math.min(...lst);\n    let max: number = Math.max(...lst);\n\
    \    let min_index: number = lst.indexOf(min);\n    let max_index: number = lst.indexOf(max);\n\
    \    let min_max_index: number = min_index < max_index ? min_index : max_index;\n\
    \    let max_min_index: number = min_index > max_index ? min_index : max_index;\n\
    \    let min_max_lst: number[] = lst.slice(min_max_index, max_min_index + 1);\n\
    \    let max_min_lst: number[] = lst.slice(max_min_index + 1, min_max_index +\
    \ 1);\n    let min_max_lst_len: number = min_max_lst.length;\n    let max_min_lst_len:\
    \ number = max_min_lst.length;\n    let min_max_lst_len_half: number = Math.floor(min_max_lst_len\
    \ / 2);\n    let max_min_lst_len_half: number = Math.floor(max_min_lst_len / 2);\n\
    \    for (let i: number = 0; i < min_max_lst_len_half; i++) {\n        result.push(min_max_lst[i]);\n\
    \        result.push(min_max_lst[min_max_lst_len - i - 1]);\n    }\n    if (min_max_lst_len\
    \ % 2 !== 0) {\n        result.push(min_max_lst[min_max_lst_len_half]);\n    }\n\
    \    for (let i: number = 0; i < max_min_lst_len_half; i++) {\n        result.push(max_min_lst[i]);\n\
    \        result.push(max_min_lst[max_min_lst_len - i - 1]);\n    }\n    if (max_min_lst_len\
    \ % 2 !== 0) {\n        result.", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let i = 0;\n    while (result.length < lst.length)\
    \ {\n        if (i % 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let max_index\
    \ = lst.indexOf(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return [min, max, ...strange_sort_list(lst)];\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    let sorted = lst.sort((a, b) => a\
    \ - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i < j) {\n        result.push(sorted[i]);\n        result.push(sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    if (i === j) {\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\n", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] !== min && lst[i] !==\
    \ max) {\n            new_lst.push(lst[i]);\n        }\n    }\n    return new_lst;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [min];\n    let new_lst = lst.filter(x\
    \ => x !== min);\n    while (new_lst.length > 0) {\n        let new_max = Math.max(...new_lst);\n\
    \        let new_min = Math.min(...new_lst);\n        result.push(new_max);\n\
    \        new_lst = new_lst.filter(x => x !== new_max);\n        if (new_lst.length\
    \ > 0) {\n            result.push(new_min);\n            new_lst = new_lst.filter(x\
    \ => x !== new_min);\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [min];\n    let i = 0;\n    while\
    \ (lst.length > 1) {\n        if (i % 2 === 0) {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        } else {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let new_lst = [min];\n    let i = 0;\n    while (lst.length > 1) {\n       \
    \ if (i % 2 === 0) {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        } else {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        i++;\n    }\n    new_lst.push(lst[0]);\n    return new_lst;\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let result:\
    \ number[] = [];\n    let min: number = Math.min(...lst);\n    let max: number\
    \ = Math.max(...lst);\n    let min_index: number = lst.indexOf(min);\n    let\
    \ max_index: number = lst.indexOf(max);\n    let new_lst: number[] = lst.slice();\n\
    \    new_lst.splice(min_index, 1);\n    new_lst.splice(max_index - 1, 1);\n  \
    \  result.push(min);\n    result.push(max);\n    return result.concat(strange_sort_list(new_lst));\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    const sorted\
    \ = lst.sort((a, b) => a - b);\n    const result = [];\n    let i = 0;\n    let\
    \ j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    const sorted = lst.sort((a, b) => a\
    \ - b);\n    const result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n       \
    \ return lst;\n    }\n    let result: number[] = [];\n    let min: number = Math.min(...lst);\n\
    \    let max: number = Math.max(...lst);\n    let min_index: number = lst.indexOf(min);\n\
    \    let max_index: number = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    while (lst.length\
    \ > 0) {\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n \
    \       min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        result.push(min);\n        result.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    return result;\n}\n",
  "    let res: number[] = [];\n    let min: number = Math.min(...lst);\n    let max:\
    \ number = Math.max(...lst);\n    let min_index: number = lst.indexOf(min);\n\
    \    let max_index: number = lst.indexOf(max);\n    let min_count: number = 0;\n\
    \    let max_count: number = 0;\n    let min_flag: boolean = true;\n    let max_flag:\
    \ boolean = true;\n    let i: number = 0;\n    while (i < lst.length) {\n    \
    \    if (min_flag) {\n            res.push(min);\n            min_count++;\n \
    \           min_flag = false;\n        } else if (max_flag) {\n            res.push(max);\n\
    \            max_count++;\n            max_flag = false;\n        }\n        if\
    \ (min_count === min_index) {\n            min_flag = true;\n        }\n     \
    \   if (max_count === max_index) {\n            max_flag = true;\n        }\n\
    \        i++;\n    }\n    return res;\n}\n", "    let sorted = lst.sort((a, b)\
    \ => a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length\
    \ - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n  \
    \      return [];\n    }\n    let sorted = lst.sort((a, b) => a - b);\n    let\
    \ result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while (i <=\
    \ j) {\n        result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    let result: number[] = [];\n    let sorted = lst.sort((a,\
    \ b) => a - b);\n    let i = 0;\n    let j = sorted.length - 1;\n    while (i\
    \ <= j) {\n        result.push(sorted[i]);\n        i++;\n        if (i <= j)\
    \ {\n            result.push(sorted[j]);\n            j--;\n        }\n    }\n\
    \    return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n  \
    \  let i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    const sorted\
    \ = lst.sort((a, b) => a - b);\n    const result = [];\n    let i = 0;\n    let\
    \ j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    let sorted =\
    \ lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let j\
    \ = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while (result.length\
    \ < lst.length) {\n        if (i % 2 === 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

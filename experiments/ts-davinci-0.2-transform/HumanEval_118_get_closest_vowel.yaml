name: HumanEval_118_get_closest_vowel
language: ts
prompt: "//You are given a word. Your task is to find the closest vowel that stands\
  \ between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// >>> get_closest_vowel(\"\
  yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\")\n// \"U\"\n// >>> get_closest_vowel(\"\
  quick\")\n// \"\"\n// >>> get_closest_vowel(\"ab\")\n// \"\"\nfunction get_closest_vowel(word:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
  yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
  easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
  ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
  most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
  ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
  anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
  Above\"),\"o\");\n}\n\ntest();"
completions: ["    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let vowel_index = -1;\n    let consonant_index = -1;\n    for (let i =\
    \ word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) != -1)\
    \ {\n            vowel_index = i;\n        }\n        if (consonants.indexOf(word[i])\
    \ != -1) {\n            consonant_index = i;\n            break;\n        }\n\
    \    }\n    if (vowel_index == -1 || consonant_index == -1) {\n        return\
    \ \"\";\n    }\n    if (vowel_index < consonant_index) {\n        return word[vowel_index];\n\
    \    }\n    return \"\";\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U'];\n    let word_arr = word.split('');\n    let closest_vowel\
    \ = '';\n    let vowel_index = 0;\n    let consonant_index = 0;\n    let distance\
    \ = 0;\n    let closest_distance = 0;\n    for (let i = word_arr.length - 1; i\
    \ >= 0; i--) {\n        if (vowels.indexOf(word_arr[i]) !== -1) {\n          \
    \  vowel_index = i;\n            for (let j = vowel_index - 1; j >= 0; j--) {\n\
    \                if (vowels.indexOf(word_arr[j]) === -1) {\n                 \
    \   consonant_index = j;\n                    distance = vowel_index - consonant_index;\n\
    \                    if (distance > closest_distance) {\n                    \
    \    closest_distance = distance;\n                        closest_vowel = word_arr[vowel_index];\n\
    \                    }\n                    break;\n                }\n      \
    \      }\n        }\n    }\n    return closest_vowel;\n}\n", "    let vowels =\
    \ \"aeiou\";\n    let word_length = word.length;\n    let closest_vowel = \"\"\
    ;\n    for (let i = word_length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ != -1) {\n            closest_vowel = word[i];\n            break;\n       \
    \ }\n    }\n    return closest_vowel;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let last_consonant = -1;\n    let closest_vowel = -1;\n    for (let i =\
    \ word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) === -1)\
    \ {\n            last_consonant = i;\n        } else if (last_consonant !== -1)\
    \ {\n            closest_vowel = i;\n            break;\n        }\n    }\n  \
    \  return closest_vowel === -1 ? \"\" : word[closest_vowel];\n}\n", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\",\
    \ \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let word_array\
    \ = word.split(\"\");\n    let closest_vowel = \"\";\n    let closest_vowel_index\
    \ = word.length;\n    for (let i = word_array.length - 1; i >= 0; i--) {\n   \
    \     if (vowels.indexOf(word_array[i]) !== -1) {\n            if (i < closest_vowel_index)\
    \ {\n                closest_vowel_index = i;\n                closest_vowel =\
    \ word_array[i];\n            }\n        }\n    }\n    if (closest_vowel_index\
    \ === word.length) {\n        return \"\";\n    }\n    else {\n        if (consonants.indexOf(word_array[closest_vowel_index\
    \ - 1]) !== -1 && consonants.indexOf(word_array[closest_vowel_index + 1]) !==\
    \ -1) {\n            return closest_vowel;\n        }\n        else {\n      \
    \      return \"\";\n        }\n    }\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let word_array = word.split(\"\");\n    let index = word_array.length -\
    \ 1;\n    let vowel_index = -1;\n    while (index >= 0) {\n        if (vowels.indexOf(word_array[index])\
    \ !== -1) {\n            vowel_index = index;\n            break;\n        }\n\
    \        index--;\n    }\n    if (vowel_index === -1) {\n        return \"\";\n\
    \    }\n    index = vowel_index - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word_array[index])\
    \ === -1) {\n            return word_array[vowel_index];\n        }\n        index--;\n\
    \    }\n    return \"\";\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let vowel_index = -1;\n\
    \    let consonant_index = -1;\n    for (let i = word.length - 1; i >= 0; i--)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index =\
    \ i;\n        }\n        if (consonants.indexOf(word[i]) !== -1) {\n         \
    \   consonant_index = i;\n            break;\n        }\n    }\n    if (vowel_index\
    \ === -1 || consonant_index === -1) {\n        return \"\";\n    }\n    return\
    \ word[vowel_index];\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let closestVowel = \"\
    \";\n    let closestVowelIndex = -1;\n    let closestConsonantIndex = -1;\n  \
    \  for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ >= 0) {\n            closestVowel = word[i];\n            closestVowelIndex\
    \ = i;\n            break;\n        }\n    }\n    for (let i = closestVowelIndex\
    \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) >= 0) {\n     \
    \       closestConsonantIndex = i;\n            break;\n        }\n    }\n   \
    \ if (closestVowelIndex > closestConsonantIndex) {\n        return closestVowel;\n\
    \    }\n    return \"\";\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let result\
    \ = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            result = word[i];\n            break;\n        }\n    }\n\
    \    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let closest_vowel\
    \ = \"\";\n    let closest_vowel_index = -1;\n    let closest_consonant_index\
    \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            closest_vowel = word[i];\n            closest_vowel_index\
    \ = i;\n            break;\n        }\n    }\n    for (let i = closest_vowel_index\
    \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) === -1) {\n       \
    \     closest_consonant_index = i;\n            break;\n        }\n    }\n   \
    \ if (closest_vowel_index === -1 || closest_consonant_index === -1) {\n      \
    \  return \"\";\n    }\n    return closest_vowel;\n}\n", "    let vowels = \"\
    aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let closestVowel = \"\";\n    let closestVowelIndex = -1;\n    let closestConsonantIndex\
    \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            closestVowel = word[i];\n            closestVowelIndex\
    \ = i;\n            break;\n        }\n    }\n    for (let i = closestVowelIndex\
    \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) > -1) {\n     \
    \       closestConsonantIndex = i;\n            break;\n        }\n    }\n   \
    \ if (closestVowelIndex > -1 && closestConsonantIndex > -1) {\n        return\
    \ closestVowel;\n    }\n    return \"\";\n}\n", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    let result = \"\";\n    let word_array = word.split(\"\
    \");\n    let word_array_length = word_array.length;\n    let last_index = word_array_length\
    \ - 1;\n    let first_index = 0;\n    let last_char = word_array[last_index];\n\
    \    let first_char = word_array[first_index];\n    let last_char_vowel = vowels.includes(last_char);\n\
    \    let first_char_vowel = vowels.includes(first_char);\n    let last_char_index\
    \ = vowels.indexOf(last_char);\n    let first_char_index = vowels.indexOf(first_char);\n\
    \    if (last_char_vowel) {\n        for (let i = last_index; i >= 0; i--) {\n\
    \            if (vowels.includes(word_array[i])) {\n                result = word_array[i];\n\
    \            } else {\n                break;\n            }\n        }\n    }\
    \ else if (first_char_vowel) {\n        for (let i = first_index; i < word_array_length;\
    \ i++) {\n            if (vowels.includes(word_array[i])) {\n                result\
    \ = word_array[i];\n            } else {\n                break;\n           \
    \ }\n        }\n    } else {\n        for (let i = last_index; i >= 0; i--) {\n\
    \            if (vowels.includes(word_array[i])) {\n                result = word_array[i];\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let result =\
    \ \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \  }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let wordArr\
    \ = word.split(\"\");\n    let vowelIndex = -1;\n    let closestVowel = \"\";\n\
    \    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
    \ >= 0) {\n            vowelIndex = i;\n            break;\n        }\n    }\n\
    \    if (vowelIndex >= 0) {\n        for (let i = vowelIndex; i >= 0; i--) {\n\
    \            if (vowels.indexOf(wordArr[i]) < 0) {\n                closestVowel\
    \ = wordArr[vowelIndex];\n                break;\n            }\n        }\n \
    \   }\n    return closestVowel;\n}\n", "    let vowels = \"aeiouAEIOU\";\n   \
    \ let closestVowel = \"\";\n    let closestIndex = word.length;\n    for (let\
    \ i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !==\
    \ -1) {\n            if (i < closestIndex) {\n                closestIndex = i;\n\
    \                closestVowel = word[i];\n            }\n        }\n    }\n  \
    \  return closestVowel;\n}\n", "    const vowels = \"aeiouAEIOU\";\n    let closestVowel\
    \ = \"\";\n    let closestIndex = word.length;\n    for (let i = word.length -\
    \ 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) >= 0) {\n           \
    \ if (i < closestIndex) {\n                closestIndex = i;\n               \
    \ closestVowel = word[i];\n            }\n        }\n    }\n    return closestVowel;\n\
    }\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let closest_vowel = \"\";\n    let closest_vowel_index = -1;\n    let closest_consonant_index\
    \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            closest_vowel = word[i];\n            closest_vowel_index\
    \ = i;\n            break;\n        }\n    }\n    for (let i = closest_vowel_index\
    \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) !== -1) {\n   \
    \         closest_consonant_index = i;\n            break;\n        }\n    }\n\
    \    if (closest_vowel_index === -1 || closest_consonant_index === -1) {\n   \
    \     return \"\";\n    }\n    return closest_vowel;\n}\n", "    let vowels =\
    \ \"aeiou\";\n    let result = \"\";\n    let closest = word.length;\n    for\
    \ (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !=\
    \ -1) {\n            if (i > 0 && i < word.length - 1) {\n                if (vowels.indexOf(word[i\
    \ - 1]) == -1 && vowels.indexOf(word[i + 1]) == -1) {\n                    if\
    \ (i < closest) {\n                        closest = i;\n                    \
    \    result = word[i];\n                    }\n                }\n           \
    \ }\n        }\n    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ closest_vowel = \"\";\n    let closest_vowel_index = 0;\n    let closest_vowel_distance\
    \ = 0;\n    let current_vowel_index = 0;\n    let current_vowel_distance = 0;\n\
    \    let current_consonant_index = 0;\n    let current_consonant_distance = 0;\n\
    \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            current_vowel_index = i;\n            current_vowel_distance\
    \ = current_vowel_index - current_consonant_index;\n            if (current_vowel_distance\
    \ > closest_vowel_distance) {\n                closest_vowel_distance = current_vowel_distance;\n\
    \                closest_vowel_index = current_vowel_index;\n                closest_vowel\
    \ = word[i];\n            }\n        }\n        if (consonants.indexOf(word[i])\
    \ !== -1) {\n            current_consonant_index = i;\n            current_consonant_distance\
    \ = current_consonant_index - current_vowel_index;\n        }\n    }\n    return\
    \ closest_vowel;\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let\
    \ result = '';\n    let minDistance = word.length;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let distance\
    \ = word.length - i;\n            if (distance < minDistance) {\n            \
    \    minDistance = distance;\n                result = word[i];\n            }\n\
    \        }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"
